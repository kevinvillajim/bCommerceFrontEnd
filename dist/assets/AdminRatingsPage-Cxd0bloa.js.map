{"version":3,"file":"AdminRatingsPage-Cxd0bloa.js","sources":["../../src/core/services/AdminRatingService.ts","../../src/presentation/hooks/useAdminRatings.ts","../../src/presentation/pages/admin/AdminRatingsPage.tsx"],"sourcesContent":["// src/core/services/AdminRatingService.ts\r\nimport ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\nimport type {Rating} from \"../domain/entities/Rating\";\r\n\r\n// Interfaces para las respuestas de API\r\nexport interface AdminRatingResponse {\r\n\tstatus: string;\r\n\tmessage?: string;\r\n\tdata: Rating[];\r\n\tmeta: {\r\n\t\ttotal: number;\r\n\t\tper_page: number;\r\n\t\tcurrent_page: number;\r\n\t\tlast_page: number;\r\n\t};\r\n}\r\n\r\nexport interface AdminActionResponse {\r\n\tstatus: string;\r\n\tmessage: string;\r\n\tdata?: {\r\n\t\tnewStatus?: string;\r\n\t\t[key: string]: any;\r\n\t};\r\n}\r\n\r\nexport interface AdminRatingStatsResponse {\r\n\tstatus: string;\r\n\tmessage?: string;\r\n\tdata: {\r\n\t\ttotal: number;\r\n\t\tpending: number;\r\n\t\tapproved: number;\r\n\t\trejected: number;\r\n\t\tflagged?: number;\r\n\t};\r\n}\r\n\r\nexport interface AdminRatingFilters {\r\n\tstatus?: string;\r\n\ttype?: string;\r\n\trating?: number | null;\r\n\tfrom_date?: string;\r\n\tto_date?: string;\r\n\tpage?: number;\r\n\tper_page?: number;\r\n}\r\n\r\n/**\r\n * Servicio para la administración de valoraciones\r\n */\r\nexport class AdminRatingService {\r\n\t/**\r\n\t * Obtiene todas las valoraciones con filtros opcionales\r\n\t */\r\n\tasync getRatings(\r\n\t\tfilters: AdminRatingFilters = {}\r\n\t): Promise<AdminRatingResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<AdminRatingResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.ADMIN.RATINGS.LIST,\r\n\t\t\t\tfilters\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al obtener valoraciones:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Aprueba una valoración\r\n\t */\r\n\tasync approveRating(\r\n\t\tratingId: number,\r\n\t\tnote?: string\r\n\t): Promise<AdminActionResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.post<AdminActionResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.ADMIN.RATINGS.APPROVE(ratingId),\r\n\t\t\t\t{note}\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(`Error al aprobar valoración ${ratingId}:`, error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Rechaza una valoración\r\n\t */\r\n\tasync rejectRating(\r\n\t\tratingId: number,\r\n\t\tnote: string\r\n\t): Promise<AdminActionResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.post<AdminActionResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.ADMIN.RATINGS.REJECT(ratingId),\r\n\t\t\t\t{note}\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(`Error al rechazar valoración ${ratingId}:`, error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reporta o desmarca una valoración para revisión adicional\r\n\t */\r\n\tasync flagRating(\r\n\t\tratingId: number,\r\n\t\treason: string\r\n\t): Promise<AdminActionResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.post<AdminActionResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.ADMIN.RATINGS.FLAG(ratingId),\r\n\t\t\t\t{reason}\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(`Error al marcar/desmarcar valoración ${ratingId}:`, error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene estadísticas generales de valoraciones\r\n\t */\r\n\tasync getRatingStats(): Promise<AdminRatingStatsResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<AdminRatingStatsResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.ADMIN.RATINGS.STATS\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al obtener estadísticas de valoraciones:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default AdminRatingService;","// src/presentation/hooks/useAdminRatings.ts\r\nimport {useState, useEffect, useCallback} from \"react\";\r\nimport AdminRatingService from \"../../core/services/AdminRatingService\";\r\nimport type {AdminRatingFilters} from \"../../core/services/AdminRatingService\";\r\nimport type {Rating} from \"../../core/domain/entities/Rating\";\r\nimport {extractErrorMessage} from \"../../utils/errorHandler\";\r\n\r\nexport const useAdminRatings = () => {\r\n\t// Estado para almacenar las valoraciones\r\n\tconst [ratings, setRatings] = useState<Rating[]>([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\tconst [statsLoading, setStatsLoading] = useState(true);\r\n\r\n\t// Estado para filtros\r\n\tconst [statusFilter, setStatusFilter] = useState<string>(\"all\");\r\n\tconst [typeFilter, setTypeFilter] = useState<string>(\"all\");\r\n\tconst [ratingFilter, setRatingFilter] = useState<number | null>(null);\r\n\tconst [dateRangeFilter, setDateRangeFilter] = useState<{\r\n\t\tfrom: string;\r\n\t\tto: string;\r\n\t}>({\r\n\t\tfrom: \"\",\r\n\t\tto: \"\",\r\n\t});\r\n\r\n\t// Estado para paginación\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tcurrentPage: 1,\r\n\t\ttotalPages: 1,\r\n\t\ttotalItems: 0,\r\n\t\titemsPerPage: 10,\r\n\t});\r\n\r\n\t// Estado para estadísticas\r\n\tconst [stats, setStats] = useState({\r\n\t\ttotal: 0,\r\n\t\tpending: 0,\r\n\t\tapproved: 0,\r\n\t\trejected: 0,\r\n\t});\r\n\r\n\t// Estado para el modal de detalle\r\n\tconst [selectedRating, setSelectedRating] = useState<Rating | null>(null);\r\n\tconst [showRatingModal, setShowRatingModal] = useState(false);\r\n\tconst [moderationNote, setModerationNote] = useState(\"\");\r\n\r\n\t// Añade un estado para controlar la inicialización\r\n\tconst [isInitialized, setIsInitialized] = useState(false);\r\n\r\n\t// Inicializar el servicio\r\n\tconst adminRatingService = new AdminRatingService();\r\n\r\n\t// Función para obtener las valoraciones\r\n\tconst fetchRatings = useCallback(async () => {\r\n\t\tsetLoading(true);\r\n\t\tsetError(null);\r\n\r\n\t\ttry {\r\n\t\t\tconsole.log(\"Obteniendo valoraciones con filtros:\", {\r\n\t\t\t\tpage: pagination.currentPage,\r\n\t\t\t\tper_page: pagination.itemsPerPage,\r\n\t\t\t\tstatusFilter,\r\n\t\t\t\ttypeFilter,\r\n\t\t\t\tratingFilter,\r\n\t\t\t\tdateRangeFilter\r\n\t\t\t});\r\n\r\n\t\t\t// Preparar los filtros para la API\r\n\t\t\tconst filters: AdminRatingFilters = {\r\n\t\t\t\tpage: pagination.currentPage,\r\n\t\t\t\tper_page: pagination.itemsPerPage,\r\n\t\t\t};\r\n\r\n\t\t\t// Agregar filtros opcionales si están establecidos\r\n\t\t\tif (statusFilter !== \"all\") filters.status = statusFilter;\r\n\t\t\tif (typeFilter !== \"all\") filters.type = typeFilter;\r\n\t\t\tif (ratingFilter !== null) filters.rating = ratingFilter;\r\n\t\t\tif (dateRangeFilter.from) filters.from_date = dateRangeFilter.from;\r\n\t\t\tif (dateRangeFilter.to) filters.to_date = dateRangeFilter.to;\r\n\r\n\t\t\tconsole.log(\"Filtros enviados a la API:\", filters);\r\n\r\n\t\t\t// Realizar la petición\r\n\t\t\tconst response = await adminRatingService.getRatings(filters);\r\n\t\t\t\r\n\t\t\tconsole.log(\"Respuesta recibida de la API:\", response);\r\n\r\n\t\t\t// Actualizar el estado con los datos recibidos\r\n\t\t\tif (response && response.data) {\r\n\t\t\t\tconsole.log(\"Datos de valoraciones:\", response.data);\r\n\t\t\t\tsetRatings(Array.isArray(response.data) ? response.data : []);\r\n\r\n\t\t\t\t// Actualizar información de paginación si existe\r\n\t\t\t\tif (response.meta) {\r\n\t\t\t\t\tsetPagination({\r\n\t\t\t\t\t\tcurrentPage: response.meta.current_page || pagination.currentPage,\r\n\t\t\t\t\t\ttotalPages: response.meta.last_page || pagination.totalPages,\r\n\t\t\t\t\t\ttotalItems: response.meta.total || 0,\r\n\t\t\t\t\t\titemsPerPage: response.meta.per_page || pagination.itemsPerPage,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"Respuesta sin datos válidos:\", response);\r\n\t\t\t\tsetRatings([]);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error al obtener valoraciones:\", err);\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terr,\r\n\t\t\t\t\"Error al cargar las valoraciones\"\r\n\t\t\t);\r\n\t\t\tsetError(errorMessage);\r\n\t\t\tsetRatings([]); // Limpiar ratings en caso de error\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, [\r\n\t\tadminRatingService,\r\n\t\tpagination.currentPage,\r\n\t\tpagination.itemsPerPage,\r\n\t\tstatusFilter,\r\n\t\ttypeFilter,\r\n\t\tratingFilter,\r\n\t\tdateRangeFilter,\r\n\t]);\r\n\r\n\t// Función para obtener estadísticas\r\n\tconst fetchStats = useCallback(async () => {\r\n\t\tsetStatsLoading(true);\r\n\t\ttry {\r\n\t\t\tconsole.log(\"Obteniendo estadísticas de ratings...\");\r\n\t\t\tconst response = await adminRatingService.getRatingStats();\r\n\t\t\tconsole.log(\"Respuesta de estadísticas:\", response);\r\n\t\t\t\r\n\t\t\tif (response && response.data) {\r\n\t\t\t\tconsole.log(\"Datos de estadísticas:\", response.data);\r\n\t\t\t\tsetStats({\r\n\t\t\t\t\ttotal: response.data.total || 0,\r\n\t\t\t\t\tpending: response.data.pending || 0,\r\n\t\t\t\t\tapproved: response.data.approved || 0,\r\n\t\t\t\t\trejected: response.data.rejected || 0,\r\n\t\t\t\t});\r\n\t\t\t} else if (response && response.status === \"success\") {\r\n\t\t\t\t// Si tiene status success pero no data, intentar usar la respuesta directamente\r\n\t\t\t\tconsole.log(\"Usando respuesta directa como datos:\", response);\r\n\t\t\t\tsetStats({\r\n\t\t\t\t\ttotal: (response as any).total || 0,\r\n\t\t\t\t\tpending: (response as any).pending || 0,\r\n\t\t\t\t\tapproved: (response as any).approved || 0,\r\n\t\t\t\t\trejected: (response as any).rejected || 0,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"Respuesta de estadísticas sin datos válidos:\", response);\r\n\t\t\t\tsetStats({\r\n\t\t\t\t\ttotal: 0,\r\n\t\t\t\t\tpending: 0,\r\n\t\t\t\t\tapproved: 0,\r\n\t\t\t\t\trejected: 0,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error al obtener estadísticas:\", err);\r\n\t\t\t// En caso de error, mantener estadísticas en 0\r\n\t\t\tsetStats({\r\n\t\t\t\ttotal: 0,\r\n\t\t\t\tpending: 0,\r\n\t\t\t\tapproved: 0,\r\n\t\t\t\trejected: 0,\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tsetStatsLoading(false);\r\n\t\t}\r\n\t}, [adminRatingService]);\r\n\r\n\t// Efecto inicial simplificado - cargar datos al montar el componente\r\n\tuseEffect(() => {\r\n\t\tfetchRatings();\r\n\t\tfetchStats();\r\n\t}, []); // Solo ejecutar al montar\r\n\r\n\t// Efecto para recargar cuando cambien los filtros\r\n\tuseEffect(() => {\r\n\t\tif (isInitialized) {\r\n\t\t\tfetchRatings();\r\n\t\t}\r\n\t}, [statusFilter, typeFilter, ratingFilter, dateRangeFilter, pagination.currentPage]);\r\n\t\r\n\t// Marcar como inicializado después del primer render\r\n\tuseEffect(() => {\r\n\t\tsetIsInitialized(true);\r\n\t}, []);\r\n\r\n\t// Función para calcular estadísticas desde los datos cargados (fallback)\r\n\tconst calculateStatsFromData = useCallback(() => {\r\n\t\tif (ratings.length > 0) {\r\n\t\t\tconst calculatedStats = {\r\n\t\t\t\ttotal: ratings.length,\r\n\t\t\t\tpending: ratings.filter(r => r.status === 'pending').length,\r\n\t\t\t\tapproved: ratings.filter(r => r.status === 'approved').length,\r\n\t\t\t\trejected: ratings.filter(r => r.status === 'rejected').length,\r\n\t\t\t};\r\n\t\t\tconsole.log(\"Estadísticas calculadas desde los datos:\", calculatedStats);\r\n\t\t\tsetStats(calculatedStats);\r\n\t\t}\r\n\t}, [ratings]);\r\n\r\n\t// Calcular estadísticas desde los datos si no se obtuvieron del servidor\r\n\tuseEffect(() => {\r\n\t\tif (ratings.length > 0 && stats.total === 0 && !statsLoading) {\r\n\t\t\tconsole.log(\"Estadísticas del servidor no disponibles, calculando desde los datos locales...\");\r\n\t\t\tcalculateStatsFromData();\r\n\t\t}\r\n\t}, [ratings, stats.total, statsLoading, calculateStatsFromData]);\r\n\r\n\r\n\t// Funciones simplificadas para cambiar filtros - el useEffect se encarga de recargar\r\n\tconst handleStatusFilterChange = (status: string) => {\r\n\t\tsetStatusFilter(status);\r\n\t\t// Resetear a la primera página al cambiar filtros\r\n\t\tsetPagination(prev => ({ ...prev, currentPage: 1 }));\r\n\t};\r\n\r\n\tconst handleTypeFilterChange = (type: string) => {\r\n\t\tsetTypeFilter(type);\r\n\t\tsetPagination(prev => ({ ...prev, currentPage: 1 }));\r\n\t};\r\n\r\n\tconst handleRatingFilterChange = (rating: number | null) => {\r\n\t\tsetRatingFilter(rating);\r\n\t\tsetPagination(prev => ({ ...prev, currentPage: 1 }));\r\n\t};\r\n\r\n\tconst handleDateRangeFilterChange = (dateRange: {\r\n\t\tfrom: string;\r\n\t\tto: string;\r\n\t}) => {\r\n\t\tsetDateRangeFilter(dateRange);\r\n\t\tsetPagination(prev => ({ ...prev, currentPage: 1 }));\r\n\t};\r\n\r\n\t// Función para cambiar de página\r\n\tconst handlePageChange = (page: number) => {\r\n\t\tsetPagination((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tcurrentPage: page,\r\n\t\t}));\r\n\t};\r\n\r\n\t// Función para abrir el modal de valoración\r\n\tconst openRatingModal = (rating: Rating) => {\r\n\t\tsetSelectedRating(rating);\r\n\t\tsetModerationNote(\"\");\r\n\t\tsetShowRatingModal(true);\r\n\t};\r\n\r\n\t// Función para cerrar el modal de valoración\r\n\tconst closeRatingModal = () => {\r\n\t\tsetSelectedRating(null);\r\n\t\tsetShowRatingModal(false);\r\n\t\tsetModerationNote(\"\");\r\n\t};\r\n\r\n\t// Función para aprobar una valoración\r\n\tconst approveRating = async (ratingId: number) => {\r\n\t\ttry {\r\n\t\t\tconst response = await adminRatingService.approveRating(\r\n\t\t\t\tratingId,\r\n\t\t\t\tmoderationNote\r\n\t\t\t);\r\n\t\t\tif (response.status === \"success\") {\r\n\t\t\t\t// Actualizar el estado local\r\n\t\t\t\tsetRatings((prevRatings) =>\r\n\t\t\t\t\tprevRatings.map((rating) =>\r\n\t\t\t\t\t\trating.id === ratingId ? {...rating, status: \"approved\"} : rating\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Actualizar estadísticas\r\n\t\t\t\tfetchStats();\r\n\r\n\t\t\t\t// Cerrar modal si está abierto\r\n\t\t\t\tcloseRatingModal();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(response.message || \"Error al aprobar la valoración\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(`Error al aprobar valoración ${ratingId}:`, err);\r\n\t\t\tsetError(extractErrorMessage(err, \"Error al aprobar la valoración\"));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\t// Función para rechazar una valoración\r\n\tconst rejectRating = async (ratingId: number) => {\r\n\t\t// Validar que hay una nota de moderación para el rechazo\r\n\t\tif (!moderationNote) {\r\n\t\t\tsetError(\r\n\t\t\t\t\"Es necesario proporcionar una nota de moderación para rechazar una valoración\"\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await adminRatingService.rejectRating(\r\n\t\t\t\tratingId,\r\n\t\t\t\tmoderationNote\r\n\t\t\t);\r\n\t\t\tif (response.status === \"success\") {\r\n\t\t\t\t// Actualizar el estado local\r\n\t\t\t\tsetRatings((prevRatings) =>\r\n\t\t\t\t\tprevRatings.map((rating) =>\r\n\t\t\t\t\t\trating.id === ratingId ? {...rating, status: \"rejected\"} : rating\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Actualizar estadísticas\r\n\t\t\t\tfetchStats();\r\n\r\n\t\t\t\t// Cerrar modal si está abierto\r\n\t\t\t\tcloseRatingModal();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(response.message || \"Error al rechazar la valoración\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(`Error al rechazar valoración ${ratingId}:`, err);\r\n\t\t\tsetError(extractErrorMessage(err, \"Error al rechazar la valoración\"));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\t// Función para reportar una valoración\r\n\tconst flagRating = async (ratingId: number, reason: string) => {\r\n\t\ttry {\r\n\t\t\tconst response = await adminRatingService.flagRating(ratingId, reason);\r\n\r\n\t\t\tif (response.status === \"success\") {\r\n\t\t\t\t// CORREGIDO: Verificar si data existe antes de acceder a newStatus\r\n\t\t\t\tif (response.data && response.data.newStatus) {\r\n\t\t\t\t\tsetRatings((prevRatings) =>\r\n\t\t\t\t\t\tprevRatings.map((rating) =>\r\n\t\t\t\t\t\t\trating.id === ratingId\r\n\t\t\t\t\t\t\t\t? {...rating, status: response.data!.newStatus as any} // CORREGIDO: non-null assertion y cast\r\n\t\t\t\t\t\t\t\t: rating\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfetchStats();\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\tresponse.message || \"Error al modificar el estado de la valoración\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`Error al modificar estado de valoración ${ratingId}:`,\r\n\t\t\t\terr\r\n\t\t\t);\r\n\t\t\tsetError(\r\n\t\t\t\textractErrorMessage(err, \"Error al modificar estado de valoración\")\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\t// Función para refrescar los datos\r\n\tconst refreshData = () => {\r\n\t\tfetchRatings();\r\n\t\tfetchStats();\r\n\t};\r\n\r\n\treturn {\r\n\t\t// Estado\r\n\t\tratings,\r\n\t\tloading,\r\n\t\terror,\r\n\t\tstatsLoading,\r\n\t\tstats,\r\n\t\tstatusFilter,\r\n\t\ttypeFilter,\r\n\t\tratingFilter,\r\n\t\tdateRangeFilter,\r\n\t\tpagination,\r\n\t\tselectedRating,\r\n\t\tshowRatingModal,\r\n\t\tmoderationNote,\r\n\r\n\t\t// Funciones de acción\r\n\t\tsetStatusFilter: handleStatusFilterChange,\r\n\t\tsetTypeFilter: handleTypeFilterChange,\r\n\t\tsetRatingFilter: handleRatingFilterChange,\r\n\t\tsetDateRangeFilter: handleDateRangeFilterChange,\r\n\t\thandlePageChange,\r\n\t\topenRatingModal,\r\n\t\tcloseRatingModal,\r\n\t\tsetModerationNote,\r\n\t\tapproveRating,\r\n\t\trejectRating,\r\n\t\tflagRating,\r\n\t\trefreshData,\r\n\t};\r\n};\r\n\r\nexport default useAdminRatings;\r\n","// src/presentation/pages/admin/AdminRatingsPage.tsx\r\nimport React from \"react\";\r\nimport Table from \"../../components/dashboard/Table\";\r\nimport {\r\n  Star,\r\n  User,\r\n  Package,\r\n  Store,\r\n  Calendar,\r\n  Eye,\r\n  RefreshCw,\r\n  Filter,\r\n  CheckCircle,\r\n  XCircle,\r\n  AlertTriangle,\r\n  Clock,\r\n  Flag,\r\n  BarChart2,\r\n} from \"lucide-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport type { Rating } from \"../../../core/domain/entities/Rating\";\r\nimport StatCardList from \"../../components/dashboard/StatCardList\";\r\nimport useAdminRatings from \"../../hooks/useAdminRatings\";\r\n\r\n// Mapeo de estado para las valoraciones\r\nconst ratingStatusMap: Record<\r\n  string,\r\n  { label: string; color: string; icon: React.ReactNode }\r\n> = {\r\n  pending: {\r\n    label: \"Pendiente\",\r\n    color: \"bg-yellow-100 text-yellow-800\",\r\n    icon: <Clock className=\"w-3 h-3 mr-1\" />,\r\n  },\r\n  approved: {\r\n    label: \"Aprobada\",\r\n    color: \"bg-green-100 text-green-800\",\r\n    icon: <CheckCircle className=\"w-3 h-3 mr-1\" />,\r\n  },\r\n  rejected: {\r\n    label: \"Rechazada\",\r\n    color: \"bg-red-100 text-red-800\",\r\n    icon: <XCircle className=\"w-3 h-3 mr-1\" />,\r\n  },\r\n};\r\n\r\n// Mapeo de tipo de valoración\r\nconst ratingTypeMap: Record<\r\n  string,\r\n  { label: string; color: string; icon: React.ReactNode }\r\n> = {\r\n  product: {\r\n    label: \"Producto\",\r\n    color: \"bg-blue-100 text-blue-800\",\r\n    icon: <Package className=\"w-3 h-3 mr-1\" />,\r\n  },\r\n  seller: {\r\n    label: \"Vendedor\",\r\n    color: \"bg-purple-100 text-purple-800\",\r\n    icon: <Store className=\"w-3 h-3 mr-1\" />,\r\n  },\r\n  user: {\r\n    label: \"Usuario\",\r\n    color: \"bg-orange-100 text-orange-800\",\r\n    icon: <User className=\"w-3 h-3 mr-1\" />,\r\n  },\r\n};\r\n\r\nconst AdminRatingsPage: React.FC = () => {\r\n  const {\r\n    // Estado\r\n    ratings,\r\n    loading,\r\n    error,\r\n    stats,\r\n    statsLoading,\r\n    statusFilter,\r\n    typeFilter,\r\n    ratingFilter,\r\n    dateRangeFilter,\r\n    pagination,\r\n    selectedRating,\r\n    showRatingModal,\r\n    moderationNote,\r\n    \r\n    // Funciones de acción\r\n    setStatusFilter,\r\n    setTypeFilter,\r\n    setRatingFilter,\r\n    setDateRangeFilter,\r\n    handlePageChange,\r\n    openRatingModal,\r\n    closeRatingModal,\r\n    setModerationNote,\r\n    approveRating,\r\n    rejectRating,\r\n    flagRating,\r\n    refreshData\r\n  } = useAdminRatings();\r\n\r\n  const formatDate = (dateString: string | undefined | null) => {\r\n    if (!dateString) return \"N/A\";\r\n    \r\n    try {\r\n      const date = new Date(dateString);\r\n      // Verificar si la fecha es válida\r\n      if (isNaN(date.getTime())) {\r\n        return \"Fecha inválida\";\r\n      }\r\n      \r\n      return new Intl.DateTimeFormat(\"es-ES\", {\r\n        day: \"2-digit\",\r\n        month: \"2-digit\", \r\n        year: \"numeric\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }).format(date);\r\n    } catch (error) {\r\n      console.error(\"Error al formatear fecha:\", error);\r\n      return \"Error en fecha\";\r\n    }\r\n  };\r\n\r\n  const renderStars = (rating: number) => {\r\n    return (\r\n      <div className=\"flex items-center\">\r\n        {[...Array(5)].map((_, i) => (\r\n          <Star\r\n            key={i}\r\n            className={`w-4 h-4 ${\r\n              i < rating\r\n                ? \"text-yellow-500 fill-current\"\r\n                : \"text-gray-300\"\r\n            }`}\r\n          />\r\n        ))}\r\n        <span className=\"ml-1 text-sm font-medium\">{rating}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n\t\t{\r\n\t\t\tkey: \"user\",\r\n\t\t\theader: \"Usuario\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (rating: Rating) => (\r\n\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t<div className=\"flex-shrink-0 h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center overflow-hidden\">\r\n\t\t\t\t\t\t{rating.user?.avatar ? (\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={`/images/avatars/${rating.user.avatar}`}\r\n\t\t\t\t\t\t\t\talt={rating.user?.name}\r\n\t\t\t\t\t\t\t\tclassName=\"h-8 w-8 object-cover\"\r\n\t\t\t\t\t\t\t\tonError={(e) => {\r\n\t\t\t\t\t\t\t\t\t(e.target as HTMLImageElement).src =\r\n\t\t\t\t\t\t\t\t\t\t\"https://via.placeholder.com/40?text=User\";\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<User className=\"h-4 w-4 text-gray-500\" />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"ml-3\">\r\n\t\t\t\t\t\t<div className=\"text-sm font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t{rating.user?.name || `Usuario #${rating.userId}`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-xs text-gray-500\">\r\n\t\t\t\t\t\t\tID: {rating.userId}\r\n\t\t\t\t\t\t\t{rating.isVerifiedPurchase && (\r\n\t\t\t\t\t\t\t\t<span className=\"ml-2 text-green-600\">\r\n\t\t\t\t\t\t\t\t\t✓ Compra verificada\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"ratingScore\",\r\n\t\t\theader: \"Valoración\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (rating: Rating) => renderStars(rating.rating),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"type\",\r\n\t\t\theader: \"Tipo\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (rating: Rating) => {\r\n\t\t\t\tconst type = ratingTypeMap[rating.type] || {\r\n\t\t\t\t\tlabel: rating.type,\r\n\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\"bg-gray-100 text-gray-800\",\r\n\t\t\t\t\ticon: <AlertTriangle className=\"w-3 h-3 mr-1\" />,\r\n\t\t\t\t};\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${type.color}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{type.icon}\r\n\t\t\t\t\t\t{type.label}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"title\",\r\n\t\t\theader: \"Título\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (rating: Rating) => (\r\n\t\t\t\t<div className=\"text-sm font-medium text-gray-900 line-clamp-2\">\r\n\t\t\t\t\t{rating.title || \"Sin título\"}\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"date\",\r\n\t\t\theader: \"Fecha\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (rating: Rating) => {\r\n\t\t\t\t// Manejar diferentes formatos de fecha del backend\r\n\t\t\t\tconst createdDate = rating.createdAt || (rating as any).created_at;\r\n\t\t\t\tconst updatedDate = rating.updatedAt || (rating as any).updated_at;\r\n\t\t\t\t\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"text-xs text-gray-500\">\r\n\t\t\t\t\t\t<div>Creado: {formatDate(createdDate)}</div>\r\n\t\t\t\t\t\t{updatedDate && updatedDate !== createdDate && (\r\n\t\t\t\t\t\t\t<div>Actualizado: {formatDate(updatedDate)}</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"status\",\r\n\t\t\theader: \"Estado\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (rating: Rating) => {\r\n\t\t\t\tconst status = ratingStatusMap[rating.status] || {\r\n\t\t\t\t\tlabel: rating.status,\r\n\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\"bg-gray-100 text-gray-800\",\r\n\t\t\t\t\ticon: <AlertTriangle className=\"w-3 h-3 mr-1\" />,\r\n\t\t\t\t};\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${status.color}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{status.icon}\r\n\t\t\t\t\t\t{status.label}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"actions\",\r\n\t\t\theader: \"Acciones\",\r\n\t\t\trender: (rating: Rating) => (\r\n\t\t\t\t<div className=\"flex justify-end space-x-2\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => openRatingModal(rating)}\r\n\t\t\t\t\t\tclassName=\"p-1 text-blue-600 hover:bg-blue-100 rounded-md\"\r\n\t\t\t\t\t\ttitle=\"Ver detalles\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Eye size={18} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{rating.status === \"pending\" && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\t\tif (!rating.id) {\r\n\t\t\t\t\t\t\t\t\t\talert(\"ID de valoración no válido\");\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconst success = await approveRating(rating.id);\r\n\t\t\t\t\t\t\t\t\tif (success) {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Valoración aprobada exitosamente\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"p-1 text-green-600 hover:bg-green-100 rounded-md\"\r\n\t\t\t\t\t\t\t\ttitle=\"Aprobar valoración\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CheckCircle size={18} />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\t\tif (!rating.id) {\r\n\t\t\t\t\t\t\t\t\t\talert(\"ID de valoración no válido\");\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// Abrir el modal para que el usuario pueda ingresar una nota antes de rechazar\r\n\t\t\t\t\t\t\t\t\topenRatingModal(rating);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"p-1 text-red-600 hover:bg-red-100 rounded-md\"\r\n\t\t\t\t\t\t\t\ttitle=\"Rechazar valoración\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<XCircle size={18} />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\tif (!rating.id) {\r\n\t\t\t\t\t\t\t\talert(\"ID de valoración no válido\");\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst success = await flagRating(\r\n\t\t\t\t\t\t\t\trating.id,\r\n\t\t\t\t\t\t\t\trating.status === \"flagged\"\r\n\t\t\t\t\t\t\t\t\t? \"Desmarcada por administrador\"\r\n\t\t\t\t\t\t\t\t\t: \"Marcada para revisión por administrador\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (success) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Estado de flag actualizado exitosamente\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={`p-1 ${\r\n\t\t\t\t\t\t\trating.status === \"flagged\"\r\n\t\t\t\t\t\t\t\t? \"text-green-600 hover:bg-green-100\"\r\n\t\t\t\t\t\t\t\t: \"text-orange-600 hover:bg-orange-100\"\r\n\t\t\t\t\t\t} rounded-md`}\r\n\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\trating.status === \"flagged\"\r\n\t\t\t\t\t\t\t\t? \"Desmarcar valoración\"\r\n\t\t\t\t\t\t\t\t: \"Reportar valoración\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{rating.status === \"flagged\" ? (\r\n\t\t\t\t\t\t\t<CheckCircle size={18} /> // Icono para desmarcar\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Flag size={18} /> // Icono para marcar\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n  const statsItemsRating = [\r\n    {\r\n      title: \"Total\",\r\n      value: stats.total,\r\n      description: \"Valoraciones y reseñas\",\r\n      icon: Star,\r\n      bgColor: \"bg-blue-50/20\",\r\n      textColor: \"text-blue-800\",\r\n      valueColor: \"text-blue-900 \",\r\n      descriptionColor: \"text-blue-700\",\r\n      iconColor: \"text-blue-600\",\r\n    },\r\n    {\r\n      title: \"Pendientes\",\r\n      value: stats.pending,\r\n      description: \"Esperando moderación\",\r\n      icon: Clock,\r\n      bgColor: \"bg-yellow-50/20\",\r\n      textColor: \"text-yellow-800\",\r\n      valueColor: \"text-yellow-900\",\r\n      descriptionColor: \"text-yellow-700\",\r\n      iconColor: \"text-yellow-6000\",\r\n    },\r\n    {\r\n      title: \"Aprobadas\",\r\n      value: stats.approved,\r\n      description: \"Publicadas\",\r\n      icon: CheckCircle,\r\n      bgColor: \"bg-green-50/20\",\r\n      textColor: \"text-green-800\",\r\n      valueColor: \"text-green-900\",\r\n      descriptionColor: \"text-green-700\",\r\n      iconColor: \"text-green-600\",\r\n    },\r\n    {\r\n      title: \"Rechazadas\",\r\n      value: stats.rejected,\r\n      description: \"Ocultadas del público\",\r\n      icon: XCircle,\r\n      bgColor: \"bg-red-50/20\",\r\n      textColor: \"text-red-800\",\r\n      valueColor: \"text-red-900\",\r\n      descriptionColor: \"text-red-700\",\r\n      iconColor: \"text-red-600\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {error && (\r\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\r\n          <span className=\"block sm:inline\">{error}</span>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">\r\n          Gestión de Valoraciones y Reseñas\r\n        </h1>\r\n        <div className=\"flex space-x-2\">\r\n          <Link\r\n            to=\"/admin/ratings/dashboard\"\r\n            className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors\"\r\n          >\r\n            <BarChart2 size={18} className=\"inline mr-2\" />\r\n            Estadísticas\r\n          </Link>\r\n          <button\r\n            onClick={refreshData}\r\n            className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n          >\r\n            <RefreshCw size={18} className={`inline mr-2 ${loading ? \"animate-spin\" : \"\"}`} />\r\n            Actualizar\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* ✅ ELIMINADA la sección duplicada de líneas 413-457 */}\r\n\r\n      {/* Panel de estadísticas */}\r\n      {statsLoading ? (\r\n        <div className=\"bg-white rounded-lg shadow-sm p-8\">\r\n          <div className=\"flex justify-center items-center\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"></div>\r\n            <span className=\"ml-3 text-gray-600\">Cargando estadísticas...</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <StatCardList items={statsItemsRating}/>\r\n      )}\r\n      {/* Filtros */}\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4\">\r\n        <div className=\"flex flex-col md:flex-row gap-4\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Filter className=\"h-5 w-5 text-gray-500\" />\r\n            <select\r\n              className=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              value={statusFilter}\r\n              onChange={(e) => setStatusFilter(e.target.value)}\r\n            >\r\n              <option value=\"all\">Todos los Estados</option>\r\n              <option value=\"pending\">Pendientes</option>\r\n              <option value=\"approved\">Aprobados</option>\r\n              <option value=\"rejected\">Rechazados</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-2\">\r\n            <select\r\n              className=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              value={typeFilter}\r\n              onChange={(e) => setTypeFilter(e.target.value)}\r\n            >\r\n              <option value=\"all\">Todos los Tipos</option>\r\n              <option value=\"product\">Producto</option>\r\n              <option value=\"seller\">Vendedor</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-2\">\r\n            <select\r\n              className=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              value={ratingFilter !== null ? ratingFilter.toString() : \"all\"}\r\n              onChange={(e) =>\r\n                setRatingFilter(e.target.value === \"all\" ? null : parseInt(e.target.value))\r\n              }\r\n            >\r\n              <option value=\"all\">Todas las Puntuaciones</option>\r\n              <option value=\"5\">5 Estrellas</option>\r\n              <option value=\"4\">4 Estrellas</option>\r\n              <option value=\"3\">3 Estrellas</option>\r\n              <option value=\"2\">2 Estrellas</option>\r\n              <option value=\"1\">1 Estrella</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Calendar className=\"h-5 w-5 text-gray-500\" />\r\n            <input\r\n              type=\"date\"\r\n              className=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              value={dateRangeFilter.from}\r\n              onChange={(e) =>\r\n                setDateRangeFilter({ ...dateRangeFilter, from: e.target.value })\r\n              }\r\n              placeholder=\"Desde\"\r\n            />\r\n            <input\r\n              type=\"date\"\r\n              className=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              value={dateRangeFilter.to}\r\n              onChange={(e) =>\r\n                setDateRangeFilter({ ...dateRangeFilter, to: e.target.value })\r\n              }\r\n              placeholder=\"Hasta\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabla de Valoraciones */}\r\n      <Table\r\n        data={ratings}\r\n        columns={columns}\r\n        searchFields={[\"title\", \"comment\"]}\r\n        loading={loading}\r\n        emptyMessage=\"No se encontraron valoraciones\"\r\n        pagination={{\r\n          currentPage: pagination.currentPage,\r\n          totalPages: pagination.totalPages,\r\n          totalItems: pagination.totalItems,\r\n          itemsPerPage: pagination.itemsPerPage,\r\n          onPageChange: handlePageChange,\r\n        }}\r\n      />\r\n\r\n      {/* Modal de Detalle de Valoración */}\r\n      {showRatingModal && selectedRating && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-lg shadow-xl max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">\r\n                Detalles de Valoración\r\n              </h3>\r\n              <button\r\n                onClick={closeRatingModal}\r\n                className=\"text-gray-400 hover:text-gray-500\"\r\n              >\r\n                <XCircle className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              {/* Información de Usuario */}\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"text-sm font-medium text-gray-500 mb-2\">\r\n                  Usuario\r\n                </h4>\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0 h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center overflow-hidden\">\r\n                    {selectedRating.user?.avatar ? (\r\n                      <img\r\n                        src={`/images/avatars/${selectedRating.user.avatar}`}\r\n                        alt={selectedRating.user?.name}\r\n                        className=\"h-10 w-10 object-cover\"\r\n                        onError={(e) => {\r\n                          (e.target as HTMLImageElement).src =\r\n                            \"https://via.placeholder.com/40?text=User\";\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <User className=\"h-6 w-6 text-gray-500\" />\r\n                    )}\r\n                  </div>\r\n                  <div className=\"ml-4\">\r\n                    <div className=\"text-sm font-medium text-gray-900\">\r\n                      {selectedRating.user?.name || `Usuario #${selectedRating.userId}`}\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-500\">\r\n                      ID: {selectedRating.userId}\r\n                      {selectedRating.isVerifiedPurchase && (\r\n                        <span className=\"ml-2 text-green-600\">\r\n                          ✓ Compra verificada\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Información de la Valoración */}\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"text-sm font-medium text-gray-500 mb-2\">\r\n                  Valoración\r\n                </h4>\r\n                <div className=\"flex items-center mb-2\">\r\n                  {renderStars(selectedRating.rating)}\r\n                </div>\r\n                <div className=\"text-gray-900 mb-2\">\r\n                  <span className=\"font-medium\">Título:</span> {selectedRating.title}\r\n                </div>\r\n                <div className=\"bg-gray-50 p-3 rounded-lg text-gray-800 mb-2 whitespace-pre-wrap\">\r\n                  {selectedRating.comment}\r\n                </div>\r\n                <div className=\"text-sm text-gray-500\">\r\n                  <div>Creado: {formatDate(selectedRating.createdAt || (selectedRating as any).created_at)}</div>\r\n                  {((selectedRating.updatedAt || (selectedRating as any).updated_at) && \r\n                    (selectedRating.updatedAt || (selectedRating as any).updated_at) !== (selectedRating.createdAt || (selectedRating as any).created_at)) && (\r\n                    <div>Actualizado: {formatDate(selectedRating.updatedAt || (selectedRating as any).updated_at)}</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Estado Actual */}\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"text-sm font-medium text-gray-500 mb-2\">\r\n                  Estado Actual\r\n                </h4>\r\n                <div className=\"flex items-center\">\r\n                  {(() => {\r\n                    const status = ratingStatusMap[selectedRating.status] || {\r\n                      label: selectedRating.status,\r\n                      color:\r\n                        \"bg-gray-100 text-gray-800\",\r\n                      icon: <AlertTriangle className=\"w-4 h-4 mr-1\" />,\r\n                    };\r\n                    return (\r\n                      <span\r\n                        className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${status.color}`}\r\n                      >\r\n                        {status.icon}\r\n                        {status.label}\r\n                      </span>\r\n                    );\r\n                  })()}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Acciones de Moderación */}\r\n              {selectedRating.status === \"pending\" && (\r\n                <div className=\"mb-6\">\r\n                  <h4 className=\"text-sm font-medium text-gray-500 mb-2\">\r\n                    Moderación\r\n                  </h4>\r\n                  <div className=\"mb-4\">\r\n                    <label\r\n                      htmlFor=\"moderationNote\"\r\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n                    >\r\n                      Nota de Moderación (obligatoria para rechazar)\r\n                    </label>\r\n                    <textarea\r\n                      id=\"moderationNote\"\r\n                      rows={3}\r\n                      className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                      placeholder=\"Razón del rechazo o notas adicionales...\"\r\n                      value={moderationNote}\r\n                      onChange={(e) => setModerationNote(e.target.value)}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"flex space-x-2\">\r\n                    <button\r\n                      onClick={async () => {\r\n                        if (!selectedRating.id) {\r\n                          alert(\"ID de valoración no válido\");\r\n                          return;\r\n                        }\r\n                        const success = await approveRating(selectedRating.id);\r\n                        if (success) {\r\n                          console.log(\"Valoración aprobada desde modal\");\r\n                        }\r\n                      }}\r\n                      className=\"flex items-center justify-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n                    >\r\n                      <CheckCircle size={18} className=\"mr-2\" />\r\n                      Aprobar\r\n                    </button>\r\n                    <button\r\n                      onClick={async () => {\r\n                        if (!selectedRating.id) {\r\n                          alert(\"ID de valoración no válido\");\r\n                          return;\r\n                        }\r\n                        if (!moderationNote.trim()) {\r\n                          alert(\"Es necesario agregar una nota de moderación para rechazar\");\r\n                          return;\r\n                        }\r\n                        const success = await rejectRating(selectedRating.id);\r\n                        if (success) {\r\n                          console.log(\"Valoración rechazada desde modal\");\r\n                        }\r\n                      }}\r\n                      className=\"flex items-center justify-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors disabled:opacity-50\"\r\n                      disabled={!moderationNote.trim()}\r\n                    >\r\n                      <XCircle size={18} className=\"mr-2\" />\r\n                      Rechazar\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRatingsPage;"],"names":["AdminRatingService","filters","ApiClient","API_ENDPOINTS","error","ratingId","note","reason","useAdminRatings","ratings","setRatings","useState","loading","setLoading","setError","statsLoading","setStatsLoading","statusFilter","setStatusFilter","typeFilter","setTypeFilter","ratingFilter","setRatingFilter","dateRangeFilter","setDateRangeFilter","pagination","setPagination","stats","setStats","selectedRating","setSelectedRating","showRatingModal","setShowRatingModal","moderationNote","setModerationNote","isInitialized","setIsInitialized","adminRatingService","fetchRatings","useCallback","response","err","errorMessage","extractErrorMessage","fetchStats","useEffect","calculateStatsFromData","calculatedStats","r","handleStatusFilterChange","status","prev","handleTypeFilterChange","type","handleRatingFilterChange","rating","handleDateRangeFilterChange","dateRange","handlePageChange","page","openRatingModal","closeRatingModal","prevRatings","ratingStatusMap","jsx","Clock","CheckCircle","XCircle","ratingTypeMap","Package","Store","User","AdminRatingsPage","approveRating","rejectRating","flagRating","refreshData","formatDate","dateString","date","renderStars","jsxs","_","i","Star","columns","e","AlertTriangle","createdDate","updatedDate","Eye","Fragment","Flag","statsItemsRating","Link","BarChart2","RefreshCw","StatCardList","Filter","Calendar","Table"],"mappings":"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"}