{"version":3,"file":"RatingService-DTWTD-sM.js","sources":["../../src/presentation/components/rating/StarRating.tsx","../../src/core/services/RatingService.ts"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {Star} from \"lucide-react\";\r\n\r\ninterface StarRatingProps {\r\n\tvalue: number;\r\n\tonChange?: (value: number) => void;\r\n\tsize?: \"small\" | \"medium\" | \"large\";\r\n\treadOnly?: boolean;\r\n\trequired?: boolean;\r\n\tmaxStars?: number;\r\n\tclassName?: string;\r\n}\r\n\r\n/**\r\n * Componente de valoración con estrellas\r\n * Permite seleccionar o mostrar una calificación con estrellas\r\n */\r\nconst StarRating: React.FC<StarRatingProps> = ({\r\n\tvalue,\r\n\tonChange,\r\n\tsize = \"medium\",\r\n\treadOnly = false,\r\n\trequired = false,\r\n\tmaxStars = 5,\r\n\tclassName = \"\",\r\n}) => {\r\n\tconst [hoverValue, setHoverValue] = useState<number>(0);\r\n\tconst [isHovering, setIsHovering] = useState<boolean>(false);\r\n\r\n\t// Determinar tamaño de estrellas según la prop size\r\n\tconst starSizes = {\r\n\t\tsmall: 16,\r\n\t\tmedium: 24,\r\n\t\tlarge: 32,\r\n\t};\r\n\r\n\tconst starSize = starSizes[size];\r\n\r\n\t// Clases para los diferentes estados de las estrellas\r\n\tconst getStarClass = (starPosition: number) => {\r\n\t\t// Determinar si la estrella debe estar rellena\r\n\t\t// Comparamos con starPosition <= hoverValue o value para asegurarnos de que\r\n\t\t// la estrella en la posición 5 (última) se puede seleccionar correctamente\r\n\t\tconst shouldBeFilled = isHovering\r\n\t\t\t? starPosition <= hoverValue\r\n\t\t\t: starPosition <= value;\r\n\r\n\t\tif (shouldBeFilled) {\r\n\t\t\treturn \"fill-yellow-400 text-yellow-400\";\r\n\t\t}\r\n\t\treturn \"fill-none text-gray-300\";\r\n\t};\r\n\r\n\t// Evento al hacer clic en una estrella\r\n\tconst handleClick = (newValue: number) => {\r\n\t\tif (readOnly || !onChange) return;\r\n\r\n\t\t// Si hacemos clic en la estrella ya seleccionada, la deseleccionamos (valor 0)\r\n\t\t// Si no, seleccionamos el nuevo valor\r\n\t\tonChange(newValue === value ? 0 : newValue);\r\n\t};\r\n\r\n\t// Eventos de ratón\r\n\tconst handleMouseEnter = (position: number) => {\r\n\t\tif (readOnly) return;\r\n\t\tsetIsHovering(true);\r\n\t\tsetHoverValue(position);\r\n\t};\r\n\r\n\tconst handleMouseLeave = () => {\r\n\t\tif (readOnly) return;\r\n\t\tsetIsHovering(false);\r\n\t\tsetHoverValue(0);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`flex items-center space-x-1 ${className}`}\r\n\t\t\tonMouseLeave={handleMouseLeave}\r\n\t\t>\r\n\t\t\t{/* Generamos un array de longitud maxStars y lo iteramos */}\r\n\t\t\t{Array.from({length: maxStars}).map((_, index) => {\r\n\t\t\t\t// La posición de la estrella va de 1 a maxStars, no de 0 a maxStars-1\r\n\t\t\t\tconst starPosition = index + 1;\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Star\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tsize={starSize}\r\n\t\t\t\t\t\tclassName={`transition-colors cursor-${readOnly ? \"default\" : \"pointer\"} ${getStarClass(starPosition)}`}\r\n\t\t\t\t\t\tonClick={() => handleClick(starPosition)}\r\n\t\t\t\t\t\tonMouseEnter={() => handleMouseEnter(starPosition)}\r\n\t\t\t\t\t\taria-label={`${starPosition} de ${maxStars} estrellas`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\r\n\t\t\t{required && value === 0 && (\r\n\t\t\t\t<span className=\"text-red-500 text-xs ml-2\">* Requerido</span>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default StarRating;\r\n","import ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\n\r\n// Interfaces de respuestas\r\nexport interface RatingResponse {\r\n\tstatus: string;\r\n\tmessage: string;\r\n\tdata: {\r\n\t\tid: number;\r\n\t\trating: number;\r\n\t\ttitle?: string;\r\n\t\tcomment?: string;\r\n\t\tuser_id: number;\r\n\t\tproduct_id?: number;\r\n\t\tseller_id?: number;\r\n\t\torder_id: number;\r\n\t\tcreated_at: string;\r\n\t\tupdated_at: string;\r\n\t};\r\n}\r\n\r\nexport interface PendingRatingsResponse {\r\n\tstatus: string;\r\n\tdata: {\r\n\t\tproducts: PendingRatingItem[];\r\n\t\tsellers: PendingSellerItem[];\r\n\t};\r\n}\r\n\r\nexport interface PendingRatingItem {\r\n\tid: number;\r\n\tname: string;\r\n\timage?: string;\r\n\torder_id: number;\r\n\torder_number: string;\r\n\torder_date: string;\r\n\tseller_id?: number;\r\n\tproductId?: number;\r\n\tsellerId?: number;\r\n}\r\n\r\nexport interface PendingSellerItem {\r\n\tid?: number;\r\n\tseller_id: number;\r\n\torder_id: number;\r\n\tseller_order_id?: number;\r\n\torder_number: string;\r\n\tdate: string;\r\n\tname?: string;\r\n\timage?: string;\r\n\tis_rated: boolean;\r\n}\r\n\r\nexport interface SellerRatingsResponse {\r\n\tstatus: string;\r\n\tmessage?: string; // Añadimos la propiedad message como opcional\r\n\tdata: Rating[];\r\n\tmeta: {\r\n\t\ttotal: number;\r\n\t\tper_page: number;\r\n\t\tcurrent_page: number;\r\n\t\tlast_page: number;\r\n\t\taverage_rating: number;\r\n\t\trating_counts: {\r\n\t\t\t\"1\": number;\r\n\t\t\t\"2\": number;\r\n\t\t\t\"3\": number;\r\n\t\t\t\"4\": number;\r\n\t\t\t\"5\": number;\r\n\t\t};\r\n\t};\r\n}\r\n\r\nexport interface ProductRatingsResponse {\r\n\tstatus: string;\r\n\tdata: Rating[];\r\n\tmeta: {\r\n\t\ttotal: number;\r\n\t\tper_page: number;\r\n\t\tcurrent_page: number;\r\n\t\tlast_page: number;\r\n\t\taverage_rating: number;\r\n\t\trating_counts: {\r\n\t\t\t\"1\": number;\r\n\t\t\t\"2\": number;\r\n\t\t\t\"3\": number;\r\n\t\t\t\"4\": number;\r\n\t\t\t\"5\": number;\r\n\t\t};\r\n\t};\r\n}\r\n\r\nexport interface Rating {\r\n\tid?: number; // Hacemos el id opcional para que coincida con ExtendedRating\r\n\trating: number;\r\n\ttitle?: string;\r\n\tcomment?: string;\r\n\tuser_id: number;\r\n\tproduct_id?: number;\r\n\tseller_id?: number;\r\n\torder_id: number;\r\n\tstatus: \"pending\" | \"approved\" | \"rejected\";\r\n\tcreated_at: string;\r\n\tupdated_at: string;\r\n\tuser?: {\r\n\t\tid: number;\r\n\t\tname: string;\r\n\t\tavatar?: string;\r\n\t};\r\n\tseller_response?: {\r\n\t\tid: number;\r\n\t\ttext: string;\r\n\t\tcreated_at: string;\r\n\t};\r\n\tis_verified_purchase: boolean;\r\n}\r\n\r\n// Interfaces de solicitudes\r\nexport interface ProductRatingRequest {\r\n\tproduct_id: number;\r\n\torder_id: number;\r\n\trating: number;\r\n\ttitle?: string;\r\n\tcomment?: string;\r\n}\r\n\r\nexport interface SellerRatingRequest {\r\n\tseller_id: number;\r\n\torder_id: number;\r\n\trating: number;\r\n\ttitle?: string;\r\n\tcomment?: string;\r\n}\r\n\r\nexport interface ProblemReportRequest {\r\n\ttype: \"product\" | \"seller\";\r\n\tentity_id: number;\r\n\torder_id: number;\r\n\tproblem_type: string;\r\n\tdescription: string;\r\n}\r\n\r\nexport interface ReportResponse {\r\n\tstatus: string;\r\n\tmessage: string;\r\n\tdata: {\r\n\t\tid: number;\r\n\t\ttype: string;\r\n\t\tstatus: string;\r\n\t};\r\n}\r\n\r\nexport interface RatingReplyRequest {\r\n\trating_id: number;\r\n\treply_text: string;\r\n}\r\n\r\nexport interface RatingReplyResponse {\r\n\tstatus: string;\r\n\tmessage: string;\r\n\tdata: {\r\n\t\tid: number;\r\n\t\trating_id: number;\r\n\t\ttext: string;\r\n\t\tcreated_at: string;\r\n\t};\r\n}\r\n\r\nexport interface RatingReportRequest {\r\n\trating_id: number;\r\n\treason: string;\r\n}\r\n\r\nexport interface RatingReportResponse {\r\n\tstatus: string;\r\n\tmessage: string;\r\n}\r\n\r\n/**\r\n * Servicio para gestionar valoraciones de productos y vendedores\r\n */\r\nexport class RatingService {\r\n\t/**\r\n\t * Obtiene las valoraciones pendientes del usuario\r\n\t */\r\n\tasync getPendingRatings(): Promise<PendingRatingsResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<PendingRatingsResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.RATINGS.PENDING\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al obtener valoraciones pendientes:\", error);\r\n\t\t\t// Devuelve respuesta vacía en caso de error\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"error\",\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tproducts: [],\r\n\t\t\t\t\tsellers: [],\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Valora un producto\r\n\t */\r\n\tasync rateProduct(data: ProductRatingRequest): Promise<RatingResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.post<RatingResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.RATINGS.RATE_PRODUCT,\r\n\t\t\t\tdata\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al valorar producto:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Valora un vendedor\r\n\t */\r\n\tasync rateSeller(data: SellerRatingRequest): Promise<RatingResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.post<RatingResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.RATINGS.RATE_SELLER,\r\n\t\t\t\tdata\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al valorar vendedor:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene las valoraciones de un producto\r\n\t */\r\n\tasync getProductRatings(\r\n\t\tproductId: number,\r\n\t\tpage: number = 1,\r\n\t\tperPage: number = 10\r\n\t): Promise<ProductRatingsResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<ProductRatingsResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.RATINGS.PRODUCT(productId),\r\n\t\t\t\t{page, per_page: perPage}\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`Error al obtener valoraciones del producto ${productId}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene las valoraciones de un vendedor\r\n\t */\r\n\tasync getSellerRatings(\r\n\t\tsellerId: number,\r\n\t\tpage: number = 1,\r\n\t\tperPage: number = 10\r\n\t): Promise<SellerRatingsResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<SellerRatingsResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.RATINGS.SELLER(sellerId),\r\n\t\t\t\t{page, per_page: perPage}\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`Error al obtener valoraciones del vendedor ${sellerId}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reporta un problema con un producto/vendedor\r\n\t */\r\n\tasync reportProblem(data: ProblemReportRequest): Promise<ReportResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.post<ReportResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.RATINGS.REPORT_PROBLEM,\r\n\t\t\t\tdata\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al reportar problema:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Responde a una valoración (para vendedores)\r\n\t */\r\n\tasync replyToRating(data: RatingReplyRequest): Promise<RatingReplyResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.post<RatingReplyResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.RATINGS.REPLY,\r\n\t\t\t\tdata\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al responder a valoración:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reporta una valoración inapropiada (para vendedores)\r\n\t */\r\n\tasync reportRating(data: RatingReportRequest): Promise<RatingReportResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.post<RatingReportResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.RATINGS.REPORT,\r\n\t\t\t\tdata\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al reportar valoración:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene las valoraciones recibidas del vendedor actual\r\n\t */\r\n\tasync getMyReceivedRatings(\r\n\t\tpage: number = 1,\r\n\t\tperPage: number = 10,\r\n\t\tstatus?: string\r\n\t): Promise<SellerRatingsResponse> {\r\n\t\ttry {\r\n\t\t\tconst params: Record<string, any> = {\r\n\t\t\t\tpage,\r\n\t\t\t\tper_page: perPage,\r\n\t\t\t\ttype: \"user_to_seller\",\r\n\t\t\t};\r\n\r\n\t\t\tif (status && status !== \"all\") {\r\n\t\t\t\tparams.status = status;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"Solicitando valoraciones recibidas con parámetros:\", params);\r\n\t\t\tconst response = await ApiClient.get<any>(\r\n\t\t\t\tAPI_ENDPOINTS.RATINGS.MY_RECEIVED,\r\n\t\t\t\tparams\r\n\t\t\t);\r\n\t\t\tconsole.log(\"Respuesta original de valoraciones recibidas:\", response);\r\n\r\n\t\t\t// Crear respuesta predeterminada\r\n\t\t\tconst defaultResponse: SellerRatingsResponse = {\r\n\t\t\t\tstatus: \"success\",\r\n\t\t\t\tdata: [],\r\n\t\t\t\tmeta: {\r\n\t\t\t\t\ttotal: 0,\r\n\t\t\t\t\tper_page: perPage,\r\n\t\t\t\t\tcurrent_page: page,\r\n\t\t\t\t\tlast_page: 1,\r\n\t\t\t\t\taverage_rating: 0,\r\n\t\t\t\t\trating_counts: {\r\n\t\t\t\t\t\t\"1\": 0,\r\n\t\t\t\t\t\t\"2\": 0,\r\n\t\t\t\t\t\t\"3\": 0,\r\n\t\t\t\t\t\t\"4\": 0,\r\n\t\t\t\t\t\t\"5\": 0,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\t// Manejar diferentes estructuras de respuesta posibles\r\n\t\t\tif (!response) {\r\n\t\t\t\treturn defaultResponse;\r\n\t\t\t}\r\n\r\n\t\t\t// Caso 1: Estructura response.data.data (anidada)\r\n\t\t\tif (response.data && response.data.data) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstatus: \"success\",\r\n\t\t\t\t\tdata: response.data.data,\r\n\t\t\t\t\tmeta: response.data.meta || defaultResponse.meta,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// Caso 2: Estructura response.data (array)\r\n\t\t\tif (response.data && Array.isArray(response.data)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstatus: \"success\",\r\n\t\t\t\t\tdata: response.data,\r\n\t\t\t\t\tmeta: response.meta || defaultResponse.meta,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// Caso 3: Estructura response (object con properties data y meta)\r\n\t\t\tif (response.data && !Array.isArray(response.data)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstatus: \"success\",\r\n\t\t\t\t\tdata: response.data,\r\n\t\t\t\t\tmeta: response.meta || defaultResponse.meta,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// Si ninguno de los casos anteriores coincide, devolver la respuesta predeterminada\r\n\t\t\treturn defaultResponse;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al obtener valoraciones recibidas:\", error);\r\n\t\t\t// Devolver una respuesta con estructura válida en caso de error\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"error\",\r\n\t\t\t\tmessage: error instanceof Error ? error.message : \"Error desconocido\",\r\n\t\t\t\tdata: [],\r\n\t\t\t\tmeta: {\r\n\t\t\t\t\ttotal: 0,\r\n\t\t\t\t\tper_page: perPage,\r\n\t\t\t\t\tcurrent_page: page,\r\n\t\t\t\t\tlast_page: 1,\r\n\t\t\t\t\taverage_rating: 0,\r\n\t\t\t\t\trating_counts: {\r\n\t\t\t\t\t\t\"1\": 0,\r\n\t\t\t\t\t\t\"2\": 0,\r\n\t\t\t\t\t\t\"3\": 0,\r\n\t\t\t\t\t\t\"4\": 0,\r\n\t\t\t\t\t\t\"5\": 0,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene las valoraciones dadas por el usuario actual\r\n\t */\r\n\tasync getMyGivenRatings(\r\n\t\tpage: number = 1,\r\n\t\tperPage: number = 10,\r\n\t\ttype?: \"product\" | \"seller\"\r\n\t): Promise<ProductRatingsResponse> {\r\n\t\ttry {\r\n\t\t\tconst params: Record<string, any> = {\r\n\t\t\t\tpage,\r\n\t\t\t\tper_page: perPage,\r\n\t\t\t};\r\n\r\n\t\t\tif (type) {\r\n\t\t\t\tparams.type = type;\r\n\t\t\t}\r\n\r\n\t\t\tconst response = await ApiClient.get<ProductRatingsResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.RATINGS.MY_GIVEN,\r\n\t\t\t\tparams\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al obtener valoraciones dadas:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default RatingService;\r\n"],"names":["StarRating","value","onChange","size","readOnly","required","maxStars","className","hoverValue","setHoverValue","useState","isHovering","setIsHovering","starSize","getStarClass","starPosition","handleClick","newValue","handleMouseEnter","position","handleMouseLeave","jsxs","_","index","jsx","Star","RatingService","ApiClient","API_ENDPOINTS","error","data","productId","page","perPage","sellerId","status","params","response","defaultResponse","type"],"mappings":"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"}