import{r as t}from"./react-vendor-Cy458wKG.js";import{P as c}from"./index-DKar4B-a.js";const I=(P={})=>{const{enabled:a=!0,delay:d=1e3,onPrefetchStart:f,onPrefetchComplete:p,onPrefetchError:h}=P,n=t.useRef(!1),s=t.useRef(null),i=t.useCallback(()=>!a||n.current?!1:sessionStorage.getItem("autoprefetch_executed")!=="true",[a]),g=t.useCallback(()=>{n.current=!0,sessionStorage.setItem("autoprefetch_executed","true")},[]),u=t.useCallback(async()=>{if(i())try{f?.();const o=[{name:"categories",execute:()=>c.prefetchCategories(),priority:1,condition:()=>!0},{name:"featured_products",execute:()=>c.prefetchFeaturedProducts(8),priority:1,condition:()=>!0},{name:"category_1_products",execute:()=>c.prefetchCategoryProducts(1,6),priority:2,condition:()=>!0},{name:"category_2_products",execute:()=>c.prefetchCategoryProducts(2,6),priority:2,condition:()=>!0},{name:"category_3_products",execute:()=>c.prefetchCategoryProducts(3,4),priority:3,condition:()=>Math.random()>.3}].filter(e=>!e.condition||e.condition()).sort((e,_)=>e.priority-_.priority);console.log("🚀 Iniciando prefetch automático con",o.length,"tareas");const l=o.filter(e=>e.priority===1);await Promise.allSettled(l.map(e=>(console.log(`⚡ Ejecutando tarea de alta prioridad: ${e.name}`),e.execute())));const m=o.filter(e=>e.priority===2);m.length>0&&setTimeout(async()=>{await Promise.allSettled(m.map(e=>(console.log(`📦 Ejecutando tarea de prioridad media: ${e.name}`),e.execute())))},500);const y=o.filter(e=>e.priority===3);y.length>0&&setTimeout(async()=>{await Promise.allSettled(y.map(e=>(console.log(`🐌 Ejecutando tarea de prioridad baja: ${e.name}`),e.execute())))},2e3),g(),p?.(),console.log("✅ Prefetch automático completado")}catch(r){console.error("❌ Error en prefetch automático:",r),h?.(r instanceof Error?r:new Error("Unknown prefetch error"))}},[i,f,p,h,g]),x=t.useCallback(async r=>{try{console.log(`🔗 Prefetching productos relacionados para producto ${r}`);const o=[1,2,3],l=o[Math.floor(Math.random()*o.length)];await c.prefetchCategoryProducts(l,4)}catch(o){console.error("Error prefetching related products:",o)}},[]),C=t.useCallback(async()=>{try{console.log("🛒 Prefetching datos para página de carrito"),await c.prefetchFeaturedProducts(4),await c.prefetchCategories()}catch(r){console.error("Error prefetching cart page data:",r)}},[]),E=t.useCallback(async()=>{try{console.log("❤️ Prefetching datos para página de favoritos"),await c.prefetchFeaturedProducts(6)}catch(r){console.error("Error prefetching favorites page data:",r)}},[]);t.useEffect(()=>()=>{s.current&&(clearTimeout(s.current),s.current=null)},[]),t.useEffect(()=>(a&&i()&&(s.current=setTimeout(()=>{u()},d)),()=>{s.current&&(clearTimeout(s.current),s.current=null)}),[a,i,u,d]);const k=t.useCallback(async()=>{n.current=!1,sessionStorage.removeItem("autoprefetch_executed"),await u()},[u]),b=t.useCallback(()=>{n.current=!1,sessionStorage.removeItem("autoprefetch_executed")},[]),S=t.useCallback(()=>({executed:n.current,sessionFlag:sessionStorage.getItem("autoprefetch_executed")==="true",enabled:a}),[a]);return{isEnabled:a,isPrefetchExecuted:n.current,prefetchRelatedProducts:x,prefetchCartPageData:C,prefetchFavoritesPageData:E,forcePrefetch:k,resetPrefetchState:b,getPrefetchStats:S}};export{I as u};
//# sourceMappingURL=useAutoPrefetch-iyIJIaS2.js.map
