import{c as i,A as n}from"./admin-chunk-BNcFjXlJ.js";class p{async getShippingsList(e={}){try{console.log("ShippingServiceAdapter: Obteniendo envíos del vendedor",e);const t=await i.get("/shipping",e);if(console.log("ShippingServiceAdapter: Respuesta de envíos:",t),!t)throw new Error("Respuesta vacía del servidor");let r=[],a={currentPage:1,totalPages:1,totalItems:0,itemsPerPage:10};t.success&&t.data?(r=Array.isArray(t.data)?t.data:[],a=t.pagination||a):t.data&&Array.isArray(t.data)?(r=t.data,a=t.meta||t.pagination||a):Array.isArray(t)&&(r=t);const s=r.map(o=>this.mapShippingToItem(o));return{items:s,pagination:{currentPage:Number(a.currentPage)||Number(a.current_page)||1,totalPages:Number(a.totalPages)||Number(a.last_page)||1,totalItems:Number(a.totalItems)||Number(a.total)||s.length,itemsPerPage:Number(a.itemsPerPage)||Number(a.per_page)||10}}}catch(t){return console.error("ShippingServiceAdapter: Error al obtener envíos:",t),console.log("Intentando con endpoint de orders como fallback..."),this.getShippingsListFromOrders(e)}}mapShippingToItem(e){return console.log("Mapeando datos de shipping:",e),{id:String(e.id||0),orderId:String(e.orderId||0),orderNumber:e.order_number||e.order?.order_number||`#${e.order_id||0}`,date:e.created_at||new Date().toISOString(),customer:{id:e.user_id||e.order?.user_id||0,name:e.user_name||e.order?.user?.name||"Cliente",email:e.order?.user?.email||"sin@email.com",phone:e.order?.user?.phone},status:this.mapStatusFromAPI(e.status||"pending"),trackingNumber:e.tracking_number||void 0,carrier:e.carrier_name||void 0,estimatedDelivery:e.estimated_delivery||void 0,lastUpdate:e.updated_at||e.last_updated||new Date().toISOString(),shippingAddress:e.shipping_address||this.extractShippingAddress(e),shippingMethod:"Estándar",weight:e.weight||void 0,shippingCost:void 0}}async getShippingsListFromOrders(e={}){try{const t=await i.get(n.ORDERS.SELLER_ORDERS,e);if(console.log("ShippingServiceAdapter: Respuesta de órdenes (fallback):",t),!t)throw new Error("Respuesta vacía del servidor");let r=[],a={currentPage:1,totalPages:1,totalItems:0,itemsPerPage:10};t.success&&t.data?(r=Array.isArray(t.data)?t.data:[],a=t.pagination||a):t.data&&Array.isArray(t.data)?(r=t.data,a=t.meta||t.pagination||a):Array.isArray(t)&&(r=t);const s=r.map(o=>this.mapOrderToShippingItem(o));return{items:s,pagination:{currentPage:Number(a.currentPage)||Number(a.current_page)||1,totalPages:Number(a.totalPages)||Number(a.last_page)||1,totalItems:Number(a.totalItems)||Number(a.total)||s.length,itemsPerPage:Number(a.itemsPerPage)||Number(a.per_page)||10}}}catch(t){return console.error("ShippingServiceAdapter: Error en fallback:",t),{items:[],pagination:{currentPage:1,totalPages:1,totalItems:0,itemsPerPage:10}}}}extractShippingAddress(e){if(e.shipping_address)return e.shipping_address;if(e.order?.shipping_data){const t=typeof e.order.shipping_data=="string"?JSON.parse(e.order.shipping_data):e.order.shipping_data;return[t.address,t.city,t.state,t.country].filter(Boolean).join(", ")}return"Dirección no disponible"}async getShippingDetails(e){try{console.log(`ShippingServiceAdapter: Obteniendo detalles del envío ${e}`);const t=await i.get(`/shipping/${e}`);if(console.log("ShippingServiceAdapter: Respuesta de detalles:",t),!t)throw new Error("No se encontraron detalles del envío");let r;if(t.success&&t.data||t.data?r=t.data:r=t,!r)throw new Error("Datos de envío vacíos");return this.mapShippingToItem(r)}catch(t){return console.error(`ShippingServiceAdapter: Error al obtener detalles del envío ${e}:`,t),null}}async updateShippingStatus(e,t){try{console.log(`ShippingServiceAdapter: Actualizando estado del envío ${e} a ${t}`);const r=await i.patch(`/shipping/${e}/status`,{status:t});return console.log("ShippingServiceAdapter: Respuesta de actualización:",r),r&&(r.status==="success"||r.success===!0||r.message?.includes("success"))}catch(r){return console.error("ShippingServiceAdapter: Error al actualizar estado:",r),!1}}async markAsShipped(e,t){try{console.log(`ShippingServiceAdapter: Marcando orden ${e} como enviada`,t);const r=await i.patch(n.ORDERS.UPDATE_SHIPPING(Number(e)),t);return console.log("ShippingServiceAdapter: Respuesta al marcar como enviado:",r),r&&r.success===!0}catch(r){return console.error(`ShippingServiceAdapter: Error al marcar orden ${e} como enviada:`,r),!1}}async getShippingHistory(e){try{console.log(`ShippingServiceAdapter: Obteniendo historial para ${e}`);const t=await i.get(`/shipping/${e}/history`);return console.log("ShippingServiceAdapter: Respuesta de historial:",t),!t||!t.data||!t.data.history?[]:Array.isArray(t.data.history)?t.data.history.map(r=>({date:r.timestamp||r.date||new Date().toISOString(),status:r.status||"unknown",description:r.description||r.details||`Estado: ${r.status}`,location:r.location?.address||r.location||void 0})):[]}catch(t){return console.error(`ShippingServiceAdapter: Error al obtener historial para ${e}:`,t),[]}}async getShippingRoute(e){try{console.log(`ShippingServiceAdapter: Obteniendo ruta para ${e}`);const t=await i.get(`/shipping/${e}/route`);return console.log("ShippingServiceAdapter: Respuesta de ruta:",t),!t||!t.data||!t.data.route_points?[]:Array.isArray(t.data.route_points)?t.data.route_points.map(r=>({date:r.timestamp||r.date||new Date().toISOString(),location:r.address||r.location||"Ubicación desconocida",status:r.status||"unknown"})):[]}catch(t){return console.error(`ShippingServiceAdapter: Error al obtener ruta para ${e}:`,t),[]}}mapOrderToShippingItem(e){if(!e)return this.getDefaultShippingItem();console.log("Mapeando orden a shipping item:",e);const t=e.user||e.customer||{};let r="";if(e.shipping_data)if(typeof e.shipping_data=="string")try{const s=JSON.parse(e.shipping_data);r=[s.address,s.city,s.state,s.country].filter(Boolean).join(", ")}catch{r=e.shipping_data}else typeof e.shipping_data=="object"&&(r=[e.shipping_data.address,e.shipping_data.city,e.shipping_data.state,e.shipping_data.country].filter(Boolean).join(", "));let a="pending";switch(e.status){case"shipped":a="shipped";break;case"delivered":a="delivered";break;case"processing":a="ready_to_ship";break;case"in_transit":a="in_transit";break;case"failed":a="failed";break;case"returned":a="returned";break;case"cancelled":a="failed";break;case"completed":a="delivered";break;default:a="pending"}return e.shipping_status&&(a=this.mapStatusFromAPI(e.shipping_status)),{id:String(e.id||0),orderId:String(e.id||0),orderNumber:e.order_number||e.orderNumber||`#${e.id||0}`,date:e.created_at||e.date||new Date().toISOString(),customer:{id:t.id||0,name:t.name||"Cliente",email:t.email||"sin@email.com",phone:t.phone||e.phone},status:a,trackingNumber:e.tracking_number||void 0,carrier:e.shipping_company||e.carrier||void 0,estimatedDelivery:e.estimated_delivery||void 0,lastUpdate:e.updated_at||new Date().toISOString(),shippingAddress:r||"Dirección no disponible",shippingMethod:"Estándar",weight:void 0,shippingCost:void 0}}mapStatusFromAPI(e){if(!e)return"pending";switch(e.toLowerCase()){case"pending":return"pending";case"processing":case"ready_for_pickup":case"ready_to_ship":return"ready_to_ship";case"picked_up":case"shipped":return"shipped";case"in_transit":case"out_for_delivery":return"in_transit";case"delivered":case"completed":return"delivered";case"exception":case"failed":case"cancelled":return"failed";case"returned":return"returned";default:return"pending"}}getDefaultShippingItem(){return{id:"0",orderId:"0",orderNumber:"#0",date:new Date().toISOString(),customer:{id:0,name:"Cliente",email:"sin@email.com"},status:"pending"}}}export{p as S};
//# sourceMappingURL=ShippingServiceAdapter-DTCClCfv.js.map
