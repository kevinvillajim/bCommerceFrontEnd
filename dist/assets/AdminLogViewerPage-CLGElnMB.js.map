{"version":3,"file":"AdminLogViewerPage-CLGElnMB.js","sources":["../../src/core/domain/entities/AdminLog.ts","../../src/infrastructure/services/AdminLogService.ts","../../src/presentation/pages/admin/AdminLogViewerPage.tsx"],"sourcesContent":["export interface AdminLogUser {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nexport interface AdminLogContext {\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface AdminLog {\r\n  id: number;\r\n  level: 'error' | 'critical' | 'warning' | 'info';\r\n  event_type: string;\r\n  message: string;\r\n  context?: AdminLogContext;\r\n  method?: string;\r\n  url?: string;\r\n  ip_address?: string;\r\n  user_agent?: string;\r\n  user_id?: number;\r\n  status_code?: number;\r\n  error_hash: string;\r\n  created_at: string;\r\n  time_ago: string;\r\n  is_critical: boolean;\r\n  is_error: boolean;\r\n  user?: AdminLogUser;\r\n}\r\n\r\nexport interface AdminLogFilters {\r\n  page?: number;\r\n  per_page?: number;\r\n  level?: AdminLog['level'];\r\n  event_type?: string;\r\n  user_id?: number;\r\n  status_code?: number;\r\n  from_date?: string;\r\n  to_date?: string;\r\n  search?: string;\r\n}\r\n\r\nexport interface AdminLogStats {\r\n  total: number;\r\n  critical: number;\r\n  errors: number;\r\n  warnings: number;\r\n  info: number;\r\n  today: number;\r\n  this_week: number;\r\n  this_month: number;\r\n}\r\n\r\nexport interface AdminLogResponse {\r\n  data: AdminLog[];\r\n  meta: {\r\n    total: number;\r\n    per_page: number;\r\n    current_page: number;\r\n    last_page: number;\r\n    from: number;\r\n    to: number;\r\n  };\r\n}\r\n\r\nexport interface AdminLogSingleResponse {\r\n  data: AdminLog;\r\n}\r\n\r\nexport interface AdminLogStatsResponse {\r\n  data: AdminLogStats;\r\n}\r\n\r\nexport interface AdminLogEventTypesResponse {\r\n  data: string[];\r\n}\r\n\r\nexport interface AdminLogUsersResponse {\r\n  data: AdminLogUser[];\r\n}\r\n\r\nexport interface AdminLogCleanupRequest {\r\n  days?: number;\r\n  batch_size?: number;\r\n}\r\n\r\nexport interface AdminLogCleanupResponse {\r\n  message: string;\r\n  data: {\r\n    deleted_count: number;\r\n    days: number;\r\n    batch_size: number;\r\n  };\r\n}\r\n\r\nexport class AdminLogEntity {\r\n  public readonly id: number;\r\n  public readonly level: AdminLog['level'];\r\n  public readonly eventType: string;\r\n  public readonly message: string;\r\n  public readonly context: AdminLogContext | undefined;\r\n  public readonly method: string | undefined;\r\n  public readonly url: string | undefined;\r\n  public readonly ipAddress: string | undefined;\r\n  public readonly userAgent: string | undefined;\r\n  public readonly userId: number | undefined;\r\n  public readonly statusCode: number | undefined;\r\n  public readonly errorHash: string;\r\n  public readonly createdAt: string;\r\n  public readonly timeAgo: string;\r\n  public readonly isCritical: boolean;\r\n  public readonly isError: boolean;\r\n  public readonly user: AdminLogUser | undefined;\r\n\r\n  constructor(data: AdminLog) {\r\n    this.id = data.id;\r\n    this.level = data.level;\r\n    this.eventType = data.event_type;\r\n    this.message = data.message;\r\n    this.context = data.context;\r\n    this.method = data.method;\r\n    this.url = data.url;\r\n    this.ipAddress = data.ip_address;\r\n    this.userAgent = data.user_agent;\r\n    this.userId = data.user_id;\r\n    this.statusCode = data.status_code;\r\n    this.errorHash = data.error_hash;\r\n    this.createdAt = data.created_at;\r\n    this.timeAgo = data.time_ago;\r\n    this.isCritical = data.is_critical;\r\n    this.isError = data.is_error;\r\n    this.user = data.user;\r\n  }\r\n\r\n  /**\r\n   * Get formatted date\r\n   */\r\n  getFormattedDate(): string {\r\n    return new Date(this.createdAt).toLocaleString();\r\n  }\r\n\r\n  /**\r\n   * Get level badge color\r\n   */\r\n  getLevelColor(): string {\r\n    switch (this.level) {\r\n      case 'critical':\r\n        return 'bg-red-100 text-red-800';\r\n      case 'error':\r\n        return 'bg-orange-100 text-orange-800';\r\n      case 'warning':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'info':\r\n        return 'bg-blue-100 text-blue-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get level icon\r\n   */\r\n  getLevelIcon(): string {\r\n    switch (this.level) {\r\n      case 'critical':\r\n        return '🔥';\r\n      case 'error':\r\n        return '❌';\r\n      case 'warning':\r\n        return '⚠️';\r\n      case 'info':\r\n        return 'ℹ️';\r\n      default:\r\n        return '📝';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get shortened message\r\n   */\r\n  getShortMessage(maxLength: number = 100): string {\r\n    return this.message.length > maxLength \r\n      ? `${this.message.substring(0, maxLength)}...`\r\n      : this.message;\r\n  }\r\n\r\n  /**\r\n   * Get event type display name\r\n   */\r\n  getEventTypeDisplayName(): string {\r\n    return this.eventType\r\n      .split('_')\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(' ');\r\n  }\r\n\r\n  /**\r\n   * Check if log has context data\r\n   */\r\n  hasContext(): boolean {\r\n    return this.context !== undefined && Object.keys(this.context).length > 0;\r\n  }\r\n\r\n  /**\r\n   * Get user display name\r\n   */\r\n  getUserDisplayName(): string {\r\n    if (!this.user) return 'Anonymous';\r\n    return this.user.name || this.user.email || `User #${this.user.id}`;\r\n  }\r\n\r\n  /**\r\n   * Convert to plain object\r\n   */\r\n  toJSON(): AdminLog {\r\n    return {\r\n      id: this.id,\r\n      level: this.level,\r\n      event_type: this.eventType,\r\n      message: this.message,\r\n      context: this.context,\r\n      method: this.method,\r\n      url: this.url,\r\n      ip_address: this.ipAddress,\r\n      user_agent: this.userAgent,\r\n      user_id: this.userId,\r\n      status_code: this.statusCode,\r\n      error_hash: this.errorHash,\r\n      created_at: this.createdAt,\r\n      time_ago: this.timeAgo,\r\n      is_critical: this.isCritical,\r\n      is_error: this.isError,\r\n      user: this.user,\r\n    };\r\n  }\r\n}","import { ApiClient } from '../api/apiClient';\r\nimport appConfig from '../../config/appConfig';\r\nimport {\r\n  AdminLogEntity,\r\n} from '../../core/domain/entities/AdminLog';\r\nimport type {\r\n  AdminLog,\r\n  AdminLogFilters,\r\n  AdminLogResponse,\r\n  AdminLogSingleResponse,\r\n  AdminLogStatsResponse,\r\n  AdminLogEventTypesResponse,\r\n  AdminLogUsersResponse,\r\n  AdminLogCleanupRequest,\r\n  AdminLogCleanupResponse,\r\n} from '../../core/domain/entities/AdminLog';\r\n\r\nexport class AdminLogService {\r\n  private readonly baseUrl = '/admin/logs';\r\n\r\n  /**\r\n   * Get paginated logs with filters\r\n   */\r\n  async getLogs(filters: AdminLogFilters = {}): Promise<{\r\n    logs: AdminLogEntity[];\r\n    total: number;\r\n    currentPage: number;\r\n    lastPage: number;\r\n    perPage: number;\r\n  }> {\r\n    const params = new URLSearchParams();\r\n\r\n    // Add filters as query parameters\r\n    Object.entries(filters).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null && value !== '') {\r\n        params.append(key, String(value));\r\n      }\r\n    });\r\n\r\n    const response = await ApiClient.get<AdminLogResponse>(\r\n      `${this.baseUrl}?${params.toString()}`\r\n    );\r\n\r\n    const logs = response.data.map((logData) => new AdminLogEntity(logData));\r\n\r\n    return {\r\n      logs,\r\n      total: response.meta.total,\r\n      currentPage: response.meta.current_page,\r\n      lastPage: response.meta.last_page,\r\n      perPage: response.meta.per_page,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get specific log by ID\r\n   */\r\n  async getLog(id: number): Promise<AdminLogEntity> {\r\n    const response = await ApiClient.get<AdminLogSingleResponse>(`${this.baseUrl}/${id}`);\r\n    return new AdminLogEntity(response.data);\r\n  }\r\n\r\n  /**\r\n   * Get logs statistics\r\n   */\r\n  async getStats(): Promise<AdminLogStatsResponse['data']> {\r\n    const response = await ApiClient.get<AdminLogStatsResponse>(`${this.baseUrl}/stats`);\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * Get recent logs\r\n   */\r\n  async getRecentLogs(limit: number = 50): Promise<AdminLogEntity[]> {\r\n    const params = new URLSearchParams();\r\n    if (limit) params.append('limit', String(limit));\r\n\r\n    const response = await ApiClient.get<{ data: AdminLog[] }>(\r\n      `${this.baseUrl}/recent?${params.toString()}`\r\n    );\r\n\r\n    return response.data.map((logData) => new AdminLogEntity(logData));\r\n  }\r\n\r\n  /**\r\n   * Get critical logs from last X hours\r\n   */\r\n  async getCriticalLogs(hours: number = 24): Promise<{\r\n    logs: AdminLogEntity[];\r\n    hours: number;\r\n    count: number;\r\n  }> {\r\n    const params = new URLSearchParams();\r\n    if (hours) params.append('hours', String(hours));\r\n\r\n    const response = await ApiClient.get<{\r\n      data: AdminLog[];\r\n      meta: { hours: number; count: number };\r\n    }>(`${this.baseUrl}/critical?${params.toString()}`);\r\n\r\n    const logs = response.data.map((logData) => new AdminLogEntity(logData));\r\n\r\n    return {\r\n      logs,\r\n      hours: response.meta.hours,\r\n      count: response.meta.count,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get logs by event type\r\n   */\r\n  async getLogsByEventType(eventType: string, limit: number = 10): Promise<{\r\n    logs: AdminLogEntity[];\r\n    eventType: string;\r\n    count: number;\r\n  }> {\r\n    const params = new URLSearchParams();\r\n    params.append('event_type', eventType);\r\n    if (limit) params.append('limit', String(limit));\r\n\r\n    const response = await ApiClient.get<{\r\n      data: AdminLog[];\r\n      meta: { event_type: string; count: number };\r\n    }>(`${this.baseUrl}/by-event-type?${params.toString()}`);\r\n\r\n    const logs = response.data.map((logData) => new AdminLogEntity(logData));\r\n\r\n    return {\r\n      logs,\r\n      eventType: response.meta.event_type,\r\n      count: response.meta.count,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get available event types\r\n   */\r\n  async getEventTypes(): Promise<string[]> {\r\n    const response = await ApiClient.get<AdminLogEventTypesResponse>(`${this.baseUrl}/event-types`);\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * Get users that have generated logs\r\n   */\r\n  async getLogUsers(): Promise<AdminLogUsersResponse['data']> {\r\n    const response = await ApiClient.get<AdminLogUsersResponse>(`${this.baseUrl}/users`);\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * Delete specific log\r\n   */\r\n  async deleteLog(id: number): Promise<void> {\r\n    await ApiClient.delete(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  /**\r\n   * Execute manual cleanup of old logs\r\n   */\r\n  async cleanupLogs(request: AdminLogCleanupRequest = {}): Promise<AdminLogCleanupResponse['data']> {\r\n    const response = await ApiClient.post<AdminLogCleanupResponse>(\r\n      `${this.baseUrl}/cleanup`,\r\n      request\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * Get logs with multiple filters for dashboard\r\n   */\r\n  async getDashboardData(): Promise<{\r\n    recentLogs: AdminLogEntity[];\r\n    criticalLogs: AdminLogEntity[];\r\n    stats: AdminLogStatsResponse['data'];\r\n    eventTypes: string[];\r\n  }> {\r\n    try {\r\n      const [recentLogs, criticalLogs, stats, eventTypes] = await Promise.all([\r\n        this.getRecentLogs(10),\r\n        this.getCriticalLogs(24),\r\n        this.getStats(),\r\n        this.getEventTypes(),\r\n      ]);\r\n\r\n      return {\r\n        recentLogs,\r\n        criticalLogs: criticalLogs.logs,\r\n        stats,\r\n        eventTypes,\r\n      };\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Search logs with text query\r\n   */\r\n  async searchLogs(\r\n    searchTerm: string,\r\n    filters: Omit<AdminLogFilters, 'search'> = {}\r\n  ): Promise<{\r\n    logs: AdminLogEntity[];\r\n    total: number;\r\n    currentPage: number;\r\n    lastPage: number;\r\n    perPage: number;\r\n  }> {\r\n    return this.getLogs({\r\n      ...filters,\r\n      search: searchTerm,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Export logs data (returns download URL or blob)\r\n   */\r\n  async exportLogs(filters: AdminLogFilters = {}): Promise<Blob> {\r\n    const params = new URLSearchParams();\r\n    \r\n    Object.entries(filters).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null && value !== '') {\r\n        params.append(key, String(value));\r\n      }\r\n    });\r\n\r\n    // Use app configuration for API base URL and token key\r\n    const response = await fetch(`${appConfig.api.baseUrl}${this.baseUrl}/export?${params.toString()}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem(appConfig.storage.authTokenKey)}`,\r\n        'Accept': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to export logs');\r\n    }\r\n\r\n    return response.blob();\r\n  }\r\n\r\n  /**\r\n   * Format filters for display\r\n   */\r\n  formatFiltersForDisplay(filters: AdminLogFilters): Record<string, string> {\r\n    const formatted: Record<string, string> = {};\r\n\r\n    if (filters.level) formatted['Level'] = filters.level.toUpperCase();\r\n    if (filters.event_type) formatted['Event Type'] = filters.event_type.replace('_', ' ');\r\n    if (filters.user_id) formatted['User ID'] = String(filters.user_id);\r\n    if (filters.status_code) formatted['Status Code'] = String(filters.status_code);\r\n    if (filters.from_date) formatted['From'] = new Date(filters.from_date).toLocaleDateString();\r\n    if (filters.to_date) formatted['To'] = new Date(filters.to_date).toLocaleDateString();\r\n    if (filters.search) formatted['Search'] = filters.search;\r\n\r\n    return formatted;\r\n  }\r\n\r\n  /**\r\n   * Validate filters before sending request\r\n   */\r\n  validateFilters(filters: AdminLogFilters): string[] {\r\n    const errors: string[] = [];\r\n\r\n    if (filters.per_page && (filters.per_page < 5 || filters.per_page > 100)) {\r\n      errors.push('Per page must be between 5 and 100');\r\n    }\r\n\r\n    if (filters.from_date && filters.to_date) {\r\n      const fromDate = new Date(filters.from_date);\r\n      const toDate = new Date(filters.to_date);\r\n      if (fromDate > toDate) {\r\n        errors.push('From date must be before to date');\r\n      }\r\n    }\r\n\r\n    if (filters.search && filters.search.length > 255) {\r\n      errors.push('Search term is too long (max 255 characters)');\r\n    }\r\n\r\n    return errors;\r\n  }\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n  Download,\r\n  RefreshCw,\r\n  Eye,\r\n  Clock,\r\n  Server,\r\n  User,\r\n  Info,\r\n  XCircle,\r\n  AlertTriangle,\r\n  Filter,\r\n  Trash2,\r\n  Trash,\r\n} from \"lucide-react\";\r\nimport Table from \"../../components/dashboard/Table\";\r\nimport StatCardList from \"../../components/dashboard/StatCardList\";\r\nimport { AdminLogService } from \"../../../infrastructure/services/AdminLogService\";\r\nimport { AdminLogEntity } from \"../../../core/domain/entities/AdminLog\";\r\nimport type { AdminLogFilters } from \"../../../core/domain/entities/AdminLog\";\r\n\r\nconst adminLogService = new AdminLogService();\r\n\r\n// Página de Visualización de Registros de Errores\r\nconst AdminLogViewerPage: React.FC = () => {\r\n\t// Estados\r\n\tconst [logs, setLogs] = useState<AdminLogEntity[]>([]);\r\n\tconst [loading, setLoading] = useState<boolean>(true);\r\n\tconst [currentPage, setCurrentPage] = useState<number>(1);\r\n\tconst [selectedLog, setSelectedLog] = useState<AdminLogEntity | null>(null);\r\n\tconst [stats, setStats] = useState<any>(null);\r\n\tconst [totalPages, setTotalPages] = useState<number>(1);\r\n\tconst [totalItems, setTotalItems] = useState<number>(0);\r\n\tconst [eventTypes, setEventTypes] = useState<string[]>([]);\r\n\tconst [logUsers, setLogUsers] = useState<any[]>([]);\r\n\t\r\n\t// Filtros\r\n\tconst [filters, setFilters] = useState<AdminLogFilters>({\r\n\t\tpage: 1,\r\n\t\tper_page: 20,\r\n\t\tlevel: undefined,\r\n\t\tevent_type: undefined,\r\n\t\tuser_id: undefined,\r\n\t\tstatus_code: undefined,\r\n\t\tfrom_date: undefined,\r\n\t\tto_date: undefined,\r\n\t\tsearch: undefined,\r\n\t});\r\n\r\n\t// Opciones para filtros\r\n\tconst levels = [\"error\", \"critical\", \"warning\", \"info\"];\r\n\tconst statusCodes = [401, 403, 404, 429, 500, 502, 503, 504];\r\n\r\n\t// Columnas para la tabla\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tkey: \"id\",\r\n\t\t\theader: \"ID\",\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"createdAt\",\r\n\t\t\theader: \"Fecha y Hora\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (log: AdminLogEntity) => (\r\n\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t<Clock className=\"w-4 h-4 mr-1 text-gray-400\" />\r\n\t\t\t\t\t<div className=\"flex flex-col\">\r\n\t\t\t\t\t\t<span className=\"text-sm\">{log.getFormattedDate()}</span>\r\n\t\t\t\t\t\t<span className=\"text-xs text-gray-500\">{log.timeAgo}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"level\",\r\n\t\t\theader: \"Nivel\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (log: AdminLogEntity) => (\r\n\t\t\t\t<span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${log.getLevelColor()}`}>\r\n\t\t\t\t\t{log.getLevelIcon()} {log.level.toUpperCase()}\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"eventType\",\r\n\t\t\theader: \"Tipo de Evento\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (log: AdminLogEntity) => (\r\n\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t<Server className=\"w-4 h-4 mr-1 text-gray-400\" />\r\n\t\t\t\t\t<span className=\"text-sm\">{log.getEventTypeDisplayName()}</span>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"message\",\r\n\t\t\theader: \"Mensaje\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (log: AdminLogEntity) => (\r\n\t\t\t\t<div className=\"max-w-xs\">\r\n\t\t\t\t\t<p className=\"text-sm text-gray-900 truncate\" title={log.message}>\r\n\t\t\t\t\t\t{log.getShortMessage(60)}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"user\",\r\n\t\t\theader: \"Usuario\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (log: AdminLogEntity) => (\r\n\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t<User className=\"w-4 h-4 mr-1 text-gray-400\" />\r\n\t\t\t\t\t<span className=\"text-sm\">{log.getUserDisplayName()}</span>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"statusCode\",\r\n\t\t\theader: \"Estado\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (log: AdminLogEntity) => (\r\n\t\t\t\t<span className={`px-2 py-1 text-xs rounded ${\r\n\t\t\t\t\t!log.statusCode ? 'bg-gray-100 text-gray-600' :\r\n\t\t\t\t\tlog.statusCode >= 500 ? 'bg-red-100 text-red-800' :\r\n\t\t\t\t\tlog.statusCode >= 400 ? 'bg-yellow-100 text-yellow-800' :\r\n\t\t\t\t\t'bg-green-100 text-green-800'\r\n\t\t\t\t}`}>\r\n\t\t\t\t\t{log.statusCode || 'N/A'}\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"actions\",\r\n\t\t\theader: \"Acciones\",\r\n\t\t\trender: (log: AdminLogEntity) => (\r\n\t\t\t\t<div className=\"flex space-x-2\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => setSelectedLog(log)}\r\n\t\t\t\t\t\tclassName=\"text-primary-600 hover:text-primary-900\"\r\n\t\t\t\t\t\ttitle=\"Ver detalles\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Eye size={16} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => handleDeleteLog(log.id)}\r\n\t\t\t\t\t\tclassName=\"text-red-600 hover:text-red-900\"\r\n\t\t\t\t\t\ttitle=\"Eliminar log\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Trash2 size={16} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\t// Cargar datos iniciales\r\n\tconst loadInitialData = async () => {\r\n\t\ttry {\r\n\t\t\tconst [statsResult, eventTypesResult, logUsersResult] = await Promise.all([\r\n\t\t\t\tadminLogService.getStats(),\r\n\t\t\t\tadminLogService.getEventTypes(),\r\n\t\t\t\tadminLogService.getLogUsers(),\r\n\t\t\t]);\r\n\t\t\t\r\n\t\t\tsetStats(statsResult);\r\n\t\t\tsetEventTypes(eventTypesResult);\r\n\t\t\tsetLogUsers(logUsersResult);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error loading initial data:', error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Cargar logs con filtros\r\n\tconst loadLogs = async (newFilters: AdminLogFilters = filters) => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst result = await adminLogService.getLogs(newFilters);\r\n\t\t\t\r\n\t\t\tsetLogs(result.logs);\r\n\t\t\tsetTotalPages(result.lastPage);\r\n\t\t\tsetTotalItems(result.total);\r\n\t\t\tsetCurrentPage(result.currentPage);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error loading logs:', error);\r\n\t\t\t// En caso de error, mostrar array vacío\r\n\t\t\tsetLogs([]);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// Cargar datos al montar el componente\r\n\tuseEffect(() => {\r\n\t\tloadInitialData();\r\n\t\tloadLogs();\r\n\t}, []);\r\n\r\n\t// Recargar logs cuando cambien los filtros\r\n\tuseEffect(() => {\r\n\t\tloadLogs(filters);\r\n\t}, [filters]);\r\n\r\n\t// Manejar cambios en filtros\r\n\tconst handleFilterChange = (key: keyof AdminLogFilters, value: any) => {\r\n\t\tconst newFilters = {\r\n\t\t\t...filters,\r\n\t\t\t[key]: value === '' || value === 'all' ? undefined : value,\r\n\t\t\tpage: 1, // Resetear página al cambiar filtros\r\n\t\t};\r\n\t\tsetFilters(newFilters);\r\n\t};\r\n\r\n\t// Manejar cambio de página\r\n\tconst handlePageChange = (page: number) => {\r\n\t\tconst newFilters = { ...filters, page };\r\n\t\tsetFilters(newFilters);\r\n\t};\r\n\r\n\t// Eliminar log\r\n\tconst handleDeleteLog = async (logId: number) => {\r\n\t\tif (!confirm('¿Estás seguro de que quieres eliminar este log?')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tawait adminLogService.deleteLog(logId);\r\n\t\t\t// Recargar logs después de eliminar\r\n\t\t\tawait loadLogs();\r\n\t\t\tawait loadInitialData(); // Recargar stats\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error deleting log:', error);\r\n\t\t\talert('Error al eliminar el log');\r\n\t\t}\r\n\t};\r\n\r\n\t// Eliminar todos los logs\r\n\tconst handleDeleteAllLogs = async () => {\r\n\t\tif (!confirm('⚠️ ¿Estás seguro de que quieres BORRAR TODOS LOS LOGS?\\n\\nEsta acción no se puede deshacer y eliminará todos los registros de errores del sistema.')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\t// Call the cleanup endpoint with days=0 to delete all logs\r\n\t\t\tawait adminLogService.cleanupLogs({ days: 0 });\r\n\t\t\t\r\n\t\t\t// Clear the UI\r\n\t\t\tsetLogs([]);\r\n\t\t\tsetSelectedLog(null);\r\n\t\t\t\r\n\t\t\t// Refresh stats\r\n\t\t\tawait loadInitialData();\r\n\t\t\t\r\n\t\t\talert('✅ Todos los logs han sido eliminados correctamente.');\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error eliminando todos los logs:', error);\r\n\t\t\talert('❌ Error al eliminar los logs. Por favor intenta nuevamente.');\r\n\t\t}\r\n\t};\r\n\r\n\t// Refrescar logs\r\n\tconst refreshLogs = async () => {\r\n\t\tawait loadLogs();\r\n\t\tawait loadInitialData();\r\n\t};\r\n\r\n\t// Limpiar filtros\r\n\tconst clearFilters = () => {\r\n\t\tsetFilters({\r\n\t\t\tpage: 1,\r\n\t\t\tper_page: 20,\r\n\t\t\tlevel: undefined,\r\n\t\t\tevent_type: undefined,\r\n\t\t\tuser_id: undefined,\r\n\t\t\tstatus_code: undefined,\r\n\t\t\tfrom_date: undefined,\r\n\t\t\tto_date: undefined,\r\n\t\t\tsearch: undefined,\r\n\t\t});\r\n\t};\r\n\r\n\t// Helper function to convert logs to CSV format\r\n\tconst convertLogsToCSV = (logs: AdminLogEntity[]): string => {\r\n\t\tif (logs.length === 0) return '';\r\n\r\n\t\t// CSV headers\r\n\t\tconst headers = [\r\n\t\t\t'ID',\r\n\t\t\t'Fecha',\r\n\t\t\t'Nivel',\r\n\t\t\t'Tipo de Evento',\r\n\t\t\t'Mensaje',\r\n\t\t\t'Usuario',\r\n\t\t\t'Email Usuario',\r\n\t\t\t'Código de Estado',\r\n\t\t\t'Método HTTP',\r\n\t\t\t'URL',\r\n\t\t\t'IP',\r\n\t\t\t'User Agent',\r\n\t\t\t'Contexto'\r\n\t\t];\r\n\r\n\t\t// Convert logs to CSV rows\r\n\t\tconst csvRows = logs.map(log => [\r\n\t\t\tlog.id,\r\n\t\t\tlog.getFormattedDate(),\r\n\t\t\tlog.level,\r\n\t\t\tlog.eventType || '',\r\n\t\t\t`\"${log.message.replace(/\"/g, '\"\"')}\"`, // Escape quotes in message\r\n\t\t\tlog.user?.name || '',\r\n\t\t\tlog.user?.email || '',\r\n\t\t\tlog.statusCode || '',\r\n\t\t\tlog.method || '',\r\n\t\t\t`\"${(log.url || '').replace(/\"/g, '\"\"')}\"`, // Escape quotes in URL\r\n\t\t\tlog.ipAddress || '',\r\n\t\t\t`\"${(log.userAgent || '').replace(/\"/g, '\"\"')}\"`, // Escape quotes in user agent\r\n\t\t\tlog.hasContext() ? `\"${JSON.stringify(log.context).replace(/\"/g, '\"\"')}\"` : ''\r\n\t\t]);\r\n\r\n\t\t// Combine headers and rows\r\n\t\treturn [headers.join(','), ...csvRows.map(row => row.join(','))].join('\\n');\r\n\t};\r\n\r\n\t// Exportar logs como CSV\r\n\tconst exportLogs = async () => {\r\n\t\ttry {\r\n\t\t\tconst allLogs: AdminLogEntity[] = [];\r\n\t\t\tlet currentPage = 1;\r\n\t\t\tconst maxPerPage = 100; // Backend limit\r\n\t\t\tlet hasMorePages = true;\r\n\r\n\t\t\t// Fetch all logs in batches\r\n\t\t\twhile (hasMorePages) {\r\n\t\t\t\tconst exportFilters = { \r\n\t\t\t\t\t...filters, \r\n\t\t\t\t\tper_page: maxPerPage, \r\n\t\t\t\t\tpage: currentPage \r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tconst result = await adminLogService.getLogs(exportFilters);\r\n\t\t\t\tallLogs.push(...result.logs);\r\n\t\t\t\t\r\n\t\t\t\t// Check if there are more pages\r\n\t\t\t\thasMorePages = currentPage < result.lastPage;\r\n\t\t\t\tcurrentPage++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (allLogs.length === 0) {\r\n\t\t\t\talert('No hay logs para exportar con los filtros actuales');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Convert to CSV\r\n\t\t\tconst csvContent = convertLogsToCSV(allLogs);\r\n\t\t\t\r\n\t\t\t// Create and download CSV file\r\n\t\t\tconst blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n\t\t\tconst url = URL.createObjectURL(blob);\r\n\t\t\tconst exportFileDefaultName = `admin_logs_export_${new Date().toISOString().slice(0, 10)}.csv`;\r\n\t\t\t\r\n\t\t\tconst linkElement = document.createElement(\"a\");\r\n\t\t\tlinkElement.setAttribute(\"href\", url);\r\n\t\t\tlinkElement.setAttribute(\"download\", exportFileDefaultName);\r\n\t\t\tlinkElement.click();\r\n\t\t\t\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error exporting logs:', error);\r\n\t\t\talert('Error al exportar los logs');\r\n\t\t}\r\n\t};\r\n\r\n\t// Estadísticas para las tarjetas\r\n\tconst statItems = stats ? [\r\n\t\t{ \r\n\t\t  title: \"Total\", \r\n\t\t  value: stats.total || 0, \r\n\t\t  description: \"Total de registros\", \r\n\t\t  icon: Info, \r\n\t\t  bgColor: \"bg-gray-50/20\", \r\n\t\t  textColor: \"text-gray-700\", \r\n\t\t  valueColor: \"text-gray-800\", \r\n\t\t  descriptionColor: \"text-gray-600\", \r\n\t\t  iconColor: \"text-gray-600\", \r\n\t\t},\r\n\t\t{ \r\n\t\t  title: \"Críticos\", \r\n\t\t  value: stats.critical || 0, \r\n\t\t  description: \"Registros críticos\", \r\n\t\t  icon: AlertTriangle, \r\n\t\t  bgColor: \"bg-red-50/20\", \r\n\t\t  textColor: \"text-red-700\", \r\n\t\t  valueColor: \"text-red-800\", \r\n\t\t  descriptionColor: \"text-red-600\", \r\n\t\t  iconColor: \"text-red-600\", \r\n\t\t},\r\n\t\t{ \r\n\t\t  title: \"Errores\", \r\n\t\t  value: stats.errors || 0, \r\n\t\t  description: \"Registros de error\", \r\n\t\t  icon: XCircle, \r\n\t\t  bgColor: \"bg-orange-50/20\", \r\n\t\t  textColor: \"text-orange-700\", \r\n\t\t  valueColor: \"text-orange-800\", \r\n\t\t  descriptionColor: \"text-orange-600\", \r\n\t\t  iconColor: \"text-orange-600\", \r\n\t\t},\r\n\t\t{ \r\n\t\t  title: \"Hoy\", \r\n\t\t  value: stats.today || 0, \r\n\t\t  description: \"Registros de hoy\", \r\n\t\t  icon: Clock, \r\n\t\t  bgColor: \"bg-blue-50/20\", \r\n\t\t  textColor: \"text-blue-700\", \r\n\t\t  valueColor: \"text-blue-800\", \r\n\t\t  descriptionColor: \"text-blue-600\", \r\n\t\t  iconColor: \"text-blue-600\", \r\n\t\t}\r\n\t  ] : [];\r\n\r\n\treturn (\r\n\t\t<div className=\"space-y-6\">\r\n\t\t\t<div className=\"flex justify-between items-center\">\r\n\t\t\t\t<h1 className=\"text-2xl font-bold text-gray-900\">\r\n\t\t\t\t\tRegistros de Errores\r\n\t\t\t\t</h1>\r\n\t\t\t\t<div className=\"flex space-x-2\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={refreshLogs}\r\n\t\t\t\t\t\tclassName=\"px-3 py-2 bg-primary-100 text-primary-700 rounded-md hover:bg-primary-200\"\r\n\t\t\t\t\t\ttitle=\"Refrescar datos\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RefreshCw size={20} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={exportLogs}\r\n\t\t\t\t\t\tclassName=\"px-3 py-2 bg-green-100 text-green-700 rounded-md hover:bg-green-200\"\r\n\t\t\t\t\t\ttitle=\"Exportar registros como CSV\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Download size={20} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={handleDeleteAllLogs}\r\n\t\t\t\t\t\tclassName=\"px-3 py-2 bg-red-100 text-red-700 rounded-md hover:bg-red-200\"\r\n\t\t\t\t\t\ttitle=\"Borrar todos los logs\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Trash size={20} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Tarjetas de resumen */}\r\n\t\t\t{statItems.length > 0 && <StatCardList items={statItems} />}\r\n\r\n\t\t\t{/* Filtros */}\r\n\t\t\t<div className=\"bg-white p-4 rounded-lg shadow-sm space-y-4\">\r\n\t\t\t\t<div className=\"flex items-center mb-2\">\r\n\t\t\t\t\t<Filter className=\"w-5 h-5 text-gray-500 mr-2\" />\r\n\t\t\t\t\t<h2 className=\"text-lg font-medium text-gray-900\">\r\n\t\t\t\t\t\tFiltros\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-6 gap-4\">\r\n\t\t\t\t\t{/* Filtro por nivel */}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\tNivel\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tvalue={filters.level || 'all'}\r\n\t\t\t\t\t\t\tonChange={(e) => handleFilterChange('level', e.target.value)}\r\n\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"all\">Todos</option>\r\n\t\t\t\t\t\t\t{levels.map((level) => (\r\n\t\t\t\t\t\t\t\t<option key={level} value={level}>\r\n\t\t\t\t\t\t\t\t\t{level.charAt(0).toUpperCase() + level.slice(1)}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Filtro por tipo de evento */}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\tTipo de Evento\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tvalue={filters.event_type || 'all'}\r\n\t\t\t\t\t\t\tonChange={(e) => handleFilterChange('event_type', e.target.value)}\r\n\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"all\">Todos</option>\r\n\t\t\t\t\t\t\t{eventTypes.map((eventType) => (\r\n\t\t\t\t\t\t\t\t<option key={eventType} value={eventType}>\r\n\t\t\t\t\t\t\t\t\t{eventType.replace('_', ' ').split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Filtro por usuario */}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\tUsuario\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tvalue={filters.user_id || 'all'}\r\n\t\t\t\t\t\t\tonChange={(e) => handleFilterChange('user_id', e.target.value)}\r\n\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"all\">Todos</option>\r\n\t\t\t\t\t\t\t{logUsers.map((user) => (\r\n\t\t\t\t\t\t\t\t<option key={user.id} value={user.id}>\r\n\t\t\t\t\t\t\t\t\t{user.name || user.email}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Filtro por código de estado */}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\tCódigo HTTP\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tvalue={filters.status_code || 'all'}\r\n\t\t\t\t\t\t\tonChange={(e) => handleFilterChange('status_code', e.target.value)}\r\n\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"all\">Todos</option>\r\n\t\t\t\t\t\t\t{statusCodes.map((code) => (\r\n\t\t\t\t\t\t\t\t<option key={code} value={code}>\r\n\t\t\t\t\t\t\t\t\t{code}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Filtro fecha desde */}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\tDesde\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\tvalue={filters.from_date || ''}\r\n\t\t\t\t\t\t\tonChange={(e) => handleFilterChange('from_date', e.target.value)}\r\n\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Filtro fecha hasta */}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\tHasta\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\tvalue={filters.to_date || ''}\r\n\t\t\t\t\t\t\tonChange={(e) => handleFilterChange('to_date', e.target.value)}\r\n\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Búsqueda de texto */}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\tBuscar en mensajes, URLs y eventos\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={filters.search || ''}\r\n\t\t\t\t\t\tonChange={(e) => handleFilterChange('search', e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"Escribir para buscar...\"\r\n\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"flex justify-end\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={clearFilters}\r\n\t\t\t\t\t\tclassName=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLimpiar filtros\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Tabla de logs */}\r\n\t\t\t<Table\r\n\t\t\t\tdata={logs}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\temptyMessage=\"No se encontraron registros de errores\"\r\n\t\t\t\tpagination={{\r\n\t\t\t\t\tcurrentPage,\r\n\t\t\t\t\ttotalPages,\r\n\t\t\t\t\ttotalItems,\r\n\t\t\t\t\titemsPerPage: filters.per_page || 20,\r\n\t\t\t\t\tonPageChange: handlePageChange,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t{/* Modal de detalles */}\r\n\t\t\t{selectedLog && (\r\n\t\t\t\t<div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg w-full max-w-4xl max-h-[90vh] overflow-hidden\">\r\n\t\t\t\t\t\t<div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n\t\t\t\t\t\t\t<div className=\"flex items-center space-x-3\">\r\n\t\t\t\t\t\t\t\t<span className={`px-2 py-1 text-xs rounded-full ${selectedLog.getLevelColor()}`}>\r\n\t\t\t\t\t\t\t\t\t{selectedLog.getLevelIcon()} {selectedLog.level.toUpperCase()}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<h3 className=\"text-lg font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t\t\tDetalles del Log #{selectedLog.id}\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => setSelectedLog(null)}\r\n\t\t\t\t\t\t\t\tclassName=\"text-gray-500 hover:text-gray-700\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n\t\t\t\t\t\t\t\t\t<path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"px-6 py-4 overflow-y-auto max-h-[70vh]\">\r\n\t\t\t\t\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-gray-500 mb-1\">Fecha y Hora</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"font-semibold text-gray-900\">{selectedLog.getFormattedDate()}</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm text-gray-500\">{selectedLog.timeAgo}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-gray-500 mb-1\">Tipo de Evento</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"font-semibold text-gray-900\">{selectedLog.getEventTypeDisplayName()}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-gray-500 mb-1\">Usuario</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"font-semibold text-gray-900\">{selectedLog.getUserDisplayName()}</p>\r\n\t\t\t\t\t\t\t\t\t{selectedLog.user?.email && (\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm text-gray-500\">{selectedLog.user.email}</p>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-gray-500 mb-1\">Código de Estado</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"font-semibold text-gray-900\">{selectedLog.statusCode || 'N/A'}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{selectedLog.method && (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-gray-500 mb-1\">Método HTTP</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"font-semibold text-gray-900\">{selectedLog.method}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{selectedLog.ipAddress && (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-gray-500 mb-1\">Dirección IP</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"font-semibold text-gray-900\">{selectedLog.ipAddress}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{selectedLog.url && (\r\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-gray-500 mb-1\">URL</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"font-semibold text-gray-900 break-all\">{selectedLog.url}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-gray-500 mb-1\">Mensaje</p>\r\n\t\t\t\t\t\t\t\t<p className=\"font-semibold text-gray-900 whitespace-pre-wrap\">{selectedLog.message}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{selectedLog.userAgent && (\r\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-gray-500 mb-1\">User Agent</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm text-gray-900 break-words bg-gray-50 p-2 rounded\">{selectedLog.userAgent}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{selectedLog.hasContext() && (\r\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-gray-500 mb-1\">Contexto Adicional</p>\r\n\t\t\t\t\t\t\t\t\t<pre className=\"mt-2 p-3 bg-gray-100 rounded-md text-sm text-gray-900 overflow-x-auto max-h-60\">\r\n\t\t\t\t\t\t\t\t\t\t{JSON.stringify(selectedLog.context, null, 2)}\r\n\t\t\t\t\t\t\t\t\t</pre>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"px-6 py-3 border-t border-gray-200 flex justify-end space-x-3\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => handleDeleteLog(selectedLog.id)}\r\n\t\t\t\t\t\t\t\tclassName=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tEliminar Log\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => setSelectedLog(null)}\r\n\t\t\t\t\t\t\t\tclassName=\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCerrar\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AdminLogViewerPage;\r\n"],"names":["AdminLogEntity","data","maxLength","word","AdminLogService","filters","params","key","value","response","ApiClient","logData","id","limit","hours","eventType","request","recentLogs","criticalLogs","stats","eventTypes","error","searchTerm","appConfig","formatted","errors","fromDate","toDate","adminLogService","AdminLogViewerPage","logs","setLogs","useState","loading","setLoading","currentPage","setCurrentPage","selectedLog","setSelectedLog","setStats","totalPages","setTotalPages","totalItems","setTotalItems","setEventTypes","logUsers","setLogUsers","setFilters","levels","statusCodes","columns","log","jsxs","jsx","Clock","Server","User","Eye","handleDeleteLog","Trash2","loadInitialData","statsResult","eventTypesResult","logUsersResult","loadLogs","newFilters","result","useEffect","handleFilterChange","handlePageChange","page","logId","handleDeleteAllLogs","refreshLogs","clearFilters","convertLogsToCSV","headers","csvRows","row","exportLogs","allLogs","maxPerPage","hasMorePages","exportFilters","csvContent","blob","url","exportFileDefaultName","linkElement","statItems","Info","AlertTriangle","XCircle","RefreshCw","Download","Trash","StatCardList","Filter","e","level","user","code","Table"],"mappings":"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"}