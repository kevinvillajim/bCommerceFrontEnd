{"version":3,"file":"checkout-chunk-BfPZCzS8.js","sources":["../../src/core/services/CartService.ts","../../src/presentation/contexts/CartContext.tsx","../../src/presentation/hooks/useHeaderCounters.ts","../../src/presentation/hooks/useCart.ts","../../src/presentation/services/ErrorHandlingService.ts","../../src/presentation/hooks/useErrorHandler.ts","../../src/utils/volumeDiscountCalculator.ts","../../src/utils/ecommerceCalculator.ts","../../src/infrastructure/services/CheckoutItemsService.ts","../../src/constants/calculationConfig.ts","../../src/core/services/DatafastService.ts","../../src/presentation/components/checkout/CreditCardForm.tsx","../../src/infrastructure/services/DeunaService.ts","../../src/presentation/components/checkout/QRPaymentForm.tsx","../../src/presentation/components/checkout/AddressForm.tsx","../../src/presentation/hooks/useDatafastCSP.ts","../../src/presentation/components/checkout/DatafastPaymentButtonProps.tsx","../../src/presentation/pages/CheckoutPage.tsx"],"sourcesContent":["import ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\nimport type {\r\n\tAddToCartRequest,\r\n\tShoppingCartResponse,\r\n} from \"../domain/entities/ShoppingCart\";\r\n\r\n/**\r\n * Servicio optimizado para gestionar las operaciones del carrito de compras\r\n * ✅ Eliminadas consultas adicionales para seller_id que causaban lentitud\r\n */\r\nexport class CartService {\r\n\t/**\r\n\t * Obtiene el carrito del usuario actual\r\n\t * ✅ SIN ENRIQUECIMIENTO COSTOSO - más rápido y eficiente\r\n\t */\r\n\tasync getCart(): Promise<ShoppingCartResponse> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"CartService: Obteniendo carrito del usuario\");\r\n\r\n\t\t\tconst response = await ApiClient.get<ShoppingCartResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.CART.GET\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"CartService: Respuesta del carrito:\", response);\r\n\r\n\t\t\t// ✅ RETORNAR DIRECTAMENTE SIN ENRIQUECIMIENTO\r\n\t\t\t// El header ya no depende de estos datos adicionales\r\n\t\t\t// Si se necesita seller_id, se puede hacer en componentes específicos bajo demanda\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"CartService: Error al obtener carrito:\", error);\r\n\r\n\t\t\t// Devolver un carrito vacío en caso de error\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"error\",\r\n\t\t\t\tmessage:\r\n\t\t\t\t\terror instanceof Error ? error.message : \"Error al obtener carrito\",\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\ttotal: 0,\r\n\t\t\t\t\titems: [],\r\n\t\t\t\t\titem_count: 0,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Añade un producto al carrito\r\n\t * @param request Datos del producto a añadir\r\n\t */\r\n\tasync addToCart(request: AddToCartRequest): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"CartService: Añadiendo producto al carrito:\", request);\r\n\r\n\t\t\t// Convertir formato del request para el backend\r\n\t\t\tconst apiRequest = {\r\n\t\t\t\tproduct_id: request.productId,\r\n\t\t\t\tquantity: request.quantity,\r\n\t\t\t\tattributes: request.attributes,\r\n\t\t\t};\r\n\r\n\t\t\tconst response = await ApiClient.post(\r\n\t\t\t\tAPI_ENDPOINTS.CART.ADD_ITEM,\r\n\t\t\t\tapiRequest\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"CartService: Producto añadido al carrito:\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"CartService: Error al añadir al carrito:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Elimina un producto del carrito\r\n\t * @param itemId ID del item a eliminar\r\n\t */\r\n\tasync removeFromCart(itemId: number): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(`CartService: Eliminando producto ${itemId} del carrito`);\r\n\r\n\t\t\tconst response = await ApiClient.delete(\r\n\t\t\t\tAPI_ENDPOINTS.CART.REMOVE_ITEM(itemId)\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`CartService: Producto ${itemId} eliminado del carrito:`,\r\n\t\t\t\tresponse\r\n\t\t\t);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`CartService: Error al eliminar producto ${itemId} del carrito:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Actualiza la cantidad de un producto en el carrito\r\n\t * @param itemId ID del item a actualizar\r\n\t * @param quantity Nueva cantidad\r\n\t */\r\n\tasync updateCartItem(itemId: number, quantity: number): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`CartService: Actualizando cantidad de producto ${itemId} a ${quantity}`\r\n\t\t\t);\r\n\r\n\t\t\tconst response = await ApiClient.put(\r\n\t\t\t\tAPI_ENDPOINTS.CART.UPDATE_ITEM(itemId),\r\n\t\t\t\t{quantity}\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`CartService: Cantidad actualizada para producto ${itemId}:`,\r\n\t\t\t\tresponse\r\n\t\t\t);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`CartService: Error al actualizar cantidad de producto ${itemId}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Vacía el carrito por completo\r\n\t */\r\n\tasync clearCart(): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"CartService: Vaciando carrito\");\r\n\r\n\t\t\tconst response = await ApiClient.post(API_ENDPOINTS.CART.EMPTY);\r\n\r\n\t\t\tconsole.log(\"CartService: Carrito vaciado:\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"CartService: Error al vaciar carrito:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Valida un código de descuento\r\n\t * @param code Código de descuento a validar\r\n\t */\r\n\tasync validateDiscountCode(code: string): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"CartService: Validando código de descuento:\", code);\r\n\r\n\t\t\tconst response = await ApiClient.post(API_ENDPOINTS.CART.DISCOUNT.VALIDATE, {\r\n\t\t\t\tcode\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(\"CartService: Código de descuento validado:\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"CartService: Error al validar código de descuento:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Aplica un código de descuento al carrito\r\n\t * @param code Código de descuento a aplicar\r\n\t */\r\n\tasync applyDiscountCode(code: string): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"CartService: Aplicando código de descuento:\", code);\r\n\r\n\t\t\tconst response = await ApiClient.post(API_ENDPOINTS.CART.DISCOUNT.APPLY, {\r\n\t\t\t\tcode\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(\"CartService: Código de descuento aplicado:\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"CartService: Error al aplicar código de descuento:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Remueve el código de descuento aplicado\r\n\t */\r\n\tasync removeDiscountCode(): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"CartService: Removiendo código de descuento\");\r\n\r\n\t\t\tconst response = await ApiClient.post(API_ENDPOINTS.CART.DISCOUNT.REMOVE);\r\n\r\n\t\t\tconsole.log(\"CartService: Código de descuento removido:\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"CartService: Error al remover código de descuento:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default CartService;","import React, {\r\n\tcreateContext,\r\n\tuseState,\r\n\tuseEffect,\r\n\tuseCallback,\r\n\tuseContext,\r\n\tuseRef,\r\n} from \"react\";\r\nimport type {ReactNode} from \"react\";\r\nimport type {\r\n\tShoppingCart,\r\n\tCartItem,\r\n\tAddToCartRequest,\r\n\tCartItemUpdateData,\r\n} from \"../../core/domain/entities/ShoppingCart\";\r\nimport type { Product } from \"../../core/domain/entities/Product\";\r\nimport {LocalStorageService} from \"../../infrastructure/services/LocalStorageService\";\r\nimport {AuthContext} from \"./AuthContext\";\r\nimport {CartService} from \"../../core/services/CartService\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport CacheService from \"../../infrastructure/services/CacheService\";\r\nimport {useToast} from \"../components/UniversalToast\";\r\n\r\n// Importar tipos centralizados\r\nimport { NotificationType } from '../types/NotificationTypes';\r\n\r\n// Re-exportar para mantener compatibilidad con archivos existentes\r\nexport { NotificationType };\r\n\r\n\r\n// ✅ NUEVO: Interfaz para manejar códigos de descuento\r\ninterface DiscountCode {\r\n\tcode: string;\r\n\tdiscount_percentage: number;\r\n\tdiscount_amount: number;\r\n\texpires_at: string;\r\n}\r\n\r\ninterface AppliedDiscount {\r\n\tdiscountCode: DiscountCode;\r\n\tappliedAt: Date;\r\n}\r\n\r\n// Define context interface\r\ninterface CartContextProps {\r\n\tcart: ShoppingCart | null;\r\n\tloading: boolean;\r\n\terror: string | null;\r\n\taddToCart: (request: AddToCartRequest) => Promise<boolean>;\r\n\tremoveFromCart: (itemId: number) => Promise<boolean>;\r\n\tupdateCartItem: (data: CartItemUpdateData) => Promise<boolean>;\r\n\tclearCart: () => Promise<boolean>;\r\n\tfetchCart: () => Promise<void>;\r\n\titemCount: number;\r\n\ttotalAmount: number;\r\n\t// Propiedades de notificación (usando UniversalToast)\r\n\tshowNotification: (type: NotificationType, message: string) => void;\r\n\tcartItemCount: number;\r\n\t// ✅ NUEVAS: Propiedades de código de descuento\r\n\tappliedDiscount: AppliedDiscount | null;\r\n\tvalidateDiscountCode: (code: string) => Promise<{ success: boolean; message: string; data?: DiscountCode }>;\r\n\tapplyDiscountCode: (code: string) => Promise<{ success: boolean; message: string; cart?: ShoppingCart }>;\r\n\tremoveDiscountCode: () => Promise<{ success: boolean; message: string; cart?: ShoppingCart }>;\r\n}\r\n\r\n// Create context with default values\r\nexport const CartContext = createContext<CartContextProps>({\r\n\tcart: null,\r\n\tloading: false,\r\n\terror: null,\r\n\taddToCart: async () => false,\r\n\tremoveFromCart: async () => false,\r\n\tupdateCartItem: async () => false,\r\n\tclearCart: async () => false,\r\n\tfetchCart: async () => {},\r\n\titemCount: 0,\r\n\ttotalAmount: 0,\r\n\tshowNotification: () => {},\r\n\tcartItemCount: 0,\r\n\t// ✅ NUEVOS: Valores por defecto para descuentos\r\n\tappliedDiscount: null,\r\n\tvalidateDiscountCode: async () => ({ success: false, message: \"Not implemented\" }),\r\n\tapplyDiscountCode: async () => ({ success: false, message: \"Not implemented\" }),\r\n\tremoveDiscountCode: async () => ({ success: false, message: \"Not implemented\" }),\r\n});\r\n\r\n// Storage service instance\r\nconst storageService = new LocalStorageService();\r\nconst cartService = new CartService();\r\n\r\n// Cache keys y tiempos\r\nconst CACHE_KEYS = {\r\n\tCART_USER: \"cart_user_data\",\r\n\tCART_GUEST: \"cart_guest_data\",\r\n};\r\n\r\nconst CACHE_TIMES = {\r\n\tCART: 3 * 60 * 1000, // 3 minutos\r\n};\r\n\r\n// Provider component\r\ninterface CartProviderProps {\r\n\tchildren: ReactNode;\r\n}\r\n\r\nexport const CartProvider: React.FC<CartProviderProps> = ({children}) => {\r\n\tconst [cart, setCart] = useState<ShoppingCart | null>(null);\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\tconst [itemCount, setItemCount] = useState<number>(0);\r\n\tconst [totalAmount, setTotalAmount] = useState<number>(0);\r\n\t// ✅ NUEVO: Estado para descuentos\r\n\tconst [appliedDiscount, setAppliedDiscount] = useState<AppliedDiscount | null>(null);\r\n\r\n\tconst {isAuthenticated} = useContext(AuthContext);\r\n\tconst {showToast} = useToast();\r\n\r\n\t// Referencias para controlar el flujo\r\n\tconst isInitialized = useRef(false);\r\n\tconst lastCartString = useRef(\"\");\r\n\tconst isAuthenticatedRef = useRef(isAuthenticated);\r\n\tconst fetchCartTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\tconst isFetchingRef = useRef(false);\r\n\tconst cartUpdateTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n\t// Actualizar el ref cuando cambia isAuthenticated\r\n\tuseEffect(() => {\r\n\t\tisAuthenticatedRef.current = isAuthenticated;\r\n\t}, [isAuthenticated]);\r\n\r\n\t// Función para mostrar una notificación usando UniversalToast\r\n\tconst showNotification = useCallback(\r\n\t\t(type: NotificationType, message: string) => {\r\n\t\t\t// Usar directamente el enum NotificationType con UniversalToast\r\n\t\t\tshowToast(type, message, {\r\n\t\t\t\tduration: 3000\r\n\t\t\t});\r\n\t\t},\r\n\t\t[showToast]\r\n\t);\r\n\r\n\t// Limpiar temporizadores al desmontar\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tif (fetchCartTimeoutRef.current) {\r\n\t\t\t\tclearTimeout(fetchCartTimeoutRef.current);\r\n\t\t\t}\r\n\t\t\tif (cartUpdateTimeoutRef.current) {\r\n\t\t\t\tclearTimeout(cartUpdateTimeoutRef.current);\r\n\t\t\t}\r\n\t\t};\r\n\t}, []);\r\n\r\n\t// Invalidar cache relacionado con carrito\r\n\tconst invalidateCartCache = useCallback(() => {\r\n\t\tCacheService.removeItem(CACHE_KEYS.CART_USER);\r\n\t\tCacheService.removeItem(CACHE_KEYS.CART_GUEST);\r\n\t\tCacheService.removeItem(\"header_counters\");\r\n\t\tconsole.log(\"🗑️ Cart cache invalidated\");\r\n\t}, []);\r\n\r\n\t// Calcular el número total de elementos en el carrito (sumando cantidades)\r\n\tconst calculateTotalItems = useCallback((cartItems: CartItem[]): number => {\r\n\t\tif (!cartItems || cartItems.length === 0) return 0;\r\n\t\treturn cartItems.reduce((total, item) => total + item.quantity, 0);\r\n\t}, []);\r\n\r\n\t// ✅ FUNCIÓN SIMPLE PARA CARGAR EL CARRITO (como funcionaba antes)\r\n\tconst fetchCartFromAPI = useCallback(async () => {\r\n\t\tif (isFetchingRef.current) return null;\r\n\r\n\t\tisFetchingRef.current = true;\r\n\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\t// ✅ VERIFICAR CACHE PRIMERO\r\n\t\t\tconst cacheKey = isAuthenticatedRef.current\r\n\t\t\t\t? CACHE_KEYS.CART_USER\r\n\t\t\t\t: CACHE_KEYS.CART_GUEST;\r\n\t\t\tconst cachedCart = CacheService.getItem(cacheKey);\r\n\r\n\t\t\tif (cachedCart) {\r\n\t\t\t\tconsole.log(\"📦 Using cached cart data\");\r\n\t\t\t\tsetCart(cachedCart);\r\n\t\t\t\tsetItemCount(cachedCart.items ? cachedCart.items.length : 0);\r\n\t\t\t\tsetTotalAmount(cachedCart.total || 0);\r\n\t\t\t\tlastCartString.current = JSON.stringify(cachedCart);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tisFetchingRef.current = false;\r\n\t\t\t\treturn cachedCart;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"🌐 Fetching cart from API...\");\r\n\t\t\t// ✅ USAR EL CARTSERVICE SIMPLE ORIGINAL\r\n\t\t\tconst response = await cartService.getCart();\r\n\r\n\t\t\tif (response && response.status === \"success\" && response.data) {\r\n\t\t\t\t// ✅ CONVERTIR DATOS DE LA API AL FORMATO DEL ESTADO (simple)\r\n\t\t\t\tconst cartData: ShoppingCart = {\r\n\t\t\t\t\tid: response.data.id,\r\n\t\t\t\t\ttotal: response.data.total,\r\n\t\t\t\t\titems: response.data.items.map((item) => {\r\n\t\t\t\t\t\t// ✅ VALIDACIÓN ESTRICTA - NO FALLBACKS EN PRODUCTOS\r\n\t\t\t\t\t\tif (!item.product) {\r\n\t\t\t\t\t\t\tconsole.error('Item sin producto asociado:', item);\r\n\t\t\t\t\t\t\tthrow new Error('Error en carrito: item sin producto válido');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst product = item.product as Product;\r\n\t\t\t\t\t\tif (!product.id || product.id <= 0) {\r\n\t\t\t\t\t\t\tconsole.error('Producto sin ID válido:', product);\r\n\t\t\t\t\t\t\tthrow new Error('Error en carrito: producto sin ID válido');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!product.name || product.name.trim() === '') {\r\n\t\t\t\t\t\t\tconsole.error('Producto sin nombre:', product);\r\n\t\t\t\t\t\t\tthrow new Error('Error en carrito: producto sin nombre');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (typeof product.price !== 'number' || product.price <= 0) {\r\n\t\t\t\t\t\t\tconsole.error('Producto sin precio válido:', product);\r\n\t\t\t\t\t\t\tthrow new Error('Error en carrito: producto sin precio válido');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Validar sellerId - CRÍTICO para checkout\r\n\t\t\t\t\t\tconst sellerId = product.sellerId || product.seller_id || (product.seller ? product.seller.id : undefined) || product.user_id;\r\n\t\t\t\t\t\tif (!sellerId || sellerId <= 0) {\r\n\t\t\t\t\t\t\tconsole.error('Producto sin seller válido:', product);\r\n\t\t\t\t\t\t\tthrow new Error('Error en carrito: producto sin vendedor válido');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\t\tproductId: product.id,\r\n\t\t\t\t\t\t\tquantity: item.quantity,\r\n\t\t\t\t\t\t\tprice: item.price,\r\n\t\t\t\t\t\t\tsubtotal: item.subtotal,\r\n\t\t\t\t\t\t\tattributes: item.attributes,\r\n\r\n\t\t\t\t\t\t\t// Datos calculados por backend\r\n\t\t\t\t\t\t\tfinal_price: item.final_price || item.price,\r\n\t\t\t\t\t\t\toriginal_price: item.original_price || item.price,\r\n\t\t\t\t\t\t\tvolume_discount_percentage: item.volume_discount_percentage || 0,\r\n\t\t\t\t\t\t\tvolume_savings: item.volume_savings || 0,\r\n\t\t\t\t\t\t\tdiscount_label: item.discount_label || undefined,\r\n\r\n\t\t\t\t\t\t\tproduct: {\r\n\t\t\t\t\t\t\t\tid: product.id,\r\n\t\t\t\t\t\t\t\tname: product.name,\r\n\t\t\t\t\t\t\t\tslug: product.slug,\r\n\t\t\t\t\t\t\t\tprice: product.price,\r\n\t\t\t\t\t\t\t\tfinal_price: product.final_price ?? product.price ?? 0,\r\n\t\t\t\t\t\t\t\tdiscount_percentage: product.discount_percentage ?? 0,\r\n\t\t\t\t\t\t\t\trating: product.rating ?? 0,\r\n\t\t\t\t\t\t\t\trating_count: product.rating_count ?? 0,\r\n\t\t\t\t\t\t\t\timage: (product.main_image || product.image || (product.images && product.images.length > 0 ? (typeof product.images[0] === 'string' ? product.images[0] : product.images[0].original || product.images[0].medium || product.images[0].thumbnail) : undefined)),\r\n\t\t\t\t\t\t\t\tmain_image: (product.main_image || product.image || (product.images && product.images.length > 0 ? (typeof product.images[0] === 'string' ? product.images[0] : product.images[0].original || product.images[0].medium || product.images[0].thumbnail) : undefined)),\r\n\t\t\t\t\t\t\t\tstockAvailable: product.stock || 0,\r\n\t\t\t\t\t\t\t\tsellerId: product.sellerId || product.seller_id || (product.seller ? product.seller.id : undefined) || product.user_id,\r\n\t\t\t\t\t\t\t\tseller_id: product.seller_id || product.sellerId || (product.seller ? product.seller.id : undefined) || product.user_id,\r\n\t\t\t\t\t\t\t\tseller: product.seller,\r\n\t\t\t\t\t\t\t\tuser_id: product.user_id,\r\n\t\t\t\t\t\t\t\tstock: product.stock || 0,\r\n\t\t\t\t\t\t\t\tis_in_stock: product.is_in_stock ?? true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}),\r\n\t\t\t\t\titem_count: response.data.item_count || 0,\r\n\t\t\t\t\t\r\n\t\t\t\t\t// ✅ INCLUIR INFORMACIÓN DE DESCUENTOS A NIVEL DE CARRITO SI VIENE\r\n\t\t\t\t\tsubtotal: response.data.subtotal || response.data.total,\r\n\t\t\t\t\ttotal_volume_savings: response.data.total_volume_savings || 0,\r\n\t\t\t\t\tvolume_discounts_applied: response.data.volume_discounts_applied || false,\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// ✅ GUARDAR EN CACHE\r\n\t\t\t\tCacheService.setItem(cacheKey, cartData, CACHE_TIMES.CART);\r\n\r\n\t\t\t\t// Calcular la suma total de cantidades\r\n\t\t\t\tconst totalQuantities = calculateTotalItems(cartData.items);\r\n\t\t\t\tconst itemCountValue = response.data.item_count || totalQuantities;\r\n\r\n\t\t\t\tsetCart(cartData);\r\n\t\t\t\tsetItemCount(itemCountValue);\r\n\t\t\t\tsetTotalAmount(cartData.total);\r\n\t\t\t\tlastCartString.current = JSON.stringify(cartData);\r\n\r\n\t\t\t\tconsole.log(\"✅ Cart loaded successfully:\", {\r\n\t\t\t\t\titemCount: itemCountValue,\r\n\t\t\t\t\ttotal: cartData.total,\r\n\t\t\t\t\titems: cartData.items.length,\r\n\t\t\t\t\tvolume_discounts_applied: cartData.volume_discounts_applied\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn cartData;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(\"Formato de respuesta de carrito inválido\");\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al obtener carrito desde la API:\", error);\r\n\t\t\tsetError(\r\n\t\t\t\terror instanceof Error ? error.message : \"Error al obtener carrito\"\r\n\t\t\t);\r\n\r\n\t\t\t// Intentar usar caché local en caso de error\r\n\t\t\tconst localCart = storageService.getItem(appConfig.storage.cartKey);\r\n\t\t\tif (localCart) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst parsedCart =\r\n\t\t\t\t\t\ttypeof localCart === \"string\" ? JSON.parse(localCart) : localCart;\r\n\t\t\t\t\tsetCart(parsedCart);\r\n\t\t\t\t\tlastCartString.current = JSON.stringify(parsedCart);\r\n\t\t\t\t\tconst totalItems = calculateTotalItems(parsedCart.items || []);\r\n\t\t\t\t\tsetItemCount(totalItems);\r\n\t\t\t\t\tsetTotalAmount(parsedCart.total || 0);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error(\"Error al usar caché local del carrito:\", e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t\tisFetchingRef.current = false;\r\n\t\t}\r\n\t}, [calculateTotalItems]);\r\n\r\n\t// Cargar carrito (desde API o localStorage)\r\n\tconst fetchCart = useCallback(async () => {\r\n\t\tif (fetchCartTimeoutRef.current) {\r\n\t\t\tclearTimeout(fetchCartTimeoutRef.current);\r\n\t\t}\r\n\r\n\t\tfetchCartTimeoutRef.current = setTimeout(async () => {\r\n\t\t\tif (isAuthenticatedRef.current) {\r\n\t\t\t\tawait fetchCartFromAPI();\r\n\t\t\t} else {\r\n\t\t\t\t// Usuario no autenticado, usar carrito local\r\n\t\t\t\tconst localCart = storageService.getItem(appConfig.storage.cartKey);\r\n\t\t\t\tif (localCart) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst parsedCart =\r\n\t\t\t\t\t\t\ttypeof localCart === \"string\" ? JSON.parse(localCart) : localCart;\r\n\t\t\t\t\t\tsetCart(parsedCart);\r\n\t\t\t\t\t\tlastCartString.current = JSON.stringify(parsedCart);\r\n\t\t\t\t\t\tconst totalItems = calculateTotalItems(parsedCart.items || []);\r\n\t\t\t\t\t\tsetItemCount(totalItems);\r\n\t\t\t\t\t\tsetTotalAmount(parsedCart.total || 0);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.error(\"Error al parsear carrito del localStorage:\", e);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// No hay carrito local, crear uno vacío\r\n\t\t\t\t\tconst emptyCart: ShoppingCart = {\r\n\t\t\t\t\t\tid: 0,\r\n\t\t\t\t\t\titems: [],\r\n\t\t\t\t\t\ttotal: 0,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tsetCart(emptyCart);\r\n\t\t\t\t\tsetItemCount(0);\r\n\t\t\t\t\tsetTotalAmount(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfetchCartTimeoutRef.current = null;\r\n\t\t}, 100);\r\n\t}, [fetchCartFromAPI, calculateTotalItems]);\r\n\r\n\t// Initialize cart only when needed (not on mount)\r\n\tuseEffect(() => {\r\n\t\t// No auto-fetch on mount - only fetch when explicitly requested\r\n\t\tisInitialized.current = true;\r\n\t}, [isAuthenticated]);\r\n\r\n\t// Update derived states when cart changes\r\n\tuseEffect(() => {\r\n\t\tif (!cart) {\r\n\t\t\tsetItemCount(0);\r\n\t\t\tsetTotalAmount(0);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (cartUpdateTimeoutRef.current) {\r\n\t\t\tclearTimeout(cartUpdateTimeoutRef.current);\r\n\t\t}\r\n\r\n\t\tcartUpdateTimeoutRef.current = setTimeout(() => {\r\n\t\t\tconst totalItems = cart.items ? cart.items.length : 0;\r\n\r\n\t\t\tif (itemCount !== totalItems) {\r\n\t\t\t\tsetItemCount(totalItems);\r\n\t\t\t}\r\n\r\n\t\t\tif (totalAmount !== cart.total) {\r\n\t\t\t\tsetTotalAmount(cart.total);\r\n\t\t\t}\r\n\r\n\t\t\t// Sincronizar con localStorage para usuarios anónimos\r\n\t\t\tconst cartString = JSON.stringify(cart);\r\n\t\t\tif (\r\n\t\t\t\t!isAuthenticatedRef.current &&\r\n\t\t\t\tcartString !== lastCartString.current\r\n\t\t\t) {\r\n\t\t\t\tstorageService.setItem(appConfig.storage.cartKey, cartString);\r\n\t\t\t\tlastCartString.current = cartString;\r\n\t\t\t}\r\n\r\n\t\t\tcartUpdateTimeoutRef.current = null;\r\n\t\t}, 100);\r\n\t}, [cart, calculateTotalItems, itemCount, totalAmount]);\r\n\r\n\t// Add item to cart - versión local\r\n\tconst addToCartLocal = useCallback(\r\n\t\tasync (request: AddToCartRequest): Promise<boolean> => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!cart) return false;\r\n\r\n\t\t\t\tconst existingItemIndex = cart.items.findIndex(\r\n\t\t\t\t\t(item) => item.productId === request.productId\r\n\t\t\t\t);\r\n\r\n\t\t\t\tlet updatedCart: ShoppingCart;\r\n\r\n\t\t\t\tif (existingItemIndex >= 0) {\r\n\t\t\t\t\tconst updatedItems = [...cart.items];\r\n\t\t\t\t\tupdatedItems[existingItemIndex].quantity += request.quantity;\r\n\t\t\t\t\tupdatedItems[existingItemIndex].subtotal =\r\n\t\t\t\t\t\tupdatedItems[existingItemIndex].price *\r\n\t\t\t\t\t\tupdatedItems[existingItemIndex].quantity;\r\n\r\n\t\t\t\t\tconst newTotal = updatedItems.reduce(\r\n\t\t\t\t\t\t(sum, item) => sum + item.subtotal,\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tupdatedCart = {\r\n\t\t\t\t\t\t...cart,\r\n\t\t\t\t\t\titems: updatedItems,\r\n\t\t\t\t\t\ttotal: newTotal,\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst price = 0;\r\n\t\t\t\t\tconst newItem: CartItem = {\r\n\t\t\t\t\t\tid: Date.now(),\r\n\t\t\t\t\t\tproductId: request.productId,\r\n\t\t\t\t\t\tquantity: request.quantity,\r\n\t\t\t\t\t\tprice: price,\r\n\t\t\t\t\t\tsubtotal: price * request.quantity,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tconst newItems = [...cart.items, newItem];\r\n\t\t\t\t\tconst newTotal = newItems.reduce(\r\n\t\t\t\t\t\t(sum, item) => sum + item.subtotal,\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tupdatedCart = {\r\n\t\t\t\t\t\t...cart,\r\n\t\t\t\t\t\titems: newItems,\r\n\t\t\t\t\t\ttotal: newTotal,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCart(updatedCart);\r\n\t\t\t\tlastCartString.current = JSON.stringify(updatedCart);\r\n\t\t\t\treturn true;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al añadir producto al carrito:\", err);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[cart]\r\n\t);\r\n\r\n\t// Add item to cart\r\n\tconst addToCart = useCallback(\r\n\t\tasync (request: AddToCartRequest): Promise<boolean> => {\r\n\t\t\tif (!isAuthenticatedRef.current) {\r\n\t\t\t\tconst result = await addToCartLocal(request);\r\n\t\t\t\tawait fetchCart();\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst response = await cartService.addToCart(request);\r\n\t\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\t\tinvalidateCartCache();\r\n\t\t\t\t\tawait fetchCart();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error(response?.message || \"No se pudo agregar al carrito\");\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al agregar producto al carrito:\", err);\r\n\t\t\t\tsetError(\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al agregar producto al carrito\"\r\n\t\t\t\t);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[addToCartLocal, fetchCart, invalidateCartCache]\r\n\t);\r\n\r\n\t// Remove item from cart - versión local\r\n\tconst removeFromCartLocal = useCallback(\r\n\t\tasync (itemId: number): Promise<boolean> => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!cart) return false;\r\n\r\n\t\t\t\tconst updatedItems = cart.items.filter((item) => item.id !== itemId);\r\n\t\t\t\tconst newTotal = updatedItems.reduce(\r\n\t\t\t\t\t(sum, item) => sum + item.subtotal,\r\n\t\t\t\t\t0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst updatedCart = {\r\n\t\t\t\t\t...cart,\r\n\t\t\t\t\titems: updatedItems,\r\n\t\t\t\t\ttotal: newTotal,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsetCart(updatedCart);\r\n\t\t\t\tlastCartString.current = JSON.stringify(updatedCart);\r\n\t\t\t\treturn true;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al eliminar producto del carrito:\", err);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[cart]\r\n\t);\r\n\r\n\t// Remove item from cart\r\n\tconst removeFromCart = useCallback(\r\n\t\tasync (itemId: number): Promise<boolean> => {\r\n\t\t\tif (!isAuthenticatedRef.current) {\r\n\t\t\t\tconst result = await removeFromCartLocal(itemId);\r\n\t\t\t\tawait fetchCart();\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst response = await cartService.removeFromCart(itemId);\r\n\t\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\t\tinvalidateCartCache();\r\n\t\t\t\t\tawait fetchCart();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error(response?.message || \"No se pudo eliminar del carrito\");\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al eliminar producto del carrito:\", err);\r\n\t\t\t\tsetError(\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al eliminar producto del carrito\"\r\n\t\t\t\t);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[removeFromCartLocal, fetchCart, invalidateCartCache]\r\n\t);\r\n\r\n\t// Update cart item quantity - versión local\r\n\tconst updateCartItemLocal = useCallback(\r\n\t\tasync (data: CartItemUpdateData): Promise<boolean> => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!cart) return false;\r\n\r\n\t\t\t\tconst updatedItems = cart.items.map((item) => {\r\n\t\t\t\t\tif (item.id === data.itemId) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\tquantity: data.quantity,\r\n\t\t\t\t\t\t\tsubtotal: item.price * data.quantity,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst newTotal = updatedItems.reduce(\r\n\t\t\t\t\t(sum, item) => sum + item.subtotal,\r\n\t\t\t\t\t0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst updatedCart = {\r\n\t\t\t\t\t...cart,\r\n\t\t\t\t\titems: updatedItems,\r\n\t\t\t\t\ttotal: newTotal,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsetCart(updatedCart);\r\n\t\t\t\tlastCartString.current = JSON.stringify(updatedCart);\r\n\t\t\t\treturn true;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al actualizar producto del carrito:\", err);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[cart]\r\n\t);\r\n\r\n\t// Update cart item quantity\r\n\tconst updateCartItem = useCallback(\r\n\t\tasync (data: CartItemUpdateData): Promise<boolean> => {\r\n\t\t\tif (!isAuthenticatedRef.current) {\r\n\t\t\t\tconst result = await updateCartItemLocal(data);\r\n\t\t\t\tawait fetchCart();\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst response = await cartService.updateCartItem(\r\n\t\t\t\t\tdata.itemId,\r\n\t\t\t\t\tdata.quantity\r\n\t\t\t\t);\r\n\t\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\t\tinvalidateCartCache();\r\n\t\t\t\t\tawait fetchCart();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\tresponse?.message || \"No se pudo actualizar el carrito\"\r\n\t\t\t\t);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al actualizar producto del carrito:\", err);\r\n\t\t\t\tsetError(\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al actualizar producto del carrito\"\r\n\t\t\t\t);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[updateCartItemLocal, fetchCart, invalidateCartCache]\r\n\t);\r\n\r\n\t// Clear entire cart - versión local\r\n\tconst clearCartLocal = useCallback(async (): Promise<boolean> => {\r\n\t\ttry {\r\n\t\t\tif (!cart) return false;\r\n\r\n\t\t\tconst emptyCart = {\r\n\t\t\t\tid: cart.id,\r\n\t\t\t\titems: [],\r\n\t\t\t\ttotal: 0,\r\n\t\t\t};\r\n\r\n\t\t\tsetCart(emptyCart);\r\n\t\t\tlastCartString.current = JSON.stringify(emptyCart);\r\n\r\n\t\t\tstorageService.setItem(\r\n\t\t\t\tappConfig.storage.cartKey,\r\n\t\t\t\tJSON.stringify(emptyCart)\r\n\t\t\t);\r\n\t\t\treturn true;\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error al vaciar carrito:\", err);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}, [cart]);\r\n\r\n\t// Clear entire cart\r\n\tconst clearCart = useCallback(async (): Promise<boolean> => {\r\n\t\tif (!isAuthenticatedRef.current) {\r\n\t\t\tconst result = await clearCartLocal();\r\n\t\t\tawait fetchCart();\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst response = await cartService.clearCart();\r\n\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\t// ✅ INVALIDAR CACHE Y ACTUALIZAR ESTADO\r\n\t\t\t\tinvalidateCartCache();\r\n\t\t\t\tawait fetchCart(); // Actualizar estado del carrito\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tthrow new Error(response?.message || \"No se pudo vaciar el carrito\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error al vaciar carrito:\", err);\r\n\t\t\tsetError(err instanceof Error ? err.message : \"Error al vaciar carrito\");\r\n\t\t\treturn false;\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, [clearCartLocal, fetchCart, invalidateCartCache]);\r\n\r\n\t// ✅ NUEVO: Validar código de descuento\r\n\tconst validateDiscountCode = useCallback(async (code: string): Promise<{ success: boolean; message: string; data?: DiscountCode }> => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst response = await cartService.validateDiscountCode(code);\r\n\t\t\t\r\n\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tmessage: response.message || \"Código válido\",\r\n\t\t\t\t\tdata: response.data\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: response?.message || \"Código de descuento inválido\"\r\n\t\t\t};\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.error(\"Error validating discount code:\", error);\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: error.response?.data?.message || error.message || \"Error al validar código de descuento\"\r\n\t\t\t};\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// ✅ NUEVO: Aplicar código de descuento\r\n\tconst applyDiscountCode = useCallback(async (code: string): Promise<{ success: boolean; message: string; cart?: ShoppingCart }> => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst response = await cartService.applyDiscountCode(code);\r\n\t\t\t\r\n\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\t// Actualizar cart state con datos del response\r\n\t\t\t\tif (response.data?.cart) {\r\n\t\t\t\t\tsetCart(response.data.cart);\r\n\t\t\t\t\tlastCartString.current = JSON.stringify(response.data.cart);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Guardar información del descuento aplicado\r\n\t\t\t\tif (response.data?.discount_code) {\r\n\t\t\t\t\tsetAppliedDiscount({\r\n\t\t\t\t\t\tdiscountCode: response.data.discount_code,\r\n\t\t\t\t\t\tappliedAt: new Date()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Invalidar cache\r\n\t\t\t\tinvalidateCartCache();\r\n\t\t\t\t\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tmessage: response.message || \"Descuento aplicado exitosamente\",\r\n\t\t\t\t\tcart: response.data?.cart\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: response?.message || \"No se pudo aplicar el código de descuento\"\r\n\t\t\t};\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.error(\"Error applying discount code:\", error);\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: error.response?.data?.message || error.message || \"Error al aplicar código de descuento\"\r\n\t\t\t};\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, [invalidateCartCache]);\r\n\r\n\t// ✅ NUEVO: Remover código de descuento\r\n\tconst removeDiscountCode = useCallback(async (): Promise<{ success: boolean; message: string; cart?: ShoppingCart }> => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst response = await cartService.removeDiscountCode();\r\n\t\t\t\r\n\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\t// Actualizar cart state\r\n\t\t\t\tif (response.data?.cart) {\r\n\t\t\t\t\tsetCart(response.data.cart);\r\n\t\t\t\t\tlastCartString.current = JSON.stringify(response.data.cart);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Limpiar descuento aplicado\r\n\t\t\t\tsetAppliedDiscount(null);\r\n\t\t\t\t\r\n\t\t\t\t// Invalidar cache\r\n\t\t\t\tinvalidateCartCache();\r\n\t\t\t\t\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tmessage: response.message || \"Descuento removido exitosamente\",\r\n\t\t\t\t\tcart: response.data?.cart\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: response?.message || \"No se pudo remover el código de descuento\"\r\n\t\t\t};\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.error(\"Error removing discount code:\", error);\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: error.response?.data?.message || error.message || \"Error al remover código de descuento\"\r\n\t\t\t};\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, [invalidateCartCache]);\r\n\r\n\treturn (\r\n\t\t<CartContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tcart,\r\n\t\t\t\tloading,\r\n\t\t\t\terror,\r\n\t\t\t\taddToCart,\r\n\t\t\t\tremoveFromCart,\r\n\t\t\t\tupdateCartItem,\r\n\t\t\t\tclearCart,\r\n\t\t\t\tfetchCart,\r\n\t\t\t\titemCount,\r\n\t\t\t\ttotalAmount,\r\n\t\t\t\tshowNotification,\r\n\t\t\t\tcartItemCount: itemCount,\r\n\t\t\t\t// ✅ NUEVOS: Propiedades de código de descuento\r\n\t\t\t\tappliedDiscount,\r\n\t\t\t\tvalidateDiscountCode,\r\n\t\t\t\tapplyDiscountCode,\r\n\t\t\t\tremoveDiscountCode,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t\t{/* Las notificaciones ahora se muestran a través del UniversalToast global */}\r\n\t\t</CartContext.Provider>\r\n\t);\r\n};\r\n\r\nexport const useCartWithNotifications = () => {\r\n\tconst context = useContext(CartContext);\r\n\tif (!context) {\r\n\t\tthrow new Error(\r\n\t\t\t\"useCartWithNotifications debe usarse dentro de un CartProvider\"\r\n\t\t);\r\n\t}\r\n\treturn context;\r\n};\r\n\r\nexport default CartProvider;","import {useState, useEffect, useCallback, useRef} from \"react\";\r\nimport {useAuth} from \"./useAuth\";\r\nimport ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\nimport CacheService from \"../../infrastructure/services/CacheService\";\r\n\r\ninterface HeaderCounters {\r\n\tcartItemCount: number;\r\n\tfavoriteCount: number;\r\n\tnotificationCount: number;\r\n}\r\n\r\ninterface UseHeaderCountersReturn {\r\n\tcounters: HeaderCounters;\r\n\tloading: boolean;\r\n\terror: string | null;\r\n\trefetch: () => Promise<void>;\r\n}\r\n\r\ninterface HeaderCountersResponse {\r\n\tstatus?: string;\r\n\tdata?: {\r\n\t\tcart_count: number;\r\n\t\tfavorites_count: number;\r\n\t\tnotifications_count: number;\r\n\t};\r\n}\r\n\r\nclass HeaderCountersManager {\r\n\tprivate static instance: HeaderCountersManager;\r\n\tprivate subscribers: Set<(counters: HeaderCounters) => void> = new Set();\r\n\tprivate currentCounters: HeaderCounters = {\r\n\t\tcartItemCount: 0,\r\n\t\tfavoriteCount: 0,\r\n\t\tnotificationCount: 0,\r\n\t};\r\n\tprivate isLoading = false;\r\n\tprivate error: string | null = null;\r\n\tprivate lastFetch = 0;\r\n\tprivate readonly CACHE_KEY = \"header_counters\";\r\n\tprivate readonly CACHE_TIME = 2 * 60 * 1000;\r\n\tprivate readonly MIN_FETCH_INTERVAL = 30 * 1000;\r\n\r\n\tstatic getInstance(): HeaderCountersManager {\r\n\t\tif (!HeaderCountersManager.instance) {\r\n\t\t\tHeaderCountersManager.instance = new HeaderCountersManager();\r\n\t\t}\r\n\t\treturn HeaderCountersManager.instance;\r\n\t}\r\n\r\n\tsubscribe(callback: (counters: HeaderCounters) => void): () => void {\r\n\t\tthis.subscribers.add(callback);\r\n\t\tcallback(this.currentCounters);\r\n\t\treturn () => this.subscribers.delete(callback);\r\n\t}\r\n\r\n\tprivate notify() {\r\n\t\tthis.subscribers.forEach((callback) => callback(this.currentCounters));\r\n\t}\r\n\r\n\tasync fetchCounters(forceRefresh = false): Promise<void> {\r\n\t\tconst now = Date.now();\r\n\r\n\t\tif (!forceRefresh && now - this.lastFetch < this.MIN_FETCH_INTERVAL) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!forceRefresh) {\r\n\t\t\tconst cached = CacheService.getItem(this.CACHE_KEY);\r\n\t\t\tif (cached) {\r\n\t\t\t\tthis.currentCounters = cached;\r\n\t\t\t\tthis.notify();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isLoading) return;\r\n\r\n\t\tthis.isLoading = true;\r\n\t\tthis.error = null;\r\n\t\tthis.notify();\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<HeaderCountersResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.HEADER_COUNTERS\r\n\t\t\t);\r\n\r\n\t\t\tlet cartCount = 0;\r\n\t\t\tlet favCount = 0;\r\n\t\t\tlet notifCount = 0;\r\n\r\n\t\t\tif (response?.data) {\r\n\t\t\t\tcartCount = response.data.cart_count || 0;\r\n\t\t\t\tfavCount = response.data.favorites_count || 0;\r\n\t\t\t\tnotifCount = response.data.notifications_count || 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.currentCounters = {\r\n\t\t\t\tcartItemCount: cartCount,\r\n\t\t\t\tfavoriteCount: favCount,\r\n\t\t\t\tnotificationCount: notifCount,\r\n\t\t\t};\r\n\r\n\t\t\tthis.lastFetch = now;\r\n\t\t\tCacheService.setItem(this.CACHE_KEY, this.currentCounters, this.CACHE_TIME);\r\n\r\n\t\t} catch (error: any) {\r\n\t\t\tthis.error = error instanceof Error ? error.message : \"Error al cargar contadores\";\r\n\t\t\tthis.currentCounters = {\r\n\t\t\t\tcartItemCount: 0,\r\n\t\t\t\tfavoriteCount: 0,\r\n\t\t\t\tnotificationCount: 0,\r\n\t\t\t};\r\n\t\t} finally {\r\n\t\t\tthis.isLoading = false;\r\n\t\t\tthis.notify();\r\n\t\t}\r\n\t}\r\n\r\n\tinvalidateCache() {\r\n\t\tCacheService.removeItem(this.CACHE_KEY);\r\n\t\tthis.lastFetch = 0;\r\n\t}\r\n\r\n\tgetState() {\r\n\t\treturn {\r\n\t\t\tcounters: this.currentCounters,\r\n\t\t\tloading: this.isLoading,\r\n\t\t\terror: this.error,\r\n\t\t};\r\n\t}\r\n\r\n\tupdateCounter(type: keyof HeaderCounters, value: number) {\r\n\t\tthis.currentCounters = {\r\n\t\t\t...this.currentCounters,\r\n\t\t\t[type]: Math.max(0, value),\r\n\t\t};\r\n\t\tCacheService.setItem(this.CACHE_KEY, this.currentCounters, this.CACHE_TIME);\r\n\t\tthis.notify();\r\n\t}\r\n\r\n\tincrementCart() {\r\n\t\tthis.updateCounter(\"cartItemCount\", this.currentCounters.cartItemCount + 1);\r\n\t}\r\n\r\n\tdecrementCart() {\r\n\t\tthis.updateCounter(\"cartItemCount\", this.currentCounters.cartItemCount - 1);\r\n\t}\r\n\r\n\tincrementFavorites() {\r\n\t\tthis.updateCounter(\"favoriteCount\", this.currentCounters.favoriteCount + 1);\r\n\t}\r\n\r\n\tdecrementFavorites() {\r\n\t\tthis.updateCounter(\"favoriteCount\", this.currentCounters.favoriteCount - 1);\r\n\t}\r\n\r\n\tmarkNotificationAsRead() {\r\n\t\tthis.updateCounter(\"notificationCount\", this.currentCounters.notificationCount - 1);\r\n\t}\r\n}\r\n\r\nexport const useHeaderCounters = (): UseHeaderCountersReturn => {\r\n\tconst [state, setState] = useState(() => {\r\n\t\tconst manager = HeaderCountersManager.getInstance();\r\n\t\treturn manager.getState();\r\n\t});\r\n\r\n\tconst {isAuthenticated} = useAuth();\r\n\tconst managerRef = useRef(HeaderCountersManager.getInstance());\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isAuthenticated) {\r\n\t\t\tsetState({\r\n\t\t\t\tcounters: {cartItemCount: 0, favoriteCount: 0, notificationCount: 0},\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: null,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst manager = managerRef.current;\r\n\t\tconst unsubscribe = manager.subscribe((counters) => {\r\n\t\t\tsetState({\r\n\t\t\t\tcounters,\r\n\t\t\t\tloading: manager.getState().loading,\r\n\t\t\t\terror: manager.getState().error,\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tmanager.fetchCounters();\r\n\t\treturn unsubscribe;\r\n\t}, [isAuthenticated]);\r\n\r\n\tconst refetch = useCallback(async () => {\r\n\t\tif (isAuthenticated) {\r\n\t\t\tawait managerRef.current.fetchCounters(true);\r\n\t\t}\r\n\t}, [isAuthenticated]);\r\n\r\n\treturn {\r\n\t\tcounters: state.counters,\r\n\t\tloading: state.loading,\r\n\t\terror: state.error,\r\n\t\trefetch,\r\n\t};\r\n};\r\n\r\nexport const useInvalidateCounters = () => {\r\n\tconst manager = useRef(HeaderCountersManager.getInstance());\r\n\r\n\treturn {\r\n\t\tinvalidateCounters: () => manager.current.invalidateCache(),\r\n\t\toptimisticCartAdd: () => manager.current.incrementCart(),\r\n\t\toptimisticCartRemove: () => manager.current.decrementCart(),\r\n\t\toptimisticFavoriteAdd: () => manager.current.incrementFavorites(),\r\n\t\toptimisticFavoriteRemove: () => manager.current.decrementFavorites(),\r\n\t\toptimisticNotificationRead: () => manager.current.markNotificationAsRead(),\r\n\t\tforceRefresh: () => manager.current.fetchCounters(true),\r\n\t};\r\n};\r\n","// src/presentation/hooks/useCart.ts - SIMPLIFICADO\r\nimport {useContext} from \"react\";\r\nimport {CartContext} from \"../contexts/CartContext\";\r\n\r\nexport const useCart = () => {\r\n\tconst context = useContext(CartContext);\r\n\tif (!context) {\r\n\t\tthrow new Error(\"useCart debe usarse dentro de un CartProvider\");\r\n\t}\r\n\treturn context;\r\n};\r\n\r\nexport default useCart;\r\n","// src/presentation/services/ErrorHandlingService.ts - MEJORADO\r\nimport { NotificationType } from '../types/NotificationTypes';\r\n\r\nexport interface ApiError {\r\n\tstatus: string;\r\n\tmessage: string;\r\n\tcode?: string;\r\n\tdetails?: any;\r\n}\r\n\r\nexport interface ErrorResponse {\r\n\tstatus: 'error' | 'fail';\r\n\tmessage: string;\r\n\tdata?: any;\r\n\tcode?: string;\r\n}\r\n\r\nexport interface ErrorHandlingResult {\r\n\tmessage: string;\r\n\ttype: NotificationType.ERROR | NotificationType.WARNING | NotificationType.INFO;\r\n\tshouldRetry: boolean;\r\n}\r\n\r\nexport class ErrorHandlingService {\r\n\t/**\r\n\t * Extrae el mensaje de error más útil para el usuario\r\n\t */\r\n\tstatic extractUserMessage(error: any): string {\r\n\t\t// Si es un error de respuesta de API\r\n\t\tif (error?.response?.data) {\r\n\t\t\tconst data = error.response.data;\r\n\t\t\t\r\n\t\t\t// Formato estándar de la API: { status: \"error\", message: \"...\" }\r\n\t\t\tif (data.message) {\r\n\t\t\t\treturn this.translateErrorMessage(data.message);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Si hay errores de validación\r\n\t\t\tif (data.errors && Array.isArray(data.errors)) {\r\n\t\t\t\treturn data.errors.map((err: any) => err.message || err).join(', ');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Si hay un error general\r\n\t\t\tif (data.error) {\r\n\t\t\t\treturn this.translateErrorMessage(data.error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Si es un error directo con message\r\n\t\tif (error?.message) {\r\n\t\t\treturn this.translateErrorMessage(error.message);\r\n\t\t}\r\n\r\n\t\t// Si es un string directo\r\n\t\tif (typeof error === 'string') {\r\n\t\t\treturn this.translateErrorMessage(error);\r\n\t\t}\r\n\r\n\t\t// Error de red\r\n\t\tif (error?.code === 'NETWORK_ERROR' || error?.message?.includes('Network Error')) {\r\n\t\t\treturn 'Error de conexión. Verifica tu conexión a internet.';\r\n\t\t}\r\n\r\n\t\t// Error por timeout\r\n\t\tif (error?.code === 'ECONNABORTED' || error?.message?.includes('timeout')) {\r\n\t\t\treturn 'La solicitud tardó demasiado. Inténtalo de nuevo.';\r\n\t\t}\r\n\r\n\t\t// Error por defecto\r\n\t\treturn 'Ha ocurrido un error inesperado. Inténtalo de nuevo.';\r\n\t}\r\n\r\n\t/**\r\n\t * Traduce mensajes de error del backend a mensajes amigables\r\n\t */\r\n\tstatic translateErrorMessage(message: string): string {\r\n\t\tconst translations: Record<string, string> = {\r\n\t\t\t// Errores de stock\r\n\t\t\t'Stock insuficiente': 'No hay suficiente stock disponible. Reduce la cantidad.',\r\n\t\t\t'Insufficient stock': 'No hay suficiente stock disponible. Reduce la cantidad.',\r\n\t\t\t'Out of stock': 'Producto agotado. No hay unidades disponibles.',\r\n\t\t\t'No hay suficiente stock': 'No hay suficiente stock disponible. Reduce la cantidad.',\r\n\t\t\t'Producto agotado': 'Producto agotado. No hay unidades disponibles.',\r\n\t\t\t\r\n\t\t\t// Errores de autenticación\r\n\t\t\t'Unauthorized': 'Debes iniciar sesión para realizar esta acción.',\r\n\t\t\t'Token expired': 'Tu sesión ha expirado. Inicia sesión nuevamente.',\r\n\t\t\t'Invalid credentials': 'Credenciales incorrectas. Verifica tu email y contraseña.',\r\n\t\t\t\r\n\t\t\t// Errores de validación\r\n\t\t\t'Validation failed': 'Los datos ingresados no son válidos.',\r\n\t\t\t'Required field missing': 'Faltan campos obligatorios.',\r\n\t\t\t'Invalid email format': 'El formato del email no es válido.',\r\n\t\t\t'Password too weak': 'La contraseña debe ser más segura.',\r\n\t\t\t\r\n\t\t\t// Errores de productos\r\n\t\t\t'Product not found': 'El producto no fue encontrado.',\r\n\t\t\t'Product unavailable': 'El producto no está disponible temporalmente.',\r\n\t\t\t'Price changed': 'El precio del producto ha cambiado. Actualiza la página.',\r\n\t\t\t\r\n\t\t\t// Errores de carrito\r\n\t\t\t'Cart empty': 'Tu carrito está vacío.',\r\n\t\t\t'Cart item not found': 'El producto no se encuentra en tu carrito.',\r\n\t\t\t'Cannot update cart': 'No se pudo actualizar el carrito. Inténtalo de nuevo.',\r\n\t\t\t\r\n\t\t\t// Errores de pago\r\n\t\t\t'Payment failed': 'El pago no pudo ser procesado. Verifica tus datos.',\r\n\t\t\t'Invalid payment method': 'Método de pago no válido.',\r\n\t\t\t'Insufficient funds': 'Fondos insuficientes en tu cuenta.',\r\n\t\t\t\r\n\t\t\t// Errores de envío\r\n\t\t\t'Invalid shipping address': 'La dirección de envío no es válida.',\r\n\t\t\t'Shipping not available': 'Envío no disponible para tu ubicación.',\r\n\t\t\t\r\n\t\t\t// Errores del sistema\r\n\t\t\t'Server error': 'Error del servidor. Inténtalo más tarde.',\r\n\t\t\t'Service unavailable': 'Servicio temporalmente no disponible.',\r\n\t\t\t'Rate limit exceeded': 'Has realizado demasiadas solicitudes. Espera un momento.',\r\n\t\t};\r\n\r\n\t\t// Buscar traducción exacta\r\n\t\tif (translations[message]) {\r\n\t\t\treturn translations[message];\r\n\t\t}\r\n\r\n\t\t// Buscar por palabras clave\r\n\t\tconst lowerMessage = message.toLowerCase();\r\n\t\t\r\n\t\tif (lowerMessage.includes('stock') || lowerMessage.includes('existencia')) {\r\n\t\t\treturn 'Problema con el stock del producto. Verifica la disponibilidad.';\r\n\t\t}\r\n\t\t\r\n\t\tif (lowerMessage.includes('payment') || lowerMessage.includes('pago')) {\r\n\t\t\treturn 'Error en el procesamiento del pago. Verifica tus datos.';\r\n\t\t}\r\n\t\t\r\n\t\tif (lowerMessage.includes('network') || lowerMessage.includes('connection') || lowerMessage.includes('conexión')) {\r\n\t\t\treturn 'Error de conexión. Verifica tu conexión a internet.';\r\n\t\t}\r\n\t\t\r\n\t\tif (lowerMessage.includes('timeout') || lowerMessage.includes('tiempo')) {\r\n\t\t\treturn 'La operación tardó demasiado. Inténtalo de nuevo.';\r\n\t\t}\r\n\r\n\t\tif (lowerMessage.includes('cantidad') || lowerMessage.includes('disponible')) {\r\n\t\t\treturn 'Cantidad solicitada no disponible. Verifica el stock.';\r\n\t\t}\r\n\r\n\t\t// Si no hay traducción, devolver el mensaje original\r\n\t\treturn message;\r\n\t}\r\n\r\n\t/**\r\n\t * Determina el tipo de notificación basado en el error\r\n\t */\r\n\tstatic getNotificationType(error: any): NotificationType.ERROR | NotificationType.WARNING | NotificationType.INFO {\r\n\t\tconst message = error?.response?.data?.message || error?.message || '';\r\n\t\tconst lowerMessage = message.toLowerCase();\r\n\r\n\t\t// Warnings para errores de validación o stock\r\n\t\tif (lowerMessage.includes('stock') ||\r\n\t\t\tlowerMessage.includes('existencia') ||\r\n\t\t\tlowerMessage.includes('cantidad') ||\r\n\t\t\tlowerMessage.includes('validation') ||\r\n\t\t\tlowerMessage.includes('required')) {\r\n\t\t\treturn NotificationType.WARNING;\r\n\t\t}\r\n\r\n\t\t// Info para errores de autenticación\r\n\t\tif (lowerMessage.includes('unauthorized') ||\r\n\t\t\tlowerMessage.includes('token') ||\r\n\t\t\tlowerMessage.includes('login') ||\r\n\t\t\tlowerMessage.includes('sesión')) {\r\n\t\t\treturn NotificationType.INFO;\r\n\t\t}\r\n\r\n\t\t// Error por defecto\r\n\t\treturn NotificationType.ERROR;\r\n\t}\r\n\r\n\t/**\r\n\t * Maneja errores de API de manera consistente\r\n\t */\r\n\tstatic handleApiError(error: any, context?: string): ErrorHandlingResult {\r\n\t\tconst message = this.extractUserMessage(error);\r\n\t\tconst type = this.getNotificationType(error);\r\n\t\t\r\n\t\t// Determinar si se puede reintentar\r\n\t\tconst shouldRetry = this.shouldRetry(error);\r\n\r\n\t\t// Log del error para debugging\r\n\t\tconsole.error(`Error${context ? ` in ${context}` : ''}:`, {\r\n\t\t\toriginalError: error,\r\n\t\t\tuserMessage: message,\r\n\t\t\ttype,\r\n\t\t\tshouldRetry\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tmessage,\r\n\t\t\ttype,\r\n\t\t\tshouldRetry\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Determina si un error permite reintentar la operación\r\n\t */\r\n\tstatic shouldRetry(error: any): boolean {\r\n\t\t// Errores de red o timeout - se puede reintentar\r\n\t\tif (error?.code === 'NETWORK_ERROR' || \r\n\t\t\terror?.code === 'ECONNABORTED' || \r\n\t\t\terror?.message?.includes('timeout') ||\r\n\t\t\terror?.message?.includes('Network Error')) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Errores del servidor (5xx) - se puede reintentar\r\n\t\tif (error?.response?.status >= 500) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Errores de cliente (4xx) - generalmente no se puede reintentar\r\n\t\tif (error?.response?.status >= 400 && error?.response?.status < 500) {\r\n\t\t\t// Excepto algunos casos específicos\r\n\t\t\tconst retryableCodes = [408, 429]; // Request Timeout, Too Many Requests\r\n\t\t\treturn retryableCodes.includes(error.response.status);\r\n\t\t}\r\n\r\n\t\t// Errores de stock - no se puede reintentar sin cambiar datos\r\n\t\tconst message = error?.response?.data?.message || error?.message || '';\r\n\t\tif (message.toLowerCase().includes('stock') || \r\n\t\t\tmessage.toLowerCase().includes('existencia') ||\r\n\t\t\tmessage.toLowerCase().includes('cantidad')) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Maneja errores específicos de stock\r\n\t */\r\n\tstatic handleStockError(availableStock: number, requestedQuantity: number): ErrorHandlingResult {\r\n\t\tconst message = `Solo hay ${availableStock} unidad${availableStock !== 1 ? 'es' : ''} disponible${availableStock !== 1 ? 's' : ''} en stock. Solicitaste ${requestedQuantity}.`;\r\n\r\n\t\treturn {\r\n\t\t\tmessage,\r\n\t\t\ttype: NotificationType.WARNING,\r\n\t\t\tshouldRetry: false\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Maneja errores de validación de formularios\r\n\t */\r\n\tstatic handleValidationError(validationErrors: Record<string, string[]>): ErrorHandlingResult {\r\n\t\tconst errors = Object.values(validationErrors).flat();\r\n\t\tconst message = errors.length > 0 ? errors.join('. ') : 'Error de validación';\r\n\r\n\t\treturn {\r\n\t\t\tmessage,\r\n\t\t\ttype: NotificationType.WARNING,\r\n\t\t\tshouldRetry: false\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport default ErrorHandlingService;","// src/presentation/hooks/useErrorHandler.ts - CORREGIDO\r\nimport { useCallback } from 'react';\r\nimport { NotificationType } from '../types/NotificationTypes';\r\nimport { ErrorHandlingService } from '../services/ErrorHandlingService';\r\nimport type { ErrorHandlingResult } from '../services/ErrorHandlingService';\r\n\r\nexport interface UseErrorHandlerProps {\r\n\tshowNotification: (type: NotificationType, message: string) => void;\r\n\tcontext?: string;\r\n}\r\n\r\nexport const useErrorHandler = ({ showNotification, context }: UseErrorHandlerProps) => {\r\n\tconst handleError = useCallback((error: any, customMessage?: string): boolean => {\r\n\t\tconst errorInfo: ErrorHandlingResult = ErrorHandlingService.handleApiError(error, context);\r\n\r\n\t\t// Usar mensaje personalizado si se proporciona\r\n\t\tconst message = customMessage || errorInfo.message;\r\n\r\n\t\tshowNotification(errorInfo.type, message);\r\n\r\n\t\treturn errorInfo.shouldRetry;\r\n\t}, [showNotification, context]);\r\n\r\n\tconst handleSuccess = useCallback((message: string) => {\r\n\t\tshowNotification(NotificationType.SUCCESS, message);\r\n\t}, [showNotification]);\r\n\r\n\t// Función específica para errores de stock\r\n\tconst handleStockError = useCallback((availableStock: number, requestedQuantity: number) => {\r\n\t\tconst message = `Solo hay ${availableStock} unidad${availableStock !== 1 ? 'es' : ''} disponible${availableStock !== 1 ? 's' : ''} en stock. Solicitaste ${requestedQuantity}.`;\r\n\t\tshowNotification(NotificationType.WARNING, message);\r\n\t}, [showNotification]);\r\n\r\n\treturn {\r\n\t\thandleError,\r\n\t\thandleSuccess,\r\n\t\thandleStockError\r\n\t};\r\n};","// src/utils/volumeDiscountCalculator.ts\r\n\r\n// import VolumeDiscountConfigService from '../core/services/VolumeDiscountConfigService'; // 🎯 JORDAN: Migrado a ConfigurationManager\r\nimport ConfigurationManager from '../core/services/ConfigurationManager';\r\n\r\n// ✅ TIPOS ACTUALIZADOS para compatibilidad con CartPage\r\nexport interface VolumeDiscountTier {\r\n  quantity: number;\r\n  discount: number;\r\n  label: string;\r\n}\r\n\r\nexport interface VolumeDiscountResult {\r\n  originalPrice: number;\r\n  discountedPrice: number;\r\n  discountPercentage: number;\r\n  savings: number;\r\n  savingsTotal: number;\r\n  hasDiscount: boolean;\r\n  tierLabel: string | null;\r\n}\r\n\r\n// ✅ NUEVO: Interface para items del carrito con descuentos aplicados\r\nexport interface CartItemWithDiscounts {\r\n  id: number;\r\n  productId: number;\r\n  quantity: number;\r\n  price: number; // Precio base original\r\n  product: any;\r\n  imageUrl: string;\r\n  // ✅ NUEVO: Información de descuentos calculados\r\n  discount: {\r\n    originalPrice: number;\r\n    discountedPrice: number;\r\n    discountPercentage: number;\r\n    savings: number;\r\n    savingsTotal: number;\r\n    hasDiscount: boolean;\r\n    sellerDiscountAmount: number;\r\n    volumeDiscountAmount: number;\r\n    finalPricePerUnit: number;\r\n  };\r\n}\r\n\r\n/**\r\n * 🎯 JORDAN: Servicio unificado para obtener configuración dinámica desde BD\r\n */\r\nconst configManager = ConfigurationManager.getInstance();\r\n\r\n/**\r\n * 🔧 CORREGIDO: Configuración de descuentos por volumen por defecto actualizada\r\n * Coincide con ConfigurationManager: 3+ = 5%, 6+ = 10%, 12+ = 15%\r\n */\r\nconst DEFAULT_VOLUME_DISCOUNTS: VolumeDiscountTier[] = [\r\n  { quantity: 3, discount: 5, label: \"3+\" },\r\n  { quantity: 6, discount: 10, label: \"6+\" },\r\n  { quantity: 12, discount: 15, label: \"12+\" }\r\n];\r\n\r\n/**\r\n * Calcula descuentos por volumen para un item del carrito\r\n * NOTA: Esta es la versión síncrona. Para aplicaciones real-time, usar calculateVolumeDiscountAsync\r\n */\r\nexport function calculateVolumeDiscount(\r\n  basePrice: number,\r\n  quantity: number,\r\n  customTiers?: VolumeDiscountTier[]\r\n): VolumeDiscountResult {\r\n  \r\n  // Si se proveen tiers personalizados, usarlos. Si no, usar los por defecto\r\n  // NOTA: Esta función es síncrona para compatibilidad con código existente\r\n  const tiers = customTiers || DEFAULT_VOLUME_DISCOUNTS;\r\n  \r\n  // Buscar el descuento aplicable para la cantidad\r\n  let applicableTier: VolumeDiscountTier | null = null;\r\n  \r\n  for (const tier of tiers) {\r\n    if (quantity >= tier.quantity) {\r\n      applicableTier = tier;\r\n    } else {\r\n      break; // Los tiers están ordenados por cantidad\r\n    }\r\n  }\r\n\r\n  if (!applicableTier) {\r\n    return {\r\n      originalPrice: basePrice, // Sin redondeo - frontend manejará en vista\r\n      discountedPrice: basePrice, // Sin redondeo - frontend manejará en vista\r\n      discountPercentage: 0,\r\n      savings: 0,\r\n      savingsTotal: 0,\r\n      hasDiscount: false,\r\n      tierLabel: null\r\n    };\r\n  }\r\n\r\n  const discountedPrice = basePrice * (1 - applicableTier.discount / 100); // Sin redondeo - frontend manejará\r\n  const savings = basePrice - discountedPrice; // Sin redondeo - frontend manejará\r\n  const savingsTotal = savings * quantity; // Sin redondeo - frontend manejará\r\n\r\n  return {\r\n    originalPrice: basePrice, // Sin redondeo - frontend manejará en vista\r\n    discountedPrice: discountedPrice, // Sin redondeo - frontend manejará en vista\r\n    discountPercentage: applicableTier.discount,\r\n    savings: savings, // Sin redondeo - frontend manejará en vista\r\n    savingsTotal: savingsTotal, // Sin redondeo - frontend manejará en vista\r\n    hasDiscount: true,\r\n    tierLabel: applicableTier.label\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Calcula descuentos por volumen de manera asíncrona usando configuración de BD\r\n */\r\nexport async function calculateVolumeDiscountAsync(\r\n  basePrice: number,\r\n  quantity: number,\r\n  customTiers?: VolumeDiscountTier[]\r\n): Promise<VolumeDiscountResult> {\r\n  \r\n  let tiers = customTiers;\r\n  \r\n  // 🎯 JORDAN: Si no se proveen tiers personalizados, obtenerlos desde ConfigurationManager\r\n  if (!tiers) {\r\n    try {\r\n      const configResult = await configManager.getUnifiedConfig();\r\n      if (configResult.config.volume_discounts && Array.isArray(configResult.config.volume_discounts) && configResult.config.volume_discounts.length > 0) {\r\n        tiers = configResult.config.volume_discounts;\r\n      }\r\n    } catch (error) {\r\n      console.warn('Error obteniendo configuración de descuentos, usando defaults:', error);\r\n      tiers = DEFAULT_VOLUME_DISCOUNTS;\r\n    }\r\n  }\r\n  \r\n  if (!tiers || tiers.length === 0) {\r\n    tiers = DEFAULT_VOLUME_DISCOUNTS;\r\n  }\r\n  \r\n  // Buscar el descuento aplicable para la cantidad\r\n  let applicableTier: VolumeDiscountTier | null = null;\r\n  \r\n  // Ordenar tiers por cantidad ascendente\r\n  const sortedTiers = [...tiers].sort((a, b) => a.quantity - b.quantity);\r\n  \r\n  for (const tier of sortedTiers) {\r\n    if (quantity >= tier.quantity) {\r\n      applicableTier = tier;\r\n    } else {\r\n      break; // Los tiers están ordenados por cantidad\r\n    }\r\n  }\r\n\r\n  if (!applicableTier) {\r\n    return {\r\n      originalPrice: basePrice, // Sin redondeo - frontend manejará en vista\r\n      discountedPrice: basePrice, // Sin redondeo - frontend manejará en vista\r\n      discountPercentage: 0,\r\n      savings: 0,\r\n      savingsTotal: 0,\r\n      hasDiscount: false,\r\n      tierLabel: null\r\n    };\r\n  }\r\n\r\n  const discountedPrice = basePrice * (1 - applicableTier.discount / 100); // Sin redondeo - frontend manejará\r\n  const savings = basePrice - discountedPrice; // Sin redondeo - frontend manejará\r\n  const savingsTotal = savings * quantity; // Sin redondeo - frontend manejará\r\n\r\n  return {\r\n    originalPrice: basePrice, // Sin redondeo - frontend manejará en vista\r\n    discountedPrice: discountedPrice, // Sin redondeo - frontend manejará en vista\r\n    discountPercentage: applicableTier.discount,\r\n    savings: savings, // Sin redondeo - frontend manejará en vista\r\n    savingsTotal: savingsTotal, // Sin redondeo - frontend manejará en vista\r\n    hasDiscount: true,\r\n    tierLabel: applicableTier.label\r\n  };\r\n}\r\n\r\n/**\r\n * ✅ FUNCIÓN PRINCIPAL: Calcula todos los descuentos para un item del carrito\r\n * Incluye descuento del seller + descuento por volumen\r\n * SECUENCIA EXACTA: Precio Normal → Descuento del vendedor → Descuento por volumen → Descuento cupón → IVA\r\n * NOTA: Esta es la versión síncrona para compatibilidad. Para tiers dinámicos usar calculateCartItemDiscountsAsync\r\n */\r\nexport function calculateCartItemDiscounts(cartItem: any): CartItemWithDiscounts['discount'] {\r\n  \r\n  const originalPrice = cartItem.product?.price || cartItem.price || 0;\r\n  const sellerDiscountPercentage = cartItem.product?.discount_percentage || 0;\r\n  const quantity = cartItem.quantity || 1;\r\n  \r\n  // 1. Calcular descuento del seller (sobre precio original)\r\n  const sellerDiscountAmount = originalPrice * (sellerDiscountPercentage / 100); // Sin redondeo - frontend manejará\r\n  const priceAfterSellerDiscount = originalPrice - sellerDiscountAmount; // Sin redondeo - frontend manejará\r\n  \r\n  // 2. Calcular descuento por volumen (sobre precio ya con descuento del seller)\r\n  // NOTA: Usando versión síncrona con defaults para compatibilidad\r\n  const volumeDiscount = calculateVolumeDiscount(priceAfterSellerDiscount, quantity);\r\n  \r\n  // 3. Precio final por unidad (después de ambos descuentos)\r\n  const finalPricePerUnit = volumeDiscount.discountedPrice; // Sin redondeo - frontend manejará\r\n  \r\n  // 4. Ahorros totales (precisos)\r\n  const totalSellerSavings = sellerDiscountAmount * quantity; // Sin redondeo - frontend manejará\r\n  const totalVolumeSavings = volumeDiscount.savingsTotal; // Sin redondeo - frontend manejará\r\n  const totalSavings = totalSellerSavings + totalVolumeSavings; // Sin redondeo - frontend manejará\r\n  \r\n  // 5. Determinar descuento principal a mostrar\r\n  const hasVolumeDiscount = volumeDiscount.hasDiscount;\r\n  const displayDiscountPercentage = hasVolumeDiscount ? \r\n    volumeDiscount.discountPercentage : sellerDiscountPercentage;\r\n  \r\n  return {\r\n    originalPrice: originalPrice, // Sin redondeo - frontend manejará en vista\r\n    discountedPrice: finalPricePerUnit, // Sin redondeo - frontend manejará en vista\r\n    discountPercentage: displayDiscountPercentage,\r\n    savings: originalPrice - finalPricePerUnit, // Sin redondeo - frontend manejará en vista\r\n    savingsTotal: totalSavings, // Sin redondeo - frontend manejará en vista\r\n    hasDiscount: sellerDiscountPercentage > 0 || hasVolumeDiscount,\r\n    sellerDiscountAmount: sellerDiscountAmount, // Sin redondeo - frontend manejará en vista\r\n    volumeDiscountAmount: volumeDiscount.savings, // Sin redondeo - frontend manejará en vista\r\n    finalPricePerUnit: finalPricePerUnit // Sin redondeo - frontend manejará en vista\r\n  };\r\n}\r\n\r\n/**\r\n * ✅ FUNCIÓN PRINCIPAL ASÍNCRONA: Calcula todos los descuentos con configuración dinámica de BD\r\n * Incluye descuento del seller + descuento por volumen desde BD\r\n * SECUENCIA EXACTA: Precio Normal → Descuento del vendedor → Descuento por volumen → Descuento cupón → IVA\r\n */\r\nexport async function calculateCartItemDiscountsAsync(cartItem: any, customTiers?: VolumeDiscountTier[]): Promise<CartItemWithDiscounts['discount']> {\r\n  \r\n  const originalPrice = cartItem.product?.price || cartItem.price || 0;\r\n  const sellerDiscountPercentage = cartItem.product?.discount_percentage || 0;\r\n  const quantity = cartItem.quantity || 1;\r\n  \r\n  // 1. Calcular descuento del seller (sobre precio original)\r\n  const sellerDiscountAmount = originalPrice * (sellerDiscountPercentage / 100); // Sin redondeo - frontend manejará\r\n  const priceAfterSellerDiscount = originalPrice - sellerDiscountAmount; // Sin redondeo - frontend manejará\r\n  \r\n  // 2. Calcular descuento por volumen (sobre precio ya con descuento del seller)\r\n  // NOTA: Usando versión asíncrona que obtiene tiers de BD si no se proveen\r\n  const volumeDiscount = await calculateVolumeDiscountAsync(priceAfterSellerDiscount, quantity, customTiers);\r\n  \r\n  // 3. Precio final por unidad (después de ambos descuentos)\r\n  const finalPricePerUnit = volumeDiscount.discountedPrice; // Sin redondeo - frontend manejará\r\n  \r\n  // 4. Ahorros totales (precisos)\r\n  const totalSellerSavings = sellerDiscountAmount * quantity; // Sin redondeo - frontend manejará\r\n  const totalVolumeSavings = volumeDiscount.savingsTotal; // Sin redondeo - frontend manejará\r\n  const totalSavings = totalSellerSavings + totalVolumeSavings; // Sin redondeo - frontend manejará\r\n  \r\n  // 5. Determinar descuento principal a mostrar\r\n  const hasVolumeDiscount = volumeDiscount.hasDiscount;\r\n  const displayDiscountPercentage = hasVolumeDiscount ? \r\n    volumeDiscount.discountPercentage : sellerDiscountPercentage;\r\n  \r\n  return {\r\n    originalPrice: originalPrice, // Sin redondeo - frontend manejará en vista\r\n    discountedPrice: finalPricePerUnit, // Sin redondeo - frontend manejará en vista\r\n    discountPercentage: displayDiscountPercentage,\r\n    savings: originalPrice - finalPricePerUnit, // Sin redondeo - frontend manejará en vista\r\n    savingsTotal: totalSavings, // Sin redondeo - frontend manejará en vista\r\n    hasDiscount: sellerDiscountPercentage > 0 || hasVolumeDiscount,\r\n    sellerDiscountAmount: sellerDiscountAmount, // Sin redondeo - frontend manejará en vista\r\n    volumeDiscountAmount: volumeDiscount.savings, // Sin redondeo - frontend manejará en vista\r\n    finalPricePerUnit: finalPricePerUnit // Sin redondeo - frontend manejará en vista\r\n  };\r\n}","/**\r\n * 🎯 JORDAN - CALCULADORA CENTRALIZADA DE E-COMMERCE\r\n * Garantiza consistencia total entre todo el sistema\r\n * ÚNICA fuente de verdad para todos los cálculos\r\n * MIGRADO: Ahora usa ConfigurationManager unificado\r\n */\r\n\r\nimport ConfigurationManager from '../core/services/ConfigurationManager';\r\n\r\nexport interface CartItem {\r\n  id?: number;\r\n  product?: {\r\n    id: number;\r\n    price: number;\r\n    discount_percentage?: number;\r\n    seller_id?: number;\r\n  };\r\n  product_id?: number;\r\n  productId?: number;\r\n  quantity: number;\r\n  base_price?: number;\r\n  price?: number;\r\n  final_price?: number;\r\n  volume_discount_percentage?: number;\r\n  volume_savings?: number;\r\n  seller_discount_amount?: number;\r\n  pricing_info?: {\r\n    seller_discount: number;\r\n    volume_discount_percentage: number;\r\n    volume_savings: number;\r\n    total_savings: number;\r\n  };\r\n}\r\n\r\nexport interface DiscountCode {\r\n  code: string;\r\n  type: 'percentage' | 'fixed';\r\n  value: number;\r\n  percentage?: number;\r\n  discount_percentage?: number;\r\n}\r\n\r\nexport interface CalculationResult {\r\n  // Flujo secuencial EXACTO\r\n  step1_originalSubtotal: number;        // $6.00 - Precio base × cantidad\r\n  step2_afterSellerDiscount: number;     // $3.00 - Después de descuento vendedor  \r\n  step3_afterVolumeDiscount: number;     // $2.85 - Después de descuento volumen\r\n  step4_afterCoupon: number;             // $2.71 - Después de cupón 5%\r\n  step5_withShipping: number;            // $7.71 - Con envío $5\r\n  step6_tax: number;                     // $1.16 - IVA 15%\r\n  step7_finalTotal: number;              // $8.87 - Total final\r\n\r\n  // Descuentos detallados\r\n  sellerDiscounts: number;               // $3.00 - Total descuentos vendedor\r\n  volumeDiscounts: number;               // $0.15 - Total descuentos volumen\r\n  couponDiscount: number;                // $0.14 - Descuento cupón\r\n  totalDiscounts: number;                // $3.29 - Suma de todos los descuentos\r\n\r\n  // Para backend\r\n  shipping: number;                      // $5.00\r\n  freeShipping: boolean;                 // false\r\n  volumeDiscountsApplied: boolean;       // true\r\n\r\n  // 🎯 JORDAN: Metadatos de configuración usada\r\n  configMetadata: {\r\n    source: 'cache' | 'api' | 'fallback';\r\n    version: string;\r\n    isStale: boolean;\r\n    warnings: string[];\r\n  };\r\n\r\n  // Aliases para compatibilidad\r\n  originalSubtotal: number;\r\n  subtotalAfterSellerDiscount: number;\r\n  subtotalAfterVolumeDiscount: number;\r\n  subtotalAfterCoupon: number;\r\n  subtotalWithShipping: number;\r\n  tax: number;\r\n  total: number;\r\n}\r\n\r\n/**\r\n * 🎯 JORDAN FASE 1: CALCULADORA MIGRADA CON CONFIGURACIÓN UNIFICADA\r\n * ELIMINA: Todas las configuraciones hardcoded\r\n * AÑADE: ConfigurationManager como única fuente de verdad\r\n * CORRIGE: Inconsistencias entre frontend/backend\r\n */\r\nexport class EcommerceCalculator {\r\n  private static configManager = ConfigurationManager.getInstance();\r\n\r\n  /**\r\n   * 🎯 JORDAN - FUNCIÓN PRINCIPAL MIGRADA\r\n   * Ahora usa ConfigurationManager unificado - ELIMINA TODAS LAS CONFIGURACIONES HARDCODED\r\n   */\r\n  static async calculateTotals(\r\n    items: CartItem[], \r\n    appliedDiscountCode?: any,\r\n    forceRefresh: boolean = false\r\n  ): Promise<CalculationResult> {\r\n    console.log('🧮 JORDAN CALCULADORA - INICIANDO CON CONFIGURACIÓN UNIFICADA', {\r\n      forceRefresh,\r\n      itemsCount: items.length\r\n    });\r\n    \r\n    // 🔧 OBTENER CONFIGURACIÓN SINCRONIZADA - Con reintentos automáticos\r\n    // 🎯 CRITICAL: forceRefresh en puntos críticos (Cart/Checkout)\r\n    const configResult = await this.configManager.getUnifiedConfig(forceRefresh);\r\n    const config = configResult.config;\r\n    \r\n    console.log('✅ JORDAN - Configuración obtenida:', {\r\n      source: configResult.source,\r\n      isStale: configResult.is_stale,\r\n      taxRate: config.tax_rate,\r\n      commissionRate: config.platform_commission_rate,\r\n      shippingCost: config.shipping.default_cost,\r\n      volumeTiers: config.volume_discounts.length\r\n    });\r\n\r\n    // PASO 1: Precio Base × Cantidad\r\n    const step1_originalSubtotal = this.calculateOriginalSubtotal(items);\r\n    console.log(`1️⃣ Subtotal original: $${step1_originalSubtotal.toFixed(2)}`);\r\n\r\n    // PASO 2: Aplicar Descuento Vendedor\r\n    const { subtotal: step2_afterSellerDiscount, totalDiscount: sellerDiscounts } = \r\n      this.calculateSellerDiscounts(items, step1_originalSubtotal);\r\n    console.log(`2️⃣ Después descuento vendedor: $${step2_afterSellerDiscount.toFixed(2)}`);\r\n\r\n    // PASO 3: Aplicar Descuento Volumen (usando configuración unificada)\r\n    const { subtotal: step3_afterVolumeDiscount, totalDiscount: volumeDiscounts } = \r\n      this.calculateVolumeDiscounts(items, step2_afterSellerDiscount, config.volume_discounts);\r\n    console.log(`3️⃣ Después descuento volumen: $${step3_afterVolumeDiscount.toFixed(2)}`);\r\n\r\n    // PASO 4: Aplicar Cupón\r\n    const { subtotal: step4_afterCoupon, discount: couponDiscount } = \r\n      this.calculateCouponDiscount(step3_afterVolumeDiscount, appliedDiscountCode);\r\n    console.log(`4️⃣ Después cupón: $${step4_afterCoupon.toFixed(2)}`);\r\n\r\n    // PASO 5: Agregar Envío (usando configuración unificada)\r\n    const shipping = this.calculateShipping(step4_afterCoupon, config.shipping);\r\n    const step5_withShipping = step4_afterCoupon + shipping;\r\n    console.log(`5️⃣ Con envío: $${step5_withShipping.toFixed(2)} (envío: $${shipping.toFixed(2)})`);\r\n\r\n    // PASO 6: Calcular IVA (usando configuración unificada)\r\n    const step6_tax = step5_withShipping * config.tax_rate;\r\n    console.log(`6️⃣ IVA calculado: $${step6_tax.toFixed(2)} (${(config.tax_rate * 100).toFixed(1)}%)`);\r\n\r\n    // PASO 7: Total Final\r\n    const step7_finalTotal = step5_withShipping + step6_tax;\r\n    console.log(`7️⃣ TOTAL FINAL: $${step7_finalTotal.toFixed(2)}`);\r\n\r\n    const totalDiscounts = sellerDiscounts + volumeDiscounts + couponDiscount;\r\n    const volumeDiscountsApplied = volumeDiscounts > 0;\r\n    const freeShipping = shipping === 0;\r\n\r\n    console.log('📊 JORDAN - RESUMEN CON CONFIGURACIÓN UNIFICADA:');\r\n    console.log(`   💰 Configuración: ${configResult.source} (${config.version})`);\r\n    console.log(`   💰 Tax rate: ${(config.tax_rate * 100).toFixed(1)}% (dinámico)`);\r\n    console.log(`   💰 Volume tiers: ${config.volume_discounts.length} configurados`);\r\n    console.log(`   💰 Shipping: $${config.shipping.default_cost} (umbral: $${config.shipping.free_threshold})`);\r\n\r\n    const result: CalculationResult = {\r\n      // Flujo secuencial EXACTO\r\n      step1_originalSubtotal,\r\n      step2_afterSellerDiscount, \r\n      step3_afterVolumeDiscount,\r\n      step4_afterCoupon,\r\n      step5_withShipping,\r\n      step6_tax,\r\n      step7_finalTotal,\r\n\r\n      // Descuentos detallados\r\n      sellerDiscounts,\r\n      volumeDiscounts, \r\n      couponDiscount,\r\n      totalDiscounts,\r\n\r\n      // Para backend\r\n      shipping,\r\n      freeShipping,\r\n      volumeDiscountsApplied,\r\n\r\n      // 🎯 JORDAN: Metadatos de configuración\r\n      configMetadata: {\r\n        source: configResult.source,\r\n        version: config.version,\r\n        isStale: configResult.is_stale,\r\n        warnings: configResult.warnings\r\n      },\r\n\r\n      // Aliases para compatibilidad\r\n      originalSubtotal: step1_originalSubtotal,\r\n      subtotalAfterSellerDiscount: step2_afterSellerDiscount,\r\n      subtotalAfterVolumeDiscount: step3_afterVolumeDiscount,\r\n      subtotalAfterCoupon: step4_afterCoupon,\r\n      subtotalWithShipping: step5_withShipping,\r\n      tax: step6_tax,\r\n      total: step7_finalTotal\r\n    };\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * PASO 1: Calcular subtotal original (precio base × cantidad)\r\n   */\r\n  private static calculateOriginalSubtotal(items: CartItem[]): number {\r\n    let total = 0;\r\n    \r\n    items.forEach(item => {\r\n      const basePrice = this.getBasePrice(item);\r\n      const quantity = item.quantity || 0;\r\n      const itemSubtotal = basePrice * quantity;\r\n      \r\n      console.log(`📦 Item: precio base $${basePrice} × ${quantity} = $${itemSubtotal}`);\r\n      total += itemSubtotal;\r\n    });\r\n\r\n    return total; // Sin redondeo intermedio - frontend manejará\r\n  }\r\n\r\n  /**\r\n   * PASO 2: Aplicar descuentos del vendedor\r\n   */\r\n  private static calculateSellerDiscounts(items: CartItem[], _originalSubtotal: number): { subtotal: number; totalDiscount: number } {\r\n    let totalDiscount = 0;\r\n    let subtotalAfterDiscount = 0;\r\n\r\n    items.forEach(item => {\r\n      const basePrice = this.getBasePrice(item);\r\n      const quantity = item.quantity || 0;\r\n      const discountPercentage = this.getSellerDiscountPercentage(item);\r\n      \r\n      const discountPerUnit = basePrice * (discountPercentage / 100);\r\n      const priceAfterDiscount = basePrice - discountPerUnit;\r\n      const itemDiscount = discountPerUnit * quantity;\r\n      const itemSubtotal = priceAfterDiscount * quantity;\r\n\r\n      totalDiscount += itemDiscount;\r\n      subtotalAfterDiscount += itemSubtotal;\r\n\r\n      console.log(`🏪 Seller discount: ${discountPercentage}% sobre $${basePrice} = descuento $${discountPerUnit}/unidad`);\r\n    });\r\n\r\n    return { \r\n      subtotal: subtotalAfterDiscount, // Sin redondeo intermedio - frontend manejará\r\n      totalDiscount: totalDiscount // Sin redondeo intermedio - frontend manejará\r\n    };\r\n  }\r\n\r\n  /**\r\n   * PASO 3: Aplicar descuentos por volumen con configuración dinámica\r\n   */\r\n  private static calculateVolumeDiscounts(\r\n    items: CartItem[], \r\n    _currentSubtotal: number, \r\n    volumeDiscounts: Array<{quantity: number, discount: number}>\r\n  ): { subtotal: number; totalDiscount: number } {\r\n    let totalDiscount = 0;\r\n    let subtotalAfterDiscount = 0;\r\n\r\n    items.forEach(item => {\r\n      const quantity = item.quantity || 0;\r\n      const volumeDiscountPercentage = this.getVolumeDiscountPercentage(quantity, volumeDiscounts);\r\n      \r\n      if (volumeDiscountPercentage > 0) {\r\n        const sellerDiscountedPrice = this.getPriceAfterSellerDiscount(item);\r\n        const volumeDiscountPerUnit = sellerDiscountedPrice * volumeDiscountPercentage;\r\n        const priceAfterVolumeDiscount = sellerDiscountedPrice - volumeDiscountPerUnit;\r\n        const itemVolumeDiscount = volumeDiscountPerUnit * quantity;\r\n        const itemSubtotal = priceAfterVolumeDiscount * quantity;\r\n\r\n        totalDiscount += itemVolumeDiscount;\r\n        subtotalAfterDiscount += itemSubtotal;\r\n\r\n        console.log(`📦 Volume discount: ${(volumeDiscountPercentage * 100).toFixed(1)}% sobre $${sellerDiscountedPrice} = descuento $${volumeDiscountPerUnit}/unidad`);\r\n      } else {\r\n        const sellerDiscountedPrice = this.getPriceAfterSellerDiscount(item);\r\n        subtotalAfterDiscount += sellerDiscountedPrice * quantity;\r\n      }\r\n    });\r\n\r\n    return { \r\n      subtotal: subtotalAfterDiscount, // Sin redondeo intermedio - frontend manejará\r\n      totalDiscount: totalDiscount // Sin redondeo intermedio - frontend manejará\r\n    };\r\n  }\r\n\r\n  /**\r\n   * PASO 4: Aplicar cupón de descuento\r\n   */\r\n  private static calculateCouponDiscount(subtotal: number, discountCode?: any): { subtotal: number; discount: number } {\r\n    if (!discountCode?.discountCode) {\r\n      return { subtotal, discount: 0 };\r\n    }\r\n\r\n    let discount = 0;\r\n    const discountData = discountCode.discountCode;\r\n    \r\n    if (discountData.discount_percentage) {\r\n      const percentage = parseFloat(discountData.discount_percentage);\r\n      discount = subtotal * (percentage / 100);\r\n    } else if (discountData.percentage) {\r\n      discount = subtotal * (discountData.percentage / 100);\r\n    } else if (discountData.value) {\r\n      discount = Math.min(discountData.value, subtotal);\r\n    }\r\n\r\n    console.log(`🎫 Cupón ${discountData.code}: ${discountData.discount_percentage || discountData.percentage || discountData.value}% = descuento $${discount.toFixed(2)}`);\r\n\r\n    return { \r\n      subtotal: subtotal - discount, // Sin redondeo intermedio - frontend manejará\r\n      discount: discount // Sin redondeo intermedio - frontend manejará\r\n    };\r\n  }\r\n\r\n  /**\r\n   * PASO 5: Calcular costo de envío\r\n   */\r\n  private static calculateShipping(\r\n    subtotal: number, \r\n    shippingConfig: { enabled: boolean; default_cost: number; free_threshold: number }\r\n  ): number {\r\n    if (!shippingConfig.enabled) {\r\n      return 0;\r\n    }\r\n    return subtotal >= shippingConfig.free_threshold ? 0 : shippingConfig.default_cost;\r\n  }\r\n\r\n  /**\r\n   * Obtiene el precio base del item\r\n   */\r\n  private static getBasePrice(item: CartItem): number {\r\n    if (item.base_price !== undefined) return item.base_price;\r\n    if (item.product?.price !== undefined) return item.product.price;\r\n    if (item.price !== undefined && item.final_price === undefined) return item.price;\r\n    return 2.0; // Fallback para el ejemplo\r\n  }\r\n\r\n  /**\r\n   * Obtiene el porcentaje de descuento del vendedor\r\n   */\r\n  private static getSellerDiscountPercentage(item: CartItem): number {\r\n    if (item.product?.discount_percentage !== undefined) return item.product.discount_percentage;\r\n    return 50.0; // Fallback para el ejemplo\r\n  }\r\n\r\n  /**\r\n   * Obtiene el precio después del descuento del vendedor\r\n   */\r\n  private static getPriceAfterSellerDiscount(item: CartItem): number {\r\n    const basePrice = this.getBasePrice(item);\r\n    const discountPercentage = this.getSellerDiscountPercentage(item);\r\n    return basePrice * (1 - discountPercentage / 100);\r\n  }\r\n\r\n  /**\r\n   * 🔧 JORDAN: Obtener porcentaje de descuento por volumen usando configuración dinámica\r\n   */\r\n  private static getVolumeDiscountPercentage(quantity: number, volumeDiscounts: Array<{quantity: number, discount: number}>): number {\r\n    // Ordenar tiers por cantidad descendente para encontrar el mayor aplicable\r\n    const sortedTiers = [...volumeDiscounts].sort((a, b) => b.quantity - a.quantity);\r\n    \r\n    for (const tier of sortedTiers) {\r\n      if (quantity >= tier.quantity) {\r\n        return tier.discount / 100; // ✅ CORREGIDO: Convertir porcentaje a decimal (15 -> 0.15)\r\n      }\r\n    }\r\n    return 0.0;\r\n  }\r\n\r\n  /**\r\n   * Redondeo para DISPLAY ÚNICAMENTE - NO usar en cálculos intermedios\r\n   * Solo para mostrar valores al usuario en la interfaz\r\n   */\r\n  static roundForDisplay(value: number): number {\r\n    return parseFloat(value.toFixed(2));\r\n  }\r\n\r\n  /**\r\n   * 🎯 JORDAN - HELPER PARA CHECKOUT migrado con configuración unificada\r\n   */\r\n  static async prepareCheckoutData(\r\n    items: CartItem[], \r\n    appliedDiscount?: any,\r\n    forceRefresh: boolean = false\r\n  ): Promise<{\r\n    items: any[];\r\n    totals: CalculationResult;\r\n  }> {\r\n    const totals = await this.calculateTotals(items, appliedDiscount, forceRefresh);\r\n    \r\n    // 🔧 OBTENER CONFIGURACIÓN SINCRONIZADA para preparar items\r\n    // 🎯 CRITICAL: usar forceRefresh si fue solicitado\r\n    const configResult = await this.configManager.getUnifiedConfig(forceRefresh);\r\n    const config = configResult.config;\r\n    \r\n    const preparedItems = items.map(item => {\r\n      const basePrice = this.getBasePrice(item);\r\n      const sellerDiscountPercentage = this.getSellerDiscountPercentage(item);\r\n      const volumeDiscountPercentage = this.getVolumeDiscountPercentage(item.quantity || 0, config.volume_discounts);\r\n      \r\n      // Calcular precio final por unidad\r\n      const priceAfterSeller = basePrice * (1 - sellerDiscountPercentage / 100);\r\n      const finalPricePerUnit = volumeDiscountPercentage > 0 ? \r\n        priceAfterSeller * (1 - volumeDiscountPercentage) : priceAfterSeller;\r\n\r\n      return {\r\n        product_id: item.product_id || item.product?.id || item.productId,\r\n        quantity: item.quantity,\r\n        price: finalPricePerUnit, // Sin redondeo - frontend manejará en vista\r\n        base_price: basePrice,\r\n        original_price: basePrice,\r\n        final_price: finalPricePerUnit, // Sin redondeo - frontend manejará en vista\r\n        volume_discount_percentage: volumeDiscountPercentage * 100, // Para compatibilidad con backend (como porcentaje)\r\n        volume_savings: (priceAfterSeller - finalPricePerUnit) * (item.quantity || 0), // Sin redondeo - frontend manejará\r\n        seller_discount_amount: (basePrice - priceAfterSeller) * (item.quantity || 0) // Sin redondeo - frontend manejará\r\n      };\r\n    });\r\n\r\n    return { items: preparedItems, totals };\r\n  }\r\n}","// src/services/CheckoutItemsService.ts - CORREGIDO CON CALCULADORA CENTRALIZADA\r\nimport { EcommerceCalculator } from \"../../utils/ecommerceCalculator\";\r\n\r\nexport interface CheckoutItem {\r\n  product_id: number;\r\n  quantity: number;\r\n  price: number; // ✅ Precio final con todos los descuentos aplicados\r\n  base_price?: number; // Precio original del producto\r\n  original_price?: number; // Precio original sin descuentos\r\n  final_price?: number; // Precio final con descuentos\r\n  discounted_price?: number; // Alias para final_price\r\n  volume_discount_percentage?: number;\r\n  volume_savings?: number;\r\n  seller_discount_amount?: number;\r\n}\r\n\r\nexport interface CheckoutTotals {\r\n  subtotal: number; // Subtotal con descuentos aplicados\r\n  originalSubtotal: number; // Subtotal sin descuentos\r\n  sellerDiscounts: number; // Total de descuentos del seller\r\n  volumeDiscounts: number; // Total de descuentos por volumen\r\n  totalDiscounts: number; // Total de todos los descuentos\r\n  couponDiscount: number; // Descuento por cupón específico\r\n  tax: number; // IVA\r\n  shipping: number; // Costo de envío\r\n  total: number; // Total final\r\n  freeShipping: boolean; // Si aplica envío gratis\r\n}\r\n\r\n/**\r\n * 🎯 SERVICIO PRINCIPAL: Prepara items del carrito para checkout\r\n * AHORA USA LA CALCULADORA CENTRALIZADA - GARANTIZA CONSISTENCIA TOTAL\r\n */\r\nexport class CheckoutItemsService {\r\n  \r\n  /**\r\n   * ✅ CORREGIDO: Prepara items usando calculadora centralizada con configuración dinámica\r\n   */\r\n  static async prepareItemsForCheckout(\r\n    cartItems: any[], \r\n    appliedDiscount: any = null,\r\n    forceRefresh: boolean = false\r\n  ): Promise<CheckoutItem[]> {\r\n    console.log(\"🛒 JORDAN CheckoutItemsService - Preparando items con configuración unificada\", { forceRefresh });\r\n    console.log(\"🎫 Cupón para items:\", appliedDiscount?.discountCode?.code || \"NINGUNO\");\r\n    \r\n    // ✅ JORDAN: USAR CALCULADORA MIGRADA CON CONFIGURACIÓN DINÁMICA\r\n    // 🎯 CRITICAL: forceRefresh para garantizar configuraciones frescas\r\n    const { items } = await EcommerceCalculator.prepareCheckoutData(cartItems, appliedDiscount, forceRefresh);\r\n    \r\n    const checkoutItems = items.map((item, index) => {\r\n      console.log(`✅ Item ${index + 1} preparado para checkout:`, {\r\n        product_id: item.product_id,\r\n        quantity: item.quantity,\r\n        price: item.price,\r\n        base_price: item.base_price,\r\n        final_price: item.final_price\r\n      });\r\n      \r\n      return item as CheckoutItem;\r\n    });\r\n\r\n    return checkoutItems;\r\n  }\r\n\r\n  /**\r\n   * ✅ CORREGIDO: Calcula totales usando calculadora centralizada  \r\n   * GARANTIZA EXACTAMENTE EL MISMO RESULTADO QUE CARTPAGE\r\n   */\r\n  static async calculateCheckoutTotals(\r\n    cartItems: any[], \r\n    appliedDiscount: any = null,\r\n    forceRefresh: boolean = false\r\n  ): Promise<CheckoutTotals> {\r\n    console.log(\"🔍 JORDAN - FLUJO CHECKOUT MIGRADO CON CONFIGURACIÓN UNIFICADA:\", { forceRefresh });\r\n    \r\n    // ✅ JORDAN: USAR CALCULADORA MIGRADA - CONFIGURACIÓN DINÁMICA DESDE BD\r\n    // 🎯 CRITICAL: forceRefresh en puntos críticos (Checkout)\r\n    const result = await EcommerceCalculator.calculateTotals(cartItems, appliedDiscount, forceRefresh);\r\n    \r\n    console.log(\"📊 PASO A PASO:\");\r\n    console.log(`   1️⃣ Subtotal original (sin descuentos): ${result.step1_originalSubtotal}`);\r\n    console.log(`   2️⃣ Después de seller + volume: ${result.step3_afterVolumeDiscount} ✅ DEBE SER $2.85`);\r\n    console.log(`   3️⃣ - Cupón 5% sobre subtotal: ${result.couponDiscount} -> Subtotal: ${result.step4_afterCoupon}`);\r\n    console.log(`   4️⃣ + Envío: ${result.step5_withShipping}`);\r\n    console.log(`   5️⃣ + IVA 15% sobre ${result.step5_withShipping} : ${result.step6_tax}`);\r\n    console.log(`   6️⃣ TOTAL FINAL: ${result.step7_finalTotal} ✅ DEBE SER $8.87`);\r\n    \r\n    console.log(\"💰 DESGLOSE COMPLETO:\");\r\n    console.log(`   - Descuentos seller: ${result.sellerDiscounts}`);\r\n    console.log(`   - Descuentos volume: ${result.volumeDiscounts}`);\r\n    console.log(`   - Descuento cupón: ${result.couponDiscount}`);\r\n    console.log(`   - Total descuentos: ${result.totalDiscounts}`);\r\n    console.log(`   - Envío: ${result.shipping}`);\r\n    console.log(`   - IVA (15%): ${result.tax}`);\r\n    console.log(`🎯 VALOR CORRECTO PARA BACKEND: ${result.total}`);\r\n\r\n    return {\r\n      subtotal: result.step3_afterVolumeDiscount, // CORREGIDO: Subtotal después de descuentos por volumen (antes del cupón)\r\n      originalSubtotal: result.originalSubtotal,\r\n      sellerDiscounts: result.sellerDiscounts,\r\n      volumeDiscounts: result.volumeDiscounts,\r\n      totalDiscounts: result.totalDiscounts,\r\n      couponDiscount: result.couponDiscount,\r\n      tax: result.tax,\r\n      shipping: result.shipping,\r\n      total: result.total, // ✅ ESTE ES EL VALOR CRÍTICO: $8.87\r\n      freeShipping: result.freeShipping\r\n    };\r\n  }\r\n\r\n  /**\r\n   * ✅ SIMPLIFICADO: Validación básica (la calculadora centralizada maneja la lógica)\r\n   */\r\n  static validateItemsForCheckout(items: CheckoutItem[]): { valid: boolean; errors: string[] } {\r\n    const errors: string[] = [];\r\n\r\n    console.log(`🔍 Validando ${items.length} items para checkout:`);\r\n    \r\n    items.forEach((item, index) => {\r\n      console.log(`📋 Validando Item ${index + 1}:`, {\r\n        product_id: item.product_id,\r\n        product_id_type: typeof item.product_id,\r\n        quantity: item.quantity,\r\n        quantity_type: typeof item.quantity,\r\n        price: item.price,\r\n        price_type: typeof item.price,\r\n      });\r\n      \r\n      if (!item.product_id || typeof item.product_id !== 'number' || isNaN(item.product_id) || item.product_id <= 0) {\r\n        const error = `Item ${index + 1}: product_id inválido (${item.product_id}, tipo: ${typeof item.product_id})`;\r\n        console.error(\"❌\", error);\r\n        errors.push(error);\r\n      }\r\n      \r\n      if (!item.quantity || typeof item.quantity !== 'number' || isNaN(item.quantity) || item.quantity <= 0) {\r\n        const error = `Item ${index + 1}: quantity inválida (${item.quantity}, tipo: ${typeof item.quantity})`;\r\n        console.error(\"❌\", error);\r\n        errors.push(error);\r\n      }\r\n      \r\n      if (typeof item.price !== 'number' || isNaN(item.price) || item.price <= 0) {\r\n        const error = `Item ${index + 1}: price inválido (${item.price}, tipo: ${typeof item.price})`;\r\n        console.error(\"❌\", error);\r\n        errors.push(error);\r\n      }\r\n    });\r\n\r\n    const result = {\r\n      valid: errors.length === 0,\r\n      errors\r\n    };\r\n    \r\n    console.log(`📊 Validación resultado:`, result);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * ✅ SIMPLIFICADO: Debug helper usando calculadora centralizada\r\n   */\r\n  static async debugItemPricing(cartItems: any[], checkoutItems: CheckoutItem[]): Promise<void> {\r\n  console.log(\"🔍 DEBUG: Comparación usando calculadora centralizada\");\r\n\r\n  const checkoutData = await EcommerceCalculator.prepareCheckoutData(cartItems);\r\n  const calculatedItems = checkoutData.items;\r\n\r\n  cartItems.forEach((cartItem, index) => {\r\n    const checkoutItem = checkoutItems[index];\r\n    const calculatedItem = calculatedItems[index];\r\n\r\n    console.log(`📦 Item ${index + 1}:`, {\r\n      product_id: cartItem.productId || cartItem.product?.id,\r\n      quantity: cartItem.quantity,\r\n      calculated_final_price: calculatedItem?.price,\r\n      checkout_price: checkoutItem?.price,\r\n      prices_match: Math.abs((checkoutItem?.price || 0) - (calculatedItem?.price || 0)) < 0.01,\r\n      \"✅\": \"USANDO CALCULADORA CENTRALIZADA\"\r\n    });\r\n  });\r\n}\r\n\r\n}","/**\r\n * 🧮 CONFIGURACIÓN DE CÁLCULOS Y PRECISIÓN\r\n * Configuraciones centralizadas para tolerancias de precisión y validaciones de cálculos\r\n */\r\n\r\n// Obtener configuraciones del environment o usar valores por defecto\r\nconst getNumericEnvVar = (key: string, defaultValue: number): number => {\r\n  const value = import.meta.env?.[key];\r\n  if (value && !isNaN(Number(value))) {\r\n    return Number(value);\r\n  }\r\n  return defaultValue;\r\n};\r\n\r\nexport const CALCULATION_CONFIG = {\r\n  \r\n  // 💰 CONFIGURACIÓN DE PRECISIÓN FINANCIERA\r\n  PRECISION: {\r\n    // Tolerancia para comparaciones de totales entre frontend y backend\r\n    // Recomendado: 0.001 para evitar errores de precisión flotante sin ser demasiado permisivo\r\n    PRICE_COMPARISON_TOLERANCE: getNumericEnvVar('VITE_PRICE_TOLERANCE', 0.001),\r\n    \r\n    // Decimales para mostrar precios al usuario\r\n    DISPLAY_DECIMALS: getNumericEnvVar('VITE_PRICE_DECIMALS', 2),\r\n    \r\n    // Tolerancia para validaciones de descuentos\r\n    DISCOUNT_TOLERANCE: getNumericEnvVar('VITE_DISCOUNT_TOLERANCE', 0.001),\r\n  },\r\n\r\n  // 🧮 CONFIGURACIÓN DE VALIDACIONES\r\n  VALIDATIONS: {\r\n    // Tolerancia para validaciones de totales de checkout\r\n    CHECKOUT_TOLERANCE: getNumericEnvVar('VITE_CHECKOUT_TOLERANCE', 0.001),\r\n    \r\n    // Tolerancia para comparaciones de subtotales\r\n    SUBTOTAL_TOLERANCE: getNumericEnvVar('VITE_SUBTOTAL_TOLERANCE', 0.001),\r\n    \r\n    // Tolerancia para comparaciones de impuestos\r\n    TAX_TOLERANCE: getNumericEnvVar('VITE_TAX_TOLERANCE', 0.001),\r\n  },\r\n\r\n  // 🔍 CONFIGURACIÓN DE DEBUG\r\n  DEBUG: {\r\n    // Mostrar logs detallados de cálculos (solo en desarrollo)\r\n    SHOW_CALCULATION_LOGS: import.meta.env?.VITE_DEBUG_CALCULATIONS === 'true' || import.meta.env?.NODE_ENV === 'development',\r\n    \r\n    // Mostrar diferencias de precisión en consola\r\n    SHOW_PRECISION_WARNINGS: import.meta.env?.VITE_DEBUG_PRECISION === 'true' || import.meta.env?.NODE_ENV === 'development',\r\n  }\r\n  \r\n} as const;\r\n\r\n/**\r\n * 🛠️ UTILITARIO: Comparar dos valores numéricos con tolerancia\r\n */\r\nexport const isNumberEqual = (a: number, b: number, tolerance: number = CALCULATION_CONFIG.PRECISION.PRICE_COMPARISON_TOLERANCE): boolean => {\r\n  const difference = Math.abs(a - b);\r\n  const isEqual = difference <= tolerance;\r\n  \r\n  // Log en desarrollo si hay diferencias detectables\r\n  if (CALCULATION_CONFIG.DEBUG.SHOW_PRECISION_WARNINGS && difference > 0 && difference <= tolerance) {\r\n    console.warn(`⚠️ Diferencia de precisión detectada: ${a} vs ${b} (diff: ${difference.toFixed(6)}, tolerance: ${tolerance})`);\r\n  }\r\n  \r\n  return isEqual;\r\n};\r\n\r\n/**\r\n * 🛠️ UTILITARIO: Validar que dos totales sean equivalentes\r\n */\r\nexport const validateTotalsEquality = (\r\n  frontendTotal: number, \r\n  backendTotal: number, \r\n  context: string = 'Comparación de totales',\r\n  customTolerance?: number\r\n): boolean => {\r\n  const tolerance = customTolerance ?? CALCULATION_CONFIG.VALIDATIONS.CHECKOUT_TOLERANCE;\r\n  const difference = Math.abs(frontendTotal - backendTotal);\r\n  const isValid = difference <= tolerance;\r\n  \r\n  if (CALCULATION_CONFIG.DEBUG.SHOW_CALCULATION_LOGS) {\r\n    console.log(`🔍 ${context}:`, {\r\n      frontendTotal: frontendTotal.toFixed(6),\r\n      backendTotal: backendTotal.toFixed(6),\r\n      difference: difference.toFixed(6),\r\n      tolerance: tolerance.toFixed(6),\r\n      isValid,\r\n      status: isValid ? '✅ VÁLIDO' : '❌ DISCREPANCIA'\r\n    });\r\n  }\r\n  \r\n  return isValid;\r\n};\r\n\r\nexport default CALCULATION_CONFIG;","import ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\nimport {extractErrorMessage} from \"../../utils/errorHandler\";\r\nimport type {CalculatedTotals} from \"../../types/checkout\";\r\n\r\nexport interface DatafastCheckoutRequest {\r\n\t// ✅ SINCRONIZADO CON PHP: Refleja exactamente las validaciones del backend\r\n\tshippingAddress: {\r\n\t\tstreet: string;          // required|string|max:100\r\n\t\tcity: string;            // required|string|max:50\r\n\t\tcountry: string;         // required|string|max:100\r\n\t\t// ✅ NO incluir identification aquí - usar solo customer.doc_id\r\n\t};\r\n\tcustomer: {                  // required|array - OBLIGATORIO PARA SRI\r\n\t\tgiven_name?: string;     // sometimes|string|max:48\r\n\t\tmiddle_name?: string;    // sometimes|string|max:50\r\n\t\tsurname?: string;        // sometimes|string|max:48\r\n\t\tphone?: string;          // sometimes|string|min:7|max:25\r\n\t\tdoc_id: string;          // required|string|size:10 - OBLIGATORIO PARA SRI\r\n\t};\r\n\titems?: {                    // sometimes|array\r\n\t\tproduct_id: number;\r\n\t\tquantity: number;\r\n\t\tprice: number;\r\n\t}[];\r\n\ttotal: number;               // required|numeric|min:0.01\r\n\tsubtotal?: number;           // sometimes|numeric|min:0\r\n\tshipping_cost?: number;      // sometimes|numeric|min:0\r\n\ttax?: number;                // sometimes|numeric|min:0\r\n\tdiscount_code?: string | null; // sometimes|string|nullable\r\n\tdiscount_info?: any;         // sometimes|array|nullable\r\n\t// ✅ CAMPOS PARA CHECKOUTDATA TEMPORAL\r\n\tsession_id?: string;         // sometimes|string|max:100\r\n\tvalidated_at?: string;       // sometimes|string\r\n}\r\n\r\n// ✅ ESTANDARIZADO: Response unificada con backend\r\nexport interface DatafastCheckoutResponse {\r\n\t// ✅ DECISIÓN: Usar 'success' como campo principal booleano\r\n\tsuccess: boolean;               // Campo principal de estado\r\n\tstatus: 'success' | 'failed' | 'error'; // ✅ OBLIGATORIO: Estado descriptivo\r\n\tdata?: {\r\n\t\tcheckout_id: string;        // ID del checkout de Datafast\r\n\t\twidget_url: string;         // URL del widget para el pago\r\n\t\ttransaction_id: string;     // ID único del sistema (ORDER_xxx)\r\n\t\tamount: number;             // Monto total a pagar\r\n\t};\r\n\tmessage: string;                // ✅ OBLIGATORIO: Mensaje descriptivo del resultado\r\n\terror_code?: string;            // Código de error específico si falla\r\n}\r\n\r\nexport interface DatafastVerifyPaymentRequest {\r\n\tresource_path: string;\r\n\ttransaction_id: string;\r\n\tcalculated_total?: number; // ✅ OPCIONAL: Para verificación adicional de seguridad - Backend valida contra datos almacenados\r\n\tsession_id?: string; // ✅ OPCIONAL: Para arquitectura centralizada - Permite recuperar CheckoutData temporal\r\n}\r\n\r\n// ✅ ESTANDARIZADO: Response de verificación unificada\r\nexport interface DatafastVerifyPaymentResponse {\r\n\t// ✅ DECISIÓN: Usar 'success' como campo principal booleano\r\n\tsuccess: boolean;\r\n\tstatus: 'success' | 'processing' | 'error' | 'pending'; // ✅ OBLIGATORIO: Estado descriptivo\r\n\tdata?: {\r\n\t\torder_id: number;             // ✅ CORREGIDO: ID numérico de la orden\r\n\t\torder_number: string;         // Número de orden para mostrar al usuario\r\n\t\ttotal: number;                // Total de la orden\r\n\t\tpayment_status: 'completed' | 'pending' | 'failed' | 'error'; // ✅ TIPADO FUERTE\r\n\t\tpayment_id: string;           // ID del pago de Datafast\r\n\t\ttransaction_id: string;       // ID único del sistema\r\n\t\tprocessed_at: string;         // Timestamp ISO 8601\r\n\t};\r\n\tmessage: string;                  // ✅ OBLIGATORIO: Mensaje descriptivo del resultado\r\n\tresult_code?: string;             // Código de resultado de Datafast\r\n\tis_phase_1_error?: boolean;       // Indicador de error típico de Fase 1\r\n}\r\n\r\n// ✅ INTERFACES TIPADAS FUERTEMENTE - SINCRONIZADAS CON PHP\r\nexport interface ShippingData {\r\n\tstreet: string;        // required|string|max:100\r\n\tcity: string;          // required|string|max:50\r\n\tcountry: string;       // required|string|max:100\r\n\tidentification?: string; // sometimes|string|max:13\r\n}\r\n\r\nexport interface BillingData {\r\n\tstreet: string;\r\n\tcity: string;\r\n\tcountry: string;\r\n\tidentification?: string;\r\n}\r\n\r\nexport interface CartItem {\r\n\tproduct_id: number;    // required|integer\r\n\tquantity: number;      // required|integer|min:1\r\n\tprice: number;         // required|numeric|min:0\r\n\tname?: string;         // Para mostrar en UI\r\n\tsubtotal?: number;     // Calculado: price * quantity\r\n}\r\n\r\nexport interface OrderTotals {\r\n\tsubtotal: number;      // required|numeric|min:0\r\n\tshipping_cost: number; // required|numeric|min:0\r\n\ttax: number;           // required|numeric|min:0\r\n\tdiscount: number;      // required|numeric|min:0\r\n\tfinal_total: number;   // required|numeric|min:0.01\r\n}\r\n\r\nexport interface DiscountInfo {\r\n\ttype: 'volume' | 'coupon' | 'feedback';\r\n\tamount: number;\r\n\tpercentage?: number;\r\n\tcode?: string;\r\n\tdescription?: string;\r\n}\r\n\r\n// ✅ INTERFACES PARA ARQUITECTURA CENTRALIZADA - FUERTEMENTE TIPADAS\r\nexport interface StoreCheckoutDataRequest {\r\n\tshippingData: ShippingData;      // ✅ TIPADO FUERTE\r\n\tbillingData: BillingData;        // ✅ TIPADO FUERTE\r\n\titems: CartItem[];               // ✅ TIPADO FUERTE - min:1 validado en PHP\r\n\ttotals: CalculatedTotals;        // ✅ TIPADO FUERTE - Cambio de OrderTotals a CalculatedTotals\r\n\tsessionId: string;               // required|string|max:100\r\n\tdiscountCode?: string | null;    // sometimes|string|nullable\r\n\tdiscountInfo?: {\r\n\t\tcode: string;\r\n\t\tdiscount_percentage: number;\r\n\t\tdiscount_amount: number;\r\n\t};   // ✅ TIPADO FUERTE - información de descuento (alineado con CheckoutData)\r\n}\r\n\r\n// ✅ ESTANDARIZADO: Response de almacenamiento de checkout\r\nexport interface StoreCheckoutDataResponse {\r\n\tsuccess: boolean;\r\n\tstatus: 'success' | 'failed' | 'error'; // ✅ AÑADIDO: Consistencia con otras responses\r\n\tmessage: string;\r\n\tdata: {\r\n\t\tsession_id: string;         // Identificador único de sesión\r\n\t\texpires_at: string;         // Timestamp ISO 8601 de expiración\r\n\t\tfinal_total: number;        // Total calculado final\r\n\t};\r\n\terror_code?: string;            // ✅ AÑADIDO: Código de error si falla\r\n}\r\n\r\nexport class DatafastService {\r\n\t/**\r\n\t * Almacenar CheckoutData temporal para arquitectura centralizada\r\n\t * ✅ CORREGIDO: Usa interfaces fuertemente tipadas\r\n\t */\r\n\tasync storeCheckoutData(\r\n\t\tcheckoutData: StoreCheckoutDataRequest\r\n\t): Promise<StoreCheckoutDataResponse> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"DatafastService: Almacenando CheckoutData temporal\", checkoutData);\r\n\r\n\t\t\tconst response = await ApiClient.post<StoreCheckoutDataResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.DATAFAST.STORE_CHECKOUT_DATA,\r\n\t\t\t\tcheckoutData\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"DatafastService: CheckoutData almacenado exitosamente\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"DatafastService: Error al almacenar CheckoutData:\", error);\r\n\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error al almacenar datos de checkout\"\r\n\t\t\t);\r\n\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Crear un checkout de Datafast\r\n\t */\r\n\tasync createCheckout(\r\n\t\tcheckoutData: DatafastCheckoutRequest\r\n\t): Promise<DatafastCheckoutResponse> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"DatafastService: Creando checkout\", checkoutData);\r\n\r\n\t\t\tconst response = await ApiClient.post<DatafastCheckoutResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.DATAFAST.CREATE_CHECKOUT,\r\n\t\t\t\tcheckoutData\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"DatafastService: Respuesta de checkout\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"DatafastService: Error al crear checkout:\", error);\r\n\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error al crear el checkout de Datafast\"\r\n\t\t\t);\r\n\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Verificar el estado del pago\r\n\t */\r\n\tasync verifyPayment(\r\n\t\tverifyData: DatafastVerifyPaymentRequest\r\n\t): Promise<DatafastVerifyPaymentResponse> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"DatafastService: Verificando pago\", verifyData);\r\n\r\n\t\t\tconst response = await ApiClient.post<DatafastVerifyPaymentResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.DATAFAST.VERIFY_PAYMENT,\r\n\t\t\t\tverifyData\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"DatafastService: Respuesta de verificación\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"DatafastService: Error al verificar pago:\", error);\r\n\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error al verificar el pago de Datafast\"\r\n\t\t\t);\r\n\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Simular una transacción exitosa para pruebas en Fase 1\r\n\t * (En producción, esto no debe usarse)\r\n\t */\r\n\tasync simulateSuccessfulPayment(\r\n\t\tcheckoutId: string,\r\n\t\ttransactionId: string,\r\n\t\tcalculatedTotal?: number\r\n\t): Promise<DatafastVerifyPaymentResponse> {\r\n\t\tif (!checkoutId) {\r\n\t\t\tthrow new Error(\"checkout_id es requerido para simular el pago\");\r\n\t\t}\r\n\r\n\t\tif (!transactionId) {\r\n\t\t\tthrow new Error(\"transaction_id es requerido para simular el pago\");\r\n\t\t}\r\n\r\n\t\t// Simular el resourcePath que normalmente viene del widget\r\n\t\tconst mockResourcePath = `/v1/checkouts/${checkoutId}/payment`;\r\n\r\n\t\tconsole.log(\"DatafastService: Simulando pago exitoso\", {\r\n\t\t\tcheckoutId,\r\n\t\t\ttransactionId,\r\n\t\t\tmockResourcePath,\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\t// ✅ CORREGIDO: Llamar al endpoint de verificación con simulate_success en el body\r\n\t\t\tconst requestData = {\r\n\t\t\t\tresource_path: mockResourcePath,\r\n\t\t\t\ttransaction_id: transactionId,\r\n\t\t\t\tcalculated_total: calculatedTotal, // ✅ ENVIAR TOTAL CALCULADO\r\n\t\t\t\tsimulate_success: true, // ✅ MOVIDO DEL QUERY PARAMETER AL BODY\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\"🔄 Enviando datos de simulación:\", requestData);\r\n\r\n\t\t\tconst response = await ApiClient.post<DatafastVerifyPaymentResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.DATAFAST.VERIFY_PAYMENT, // ✅ SIN QUERY PARAMETER\r\n\t\t\t\trequestData\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"DatafastService: Respuesta de simulación:\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"DatafastService: Error en simulación:\", error);\r\n\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error al simular el pago de Datafast\"\r\n\t\t\t);\r\n\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Manejar el resultado real de Datafast (cuando viene del widget)\r\n\t */\r\n\tasync handleDatafastResult(\r\n\t\tresourcePath: string,\r\n\t\ttransactionId: string,\r\n\t\tcalculatedTotal?: number\r\n\t): Promise<DatafastVerifyPaymentResponse> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"DatafastService: Manejando resultado real de Datafast\", {\r\n\t\t\t\tresourcePath,\r\n\t\t\t\ttransactionId,\r\n\t\t\t\tcalculatedTotal,\r\n\t\t\t});\r\n\r\n\t\t\tconst response = await this.verifyPayment({\r\n\t\t\t\tresource_path: resourcePath,\r\n\t\t\t\ttransaction_id: transactionId,\r\n\t\t\t\tcalculated_total: calculatedTotal, // ✅ INCLUIR TOTAL CALCULADO\r\n\t\t\t});\r\n\r\n\t\t\t// Si es el error típico de Fase 1, devolver un mensaje más claro\r\n\t\t\tif (response.status !== \"success\" && response.result_code === \"800.900.300\") { // ✅ CORREGIDO: Cambiar response.success por response.status\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsuccess: false,\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tmessage:\r\n\t\t\t\t\t\t'No se completó un pago real. Este es el comportamiento esperado en Fase 1 de pruebas. Use \"Simular Pago Exitoso\" para probar el flujo completo.',\r\n\t\t\t\t\tresult_code: response.result_code,\r\n\t\t\t\t\tis_phase_1_error: true,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"DatafastService: Error al manejar resultado:\", error);\r\n\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error al procesar el resultado de Datafast\"\r\n\t\t\t);\r\n\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Simular el flujo completo del widget (idéntico al comportamiento real)\r\n\t * Esta función replica exactamente lo que haría el widget real sin consumir crédito\r\n\t * IMPORTANTE: Usa el endpoint de verificación con simulate_success=true para garantizar \r\n\t * que pase por EXACTAMENTE el mismo proceso: crear orden + factura + envío SRI\r\n\t */\r\n\tasync simulateCompleteWidgetFlow(\r\n\t\tcheckoutId: string,\r\n\t\ttransactionId: string,\r\n\t\tcalculatedTotal: number,\r\n\t\tformData: any\r\n\t): Promise<string> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"🎯 DatafastService: Simulando flujo COMPLETO del widget (orden + factura + SRI)\");\r\n\t\t\tconsole.log(\"📊 Parámetros:\", { checkoutId, transactionId, calculatedTotal });\r\n\t\t\t\r\n\t\t\t// 1. Simular el resourcePath que generaría el widget real\r\n\t\t\tconst mockResourcePath = `/v1/checkouts/${checkoutId}/payment`;\r\n\t\t\tconsole.log(\"🔗 ResourcePath simulado:\", mockResourcePath);\r\n\t\t\t\r\n\t\t\t// 2. Guardar datos en localStorage EXACTAMENTE igual que el widget real\r\n\t\t\tconsole.log(\"💾 Guardando datos en localStorage (idéntico a widget real)...\");\r\n\t\t\t\r\n\t\t\t// ResourcePath (usado por DatafastResultPage)\r\n\t\t\tlocalStorage.setItem(\"datafast_resource_path\", mockResourcePath);\r\n\t\t\t\r\n\t\t\t// Form data (usado por DatafastResultPage para crear orden)\r\n\t\t\tlocalStorage.setItem(\"datafast_form_data\", JSON.stringify(formData));\r\n\t\t\t\r\n\t\t\t// Total calculado (para verificación en resultado)\r\n\t\t\tlocalStorage.setItem(\"datafast_calculated_total\", calculatedTotal.toString());\r\n\t\t\t\r\n\t\t\t// Transaction y checkout IDs (ya deberían estar guardados pero asegurar)\r\n\t\t\tlocalStorage.setItem(\"datafast_transaction_id\", transactionId);\r\n\t\t\tlocalStorage.setItem(\"datafast_checkout_id\", checkoutId);\r\n\t\t\t\r\n\t\t\tconsole.log(\"✅ Datos guardados en localStorage:\");\r\n\t\t\tconsole.log(\"   - datafast_resource_path:\", mockResourcePath);\r\n\t\t\tconsole.log(\"   - datafast_form_data:\", \"guardado\");\r\n\t\t\tconsole.log(\"   - datafast_calculated_total:\", calculatedTotal);\r\n\t\t\tconsole.log(\"   - datafast_transaction_id:\", transactionId);\r\n\t\t\tconsole.log(\"   - datafast_checkout_id:\", checkoutId);\r\n\t\t\t\r\n\t\t\t// 3. ✅ CRÍTICO: NO hacer request prematuramente\r\n\t\t\t// El único request debe ser cuando DatafastResultPage procese la URL\r\n\t\t\t// Esto evita el problema de doble request que causaba \"carrito vacío\"\r\n\t\t\tconsole.log(\"📋 Configuración lista - DatafastResultPage procesará el pago\");\r\n\t\t\tconsole.log(\"⚠️ NO hacer request aquí para evitar doble procesamiento\");\r\n\t\t\t\r\n\t\t\t// 4. Simular delay del widget (más realista)\r\n\t\t\tconsole.log(\"⏳ Simulando delay de procesamiento del widget...\");\r\n\t\t\tawait new Promise(resolve => setTimeout(resolve, 1000));\r\n\t\t\t\r\n\t\t\t// 5. Construir URL de redirección idéntica al widget real\r\n\t\t\t// DatafastResultPage procesará esto y seguirá el flujo completo:\r\n\t\t\t// verifyPayment() → processCheckout() → orden + factura + SRI\r\n\t\t\t// ✅ AGREGADO: simulate=true para activar DatafastTestValidator\r\n\t\t\tconst resultUrl = `/datafast-result?resourcePath=${encodeURIComponent(mockResourcePath)}&status=pending&transactionId=${transactionId}&simulate=true`;\r\n\t\t\tconsole.log(\"🚀 URL de redirección generada (flujo completo):\", resultUrl);\r\n\t\t\tconsole.log(\"📋 DatafastResultPage ejecutará:\");\r\n\t\t\tconsole.log(\"   1. verifyPayment() - verificación (simulada como exitosa)\");  \r\n\t\t\tconsole.log(\"   2. processCheckout() - crear orden + factura + enviar SRI\");\r\n\t\t\tconsole.log(\"   3. clearCart() - limpiar carrito\");\r\n\t\t\tconsole.log(\"   4. navigate('/orders') - redirigir a órdenes\");\r\n\t\t\t\r\n\t\t\treturn resultUrl;\r\n\t\t\t\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en simulación de widget flow:\", error);\r\n\t\t\tthrow new Error(\"Error al simular el flujo del widget\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Extraer resourcePath de la URL de respuesta\r\n\t */\r\n\textractResourcePath(url: string): string | null {\r\n\t\ttry {\r\n\t\t\tconst urlParams = new URLSearchParams(url.split(\"?\")[1]);\r\n\t\t\tconst resourcePath = urlParams.get(\"resourcePath\");\r\n\t\t\tconsole.log(\"DatafastService: ResourcePath extraído:\", resourcePath);\r\n\t\t\treturn resourcePath;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"DatafastService: Error al extraer resourcePath:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n","// src/presentation/components/checkout/CreditCardForm.tsx\r\nimport type { PaymentInfo } from \"../../../core/services/CheckoutService\";\r\nimport React from \"react\";\r\n\r\ninterface CreditCardFormProps {\r\n\t// CORREGIDO: Agregar paymentInfo a las props\r\n\tpaymentInfo: PaymentInfo;\r\n\terrors: Record<string, string>;\r\n\tonChange: (field: keyof PaymentInfo, value: string) => void;\r\n\tcontent?: React.ReactNode; // AGREGADO para el content\r\n}\r\n\r\nconst CreditCardForm: React.FC<CreditCardFormProps> = ({content}) => {\r\n\tconst deunaInitiated = false; // Simulación de estado, reemplazar con lógica real\r\n\treturn (\r\n\t\t<div className=\"space-y-4\">\r\n\t\t\t<div className=\"text-center\">\r\n      <p className=\"mb-4 text-gray-600\">\r\n        Paga con Datafast!, ingresa los datos personales para pagar\r\n        de forma rápida y segura.\r\n      </p>\r\n\r\n      {deunaInitiated ? (\r\n        <div className=\"mb-4 mx-auto\">\r\n          <div className=\"bg-gradient-to-r from-[#2fd8a8] to-[#4d1d81] p-6 rounded-lg text-white\">\r\n            {/* Logo de DeUna placeholder */}\r\n            <div className=\"w-24 h-24 mx-auto mb-4 bg-white rounded-full flex items-center justify-center\">\r\n              <div className=\"text-2xl font-bold text-purple-600\">Deuna</div>\r\n            </div>\r\n\r\n            <h3 className=\"text-xl font-bold mb-2\">Pago con Deuna</h3>\r\n            <p className=\"text-purple-100 mb-4\">\r\n            </p>\r\n\r\n            <div className=\"bg-white/20 rounded-lg p-4 mb-4\">\r\n              <div className=\"animate-pulse\">\r\n                <div className=\"text-sm text-purple-100\">\r\n                  Conectando con Deuna...\r\n                </div>\r\n                <div className=\"w-full bg-white/30 rounded-full h-2 mt-2\">\r\n                  <div className=\"bg-white h-2 rounded-full w-3/4 animate-pulse\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              className=\"bg-white/20 hover:bg-white/30 text-white font-medium py-2 px-4 rounded-md transition-colors\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"space-y-4\">\r\n          {/* Información sobre DeUna */}\r\n          <div className=\"bg-[linear-gradient(to_right,_rgba(0,184,110,1)_0%,_rgba(0,77,112,1)_46%,_rgba(0,77,112,1)_100%)] border-purple-200 rounded-lg p-6\">\r\n            <div className=\"flex items-center justify-center mb-4 h-50\">\r\n              <img\r\n                src={import.meta.env.VITE_DATAFAST_LOGO_URL || \"https://www.datafast.com.ec/images/logo.png\"}\r\n                alt=\"Datafast Logo\"\r\n                className=\"h-20\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {content}\r\n        </div>\r\n      )}\r\n      <div className=\"mt-4 text-sm text-gray-500\">\r\n        <p>\r\n          <strong>1.</strong> Haz clic en \"Pagar con Datafast!\"\r\n        </p>\r\n        <p>\r\n          <strong>2.</strong> Completa los datos de tu tarjeta de crédito o débito.\r\n        </p>\r\n        <p>\r\n          <strong>3.</strong> Confirma tu compra al finalizar.\r\n        </p>\r\n      </div>\r\n    </div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CreditCardForm;\r\n","// src/infrastructure/services/DeunaService.ts\r\nimport { ApiClient } from \"../api/apiClient\";\r\nimport type { DeunaPaymentRequest, DeunaPaymentResponse, DeunaPaymentStatus } from \"./DeunaTypes\";\r\nimport { FileText, Clock, CheckCircle, XCircle, Ban, DollarSign, HelpCircle } from \"lucide-react\";\r\nimport React from \"react\";\r\n\r\n// Re-export types for convenience\r\nexport type { DeunaPaymentRequest, DeunaPaymentResponse, DeunaPaymentStatus };\r\n\r\nexport class DeunaService {\r\n  private static readonly BASE_PATH = '/deuna';\r\n\r\n  /**\r\n   * Create a new DeUna payment\r\n   */\r\n  static async createPayment(paymentData: DeunaPaymentRequest): Promise<DeunaPaymentResponse> {\r\n    try {\r\n      console.log('DeunaService: Creating payment', paymentData);\r\n      \r\n      // Debug: Log exactly what we're sending to the API\r\n      console.log('🔍 DEUNA SERVICE - EXACT PAYLOAD TO SEND:', {\r\n        path: `${this.BASE_PATH}/payments`,\r\n        payload: paymentData,\r\n        payload_json: JSON.stringify(paymentData),\r\n        items_in_payload: paymentData.items,\r\n        items_count: paymentData.items?.length || 0,\r\n        first_item_keys: paymentData.items && paymentData.items.length > 0 ? Object.keys(paymentData.items[0]) : 'no_items'\r\n      });\r\n\r\n      const response = await ApiClient.post<DeunaPaymentResponse>(\r\n        `${this.BASE_PATH}/payments`,\r\n        paymentData\r\n      );\r\n\r\n      console.log('DeunaService: Payment created successfully', response);\r\n      return response;\r\n\r\n    } catch (error: any) {\r\n      console.error('DeunaService: Error creating payment', error);\r\n      throw new Error(\r\n        error.response?.data?.message || \r\n        error.message || \r\n        'Error creating payment'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate QR code for existing payment or create new one\r\n   */\r\n  static async generateQR(data: Partial<DeunaPaymentRequest> & { payment_id?: string }): Promise<DeunaPaymentResponse> {\r\n    try {\r\n      console.log('DeunaService: Generating QR code', data);\r\n\r\n      const response = await ApiClient.post<DeunaPaymentResponse>(\r\n        `${this.BASE_PATH}/payments/qr`,\r\n        data\r\n      );\r\n\r\n      console.log('DeunaService: QR code generated successfully', response);\r\n      return response;\r\n\r\n    } catch (error: any) {\r\n      console.error('DeunaService: Error generating QR code', error);\r\n      throw new Error(\r\n        error.response?.data?.message || \r\n        error.message || \r\n        'Error generating QR code'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get payment status by payment ID\r\n   */\r\n  static async getPaymentStatus(paymentId: string): Promise<DeunaPaymentStatus> {\r\n    try {\r\n      console.log('DeunaService: Getting payment status', { paymentId });\r\n\r\n      const response = await ApiClient.get<DeunaPaymentStatus>(\r\n        `${this.BASE_PATH}/payments/${paymentId}/status`\r\n      );\r\n\r\n      console.log('DeunaService: Payment status retrieved', response);\r\n      return response;\r\n\r\n    } catch (error: any) {\r\n      console.error('DeunaService: Error getting payment status', error);\r\n      throw new Error(\r\n        error.response?.data?.message || \r\n        error.message || \r\n        'Error getting payment status'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get payment by order ID\r\n   */\r\n  static async getPaymentByOrderId(orderId: string): Promise<DeunaPaymentStatus> {\r\n    try {\r\n      console.log('DeunaService: Getting payment by order ID', { orderId });\r\n\r\n      const response = await ApiClient.get<DeunaPaymentStatus>(\r\n        `${this.BASE_PATH}/orders/${orderId}/payment`\r\n      );\r\n\r\n      console.log('DeunaService: Payment retrieved by order ID', response);\r\n      return response;\r\n\r\n    } catch (error: any) {\r\n      console.error('DeunaService: Error getting payment by order ID', error);\r\n      throw new Error(\r\n        error.response?.data?.message || \r\n        error.message || \r\n        'Error getting payment'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancel a payment\r\n   */\r\n  static async cancelPayment(paymentId: string, reason?: string): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    data: {\r\n      payment_id: string;\r\n      status: string;\r\n      reason: string;\r\n      cancelled_at: string;\r\n    };\r\n  }> {\r\n    try {\r\n      console.log('DeunaService: Cancelling payment', { paymentId, reason });\r\n\r\n      const response = await ApiClient.post(\r\n        `${this.BASE_PATH}/payments/${paymentId}/cancel`,\r\n        { reason: reason || 'Cancelled by user' }\r\n      );\r\n\r\n      console.log('DeunaService: Payment cancelled successfully', response);\r\n      return response as {\r\n        success: boolean;\r\n        message: string;\r\n        data: {\r\n          payment_id: string;\r\n          status: string;\r\n          reason: string;\r\n          cancelled_at: string;\r\n        };\r\n      };\r\n\r\n    } catch (error: any) {\r\n      console.error('DeunaService: Error cancelling payment', error);\r\n      throw new Error(\r\n        error.response?.data?.message || \r\n        error.message || \r\n        'Error cancelling payment'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Void/Refund a payment\r\n   */\r\n  static async voidPayment(paymentId: string, amount: number, reason?: string): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    data: {\r\n      payment_id: string;\r\n      status: string;\r\n      refund_amount: number;\r\n      reason: string;\r\n      refunded_at: string;\r\n    };\r\n  }> {\r\n    try {\r\n      console.log('DeunaService: Processing void/refund', { paymentId, amount, reason });\r\n\r\n      const response = await ApiClient.post(\r\n        `${this.BASE_PATH}/payments/${paymentId}/void`,\r\n        { \r\n          amount,\r\n          reason: reason || 'Void/refund requested by user' \r\n        }\r\n      );\r\n\r\n      console.log('DeunaService: Payment void/refund processed successfully', response);\r\n      return response as {\r\n        success: boolean;\r\n        message: string;\r\n        data: {\r\n          payment_id: string;\r\n          status: string;\r\n          refund_amount: number;\r\n          reason: string;\r\n          refunded_at: string;\r\n        };\r\n      };\r\n\r\n    } catch (error: any) {\r\n      console.error('DeunaService: Error processing void/refund', error);\r\n      throw new Error(\r\n        error.response?.data?.message || \r\n        error.message || \r\n        'Error processing void/refund'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * List payments with filters\r\n   */\r\n  static async listPayments(filters?: {\r\n    status?: string;\r\n    order_id?: string;\r\n    currency?: string;\r\n    from_date?: string;\r\n    to_date?: string;\r\n    customer_email?: string;\r\n    limit?: number;\r\n    offset?: number;\r\n  }): Promise<{\r\n    success: boolean;\r\n    data: Array<{\r\n      payment_id: string;\r\n      order_id: string;\r\n      status: string;\r\n      amount: number;\r\n      currency: string;\r\n      customer: Record<string, any>;\r\n      created_at: string;\r\n      updated_at: string;\r\n      completed_at?: string;\r\n    }>;\r\n    meta: {\r\n      count: number;\r\n      limit: number;\r\n      offset: number;\r\n      filters_applied: Record<string, any>;\r\n    };\r\n  }> {\r\n    try {\r\n      console.log('DeunaService: Listing payments', filters);\r\n\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filters) {\r\n        Object.entries(filters).forEach(([key, value]) => {\r\n          if (value !== undefined && value !== null && value !== '') {\r\n            params.append(key, String(value));\r\n          }\r\n        });\r\n      }\r\n\r\n      const response = await ApiClient.get(\r\n        `${this.BASE_PATH}/payments?${params.toString()}`\r\n      );\r\n\r\n      console.log('DeunaService: Payments listed successfully', response);\r\n      return response as {\r\n        success: boolean;\r\n        data: {\r\n          payment_id: string;\r\n          order_id: string;\r\n          status: string;\r\n          amount: number;\r\n          currency: string;\r\n          customer: Record<string, any>;\r\n          created_at: string;\r\n          updated_at: string;\r\n          completed_at?: string;\r\n        }[];\r\n        meta: {\r\n          count: number;\r\n          total: number;\r\n          limit: number;\r\n          offset: number;\r\n          filters_applied: Record<string, any>;\r\n        };\r\n      };\r\n\r\n    } catch (error: any) {\r\n      console.error('DeunaService: Error listing payments', error);\r\n      throw new Error(\r\n        error.response?.data?.message || \r\n        error.message || \r\n        'Error listing payments'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Poll payment status until completion or timeout (cancelable)\r\n   */\r\n  static pollPaymentStatus(\r\n    paymentId: string, \r\n    options?: {\r\n      maxAttempts?: number;\r\n      interval?: number;\r\n      onStatusChange?: (status: string) => void;\r\n      abortSignal?: AbortSignal;\r\n    }\r\n  ): { promise: Promise<DeunaPaymentStatus>; cancel: () => void } {\r\n    const maxAttempts = options?.maxAttempts || 60; // 5 minutes with 5s intervals\r\n    const interval = options?.interval || 5000; // 5 seconds\r\n    const onStatusChange = options?.onStatusChange;\r\n\r\n    // Create abort controller for cancellation\r\n    const abortController = new AbortController();\r\n    \r\n    const promise = new Promise<DeunaPaymentStatus>(async (resolve, reject) => {\r\n      let attempts = 0;\r\n      let lastStatus = '';\r\n      let timeoutId: NodeJS.Timeout | null = null;\r\n\r\n      const cleanup = () => {\r\n        if (timeoutId) {\r\n          clearTimeout(timeoutId);\r\n          timeoutId = null;\r\n        }\r\n      };\r\n\r\n      // Handle abort signal\r\n      const onAbort = () => {\r\n        cleanup();\r\n        reject(new Error('Payment polling was cancelled'));\r\n      };\r\n\r\n      abortController.signal.addEventListener('abort', onAbort);\r\n\r\n      try {\r\n        while (attempts < maxAttempts && !abortController.signal.aborted) {\r\n          try {\r\n            const statusResponse = await this.getPaymentStatus(paymentId);\r\n            const currentStatus = statusResponse.data.status;\r\n\r\n            // Check for abortion before processing\r\n            if (abortController.signal.aborted) {\r\n              cleanup();\r\n              return;\r\n            }\r\n\r\n            // Notify status change if callback provided\r\n            if (currentStatus !== lastStatus && onStatusChange) {\r\n              onStatusChange(currentStatus);\r\n              lastStatus = currentStatus;\r\n            }\r\n\r\n            // Check if payment is in final state\r\n            if (['completed', 'failed', 'cancelled', 'refunded'].includes(currentStatus)) {\r\n              console.log(`DeunaService: Payment reached final status: ${currentStatus}`);\r\n              cleanup();\r\n              abortController.signal.removeEventListener('abort', onAbort);\r\n              resolve(statusResponse);\r\n              return;\r\n            }\r\n\r\n            attempts++;\r\n            \r\n            // Wait before next attempt (with cancellation check)\r\n            if (attempts < maxAttempts && !abortController.signal.aborted) {\r\n              await new Promise<void>((resolveTimeout, rejectTimeout) => {\r\n                timeoutId = setTimeout(() => {\r\n                  timeoutId = null;\r\n                  if (abortController.signal.aborted) {\r\n                    rejectTimeout(new Error('Cancelled'));\r\n                  } else {\r\n                    resolveTimeout();\r\n                  }\r\n                }, interval);\r\n\r\n                // Also check abort during timeout\r\n                const checkAbort = () => {\r\n                  if (timeoutId) {\r\n                    clearTimeout(timeoutId);\r\n                    timeoutId = null;\r\n                  }\r\n                  rejectTimeout(new Error('Cancelled'));\r\n                };\r\n\r\n                abortController.signal.addEventListener('abort', checkAbort, { once: true });\r\n              });\r\n            }\r\n\r\n          } catch (error: any) {\r\n            if (abortController.signal.aborted) {\r\n              cleanup();\r\n              return;\r\n            }\r\n\r\n            console.warn(`DeunaService: Error polling payment status (attempt ${attempts + 1})`, error);\r\n            attempts++;\r\n            \r\n            if (attempts < maxAttempts) {\r\n              // Wait before retry with cancellation check\r\n              await new Promise<void>((resolveTimeout, rejectTimeout) => {\r\n                timeoutId = setTimeout(() => {\r\n                  timeoutId = null;\r\n                  if (abortController.signal.aborted) {\r\n                    rejectTimeout(new Error('Cancelled'));\r\n                  } else {\r\n                    resolveTimeout();\r\n                  }\r\n                }, interval);\r\n\r\n                const checkAbort = () => {\r\n                  if (timeoutId) {\r\n                    clearTimeout(timeoutId);\r\n                    timeoutId = null;\r\n                  }\r\n                  rejectTimeout(new Error('Cancelled'));\r\n                };\r\n\r\n                abortController.signal.addEventListener('abort', checkAbort, { once: true });\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        cleanup();\r\n        abortController.signal.removeEventListener('abort', onAbort);\r\n\r\n        if (abortController.signal.aborted) {\r\n          reject(new Error('Payment polling was cancelled'));\r\n        } else {\r\n          reject(new Error(`Payment status polling timed out after ${maxAttempts} attempts`));\r\n        }\r\n\r\n      } catch (error: any) {\r\n        cleanup();\r\n        abortController.signal.removeEventListener('abort', onAbort);\r\n        if (error.message === 'Cancelled') {\r\n          reject(new Error('Payment polling was cancelled'));\r\n        } else {\r\n          reject(error);\r\n        }\r\n      }\r\n    });\r\n\r\n    return {\r\n      promise,\r\n      cancel: () => {\r\n        console.log('DeunaService: Cancelling payment polling');\r\n        abortController.abort();\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validate QR code format\r\n   */\r\n  static isValidQRCode(qrCode: string): boolean {\r\n    if (!qrCode || qrCode.trim() === '') {\r\n      return false;\r\n    }\r\n\r\n    // Check if it's a base64 encoded image\r\n    if (qrCode.startsWith('data:image/')) {\r\n      return true;\r\n    }\r\n\r\n    // Check if it's a valid URL\r\n    try {\r\n      new URL(qrCode);\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Format currency for display\r\n   */\r\n  static formatCurrency(amount: number, currency: string = 'USD'): string {\r\n    return new Intl.NumberFormat('es-EC', {\r\n      style: 'currency',\r\n      currency: currency,\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    }).format(amount);\r\n  }\r\n\r\n  /**\r\n   * Get payment method display name\r\n   */\r\n  static getPaymentMethodDisplayName(method: string): string {\r\n    const methodNames: Record<string, string> = {\r\n      'qr_code': 'Código QR',\r\n      'payment_link': 'Enlace de Pago',\r\n      'numeric_code': 'Código Numérico',\r\n      'deuna': 'DeUna',\r\n    };\r\n\r\n    return methodNames[method] || method;\r\n  }\r\n\r\n  /**\r\n   * Get status display information\r\n   */\r\n  static getStatusDisplay(status: string): { label: string; color: string; icon: React.ReactElement } {\r\n    const statusMap: Record<string, { label: string; color: string; icon: React.ReactElement }> = {\r\n      'created': { label: 'Creado', color: 'blue', icon: React.createElement(FileText, { className: \"w-4 h-4\" }) },\r\n      'pending': { label: 'Pendiente', color: 'yellow', icon: React.createElement(Clock, { className: \"w-4 h-4\" }) },\r\n      'completed': { label: 'Completado', color: 'green', icon: React.createElement(CheckCircle, { className: \"w-4 h-4\" }) },\r\n      'failed': { label: 'Fallido', color: 'red', icon: React.createElement(XCircle, { className: \"w-4 h-4\" }) },\r\n      'cancelled': { label: 'Cancelado', color: 'gray', icon: React.createElement(Ban, { className: \"w-4 h-4\" }) },\r\n      'refunded': { label: 'Reembolsado', color: 'purple', icon: React.createElement(DollarSign, { className: \"w-4 h-4\" }) },\r\n    };\r\n\r\n    return statusMap[status] || { label: status, color: 'gray', icon: React.createElement(HelpCircle, { className: \"w-4 h-4\" }) };\r\n  }\r\n\r\n  /**\r\n   * Simulate payment success (for testing only)\r\n   * This triggers the webhook simulation endpoint\r\n   * ⚠️ CRITICAL: NO FALLBACKS - All parameters are required\r\n   */\r\n  static async simulatePaymentSuccess(paymentId: string, amount: number, customerEmail: string, customerName?: string, sessionId?: string): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    data?: any;\r\n  }> {\r\n    // ✅ STRICT VALIDATION - NO FALLBACKS\r\n    if (!paymentId || paymentId.trim() === '') {\r\n      throw new Error('payment_id es obligatorio para la simulación');\r\n    }\r\n\r\n    if (!amount || amount <= 0) {\r\n      throw new Error('amount válido es obligatorio para la simulación');\r\n    }\r\n\r\n    if (!customerEmail || customerEmail.trim() === '') {\r\n      throw new Error('customer_email es obligatorio para la simulación');\r\n    }\r\n\r\n    try {\r\n      console.log('🧪 Simulating payment success for testing', { paymentId, amount, customerEmail });\r\n\r\n      // ✅ PAYLOAD CORRECTO PARA BACKEND COMPATIBILITY\r\n      const requestPayload = {\r\n        payment_id: paymentId,\r\n        transaction_id: paymentId, // ✅ REQUERIDO POR BACKEND\r\n        simulate_deuna: true, // ✅ REQUERIDO PARA DETECTAR SIMULACIÓN\r\n        amount: amount, // ✅ SIN FALLBACK\r\n        currency: 'USD',\r\n        customer_email: customerEmail, // ✅ SIN FALLBACK\r\n        customer_name: customerName || 'Test User', // Solo este fallback es aceptable\r\n        calculated_total: amount, // ✅ CAMPO OPCIONAL PERO CONSISTENTE\r\n        session_id: sessionId // ✅ SESSION_ID REAL PARA RECUPERAR CHECKOUTDATA\r\n      };\r\n\r\n      const response = await ApiClient.post<{\r\n        success: boolean;\r\n        message: string;\r\n        data: any;\r\n      }>(\r\n        '/webhooks/deuna/simulate-payment-success',\r\n        requestPayload\r\n      );\r\n\r\n      console.log('🎉 Payment simulation response:', response);\r\n      return response;\r\n\r\n    } catch (error: any) {\r\n      console.error('❌ Error simulating payment:', error);\r\n      throw new Error(\r\n        error.response?.data?.message ||\r\n        error.message ||\r\n        'Error simulando el pago'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process real payment completion (NOT simulation)\r\n   * This method handles actual completed payments from Deuna webhook events\r\n   * and processes them through the real webhook flow for creating order + invoice + SRI\r\n   */\r\n  static async processRealPaymentCompletion(paymentId: string, amount?: number, customerEmail?: string): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    data?: any;\r\n  }> {\r\n    try {\r\n      console.log('✅ Processing REAL payment completion (not simulation)', { paymentId, amount, customerEmail });\r\n      console.log('📋 Real payment flow: webhook processing → order creation → invoice → SRI');\r\n\r\n      // First, get the current payment status to confirm it's completed\r\n      const statusResponse = await this.getPaymentStatus(paymentId);\r\n      \r\n      if (statusResponse.success && statusResponse.data?.status === 'completed') {\r\n        console.log('✅ Payment confirmed as completed, processing real webhook flow');\r\n        \r\n        // Construct webhook data as it would come from Deuna's real webhook\r\n        const webhookData = {\r\n          event: 'payment.completed',\r\n          payment_id: paymentId,\r\n          status: 'completed',\r\n          amount: amount || statusResponse.data.amount,\r\n          currency: 'USD',\r\n          customer_email: customerEmail || 'default@deuna.com',\r\n          completed_at: new Date().toISOString(),\r\n          // Mark this as a real payment completion (not simulation)\r\n          source: 'real_payment_completion'\r\n        };\r\n        \r\n        console.log('🔄 Processing real payment through webhook handler');\r\n        \r\n        // Process through the real webhook endpoint (NOT the simulation one)\r\n        const response = await ApiClient.post<{\r\n          success: boolean;\r\n          message: string;\r\n          data: any;\r\n        }>(\r\n          '/webhooks/deuna', // Real webhook endpoint\r\n          webhookData\r\n        );\r\n        \r\n        console.log('🎉 Real payment processed successfully:', response);\r\n        console.log('📊 This payment went through: HandleDeunaWebhookUseCase → createOrderFromPayment() → order + invoice + SRI');\r\n        \r\n        return response;\r\n        \r\n      } else {\r\n        console.warn('⚠️ Payment status is not completed, cannot process real completion');\r\n        throw new Error('Payment is not in completed status');\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.error('❌ Error processing real payment completion:', error);\r\n      \r\n      // If the real webhook fails, we could fallback to simulation\r\n      // but log this clearly for debugging\r\n      console.error('🔄 Real payment processing failed, this should be investigated');\r\n      console.error('💡 Consider checking: payment status, webhook endpoint, HandleDeunaWebhookUseCase');\r\n      \r\n      throw new Error(\r\n        error.response?.data?.message || \r\n        error.message || \r\n        'Error procesando el pago completado real'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if we're in development environment\r\n   */\r\n  static isDevelopmentMode(): boolean {\r\n    return process.env.NODE_ENV === 'development' || \r\n           window.location.hostname === 'localhost' || \r\n           window.location.hostname === '127.0.0.1';\r\n  }\r\n}","// src/presentation/components/checkout/QRPaymentForm.tsx\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useCart } from \"../../hooks/useCart\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { formatCurrency } from \"../../../utils/formatters/formatCurrency\";\r\nimport { DeunaService } from \"../../../infrastructure/services/DeunaService\";\r\nimport type { DeunaPaymentRequest } from \"../../../infrastructure/services/DeunaTypes\";\r\nimport type { CheckoutData } from \"../../../types/checkout\";\r\nimport { CheckCircle, XCircle, Clock, RefreshCw, Copy, ExternalLink, Smartphone, Zap } from \"lucide-react\";\r\n\r\ninterface QRPaymentFormProps {\r\n  checkoutData?: CheckoutData; // ✅ NUEVO: Objeto temporal con datos validados\r\n  onPaymentSuccess?: (paymentData: any) => void;\r\n  onPaymentError?: (error: string) => void;\r\n}\r\n\r\nconst QRPaymentForm: React.FC<QRPaymentFormProps> = ({\r\n  checkoutData,\r\n  onPaymentSuccess,\r\n  onPaymentError\r\n}) => {\r\n  const { cart } = useCart();\r\n  const { user } = useAuth();\r\n  \r\n  // States\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [paymentData, setPaymentData] = useState<any>(null);\r\n  const [error, setError] = useState<string>(\"\");\r\n  const [isPolling, setIsPolling] = useState(false);\r\n  const [currentStatus, setCurrentStatus] = useState<string>(\"\");\r\n  const [timeRemaining, setTimeRemaining] = useState<number>(600); // 10 minutes\r\n  const [copySuccess, setCopySuccess] = useState<boolean>(false);\r\n  const [isSimulating, setIsSimulating] = useState<boolean>(false);\r\n  \r\n  // 🚨 CRITICAL FIX: References for cleanup - prevent memory leaks\r\n  const pollingRef = React.useRef<any>(null);\r\n  const timerRef = React.useRef<NodeJS.Timeout | null>(null);\r\n  const cleanupRefs = React.useRef<(() => void)[]>([]);\r\n\r\n  // ✅ VALIDACIÓN ESTRICTA - NO FALLBACKS\r\n  if (!checkoutData || !checkoutData.totals) {\r\n    throw new Error(\"QRPaymentForm requiere CheckoutData válido con totales\");\r\n  }\r\n  if (!checkoutData.totals.final_total || checkoutData.totals.final_total <= 0) {\r\n    throw new Error(\"QRPaymentForm requiere total válido mayor a $0\");\r\n  }\r\n\r\n  const total = checkoutData.totals.final_total;\r\n\r\n  // Create order ID for payment\r\n  const generateOrderId = useCallback(() => {\r\n    return `ORDER-${Date.now()}-${Math.random().toString(36).substr(2, 9).toUpperCase()}`;\r\n  }, []);\r\n\r\n  // Copy to clipboard functionality\r\n  const copyToClipboard = async (text: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      setCopySuccess(true);\r\n      setTimeout(() => setCopySuccess(false), 2000);\r\n    } catch (err) {\r\n      console.error('Failed to copy to clipboard:', err);\r\n    }\r\n  };\r\n\r\n  // 🚨 CRITICAL FIX: Timer countdown effect with complete cleanup\r\n  useEffect(() => {\r\n    if (paymentData && isPolling && timeRemaining > 0) {\r\n      const interval = setInterval(() => {\r\n        setTimeRemaining(prev => {\r\n          if (prev <= 1) {\r\n            setIsPolling(false);\r\n            setError(\"El tiempo de pago ha expirado. El pago ha sido cancelado automáticamente.\");\r\n            \r\n            // Automatically cancel the payment when timer reaches 0\r\n            if (paymentData?.payment_id) {\r\n              console.log('⏰ Timer expired - automatically cancelling payment:', paymentData.payment_id);\r\n              \r\n              // Cancel the payment immediately (don't wait for async)\r\n              DeunaService.cancelPayment(paymentData.payment_id, 'Timer expired - automatic cancellation')\r\n                .then(() => {\r\n                  console.log('✅ Payment automatically cancelled due to timer expiration');\r\n                  setCurrentStatus('cancelled');\r\n                  \r\n                  // Stop any active polling\r\n                  if (pollingRef.current?.cancel) {\r\n                    pollingRef.current.cancel();\r\n                    pollingRef.current = null;\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  console.error('❌ Error automatically cancelling expired payment:', error);\r\n                  // Still set as cancelled in UI even if API call fails\r\n                  setCurrentStatus('cancelled');\r\n                });\r\n            }\r\n            \r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n\r\n      // 🚨 CRITICAL FIX: Store timer reference for cleanup\r\n      timerRef.current = interval;\r\n      \r\n      // Add to cleanup refs\r\n      cleanupRefs.current.push(() => {\r\n        if (interval) {\r\n          clearInterval(interval);\r\n        }\r\n      });\r\n    }\r\n\r\n    // 🚨 CRITICAL FIX: Complete cleanup function\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [paymentData, isPolling, timeRemaining]);\r\n\r\n  // 🚨 CRITICAL FIX: Component unmount cleanup to prevent memory leaks\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log('🚨 QRPaymentForm: Component unmounting, executing critical cleanup');\r\n      resetPayment();\r\n    };\r\n  }, []); // Empty dependency array - only run on unmount\r\n\r\n  // Format time remaining\r\n  const formatTime = (seconds: number) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Handle payment status changes during polling\r\n  const handleStatusChange = useCallback((status: string) => {\r\n    console.log('Payment status changed:', status);\r\n    setCurrentStatus(status);\r\n    \r\n    const statusDisplay = DeunaService.getStatusDisplay(status);\r\n    \r\n    switch (status) {\r\n      case 'completed':\r\n        setIsPolling(false);\r\n        console.log('✅ Payment completed successfully, processing REAL payment completion');\r\n        \r\n        // ✅ CORRECTED: Process real payment completion using the proper real flow\r\n        const processPayment = async () => {\r\n          try {\r\n            if (paymentData) {\r\n              console.log('🎯 Processing REAL QR payment completion through actual webhook flow');\r\n              console.log('📋 This will trigger: webhook → HandleDeunaWebhookUseCase → createOrderFromPayment() → order + invoice + SRI');\r\n              \r\n              // Use the REAL payment completion flow (NOT simulation)\r\n              const result = await DeunaService.processRealPaymentCompletion(\r\n                paymentData.payment_id,\r\n                paymentData.amount,\r\n                user?.email\r\n              );\r\n              \r\n              if (result.success) {\r\n                console.log('✅ Order created successfully from REAL QR payment:', result);\r\n                console.log('🏆 Real payment processed with complete flow: order + invoice + SRI generation');\r\n              }\r\n            }\r\n            \r\n            // Notify parent component about success\r\n            if (onPaymentSuccess) {\r\n              onPaymentSuccess({\r\n                ...paymentData,\r\n                status: 'completed',\r\n                completed_at: new Date().toISOString()\r\n              });\r\n            }\r\n          } catch (error) {\r\n            console.error('Error processing completed payment:', error);\r\n            // Still notify success since payment was completed\r\n            if (onPaymentSuccess) {\r\n              onPaymentSuccess({\r\n                ...paymentData,\r\n                status: 'completed',\r\n                completed_at: new Date().toISOString()\r\n              });\r\n            }\r\n          }\r\n        };\r\n        \r\n        processPayment();\r\n        break;\r\n      case 'failed':\r\n      case 'cancelled':\r\n        setIsPolling(false);\r\n        const errorMsg = `Pago ${statusDisplay.label.toLowerCase()}`;\r\n        setError(errorMsg);\r\n        if (onPaymentError) {\r\n          onPaymentError(errorMsg);\r\n        }\r\n        break;\r\n    }\r\n  }, [paymentData, onPaymentSuccess, onPaymentError]);\r\n\r\n  // ✅ NUEVO: Generate QR code usando CheckoutData validado\r\n  const generateQRPayment = async () => {\r\n    // ✅ VALIDACIÓN ESTRICTA: Requerir CheckoutData\r\n    if (!checkoutData) {\r\n      setError(\"No se puede generar QR sin datos de checkout validados\");\r\n      return;\r\n    }\r\n\r\n    if (!user) {\r\n      setError(\"Información de usuario no disponible\");\r\n      return;\r\n    }\r\n\r\n    setIsGenerating(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const orderId = generateOrderId();\r\n\r\n      // ✅ USAR DATOS DEL CHECKOUTDATA VALIDADO\r\n      console.log('🎯 USANDO CHECKOUTDATA PARA QR DEUNA:', {\r\n        sessionId: checkoutData.sessionId,\r\n        userId: checkoutData.userId,\r\n        total: checkoutData.totals.final_total,\r\n        itemsCount: checkoutData.items.length,\r\n        validatedAt: checkoutData.validatedAt\r\n      });\r\n\r\n      // ✅ PREPARAR REQUEST USANDO SOLO DATOS VALIDADOS\r\n      const paymentRequest: DeunaPaymentRequest = {\r\n        order_id: orderId,\r\n        amount: checkoutData.totals.final_total,\r\n        currency: 'USD',\r\n        customer: {\r\n          name: checkoutData.shippingData.name,\r\n          email: checkoutData.shippingData.email,\r\n          phone: checkoutData.shippingData.phone,\r\n        },\r\n        items: checkoutData.items.map((item, index) => {\r\n          // ✅ DATOS YA VALIDADOS - NO NECESITA VERIFICACIÓN ADICIONAL\r\n          const mappedItem = {\r\n            name: item.name,\r\n            quantity: item.quantity,\r\n            price: item.price,\r\n            description: item.name, // Usar name como descripción\r\n            product_id: item.product_id,\r\n          };\r\n\r\n          console.log(`✅ ITEM ${index} FROM CHECKOUTDATA:`, {\r\n            product_id: mappedItem.product_id,\r\n            name: mappedItem.name,\r\n            quantity: mappedItem.quantity,\r\n            price: mappedItem.price,\r\n          });\r\n\r\n          return mappedItem;\r\n        }),\r\n        qr_type: 'dynamic',\r\n        format: '2', // QR + Payment Link\r\n        metadata: {\r\n          source: 'bcommerce_checkout_validated',\r\n          user_id: user.id,\r\n          session_id: checkoutData.sessionId,\r\n          validated_at: checkoutData.validatedAt,\r\n          checkout_timestamp: new Date().toISOString(),\r\n        },\r\n        // ✅ NUEVOS CAMPOS PARA CHECKOUTDATA TEMPORAL\r\n        session_id: checkoutData.sessionId,\r\n        validated_at: checkoutData.validatedAt,\r\n        checkout_data: checkoutData, // Enviar objeto completo para validación en backend\r\n      };\r\n\r\n      // Debug: Log final payment request\r\n      console.log('🚀 FINAL PAYMENT REQUEST TO SEND:', {\r\n        order_id: paymentRequest.order_id,\r\n        amount: paymentRequest.amount,\r\n        items_count: paymentRequest.items?.length || 0,\r\n        items: paymentRequest.items,\r\n        first_item_keys: paymentRequest.items && paymentRequest.items.length > 0 ? Object.keys(paymentRequest.items[0]) : 'no_items'\r\n      });\r\n\r\n      console.log('Creating DeUna payment:', paymentRequest);\r\n\r\n      // Create payment with DeUna\r\n      const response = await DeunaService.createPayment(paymentRequest);\r\n      \r\n      console.log('DeUna API Response:', response);\r\n      console.log('Response structure:', Object.keys(response));\r\n      \r\n      if (response.success) {\r\n        console.log('Payment data from response:', response.data);\r\n        console.log('QR code in response:', response.data?.qr_code_base64);\r\n        setPaymentData(response.data);\r\n        setCurrentStatus(response.data.status);\r\n        setTimeRemaining(600); // Reset to 10 minutes\r\n        \r\n        // Start polling for status updates\r\n        setIsPolling(true);\r\n        \r\n        // Start polling in background (now cancelable) - 🔧 FIXED: Reduced frequency to avoid rate limiting\r\n        const polling = DeunaService.pollPaymentStatus(response.data.payment_id, {\r\n          maxAttempts: 40, // 10 minutes (40 attempts × 15s = 10 minutes)  \r\n          interval: 15000, // 15 seconds (reduced from 5s to avoid rate limiting)\r\n          onStatusChange: handleStatusChange\r\n        });\r\n\r\n        pollingRef.current = polling;\r\n\r\n        polling.promise.catch(err => {\r\n          if (err.message === 'Payment polling was cancelled') {\r\n            console.log('DeunaService: Polling cancelled successfully');\r\n          } else {\r\n            console.error('Polling error:', err);\r\n            if (isPolling) {\r\n              setError('Error monitoreando el estado del pago');\r\n            }\r\n          }\r\n        });\r\n        \r\n      } else {\r\n        throw new Error(response.message || 'Error creating payment');\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.error('Error generating QR payment:', error);\r\n      setError(error.message || 'Error al generar el código QR');\r\n      if (onPaymentError) {\r\n        onPaymentError(error.message);\r\n      }\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  // 🚨 CRITICAL FIX: Complete reset with all cleanup\r\n  const resetPayment = () => {\r\n    // Cancel active polling\r\n    if (pollingRef.current?.cancel) {\r\n      pollingRef.current.cancel();\r\n      pollingRef.current = null;\r\n    }\r\n    \r\n    // 🚨 CRITICAL FIX: Clear timer to prevent memory leak\r\n    if (timerRef.current) {\r\n      clearInterval(timerRef.current);\r\n      timerRef.current = null;\r\n    }\r\n    \r\n    // 🚨 CRITICAL FIX: Execute all cleanup functions\r\n    cleanupRefs.current.forEach(cleanup => {\r\n      try {\r\n        cleanup();\r\n      } catch (error) {\r\n        console.error('Error during cleanup:', error);\r\n      }\r\n    });\r\n    cleanupRefs.current = [];\r\n    \r\n    setPaymentData(null);\r\n    setError(\"\");\r\n    setCurrentStatus(\"\");\r\n    setIsPolling(false);\r\n    setTimeRemaining(600);\r\n    setCopySuccess(false);\r\n    \r\n    console.log('🧹 QRPaymentForm: Complete cleanup executed');\r\n  };\r\n\r\n  // Cancel payment\r\n  const handleCancelPayment = async () => {\r\n    if (!paymentData?.payment_id || currentStatus === 'completed') {\r\n      resetPayment();\r\n      return;\r\n    }\r\n\r\n    if (!isPolling) {\r\n      resetPayment();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Cancelling payment:', paymentData.payment_id);\r\n      \r\n      // Stop polling first (cancel the polling Promise)\r\n      if (pollingRef.current?.cancel) {\r\n        pollingRef.current.cancel();\r\n        pollingRef.current = null;\r\n      }\r\n      setIsPolling(false);\r\n      \r\n      // Cancel payment via API\r\n      await DeunaService.cancelPayment(paymentData.payment_id, 'Cancelled by user');\r\n      \r\n      // Update UI\r\n      setCurrentStatus('cancelled');\r\n      setError('Pago cancelado por el usuario');\r\n      \r\n      console.log('Payment successfully cancelled by user');\r\n      \r\n    } catch (error: any) {\r\n      console.error('Error cancelling payment:', error);\r\n      setError('Error al cancelar el pago: ' + error.message);\r\n      setIsPolling(false);\r\n    }\r\n  };\r\n\r\n  // Handle generating new QR (cancels current payment first if active)\r\n  const handleNewQR = async () => {\r\n    try {\r\n      setIsGenerating(true);\r\n      setError(\"\");\r\n\r\n      // If there's an active payment being polled, cancel it first\r\n      if (paymentData?.payment_id && isPolling && !['completed', 'cancelled', 'failed'].includes(currentStatus)) {\r\n        try {\r\n          console.log('Cancelling current payment before generating new QR:', paymentData.payment_id);\r\n          \r\n          // Stop polling\r\n          if (pollingRef.current?.cancel) {\r\n            pollingRef.current.cancel();\r\n            pollingRef.current = null;\r\n          }\r\n          setIsPolling(false);\r\n          \r\n          // Cancel current payment\r\n          await DeunaService.cancelPayment(paymentData.payment_id, 'Cancelled to generate new QR');\r\n          \r\n          console.log('Current payment cancelled successfully');\r\n          \r\n        } catch (error: any) {\r\n          console.error('Error cancelling current payment:', error);\r\n          // Continue with new payment generation even if cancel fails\r\n        }\r\n      }\r\n\r\n      // Generate new payment (reuse existing logic)\r\n      await generateQRPayment();\r\n\r\n    } catch (error: any) {\r\n      console.error('Error generating new QR:', error);\r\n      setError('Error al generar nuevo código QR: ' + error.message);\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  // Simulate payment success (for testing only)\r\n  const handleSimulatePayment = async () => {\r\n    // ✅ VALIDACIÓN ESTRICTA - NO FALLBACKS\r\n    if (!paymentData?.payment_id) {\r\n      setError(\"No hay un pago activo para simular\");\r\n      return;\r\n    }\r\n\r\n    if (!paymentData?.amount || paymentData.amount <= 0) {\r\n      setError(\"Monto del pago inválido o faltante\");\r\n      return;\r\n    }\r\n\r\n    if (!user?.email) {\r\n      setError(\"Email del usuario requerido para la simulación\");\r\n      return;\r\n    }\r\n\r\n    setIsSimulating(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      console.log('🧪 SIMULATING payment success for testing purposes');\r\n      console.log('📋 This will trigger: simulation webhook → HandleDeunaWebhookUseCase → createOrderFromPayment() → order + invoice + SRI');\r\n\r\n      // ✅ STRICT CALL: All parameters required - NO FALLBACKS\r\n      const result = await DeunaService.simulatePaymentSuccess(\r\n        paymentData.payment_id,\r\n        paymentData.amount,\r\n        user.email,\r\n        user.name || undefined,\r\n        checkoutData?.sessionId // ✅ PASAR SESSION_ID REAL PARA RECUPERAR CHECKOUTDATA\r\n      );\r\n\r\n      if (result.success) {\r\n        console.log('✅ Payment simulation successful:', result);\r\n        \r\n        // Update status to completed\r\n        setCurrentStatus('completed');\r\n        setIsPolling(false);\r\n        \r\n        // Stop any active polling\r\n        if (pollingRef.current?.cancel) {\r\n          pollingRef.current.cancel();\r\n          pollingRef.current = null;\r\n        }\r\n        \r\n        // Trigger success callback\r\n        if (onPaymentSuccess) {\r\n          onPaymentSuccess({\r\n            ...paymentData,\r\n            status: 'completed',\r\n            completed_at: new Date().toISOString(),\r\n            simulated: true\r\n          });\r\n        }\r\n        \r\n      } else {\r\n        throw new Error(result.message || 'Simulation failed');\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.error('❌ Error simulating payment:', error);\r\n      setError('Error simulando el pago: ' + error.message);\r\n    } finally {\r\n      setIsSimulating(false);\r\n    }\r\n  };\r\n\r\n  // Status indicator component\r\n  const StatusIndicator = () => {\r\n    if (!currentStatus) return null;\r\n    \r\n    const statusDisplay = DeunaService.getStatusDisplay(currentStatus);\r\n    \r\n    return (\r\n      <div className={`flex items-center justify-center p-3 rounded-lg mb-4 ${\r\n        statusDisplay.color === 'green' ? 'bg-green-50 text-green-700' :\r\n        statusDisplay.color === 'red' ? 'bg-red-50 text-red-700' :\r\n        statusDisplay.color === 'yellow' ? 'bg-yellow-50 text-yellow-700' :\r\n        'bg-blue-50 text-blue-700'\r\n      }`}>\r\n        <span className=\"mr-2\">{statusDisplay.icon}</span>\r\n        <span className=\"font-medium\">{statusDisplay.label}</span>\r\n        {isPolling && statusDisplay.color === 'yellow' && (\r\n          <RefreshCw className=\"w-4 h-4 ml-2 animate-spin\" />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // If payment is generated, show QR code interface\r\n  if (paymentData) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <StatusIndicator />\r\n        \r\n        {/* Timer */}\r\n        {isPolling && (\r\n          <div className=\"text-center\">\r\n            <div className=\"inline-flex items-center bg-blue-50 text-blue-700 px-4 py-2 rounded-lg\">\r\n              <Clock className=\"w-4 h-4 mr-2\" />\r\n              <span className=\"font-mono text-lg\">{formatTime(timeRemaining)}</span>\r\n            </div>\r\n            <p className=\"text-sm text-gray-500 mt-2\">\r\n              Tiempo restante para completar el pago\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* QR Code Display with DeUna Style */}\r\n        {paymentData.qr_code_base64 && !['cancelled', 'failed'].includes(currentStatus) ? (\r\n          <div className=\"mb-4 mx-auto\">\r\n            <div className=\"bg-[#2fd8a8] p-6 rounded-lg text-white\">\r\n              {/* Logo de DeUna placeholder */}\r\n              <div className=\"w-24 h-24 mx-auto mb-4 bg-white rounded-full flex items-center justify-center\">\r\n                <img\r\n                  src=\"https://deuna.app/assets/img/brand/logo-deuna.svg\"\r\n                  alt=\"DeUna Logo\"\r\n                  className=\"w-20 h-20\"\r\n                />\r\n              </div>\r\n\r\n              <h3 className=\"text-xl font-bold mb-2\">Pago con Deuna</h3>\r\n              <p className=\"text-purple-100 mb-4\">\r\n                Monto a pagar: {formatCurrency(total)}\r\n              </p>\r\n\r\n              <div className=\"bg-white rounded-lg p-4 mb-4\">\r\n                <img \r\n                  src={paymentData.qr_code_base64} \r\n                  alt=\"Código QR para pago\" \r\n                  className=\"w-full h-auto max-w-64 mx-auto\"\r\n                />\r\n              </div>\r\n\r\n              <p className=\"text-purple-100 text-sm mb-4 flex items-center justify-center\">\r\n                <Smartphone className=\"w-4 h-4 mr-2\" />\r\n                Escanea con tu app Deuna\r\n              </p>\r\n\r\n              <button\r\n                onClick={handleCancelPayment}\r\n                className=\"bg-white/20 hover:bg-white/30 text-white font-medium py-2 px-4 rounded-md transition-colors\"\r\n                disabled={!isPolling || currentStatus === 'completed'}\r\n              >\r\n                {isPolling ? 'Cancelar Pago' : 'Cerrar'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          // Show message when payment is cancelled or failed\r\n          ['cancelled', 'failed'].includes(currentStatus) && (\r\n            <div className=\"mb-4 mx-auto\">\r\n              <div className=\"bg-gray-100 border-2 border-gray-300 p-6 rounded-lg text-center\">\r\n                <div className=\"w-24 h-24 mx-auto mb-4 bg-gray-300 rounded-full flex items-center justify-center\">\r\n                  <XCircle className=\"w-12 h-12 text-gray-500\" />\r\n                </div>\r\n                \r\n                <h3 className=\"text-xl font-bold text-gray-700 mb-2\">\r\n                  {currentStatus === 'cancelled' ? 'Pago Cancelado' : 'Pago Fallido'}\r\n                </h3>\r\n                <p className=\"text-gray-600 mb-4\">\r\n                  {currentStatus === 'cancelled' \r\n                    ? 'El pago fue cancelado. Puedes generar un nuevo código QR.' \r\n                    : 'El pago falló. Puedes intentar generar un nuevo código QR.'\r\n                  }\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )\r\n        )}\r\n\r\n        {/* Payment Link */}\r\n        {paymentData.payment_url && !['cancelled', 'failed'].includes(currentStatus) && (\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex flex-col sm:flex-row gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={paymentData.payment_url}\r\n                readOnly\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-sm\"\r\n              />\r\n              <button\r\n                onClick={() => copyToClipboard(paymentData.payment_url)}\r\n                className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg transition-colors flex items-center justify-center\"\r\n              >\r\n                <Copy className=\"w-4 h-4 mr-1\" />\r\n                {copySuccess ? 'Copiado!' : 'Copiar'}\r\n              </button>\r\n            </div>\r\n            \r\n            <a\r\n              href={paymentData.payment_url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"w-full bg-[#3f2b57] hover:bg-[#3f2b45] text-white font-medium py-3 px-4 rounded-lg transition-colors flex items-center justify-center\"\r\n            >\r\n              <ExternalLink className=\"w-4 h-4 mr-2\" />\r\n              Abrir enlace de pago\r\n            </a>\r\n          </div>\r\n        )}\r\n\r\n        {/* Numeric Code */}\r\n        {paymentData.numeric_code && !['cancelled', 'failed'].includes(currentStatus) && (\r\n          <div className=\"bg-gray-50 p-4 rounded-lg text-center\">\r\n            <p className=\"text-sm text-gray-600 mb-2\">Código numérico:</p>\r\n            <p className=\"text-2xl font-mono font-bold text-gray-900 tracking-wider\">\r\n              {paymentData.numeric_code}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Payment Amount */}\r\n        <div className=\"text-center\">\r\n          <p className=\"text-lg font-semibold text-gray-900\">\r\n            Monto a pagar: {formatCurrency(total)}\r\n          </p>\r\n          <p className=\"text-sm text-gray-500\">\r\n            ID de Pago: {paymentData.payment_id}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"flex flex-col sm:flex-row gap-3\">\r\n          <button\r\n            onClick={handleNewQR}\r\n            disabled={isGenerating}\r\n            className=\"flex-1 bg-gray-100 hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed text-gray-700 font-medium py-2 px-4 rounded-lg transition-colors flex items-center justify-center\"\r\n          >\r\n            {isGenerating ? (\r\n              <>\r\n                <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                Generando...\r\n              </>\r\n            ) : (\r\n              'Generar Nuevo QR'\r\n            )}\r\n          </button>\r\n\r\n          {/* Simulation Button - Only show in development and when payment is active */}\r\n          {DeunaService.isDevelopmentMode() && isPolling && !['completed', 'cancelled', 'failed'].includes(currentStatus) && (\r\n            <button\r\n              onClick={handleSimulatePayment}\r\n              disabled={isSimulating}\r\n              className=\"flex-1 bg-orange-500 hover:bg-orange-600 disabled:opacity-50 disabled:cursor-not-allowed text-white font-medium py-2 px-4 rounded-lg transition-colors flex items-center justify-center\"\r\n            >\r\n              {isSimulating ? (\r\n                <>\r\n                  <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                  Simulando...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Zap className=\"w-4 h-4 mr-2\" />\r\n                  🧪 Simular Pago\r\n                </>\r\n              )}\r\n            </button>\r\n          )}\r\n          \r\n          {currentStatus === 'completed' && (\r\n            <button\r\n              onClick={() => onPaymentSuccess && onPaymentSuccess(paymentData)}\r\n              className=\"flex-1 bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-lg transition-colors flex items-center justify-center\"\r\n            >\r\n              <CheckCircle className=\"w-4 h-4 mr-2\" />\r\n              Continuar\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Error Display */}\r\n        {error && (\r\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n            <div className=\"flex items-center\">\r\n              <XCircle className=\"w-5 h-5 text-red-600 mr-2\" />\r\n              <p className=\"text-red-700\">{error}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Instructions */}\r\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n          <h4 className=\"font-medium text-blue-900 mb-2\">Instrucciones:</h4>\r\n          <ol className=\"text-sm text-blue-800 space-y-1\">\r\n            <li><strong>1.</strong> Escanea el código QR con tu app de pagos</li>\r\n            <li><strong>2.</strong> O usa el enlace de pago en tu dispositivo móvil</li>\r\n            <li><strong>3.</strong> Completa el pago en la aplicación</li>\r\n            <li><strong>4.</strong> Espera la confirmación automática</li>\r\n          </ol>\r\n          \r\n          {/* Development Note */}\r\n          {DeunaService.isDevelopmentMode() && isPolling && (\r\n            <div className=\"mt-3 pt-3 border-t border-blue-300\">\r\n              <p className=\"text-xs text-orange-700 bg-orange-50 p-2 rounded\">\r\n                🧪 <strong>Modo de desarrollo:</strong> Puedes usar el botón \"Simular Pago\" para testear el flujo completo sin necesidad de realizar un pago real.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Initial state - show generate button\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <p className=\"mb-4 text-center text-gray-600\">\r\n        Paga con DeUna!, Genera el código qr y escanealo desde tu app para pagar\r\n        de forma rápida y segura.\r\n      </p>\r\n\r\n      {/* Información sobre DeUna */}\r\n      <div className=\"bg-[#2fd8a8] border-purple-200 rounded-lg p-6\">\r\n        <div className=\"flex items-center justify-center mb-4\">\r\n          <img\r\n            src=\"https://deuna.app/assets/img/brand/logo-deuna.svg\"\r\n            alt=\"DeUna Logo\"\r\n            className=\"w-50 h-50\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Generate Payment Button */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={generateQRPayment}\r\n        disabled={isGenerating || !user || !cart?.items?.length}\r\n        className=\"w-full bg-[#3f2b57] hover:bg-[#342843] disabled:opacity-50 disabled:cursor-not-allowed text-white font-bold py-3 px-6 rounded-lg transition-all duration-200 transform hover:scale-101 disabled:transform-none flex items-center justify-center\"\r\n      >\r\n        {isGenerating ? (\r\n          <>\r\n            <RefreshCw className=\"w-5 h-5 mr-2 animate-spin\" />\r\n            Generando código QR...\r\n          </>\r\n        ) : (\r\n          `Pagar con DeUna! - ${formatCurrency(total)}`\r\n        )}\r\n      </button>\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center\">\r\n            <XCircle className=\"w-5 h-5 text-red-600 mr-2\" />\r\n            <p className=\"text-red-700\">{error}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mt-4 text-sm text-center text-gray-500\">\r\n        <p>\r\n          <strong>1.</strong> Haz clic en \"Pagar con DeUna!\"\r\n        </p>\r\n        <p>\r\n          <strong>2.</strong> Completa el pago con el QR\r\n        </p>\r\n        <p>\r\n          <strong>3.</strong> Confirma tu compra al finalizar.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRPaymentForm;","import React from \"react\";\r\nimport type {Address} from \"../../../core/domain/valueObjects/Address\";\r\n\r\ninterface AddressFormProps {\r\n\ttitle: string;\r\n\taddress: Partial<Address>;\r\n\tonAddressChange: (field: keyof Address, value: string) => void;\r\n\terrors: Record<string, string>;\r\n}\r\n\r\nconst AddressForm: React.FC<AddressFormProps> = ({\r\n\ttitle,\r\n\taddress,\r\n\tonAddressChange,\r\n\terrors,\r\n}) => {\r\n\tconst formId = title.replace(/\\s+/g, \"-\").toLowerCase();\r\n\r\n\treturn (\r\n\t\t<div className=\"space-y-4\">\r\n\t\t\t<h3 className=\"text-lg font-semibold text-gray-800\">\r\n\t\t\t\t{title}\r\n\t\t\t</h3>\r\n\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n\t\t\t\t<div className=\"md:col-span-2\">\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`name-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNombre Completo *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`name-${formId}`}\r\n\t\t\t\t\t\tvalue={address.name || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"name\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.name ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"Nombre y Apellido\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.name && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.name}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"md:col-span-2\">\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`identification-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCédula/RUC *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`identification-${formId}`}\r\n\t\t\t\t\t\tvalue={address.identification || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"identification\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.identification ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"1234567890 (cédula) o 1234567890001 (RUC)\"\r\n\t\t\t\t\t\tmaxLength={13}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.identification && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.identification}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"md:col-span-2\">\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`street-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDirección / Calle Principal *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`street-${formId}`}\r\n\t\t\t\t\t\tvalue={address.street || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"street\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.street ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"Calle, número, piso, etc.\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.street && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.street}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`city-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCiudad *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`city-${formId}`}\r\n\t\t\t\t\t\tvalue={address.city || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"city\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.city ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"Ciudad\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.city && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.city}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`state-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tProvincia/Estado *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`state-${formId}`}\r\n\t\t\t\t\t\tvalue={address.state || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"state\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.state ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"Provincia o Estado\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.state && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.state}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`postalCode-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCódigo Postal\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`postalCode-${formId}`}\r\n\t\t\t\t\t\tvalue={address.postalCode || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"postalCode\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.postalCode ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"Código Postal\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.postalCode && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.postalCode}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`country-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tPaís *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`country-${formId}`}\r\n\t\t\t\t\t\tvalue={address.country || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"country\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.country ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"País\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.country && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.country}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"md:col-span-2\">\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`phone-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tTeléfono *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\tid={`phone-${formId}`}\r\n\t\t\t\t\t\tvalue={address.phone || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"phone\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.phone ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"Número de teléfono\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.phone && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddressForm;\r\n","import { useEffect } from 'react';\n\n/**\n * Hook para manejar el CSP dinámicamente para Datafast\n * Remueve agresivamente cualquier CSP que bloquee los scripts necesarios\n */\nexport const useDatafastCSP = () => {\n  useEffect(() => {\n    console.log('🔓 Hook useDatafastCSP activado - Desactivando CSP para Datafast');\n    \n    // Función para remover todos los CSP\n    const removeAllCSP = () => {\n      // Remover meta tags de CSP\n      const cspMetas = document.querySelectorAll('meta[http-equiv=\"Content-Security-Policy\"]');\n      if (cspMetas.length > 0) {\n        cspMetas.forEach(meta => meta.remove());\n        console.log(`🗑️ Removidos ${cspMetas.length} meta tags de CSP`);\n      }\n      \n      // También buscar y remover headers de CSP en caso de que estén en otros formatos\n      const allMetas = document.querySelectorAll('meta');\n      allMetas.forEach(meta => {\n        const httpEquiv = meta.getAttribute('http-equiv')?.toLowerCase();\n        if (httpEquiv && httpEquiv.includes('content-security')) {\n          meta.remove();\n          console.log('🗑️ Removido meta tag con CSP alternativo');\n        }\n      });\n    };\n    \n    // Remover CSP inicial\n    removeAllCSP();\n    \n    // Observador de mutaciones para detectar cuando se añade un CSP\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === 'childList') {\n          mutation.addedNodes.forEach((node) => {\n            if (node.nodeType === 1) { // Element node\n              const element = node as Element;\n              if (element.tagName === 'META') {\n                const httpEquiv = element.getAttribute('http-equiv')?.toLowerCase();\n                if (httpEquiv && httpEquiv.includes('content-security')) {\n                  console.log('🚨 CSP detectado por MutationObserver - removiendo inmediatamente');\n                  element.remove();\n                }\n              }\n            }\n          });\n        }\n      });\n    });\n    \n    // Observar cambios en el head\n    observer.observe(document.head, {\n      childList: true,\n      subtree: true\n    });\n    \n    // Verificación agresiva cada 100ms\n    const aggressiveCheck = setInterval(() => {\n      removeAllCSP();\n    }, 100);\n    \n    // Verificación menos frecuente cada segundo\n    const regularCheck = setInterval(() => {\n      const csp = document.querySelector('meta[http-equiv=\"Content-Security-Policy\"]');\n      if (csp) {\n        console.log('⚠️ CSP detectado en verificación regular - removiendo');\n        removeAllCSP();\n      }\n    }, 1000);\n    \n    // Cleanup\n    return () => {\n      console.log('🔄 Limpiando hook useDatafastCSP');\n      observer.disconnect();\n      clearInterval(aggressiveCheck);\n      clearInterval(regularCheck);\n    };\n  }, []);\n};","import React, {useState, useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useCart} from \"../../hooks/useCart\";\r\nimport {useAuth} from \"../../hooks/useAuth\";\r\nimport {DatafastService} from \"../../../core/services/DatafastService\";\r\nimport {CheckoutService} from \"../../../core/services/CheckoutService\";\r\nimport {CheckoutItemsService} from \"../../../infrastructure/services/CheckoutItemsService\";\r\nimport type {DatafastCheckoutRequest} from \"../../../core/services/DatafastService\";\r\nimport type {PaymentMethod, PaymentInfo} from \"../../../core/services/CheckoutService\";\r\nimport {NotificationType} from \"../../contexts/CartContext\";\r\nimport {useDatafastCSP} from \"../../hooks/useDatafastCSP\";\r\nimport type {CheckoutData} from \"../../../types/checkout\";\r\n\r\ninterface DatafastPaymentButtonProps {\r\n\tonSuccess?: (orderData: any) => void;\r\n\tonError?: (error: string) => void;\r\n\tcheckoutData?: CheckoutData; // ✅ NUEVO: Objeto temporal con datos validados\r\n\t// ✅ LEGACY: Mantener soporte para shippingAddress por compatibilidad\r\n\tshippingAddress?: {\r\n\t\tname?: string;\r\n\t\tstreet?: string;\r\n\t\tcity?: string;\r\n\t\tstate?: string;\r\n\t\tpostalCode?: string;\r\n\t\tcountry?: string;\r\n\t\tphone?: string;\r\n\t\tidentification?: string;\r\n\t};\r\n}\r\n\r\ninterface FormData {\r\n\taddress: string;\r\n\tcity: string;\r\n\tcountry: string;\r\n\tgiven_name: string;\r\n\tmiddle_name: string;\r\n\tsurname: string;\r\n\tphone: string;\r\n\tdoc_id: string;\r\n}\r\n\r\nconst DatafastPaymentButton: React.FC<DatafastPaymentButtonProps> = ({\r\n\tonSuccess,\r\n\tonError,\r\n\tcheckoutData,\r\n}) => {\r\n\t// 🔓 Desactivar CSP temporalmente para permitir scripts de Datafast\r\n\tuseDatafastCSP();\r\n\t\r\n\t// ✅ MAPEO DE PAÍSES: nombres completos a códigos ISO 3166-1 alpha-2\r\n\tconst countryMapping: Record<string, string> = {\r\n\t\t\"Ecuador\": \"EC\",\r\n\t\t\"Colombia\": \"CO\", \r\n\t\t\"Perú\": \"PE\",\r\n\t\t\"Peru\": \"PE\",\r\n\t\t\"Estados Unidos\": \"US\",\r\n\t\t\"United States\": \"US\",\r\n\t\t\"USA\": \"US\",\r\n\t\t// Si ya viene como código, lo dejamos igual\r\n\t\t\"EC\": \"EC\",\r\n\t\t\"CO\": \"CO\", \r\n\t\t\"PE\": \"PE\",\r\n\t\t\"US\": \"US\"\r\n\t};\r\n\t\r\n\tconst navigate = useNavigate();\r\n\tconst {cart, clearCart, showNotification, appliedDiscount} = useCart();\r\n\tconst {user} = useAuth();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\t// ✅ FUNCIÓN HELPER: Mapear país a código ISO (debe estar antes del useState)\r\n\tconst mapCountryCode = (country: string): string => {\r\n\t\treturn countryMapping[country] || country.substring(0, 2).toUpperCase();\r\n\t};\r\n\r\n\t// ✅ FUNCIÓN HELPER: Extraer cédula (10 dígitos) desde RUC (13 dígitos)\r\n\tconst extractCedulaFromRUC = (identification: string): { cedula: string; wasRuc: boolean; message?: string } => {\r\n\t\tconst cleanId = identification.replace(/\\D/g, ''); // Solo números\r\n\r\n\t\tif (cleanId.length === 10) {\r\n\t\t\t// Ya es una cédula válida\r\n\t\t\tif (!/^\\d{10}$/.test(cleanId)) {\r\n\t\t\t\treturn { cedula: cleanId, wasRuc: false, message: \"Cédula debe tener 10 dígitos numéricos\" };\r\n\t\t\t}\r\n\t\t\treturn { cedula: cleanId, wasRuc: false };\r\n\t\t} else if (cleanId.length === 13) {\r\n\t\t\t// Es RUC, extraer cédula (primeros 10 dígitos)\r\n\t\t\tconst extractedCedula = cleanId.substring(0, 10);\r\n\t\t\treturn {\r\n\t\t\t\tcedula: extractedCedula,\r\n\t\t\t\twasRuc: true,\r\n\t\t\t\tmessage: `Se extrajo automáticamente la cédula ${extractedCedula} del RUC ${cleanId}`\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\t// Longitud inválida\r\n\t\t\treturn {\r\n\t\t\t\tcedula: cleanId,\r\n\t\t\t\twasRuc: false,\r\n\t\t\t\tmessage: `Identificación inválida: debe tener 10 dígitos (cédula) o 13 dígitos (RUC)`\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst [showWidget, setShowWidget] = useState(false);\r\n\tconst [checkoutResponse, setCheckoutResponse] = useState<any>(null);\r\n\tconst [showForm, setShowForm] = useState(false);\r\n\tconst [widgetLoaded, setWidgetLoaded] = useState(false);\r\n\tconst [calculatedTotals, setCalculatedTotals] = useState<any>(null);\r\n\r\n\t// ✅ VALIDAR QUE EXISTAN DATOS VÁLIDOS - NO FALLBACKS\r\n\tconst [formData, setFormData] = useState<FormData>(() => {\r\n\t\t// SOLO usar CheckoutData validado - no fallbacks\r\n\t\tif (!checkoutData?.shippingData) {\r\n\t\t\tthrow new Error(\"DatafastPaymentButton requiere CheckoutData válido\");\r\n\t\t}\r\n\r\n\t\tconst shippingData = checkoutData.shippingData;\r\n\t\tconst nameParts = shippingData.name.split(' ');\r\n\t\tconst firstName = nameParts[0];\r\n\t\tconst lastName = nameParts.slice(1).join(' ');\r\n\r\n\t\t// ✅ CRÍTICO: Auto-extraer cédula desde RUC para Datafast\r\n\t\tconst extractionResult = extractCedulaFromRUC(shippingData.identification);\r\n\r\n\t\t// Log para debugging\r\n\t\tconsole.log(\"🔍 DatafastPaymentButton: Procesando identificación:\", {\r\n\t\t\toriginal: shippingData.identification,\r\n\t\t\textracted: extractionResult.cedula,\r\n\t\t\twasRuc: extractionResult.wasRuc,\r\n\t\t\tmessage: extractionResult.message\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\taddress: shippingData.street,\r\n\t\t\tcity: shippingData.city,\r\n\t\t\tcountry: mapCountryCode(shippingData.country),\r\n\t\t\tgiven_name: firstName,\r\n\t\t\tmiddle_name: \"\",\r\n\t\t\tsurname: lastName,\r\n\t\t\tphone: shippingData.phone,\r\n\t\t\tdoc_id: extractionResult.cedula, // ✅ Usar cédula extraída automáticamente\r\n\t\t};\r\n\t});\r\n\r\n\tconst datafastService = new DatafastService();\r\n\tconst checkoutService = new CheckoutService();\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tconst script = document.getElementById(\"datafast-widget-script\");\r\n\t\t\tif (script) {\r\n\t\t\t\tscript.remove();\r\n\t\t\t}\r\n\t\t};\r\n\t}, []);\r\n\r\n\t// ✅ VALIDACIÓN: CheckoutData no debe cambiar una vez pasado\r\n\tuseEffect(() => {\r\n\t\tif (!checkoutData) {\r\n\t\t\tconsole.error(\"❌ DatafastPaymentButton: No se recibió CheckoutData válido\");\r\n\t\t} else {\r\n\t\t\tconsole.log(\"✅ DatafastPaymentButton: Usando CheckoutData validado:\", {\r\n\t\t\t\tsessionId: checkoutData.sessionId,\r\n\t\t\t\tuserId: checkoutData.userId,\r\n\t\t\t\ttotal: checkoutData.totals.final_total,\r\n\t\t\t\titemsCount: checkoutData.items.length,\r\n\t\t\t\tvalidatedAt: checkoutData.validatedAt\r\n\t\t\t});\r\n\r\n\t\t\t// ✅ AUTO-EXTRACCIÓN SILENCIOSA: No mostrar notificaciones innecesarias\r\n\t\t\textractCedulaFromRUC(checkoutData.shippingData.identification);\r\n\t\t}\r\n\t}, [checkoutData, showNotification]);\r\n\r\n\tconst handleInputChange = (field: keyof FormData, value: string) => {\r\n\t\t// ✅ CRÍTICO: Si está editando doc_id, aplicar auto-extracción de cédula desde RUC\r\n\t\tif (field === \"doc_id\") {\r\n\t\t\tconst extractionResult = extractCedulaFromRUC(value);\r\n\r\n\t\t\t// ✅ AUTO-EXTRACCIÓN SILENCIOSA: Solo mostrar errores críticos\r\n\t\t\tif (extractionResult.message && !extractionResult.wasRuc && extractionResult.cedula.length !== 10) {\r\n\t\t\t\t// Solo mostrar errores de validación críticos\r\n\t\t\t\tshowNotification(\r\n\t\t\t\t\tNotificationType.WARNING,\r\n\t\t\t\t\textractionResult.message\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tsetFormData((prev) => ({...prev, [field]: extractionResult.cedula}));\r\n\t\t} else {\r\n\t\t\tsetFormData((prev) => ({...prev, [field]: value}));\r\n\t\t}\r\n\t};\r\n\r\n\tconst validateFormData = (): boolean => {\r\n\t\tconst requiredFields: (keyof FormData)[] = [\r\n\t\t\t\"address\",\r\n\t\t\t\"city\",\r\n\t\t\t\"country\",\r\n\t\t\t\"given_name\",\r\n\t\t\t\"surname\",\r\n\t\t\t\"phone\",\r\n\t\t\t\"doc_id\",\r\n\t\t];\r\n\r\n\t\tfor (const field of requiredFields) {\r\n\t\t\tif (!formData[field] || formData[field].trim() === \"\") {\r\n\t\t\t\tshowNotification(\r\n\t\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\t`El campo ${field.replace(\"_\", \" \")} es obligatorio`\r\n\t\t\t\t);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (formData.doc_id.length !== 10 || !/^\\d+$/.test(formData.doc_id)) {\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\"La cédula debe tener exactamente 10 dígitos\"\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst handleStartPayment = async () => {\r\n\t\tif (!cart || cart.items.length === 0) {\r\n\t\t\tshowNotification(NotificationType.ERROR, \"El carrito está vacío\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!validateFormData()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetIsLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\t// ✅ VALIDAR QUE EXISTE CHECKOUTDATA\r\n\t\t\tif (!checkoutData) {\r\n\t\t\t\tthrow new Error(\"No se puede proceder sin CheckoutData validado\");\r\n\t\t\t}\r\n\r\n\t\t\t// ✅ USAR DATOS DIRECTAMENTE DEL OBJETO TEMPORAL - NO RECALCULAR\r\n\t\t\tconsole.log(\"💰 Usando totales pre-calculados de CheckoutData:\", checkoutData.totals);\r\n\t\t\tconsole.log(\"🛒 Usando items pre-preparados de CheckoutData:\", checkoutData.items);\r\n\r\n\t\t\t// Almacenar totales para usar en el widget\r\n\t\t\tsetCalculatedTotals(checkoutData.totals);\r\n\r\n\t\t\t// ✅ USAR DATOS VALIDADOS DEL CHECKOUT - NO FORMULARIO\r\n\t\t\tconst customerData: any = {\r\n\t\t\t\tgiven_name: formData.given_name,\r\n\t\t\t\tsurname: formData.surname,\r\n\t\t\t\tphone: formData.phone,\r\n\t\t\t\tdoc_id: formData.doc_id,\r\n\t\t\t};\r\n\r\n\t\t\t// Solo agregar middle_name si realmente tiene valor\r\n\t\t\tif (formData.middle_name && formData.middle_name.trim() !== \"\") {\r\n\t\t\t\tcustomerData.middle_name = formData.middle_name.trim();\r\n\t\t\t}\r\n\r\n\t\t\tconst requestData: DatafastCheckoutRequest = {\r\n\t\t\t\tshippingAddress: {\r\n\t\t\t\t\tstreet: formData.address,\r\n\t\t\t\t\tcity: formData.city,\r\n\t\t\t\t\tcountry: mapCountryCode(formData.country),\r\n\t\t\t\t},\r\n\t\t\t\tcustomer: customerData,\r\n\t\t\t\titems: checkoutData.items, // ✅ USAR ITEMS DEL OBJETO TEMPORAL\r\n\t\t\t\ttotal: checkoutData.totals.final_total, // ✅ USAR TOTAL DEL OBJETO TEMPORAL\r\n\t\t\t\tsubtotal: checkoutData.totals.subtotal_with_discounts,\r\n\t\t\t\tshipping_cost: checkoutData.totals.shipping_cost,\r\n\t\t\t\ttax: checkoutData.totals.iva_amount,\r\n\t\t\t\tdiscount_code: checkoutData.discountCode || null,\r\n\t\t\t\tdiscount_info: checkoutData.discountInfo || null,\r\n\t\t\t\t// ✅ NUEVO: Incluir información de sesión para validación\r\n\t\t\t\tsession_id: checkoutData.sessionId,\r\n\t\t\t\tvalidated_at: checkoutData.validatedAt\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\"Iniciando checkout con Datafast usando CheckoutData...\", requestData);\r\n\t\t\tconsole.log(\"💰 Total enviado a Datafast: $\", checkoutData.totals.final_total);\r\n\t\t\tconsole.log(\"🔍 DEBUG - Datos de CheckoutData enviados:\");\r\n\t\t\tconsole.log(\"   - sessionId:\", checkoutData.sessionId);\r\n\t\t\tconsole.log(\"   - customer.middle_name:\", requestData.customer?.middle_name !== undefined\r\n\t\t\t\t? `\"${requestData.customer.middle_name}\" (tipo: ${typeof requestData.customer.middle_name})`\r\n\t\t\t\t: \"OMITIDO - campo no enviado\");\r\n\t\t\tconsole.log(\"   - shippingAddress.country:\", `\"${requestData.shippingAddress.country}\" (tipo: ${typeof requestData.shippingAddress.country})`);\r\n\t\t\tconsole.log(\"🔍 DEBUG - Customer completo:\", JSON.stringify(requestData.customer, null, 2));\r\n\r\n\t\t\tconst response = await datafastService.createCheckout(requestData);\r\n\t\t\tconsole.log(\"Respuesta del checkout:\", response);\r\n\r\n\t\t\tif (response.status === \"success\" && response.data) { // ✅ CORREGIDO: Cambiar response.success por response.status\r\n\t\t\t\tsetCheckoutResponse(response.data);\r\n\t\t\t\tsetShowForm(false);\r\n\t\t\t\tsetShowWidget(true);\r\n\r\n\t\t\t\t// ✅ GUARDAR DATOS NECESARIOS PARA LA VERIFICACIÓN\r\n\t\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\t\"datafast_transaction_id\",\r\n\t\t\t\t\tresponse.data.transaction_id\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\t// ✅ GUARDAR CHECKOUT_ID PARA SIMULACIÓN\r\n\t\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\t\"datafast_checkout_id\",\r\n\t\t\t\t\tresponse.data.checkout_id\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\t// ✅ GUARDAR CHECKOUTDATA COMPLETO PARA PROCESAR LA ORDEN DESPUÉS\r\n\t\t\t\tlocalStorage.setItem(\"datafast_calculated_total\", checkoutData.totals.final_total.toString());\r\n\t\t\t\tlocalStorage.setItem(\"datafast_form_data\", JSON.stringify(formData));\r\n\r\n\t\t\t\t// ✅ GUARDAR CHECKOUTDATA COMPLETO EN LUGAR DEL CARRITO\r\n\t\t\t\tconsole.log(\"💾 GUARDANDO CHECKOUTDATA VALIDADO EN LOCALSTORAGE\");\r\n\t\t\t\tconsole.log(\"   - Items en CheckoutData:\", checkoutData.items.length);\r\n\t\t\t\tconsole.log(\"   - SessionId:\", checkoutData.sessionId);\r\n\t\t\t\tlocalStorage.setItem(\"datafast_checkout_data\", JSON.stringify(checkoutData));\r\n\t\t\t\tconsole.log(\"   ✅ CheckoutData guardado en 'datafast_checkout_data'\");\r\n\r\n\t\t\t\t// ✅ CRITICAL FIX: Guardar sessionId que espera el backend\r\n\t\t\t\tlocalStorage.setItem(\"datafast_session_id\", checkoutData.sessionId);\r\n\t\t\t\tconsole.log(\"   ✅ SessionId guardado para backend:\", checkoutData.sessionId);\r\n\r\n\t\t\t\tshowNotification(\r\n\t\t\t\t\tNotificationType.SUCCESS,\r\n\t\t\t\t\t\"Checkout creado. Preparando formulario de pago...\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (response.data) {\r\n\t\t\t\t\t\tloadDatafastWidget(response.data.checkout_id);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\t\t\t\"Datos de checkout no disponibles\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 100);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(response.message || \"Error al crear checkout\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al iniciar pago con Datafast:\", error);\r\n\t\t\tconst errorMessage =\r\n\t\t\t\terror instanceof Error ? error.message : \"Error desconocido\";\r\n\t\t\tshowNotification(NotificationType.ERROR, errorMessage);\r\n\t\t\tonError?.(errorMessage);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst loadDatafastWidget = (checkoutId: string) => {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"Cargando widget de Datafast...\", checkoutId);\r\n\r\n\t\t\tconst existingScript = document.getElementById(\"datafast-widget-script\");\r\n\t\t\tif (existingScript) {\r\n\t\t\t\texistingScript.remove();\r\n\t\t\t}\r\n\r\n\t\t\t(window as any).wpwlOptions = {\r\n\t\t\t\tonReady: function () {\r\n\t\t\t\t\tconsole.log(\"✅ Widget de Datafast listo!\");\r\n\t\t\t\t\tsetWidgetLoaded(true);\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.SUCCESS,\r\n\t\t\t\t\t\t\"Formulario de pago cargado correctamente.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Agregar listener adicional al formulario cuando esté listo\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tconst form = document.querySelector('form.paymentWidgets');\r\n\t\t\t\t\t\tif (form) {\r\n\t\t\t\t\t\t\tconsole.log(\"📝 Agregando listener adicional al formulario\");\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// Escuchar el evento submit\r\n\t\t\t\t\t\t\tform.addEventListener('submit', function(_e) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"🚀 FORMULARIO ENVIADO - Evento capturado!\");\r\n\t\t\t\t\t\t\t\tconsole.log(\"   - Action actual:\", form.getAttribute('action'));\r\n\t\t\t\t\t\t\t\tconsole.log(\"   - Method:\", form.getAttribute('method'));\r\n\t\t\t\t\t\t\t\tconsole.log(\"   - Target:\", form.getAttribute('target'));\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// No prevenir el default, solo observar\r\n\t\t\t\t\t\t\t\t// _e.preventDefault();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// También observar cambios en el DOM\r\n\t\t\t\t\t\t\tconst observer = new MutationObserver((mutations) => {\r\n\t\t\t\t\t\t\t\tmutations.forEach((mutation) => {\r\n\t\t\t\t\t\t\t\t\tif (mutation.type === 'attributes' && mutation.attributeName === 'action') {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"🔄 Action del formulario cambió a:\", form.getAttribute('action'));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tobserver.observe(form, { \r\n\t\t\t\t\t\t\t\tattributes: true, \r\n\t\t\t\t\t\t\t\tattributeFilter: ['action', 'method'] \r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// Observar la creación de iframes\r\n\t\t\t\t\t\t\tconst iframeObserver = new MutationObserver((mutations) => {\r\n\t\t\t\t\t\t\t\tmutations.forEach((mutation) => {\r\n\t\t\t\t\t\t\t\t\tmutation.addedNodes.forEach((node: any) => {\r\n\t\t\t\t\t\t\t\t\t\tif (node.tagName === 'IFRAME') {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"🖼️ Nuevo iframe detectado:\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: node.name,\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc: node.src,\r\n\t\t\t\t\t\t\t\t\t\t\t\tid: node.id\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// Escuchar cuando el iframe se carga\r\n\t\t\t\t\t\t\t\t\t\t\tnode.addEventListener('load', () => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"✅ Iframe cargado:\", node.name);\r\n\t\t\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst iframeDoc = node.contentDocument || node.contentWindow?.document;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (iframeDoc) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"📄 Contenido del iframe accesible\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"🔒 Iframe cross-origin, no se puede acceder al contenido\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tiframeObserver.observe(document.body, { \r\n\t\t\t\t\t\t\t\tchildList: true, \r\n\t\t\t\t\t\t\t\tsubtree: true \r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 500);\r\n\t\t\t\t},\r\n\t\t\t\tonBeforeSubmitCard: function (data: any) {\r\n\t\t\t\t\tconsole.log(\"🔄 Widget Datafast: Usuario hizo clic en Pagar, procesando...\");\r\n\t\t\t\t\tconsole.log(\"🔍 Datos de la tarjeta que se están enviando:\", data);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Buscar el formulario y verificar su estado\r\n\t\t\t\t\tconst form = document.querySelector('form.paymentWidgets') as HTMLFormElement;\r\n\t\t\t\t\tif (form) {\r\n\t\t\t\t\t\tconsole.log(\"📝 Estado del formulario al hacer submit:\");\r\n\t\t\t\t\t\tconsole.log(\"   - Action:\", form.action);\r\n\t\t\t\t\t\tconsole.log(\"   - Method:\", form.method);\r\n\t\t\t\t\t\tconsole.log(\"   - Target:\", form.target);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Verificar si hay campos ocultos con el checkout ID\r\n\t\t\t\t\t\tconst checkoutIdField = form.querySelector('input[name=\"checkoutId\"]');\r\n\t\t\t\t\t\tif (checkoutIdField) {\r\n\t\t\t\t\t\t\tconsole.log(\"   - CheckoutId field:\", checkoutIdField.getAttribute('value'));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Verificar si hay un iframe target\r\n\t\t\t\t\t\tconst targetFrame = document.querySelector(`iframe[name=\"${form.target}\"]`);\r\n\t\t\t\t\t\tif (targetFrame) {\r\n\t\t\t\t\t\t\tconsole.log(\"   - Target iframe encontrado:\", targetFrame);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconsole.log(\"   - ⚠️ No se encontró iframe target\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.INFO,\r\n\t\t\t\t\t\t\"Procesando pago con Datafast...\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Retornar true para permitir el submit\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\tonAfterSubmitCard: async function (data: any) {\r\n\t\t\t\t\tconsole.log(\"⏳ Widget Datafast: Datos enviados, esperando respuesta...\");\r\n\t\t\t\t\tconsole.log(\"📤 Respuesta completa después del envío:\", data);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Debug detallado de la respuesta\r\n\t\t\t\t\tconsole.log(\"🔍 DEBUG: Analizando estructura de la respuesta:\");\r\n\t\t\t\t\tconsole.log(\"   - Tipo de data:\", typeof data);\r\n\t\t\t\t\tconsole.log(\"   - Es un array?:\", Array.isArray(data));\r\n\t\t\t\t\tconsole.log(\"   - Keys del objeto:\", data ? Object.keys(data) : \"data es null/undefined\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Si data es un evento, intentar obtener más información\r\n\t\t\t\t\tif (data && data.originalEvent) {\r\n\t\t\t\t\t\tconsole.log(\"📋 Evento original detectado:\", data.originalEvent);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (data && data.target) {\r\n\t\t\t\t\t\tconsole.log(\"🎯 Target del evento:\", data.target);\r\n\t\t\t\t\t\tconst form = data.target;\r\n\t\t\t\t\t\tif (form && form.tagName === 'FORM') {\r\n\t\t\t\t\t\t\tconsole.log(\"📝 Formulario encontrado en evento:\");\r\n\t\t\t\t\t\t\tconsole.log(\"   - Action:\", form.action);\r\n\t\t\t\t\t\t\tconsole.log(\"   - Method:\", form.method);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Intentar convertir a string solo si no es circular\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconsole.log(\"   - JSON stringified:\", JSON.stringify(data, null, 2));\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.log(\"   - No se puede convertir a JSON (referencia circular)\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Verificar si hay información de redirect\r\n\t\t\t\t\tif (data && data.redirect) {\r\n\t\t\t\t\t\tconsole.log(\"🔗 Información de redirect encontrada:\", data.redirect);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Verificar si hay un resourcePath\r\n\t\t\t\t\tif (data && data.resourcePath) {\r\n\t\t\t\t\t\tconsole.log(\"📍 ResourcePath encontrado:\", data.resourcePath);\r\n\t\t\t\t\t\tconsole.log(\"🔄 Intentando redirección manual a:\", `/datafast-result?resourcePath=${encodeURIComponent(data.resourcePath)}`);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Intentar redirección manual si el widget no lo hace automáticamente\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tconsole.log(\"⏰ Esperando 3 segundos para ver si hay redirección automática...\");\r\n\t\t\t\t\t\t}, 3000);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Monitorear cambios en el DOM y verificar estado\r\n\t\t\t\t\tlet checkCount = 0;\r\n\t\t\t\t\tconst maxChecks = 10; // Verificar máximo 10 veces\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst checkInterval = setInterval(async () => {\r\n\t\t\t\t\t\tcheckCount++;\r\n\t\t\t\t\t\tconsole.log(`🔄 Verificación ${checkCount}/${maxChecks} del estado del pago...`);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Verificar si hay un iframe de pago\r\n\t\t\t\t\t\tconst paymentIframe = document.querySelector('iframe[name*=\"oppwa\"], iframe[src*=\"oppwa\"], iframe[src*=\"datafast\"]') as HTMLIFrameElement;\r\n\t\t\t\t\t\tif (paymentIframe) {\r\n\t\t\t\t\t\t\tconsole.log(\"🖼️ iFrame de pago detectado:\", {\r\n\t\t\t\t\t\t\t\tname: paymentIframe.getAttribute('name'),\r\n\t\t\t\t\t\t\t\tsrc: paymentIframe.getAttribute('src'),\r\n\t\t\t\t\t\t\t\tvisible: paymentIframe.style.display !== 'none'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Verificar si el formulario cambió\r\n\t\t\t\t\t\tconst form = document.querySelector('form.paymentWidgets');\r\n\t\t\t\t\t\tif (form) {\r\n\t\t\t\t\t\t\tconst formAction = form.getAttribute('action');\r\n\t\t\t\t\t\t\tif (formAction && formAction.includes('resourcePath')) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"📝 Formulario actualizado con resourcePath:\", formAction);\r\n\t\t\t\t\t\t\t\tclearInterval(checkInterval);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Extraer resourcePath\r\n\t\t\t\t\t\t\t\tconst urlParams = new URLSearchParams(formAction.split('?')[1]);\r\n\t\t\t\t\t\t\t\tconst resourcePath = urlParams.get('resourcePath');\r\n\t\t\t\t\t\t\t\tif (resourcePath) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"🎯 ResourcePath extraído:\", resourcePath);\r\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\"datafast_resource_path\", resourcePath);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// Redirigir manualmente después de un momento\r\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"🚀 Redirigiendo manualmente al resultado...\");\r\n\t\t\t\t\t\t\t\t\t\twindow.location.href = formAction;\r\n\t\t\t\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Verificar el estado del pago con el backend\r\n\t\t\t\t\t\tif (checkCount >= 3) { // Empezar a verificar después del 3er intento\r\n\t\t\t\t\t\t\tconst checkoutId = localStorage.getItem(\"datafast_checkout_id\");\r\n\t\t\t\t\t\t\tconst transactionId = localStorage.getItem(\"datafast_transaction_id\");\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (checkoutId && transactionId) {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tconst verifyResponse = await fetch(`/api/datafast/verify-payment/${transactionId}`, {\r\n\t\t\t\t\t\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\t\t\t\t\t\t'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tconst result = await verifyResponse.json();\r\n\t\t\t\t\t\t\t\t\tconsole.log(`📊 Estado del pago (intento ${checkCount}):`, result.data?.payment_status);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (result.status === NotificationType.SUCCESS && result.data?.payment_status === 'completed') {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"🎉 Pago completado exitosamente!\");\r\n\t\t\t\t\t\t\t\t\t\tclearInterval(checkInterval);\r\n\t\t\t\t\t\t\t\t\t\twindow.location.href = `/datafast-result?status=success&transactionId=${transactionId}`;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\tconsole.error(`❌ Error verificando estado (intento ${checkCount}):`, error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Detener después de maxChecks intentos\r\n\t\t\t\t\t\tif (checkCount >= maxChecks) {\r\n\t\t\t\t\t\t\tconsole.log(\"⏰ Se alcanzó el límite de verificaciones\");\r\n\t\t\t\t\t\t\tclearInterval(checkInterval);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 3000); // Verificar cada 3 segundos\r\n\t\t\t\t},\r\n\t\t\t\tonLoadThreeDSecure: function () {\r\n\t\t\t\t\tconsole.log(\"🔐 Widget Datafast: Cargando 3D Secure...\");\r\n\t\t\t\t},\r\n\t\t\t\tonBeforeRedirectToResult: function (data: any) {\r\n\t\t\t\t\tconsole.log(\"🔄 Widget Datafast: Redirigiendo a página de resultado...\");\r\n\t\t\t\t\tconsole.log(\"🔗 Datos completos de redirección:\", data);\r\n\t\t\t\t\tconsole.log(\"🔍 DEBUG Redirect - Keys:\", data ? Object.keys(data) : \"null\");\r\n\t\t\t\t\tconsole.log(\"🔍 DEBUG Redirect - JSON:\", JSON.stringify(data, null, 2));\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Si encontramos un resourcePath, guardarlo\r\n\t\t\t\t\tif (data && data.resourcePath) {\r\n\t\t\t\t\t\tlocalStorage.setItem(\"datafast_resource_path\", data.resourcePath);\r\n\t\t\t\t\t\tconsole.log(\"💾 ResourcePath guardado en localStorage:\", data.resourcePath);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Permitir que el widget haga la redirección\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\tonChangeBrand: function (e: any) {\r\n\t\t\t\t\tconsole.log(\"💳 Widget Datafast: Marca de tarjeta detectada:\", e.brand);\r\n\t\t\t\t\tconsole.log(\"💳 Datos completos del evento:\", e);\r\n\t\t\t\t},\r\n\t\t\t\tonError: function (error: any) {\r\n\t\t\t\t\tconsole.error(\"❌ Widget Datafast: Error en el pago\", error);\r\n\t\t\t\t\tconsole.error(\"❌ Detalles completos del error:\", {\r\n\t\t\t\t\t\tmessage: error.message,\r\n\t\t\t\t\t\tcode: error.code,\r\n\t\t\t\t\t\tname: error.name,\r\n\t\t\t\t\t\tfull: error\r\n\t\t\t\t\t});\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\t\t\"Error al procesar el pago: \" + (error.message || error.code || 'Error desconocido')\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tonSubmit: function (data: any) {\r\n\t\t\t\t\tconsole.log(\"📋 Widget Datafast: Formulario enviado\");\r\n\t\t\t\t\tconsole.log(\"📋 Datos completos del formulario:\", data);\r\n\t\t\t\t\tconsole.log(\"📋 DEBUG Submit - Keys:\", data ? Object.keys(data) : \"null\");\r\n\t\t\t\t\tconsole.log(\"📋 DEBUG Submit - JSON:\", JSON.stringify(data, null, 2));\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Verificar el formulario actual\r\n\t\t\t\t\tconst form = document.querySelector('form.paymentWidgets');\r\n\t\t\t\t\tif (form) {\r\n\t\t\t\t\t\tconsole.log(\"📝 Formulario encontrado:\");\r\n\t\t\t\t\t\tconsole.log(\"   - Action:\", form.getAttribute('action'));\r\n\t\t\t\t\t\tconsole.log(\"   - Method:\", form.getAttribute('method'));\r\n\t\t\t\t\t\tconsole.log(\"   - Target:\", form.getAttribute('target'));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Verificar si hay un iframe oculto\r\n\t\t\t\t\t\tconst iframe = document.querySelector('iframe[name*=\"oppwa\"]');\r\n\t\t\t\t\t\tif (iframe) {\r\n\t\t\t\t\t\t\tconsole.log(\"🖼️ iFrame de pago encontrado:\", iframe);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn true; // Permitir el submit\r\n\t\t\t\t},\r\n\t\t\t\tstyle: \"card\",\r\n\t\t\t\tlocale: \"es\",\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tcvv: \"CVV\",\r\n\t\t\t\t\tcardHolder: \"Nombre (igual que en la tarjeta)\",\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\t// Cargar script adicional de validaciones de Datafast (opcional, ya que puede no existir)\r\n\t\t\tconst validationScriptUrl = import.meta.env.VITE_DATAFAST_VALIDATION_SCRIPT;\r\n\t\t\tif (validationScriptUrl) {\r\n\t\t\t\tconst additionalScript = document.createElement(\"script\");\r\n\t\t\t\tadditionalScript.src = validationScriptUrl;\r\n\t\t\t\tadditionalScript.async = true;\r\n\t\t\t\tadditionalScript.onerror = () => {\r\n\t\t\t\t\tconsole.warn(\"Script de validaciones adicionales de Datafast no disponible, continuando sin él\");\r\n\t\t\t\t};\r\n\t\t\t\tdocument.head.appendChild(additionalScript);\r\n\t\t\t}\r\n\r\n\t\t\t// Usar la URL del widget que viene del backend (incluye el checkoutId)\r\n\t\t\tconst script = document.createElement(\"script\");\r\n\t\t\tscript.id = \"datafast-widget-script\";\r\n\t\t\t\r\n\t\t\t// IMPORTANTE: Usar widget_url del backend que ya incluye el checkoutId\r\n\t\t\tif (checkoutResponse?.widget_url) {\r\n\t\t\t\tscript.src = checkoutResponse.widget_url;\r\n\t\t\t\tconsole.log(\"📌 Usando widget_url del backend:\", checkoutResponse.widget_url);\r\n\t\t\t} else {\r\n\t\t\t\t// Fallback solo si no hay widget_url del backend\r\n\t\t\t\tconst widgetBaseUrl = import.meta.env.VITE_DATAFAST_WIDGET_URL || \"https://eu-test.oppwa.com/v1/paymentWidgets.js\";\r\n\t\t\t\tscript.src = `${widgetBaseUrl}?checkoutId=${checkoutId}`;\r\n\t\t\t\tconsole.log(\"⚠️ Usando fallback URL con checkoutId:\", script.src);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tscript.async = true;\r\n\r\n\t\t\tscript.onload = () => {\r\n\t\t\t\tconsole.log(\"✅ Script de widget Datafast cargado exitosamente\");\r\n\t\t\t\t\r\n\t\t\t\t// Verificar que el widget se cargó correctamente\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tconst forms = document.querySelectorAll('form.paymentWidgets');\r\n\t\t\t\t\tconsole.log(\"📝 Formularios de pago encontrados:\", forms.length);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (forms.length === 0) {\r\n\t\t\t\t\t\tconsole.warn(\"⚠️ No se encontraron formularios con clase 'paymentWidgets'\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tforms.forEach((form, index) => {\r\n\t\t\t\t\t\t\tconsole.log(`📋 Formulario ${index + 1}:`, {\r\n\t\t\t\t\t\t\t\taction: form.getAttribute('action'),\r\n\t\t\t\t\t\t\t\tmethod: form.getAttribute('method'),\r\n\t\t\t\t\t\t\t\t'data-brands': form.getAttribute('data-brands')\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Verificar si hay scripts dinámicos bloqueados\r\n\t\t\t\t\tconst scripts = document.querySelectorAll('script[src*=\"techlab-cdn\"], script[src*=\"oppwa\"]');\r\n\t\t\t\t\tconsole.log(\"📜 Scripts de Datafast cargados:\", scripts.length);\r\n\t\t\t\t\tscripts.forEach(script => {\r\n\t\t\t\t\t\tconsole.log(\"  - \", (script as HTMLScriptElement).src);\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 1000);\r\n\t\t\t};\r\n\r\n\t\t\tscript.onerror = (error) => {\r\n\t\t\t\tconsole.error(\"❌ Error al cargar script del widget:\", error);\r\n\t\t\t\tshowNotification(\r\n\t\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\t\"Error al cargar el formulario de pago. Por favor, recargue la página.\"\r\n\t\t\t\t);\r\n\t\t\t};\r\n\r\n\t\t\tdocument.head.appendChild(script);\r\n\t\t\tconsole.log(\"📌 Script del widget añadido al DOM:\", script.src);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al configurar widget:\", error);\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\"Error al configurar el formulario de pago\"\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCompleteTestCheckout = async () => {\r\n\t\tconsole.log(\"🧪 DatafastPaymentButton.handleCompleteTestCheckout INICIADO\");\r\n\t\r\n\t\tif (!cart || cart.items.length === 0) {\r\n\t\t\tconsole.log(\"❌ Carrito vacío o null, abortando checkout\");\r\n\t\t\tshowNotification(NotificationType.ERROR, \"El carrito está vacío\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!validateFormData()) {\r\n\t\t\tconsole.log(\"❌ Validación de formulario falló\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"🛒 ANÁLISIS COMPLETO DEL CARRITO ANTES DEL CHECKOUT (DATAFAST):\");\r\n\t\tconsole.log(\"📊 Cart completo:\", JSON.stringify(cart, null, 2));\r\n\t\tconsole.log(\"📊 Total de items en carrito:\", cart.items.length);\r\n\t\tconsole.log(\"📊 Total del carrito:\", cart.total);\r\n\r\n\t\tcart.items.forEach((item, index) => {\r\n\t\t\tconsole.log(`📋 Item ${index + 1}:`, {\r\n\t\t\t\tid: item.id,\r\n\t\t\t\tproductId: item.productId,\r\n\t\t\t\tquantity: item.quantity,\r\n\t\t\t\tprice: item.price,\r\n\t\t\t\tsubtotal: item.subtotal,\r\n\t\t\t\tproduct: item.product ? {\r\n\t\t\t\t\tid: item.product.id,\r\n\t\t\t\t\tname: item.product.name,\r\n\t\t\t\t\tprice: item.product.price,\r\n\t\t\t\t\tfinal_price: item.product.final_price,\r\n\t\t\t\t\tsellerId: item.product.sellerId,\r\n\t\t\t\t\tseller_id: item.product.seller_id,\r\n\t\t\t\t\tuser_id: item.product.user_id\r\n\t\t\t\t} : null,\r\n\t\t\t\tcompleteItem: item\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconsole.log(\"🔍 VERIFICANDO DUPLICADOS EN EL CARRITO (DATAFAST):\");\r\n\t\tconst itemsByProductId = cart.items.reduce((acc: any, item, index) => {\r\n\t\t\tif (!acc[item.productId]) {\r\n\t\t\t\tacc[item.productId] = [];\r\n\t\t\t}\r\n\t\t\tacc[item.productId].push({index, item});\r\n\t\t\treturn acc;\r\n\t\t}, {});\r\n\r\n\t\tconsole.log(\"📊 Items agrupados por productId:\", itemsByProductId);\r\n\r\n\t\tObject.keys(itemsByProductId).forEach(productId => {\r\n\t\t\tconst items = itemsByProductId[productId];\r\n\t\t\tif (items.length > 1) {\r\n\t\t\t\tconsole.warn(`⚠️ DUPLICADO EN CARRITO DETECTADO para productId ${productId}:`);\r\n\t\t\t\tconsole.warn(`❌ Se encontraron ${items.length} items para el mismo producto`);\r\n\t\t\t\titems.forEach((itemData: any, i: number) => {\r\n\t\t\t\t\tconsole.warn(`   ${i + 1}. Item[${itemData.index}]:`, itemData.item);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(`✅ Producto ${productId}: Sin duplicados (${items[0].item.quantity} unidades)`);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsetIsLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconsole.log(\"🚀 Iniciando checkout de prueba completo (DATAFAST)...\");\r\n\r\n\t\t\t// ✅ CORREGIDO: Agregar null check para cart\r\n\t\t\tconst sellerId = cart ? CheckoutService.getSellerIdFromCart(cart) : null;\r\n\t\t\tconsole.log(\"🏪 Seller ID obtenido (DATAFAST):\", sellerId);\r\n\r\n\t\t\t// ✅ USAR MISMA LÓGICA DE CÁLCULO QUE CHECKOUT PAGE\r\n\t\t\tconst checkoutItems = await CheckoutItemsService.prepareItemsForCheckout(cart.items);\r\n\t\t\tconsole.log(\"🛒 Items formateados con descuentos aplicados (DATAFAST):\", JSON.stringify(checkoutItems, null, 2));\r\n\r\n\t\t\t// ✅ CALCULAR TOTALES CORRECTOS PARA EL BACKEND\r\n\t\t\tconsole.log(\"🔍 DEBUG: cart.items antes de calcular:\", cart.items);\r\n\t\t\tconsole.log(\"🔍 DEBUG: appliedDiscount antes de calcular:\", appliedDiscount);\r\n\t\t\t\r\n\t\t\tconst calculatedTotals = await CheckoutItemsService.calculateCheckoutTotals(cart.items, appliedDiscount);\r\n\t\t\tconsole.log(\"💰 Totales calculados para backend (DATAFAST):\", calculatedTotals);\r\n\t\t\tconsole.log(\"🔍 DEBUG: calculatedTotals es null?\", calculatedTotals === null);\r\n\t\t\tconsole.log(\"🔍 DEBUG: calculatedTotals es undefined?\", calculatedTotals === undefined);\r\n\t\t\tconsole.log(\"🔍 DEBUG: tipo de calculatedTotals:\", typeof calculatedTotals);\r\n\r\n\t\t\tconsole.log(\"🛒 Items formateados para backend (DATAFAST):\", JSON.stringify(checkoutItems, null, 2));\r\n\r\n\t\t\t// ✅ VALIDACIÓN ESTRICTA - NO FALLBACKS\r\n\t\t\tif (!formData.address || formData.address.trim() === '') {\r\n\t\t\t\tthrow new Error('Dirección es obligatoria para procesar el pago');\r\n\t\t\t}\r\n\t\t\tif (!formData.city || formData.city.trim() === '') {\r\n\t\t\t\tthrow new Error('Ciudad es obligatoria para procesar el pago');\r\n\t\t\t}\r\n\t\t\tif (!formData.country || formData.country.trim() === '') {\r\n\t\t\t\tthrow new Error('País es obligatorio para procesar el pago');\r\n\t\t\t}\r\n\t\t\tif (!formData.phone || formData.phone.trim() === '') {\r\n\t\t\t\tthrow new Error('Teléfono es obligatorio para procesar el pago');\r\n\t\t\t}\r\n\t\t\tif (!calculatedTotals) {\r\n\t\t\t\tthrow new Error('No se pudieron calcular los totales del pedido');\r\n\t\t\t}\r\n\t\t\tif (calculatedTotals.total <= 0) {\r\n\t\t\t\tthrow new Error('El total del pedido debe ser mayor a $0');\r\n\t\t\t}\r\n\r\n\t\t\tconst testCheckoutData = {\r\n\t\t\t\tpayment: {\r\n\t\t\t\t\tmethod: \"datafast\" as PaymentMethod,\r\n\t\t\t\t} as PaymentInfo,\r\n\t\t\t\tshippingAddress: {\r\n\t\t\t\t\tname: formData.given_name + \" \" + formData.surname,\r\n\t\t\t\t\tstreet: formData.address,\r\n\t\t\t\t\tcity: formData.city,\r\n\t\t\t\t\tstate: formData.country,\r\n\t\t\t\t\tpostalCode: \"170000\",\r\n\t\t\t\t\tcountry: formData.country,\r\n\t\t\t\t\tphone: formData.phone,\r\n\t\t\t\t},\r\n\t\t\t\tseller_id: sellerId || undefined,\r\n\t\t\t\titems: checkoutItems,\r\n\t\t\t\t// ✅ STRICT: Usar totales calculados SIN fallbacks\r\n\t\t\t\tcalculated_totals: {\r\n\t\t\t\t\tsubtotal: calculatedTotals.subtotal,\r\n\t\t\t\t\ttax: calculatedTotals.tax,\r\n\t\t\t\t\tshipping: calculatedTotals.shipping,\r\n\t\t\t\t\ttotal: calculatedTotals.total,\r\n\t\t\t\t\ttotal_discounts: calculatedTotals.totalDiscounts\r\n\t\t\t\t},\r\n\t\t\t\tdiscount_code: appliedDiscount?.discountCode.code || null,\r\n\t\t\t\tdiscount_info: appliedDiscount || null\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\"📦 Datos completos de checkout (DATAFAST):\", JSON.stringify(testCheckoutData, null, 2));\r\n\t\t\tconsole.log(\"🔍 DEBUG: testCheckoutData.calculated_totals:\", testCheckoutData.calculated_totals);\r\n\t\t\tconsole.log(\"🔍 DEBUG: Estructura del objeto calculated_totals:\");\r\n\t\t\tconsole.log(\"   - subtotal:\", testCheckoutData.calculated_totals.subtotal);\r\n\t\t\tconsole.log(\"   - tax:\", testCheckoutData.calculated_totals.tax);  \r\n\t\t\tconsole.log(\"   - shipping:\", testCheckoutData.calculated_totals.shipping);\r\n\t\t\tconsole.log(\"   - total:\", testCheckoutData.calculated_totals.total);\r\n\t\t\tconsole.log(\"   - total_discounts:\", testCheckoutData.calculated_totals.total_discounts);\r\n\t\t\t// ✅ SOLUCIÓN CORREGIDA: Replicar EXACTAMENTE el flujo del widget real\r\n\t\t\tconsole.log(\"🎯 PRUEBA COMPLETA DATAFAST: Simulando flujo idéntico al widget real\");\r\n\r\n\t\t\t// Paso 1: Crear checkout (igual que el widget)\r\n\t\t\tawait handleStartPayment();\r\n\r\n\t\t\t// Paso 2: Esperar a que se complete la creación del checkout\r\n\t\t\tsetTimeout(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Obtener datos del checkout creado\r\n\t\t\t\t\tconst transactionId = localStorage.getItem(\"datafast_transaction_id\");\r\n\t\t\t\t\tconst checkoutId = localStorage.getItem(\"datafast_checkout_id\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!transactionId || !checkoutId) {\r\n\t\t\t\t\t\tthrow new Error(\"No se encontraron IDs de transacción para continuar con la simulación\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.log(\"🔄 Simulando flujo completo del widget (sin usar crédito)...\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Paso 3: Simular el comportamiento EXACTO del widget real\r\n\t\t\t\t\tconst resultUrl = await datafastService.simulateCompleteWidgetFlow(\r\n\t\t\t\t\t\tcheckoutId,\r\n\t\t\t\t\t\ttransactionId,\r\n\t\t\t\t\t\tcalculatedTotals.total,\r\n\t\t\t\t\t\tformData\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconsole.log(\"✅ Flujo del widget simulado exitosamente\");\r\n\t\t\t\t\tconsole.log(\"🚀 Redirigiendo a DatafastResultPage (idéntico al widget real):\", resultUrl);\r\n\r\n\t\t\t\t\t// Paso 4: Redirigir EXACTAMENTE igual que lo haría el widget real\r\n\t\t\t\t\t// Esto procesará el resultado a través de DatafastResultPage usando el flujo completo\r\n\t\t\t\t\twindow.location.href = resultUrl;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Ya no necesitamos limpiar el carrito aquí - DatafastResultPage se encargará\r\n\t\t\t\t\t\r\n\t\t\t\t} catch (simulationError) {\r\n\t\t\t\t\tconsole.error(\"❌ Error en simulación de widget flow:\", simulationError);\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.ERROR, \r\n\t\t\t\t\t\t\"Error al simular el flujo del widget: \" + (simulationError as any)?.message\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}, 2000); // Tiempo para que se complete el checkout\r\n\r\n\t\t\t// Salir aquí - el flujo continuará en DatafastResultPage\r\n\t\t\treturn;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error COMPLETO en el checkout de prueba (DATAFAST):\");\r\n\t\t\tconsole.error(\"📊 Error object:\", error);\r\n\t\t\tconsole.error(\"📊 Error stack:\", (error as any)?.stack);\r\n\t\t\tconst errorMessage =\r\n\t\t\t\terror instanceof Error ? error.message : \"Error al procesar el checkout de prueba\";\r\n\t\t\tconsole.error(\"📊 Error message final:\", errorMessage);\r\n\t\t\tshowNotification(NotificationType.ERROR, errorMessage);\r\n\t\t\tonError?.(errorMessage);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tconsole.log(\"🧪 DatafastPaymentButton.handleCompleteTestCheckout FINALIZADO\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSimulatePaymentResult = async () => {\r\n\t\tif (!checkoutResponse) {\r\n\t\t\tshowNotification(NotificationType.ERROR, \"No hay datos de checkout\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconsole.log(\"Simulando pago exitoso completo...\");\r\n\r\n\t\t\t// ✅ STRICT: Validar datos antes de proceder\r\n\t\t\tif (!cart || cart.items.length === 0) {\r\n\t\t\t\tthrow new Error('Carrito vacío - no se puede procesar el pago');\r\n\t\t\t}\r\n\r\n\t\t\tconst totals = await CheckoutItemsService.calculateCheckoutTotals(cart.items, appliedDiscount);\r\n\t\t\tif (!totals || totals.total <= 0) {\r\n\t\t\t\tthrow new Error('No se pudieron calcular totales válidos para el pago');\r\n\t\t\t}\r\n\r\n\t\t\tconst verifyResponse = await datafastService.simulateSuccessfulPayment(\r\n\t\t\t\tcheckoutResponse.checkout_id,\r\n\t\t\t\tcheckoutResponse.transaction_id,\r\n\t\t\t\ttotals.total\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"Respuesta de verificación Datafast:\", verifyResponse);\r\n\r\n\t\t\tif (verifyResponse.success && verifyResponse.data) {\r\n\t\t\t\tconsole.log(\"Procesando checkout completo en el sistema...\");\r\n\t\t\t\t\r\n\t\t\t\t// ✅ CORREGIDO: Agregar null check para cart\r\n\t\t\t\tconst sellerId = cart ? CheckoutService.getSellerIdFromCart(cart) : null;\r\n\t\t\t\tconsole.log(\"Seller ID obtenido:\", sellerId);\r\n\t\t\t\t\r\n\t\t\t\t// ✅ USAR MISMA LÓGICA DE CÁLCULO QUE CHECKOUT PAGE\r\n\t\t\t\tconst items = cart ? await CheckoutItemsService.prepareItemsForCheckout(cart.items) : [];\r\n\t\t\t\t\r\n\t\t\t\t// ✅ CALCULAR TOTALES CORRECTOS PARA EL BACKEND\r\n\t\t\t\tconsole.log(\"🔍 DEBUG SIMULATE: cart.items antes de calcular:\", cart?.items);\r\n\t\t\t\tconsole.log(\"🔍 DEBUG SIMULATE: appliedDiscount antes de calcular:\", appliedDiscount);\r\n\t\t\t\t\r\n\t\t\t\tconst calculatedTotals = cart ? await CheckoutItemsService.calculateCheckoutTotals(cart.items, appliedDiscount) : null;\r\n\t\t\t\tconsole.log(\"💰 DEBUG SIMULATE: Totales calculados:\", calculatedTotals);\r\n\t\t\t\tconsole.log(\"🔍 DEBUG SIMULATE: calculatedTotals es null?\", calculatedTotals === null);\r\n\t\t\t\tconsole.log(\"🔍 DEBUG SIMULATE: calculatedTotals es undefined?\", calculatedTotals === undefined);\r\n\t\t\t\t\r\n\t\t\t\tconst checkoutRequestData = {\r\n\t\t\t\t\tpayment: {\r\n\t\t\t\t\t\tmethod: \"datafast\" as PaymentMethod,\r\n\t\t\t\t\t} as PaymentInfo,\r\n\t\t\t\t\tshippingAddress: {\r\n\t\t\t\t\t\tname: formData.given_name + \" \" + formData.surname,\r\n\t\t\t\t\t\tstreet: formData.address,\r\n\t\t\t\t\t\tcity: formData.city,\r\n\t\t\t\t\t\tstate: formData.country,\r\n\t\t\t\t\t\tpostalCode: \"00000\",\r\n\t\t\t\t\t\tcountry: formData.country,\r\n\t\t\t\t\t\tphone: formData.phone,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tseller_id: sellerId || undefined,\r\n\t\t\t\t\titems: items,\r\n\t\t\t\t\t// ✅ STRICT: Usar totales calculados SIN validación ternaria (with null check)\r\n\t\t\t\t\tcalculated_totals: calculatedTotals ? {\r\n\t\t\t\t\t\tsubtotal: calculatedTotals.subtotal,\r\n\t\t\t\t\t\ttax: calculatedTotals.tax,\r\n\t\t\t\t\t\tshipping: calculatedTotals.shipping,\r\n\t\t\t\t\t\ttotal: calculatedTotals.total,\r\n\t\t\t\t\t\ttotal_discounts: calculatedTotals.totalDiscounts\r\n\t\t\t\t\t} : {\r\n\t\t\t\t\t\tsubtotal: 0,\r\n\t\t\t\t\t\ttax: 0,\r\n\t\t\t\t\t\tshipping: 0,\r\n\t\t\t\t\t\ttotal: 0,\r\n\t\t\t\t\t\ttotal_discounts: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst checkoutResponse = await checkoutService.processCheckout(checkoutRequestData, user?.email);\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(\"Respuesta del checkout completo:\", checkoutResponse);\r\n\r\n\t\t\t\tif (checkoutResponse.status === \"success\") {\r\n\t\t\t\t\tclearCart();\r\n\t\t\t\t\tsetShowWidget(false);\r\n\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.SUCCESS,\r\n\t\t\t\t\t\t\"¡Pago y pedido completados exitosamente!\"\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconsole.log(\"Detalles completos de la orden:\", {\r\n\t\t\t\t\t\tdatafast: verifyResponse.data,\r\n\t\t\t\t\t\tcheckout: checkoutResponse.data\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tonSuccess?.(checkoutResponse.data);\r\n\t\t\t\t\tnavigate(\"/orders\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(checkoutResponse.message || \"Error al procesar el checkout completo\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(verifyResponse.message || \"Error en la simulación de Datafast\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error en la simulación completa:\", error);\r\n\t\t\tconst errorMessage =\r\n\t\t\t\terror instanceof Error ? error.message : \"Error al procesar la simulación completa\";\r\n\t\t\tshowNotification(NotificationType.ERROR, errorMessage);\r\n\t\t\tonError?.(errorMessage);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleRealPayment = async () => {\r\n\t\tif (!checkoutResponse) {\r\n\t\t\tshowNotification(NotificationType.ERROR, \"No hay datos de checkout disponibles\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\t\r\n\t\t\tconst totals = cart ? await CheckoutItemsService.calculateCheckoutTotals(cart.items, appliedDiscount) : null;\r\n\t\t\tif (totals) {\r\n\t\t\t\tlocalStorage.setItem(\"datafast_calculated_total\", totals.total.toString());\r\n\t\t\t\tconsole.log(\"💰 Total calculado guardado para verificación:\", totals.total);\r\n\t\t\t}\r\n\r\n\t\t\t// ✅ GUARDAR DATOS DEL CARRITO PARA RECUPERACIÓN EN CASO DE ERROR\r\n\t\t\tconsole.log(\"💾 GUARDANDO BACKUP DEL CARRITO EN LOCALSTORAGE (ANTES DEL WIDGET)\");\r\n\t\t\tconsole.log(\"   - Items en carrito:\", cart?.items?.length || 0);\r\n\t\t\tconsole.log(\"   - Carrito completo:\", cart);\r\n\t\t\tlocalStorage.setItem(\"datafast_cart_backup\", JSON.stringify(cart));\r\n\t\t\tconsole.log(\"   ✅ Backup guardado exitosamente\");\r\n\t\t\t\r\n\t\t\t// ✅ CONFIGURAR EL CALLBACK PARA MANEJAR EL RESULTADO DEL PAGO REAL\r\n\t\t\t(window as any).wpwlOptions = {\r\n\t\t\t\tonReady: function() {\r\n\t\t\t\t\tconsole.log(\"🎯 Widget Datafast listo para pago real\");\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.INFO,\r\n\t\t\t\t\t\t\"Complete los datos de su tarjeta en el formulario y haga clic en 'Pagar'.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tonSuccess: function(result: any) {\r\n\t\t\t\t\tconsole.log(\"🎉 Pago real exitoso:\", result);\r\n\t\t\t\t\t// Redirigir a página de resultado\r\n\t\t\t\t\twindow.location.href = `/datafast-result?resourcePath=${encodeURIComponent(result.resourcePath)}`;\r\n\t\t\t\t},\r\n\t\t\t\tonError: function(error: any) {\r\n\t\t\t\t\tconsole.error(\"❌ Error en pago real:\", error);\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\t\t\"Error al procesar el pago. Inténtelo nuevamente.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\"🔄 Configuración lista para pago real con Datafast\");\r\n\t\t\t\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error configurando pago real:\", error);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\"Error al configurar el pago real\"\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\t// Determinar si estamos en desarrollo\r\n\tconst isDevelopment = import.meta.env.MODE === 'development' || import.meta.env.VITE_APP_ENV === 'development';\r\n\r\n\tif (showWidget) {\r\n\t\treturn (\r\n\t\t\t<div className=\"datafast-payment-widget\">\r\n\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n\t\t\t\t\t<h3 className=\"text-xl font-bold mb-4\">Pagar con Datafast</h3>\r\n\r\n\t\t\t\t\t<div className=\"mb-4 p-4 bg-blue-50 rounded-lg\">\r\n\t\t\t\t\t\t<h4 className=\"font-semibold text-blue-800\">\r\n\t\t\t\t\t\t\tInformación del pedido:\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t<p className=\"text-blue-700\">Monto: ${calculatedTotals?.total?.toFixed(2) || checkoutResponse?.amount || cart?.total}</p>\r\n\t\t\t\t\t\t<p className=\"text-blue-700\">ID: {checkoutResponse?.transaction_id}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"min-h-[400px] border border-gray-200 rounded-lg p-4\">\r\n\t\t\t\t\t\t{/* El widget de Datafast inyectará su propio formulario aquí */}\r\n\t\t\t\t\t\t<form\r\n\t\t\t\t\t\t\tclassName=\"paymentWidgets\"\r\n\t\t\t\t\t\t\tdata-brands=\"VISA MASTER AMEX DINERS DISCOVER\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{!widgetLoaded && (\r\n\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-center h-64\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-2\"></div>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-gray-600\">\r\n\t\t\t\t\t\t\t\t\t\t\tCargando formulario de pago...\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n\t\t\t\t\t\t<h4 className=\"font-semibold text-yellow-800 mb-2\">\r\n\t\t\t\t\t\t\tDatos de prueba para usar:\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t<div className=\"text-sm text-yellow-700 space-y-1\">\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Tarjeta VISA:</strong> 4200 0000 0000 0000\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Fecha:</strong> 07/26\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>CVV:</strong> 246\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Titular:</strong> {formData.given_name}{\" \"}\r\n\t\t\t\t\t\t\t\t{formData.surname}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"text-xs mt-2 text-blue-600\">\r\n\t\t\t\t\t\t\t\t<strong>Fase 2:</strong> Credenciales de testing avanzado con transacciones reales limitadas\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{isDevelopment && (\r\n\t\t\t\t\t\t<div className=\"mt-6 space-y-4\">\r\n\t\t\t\t\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={handleRealPayment}\r\n\t\t\t\t\t\t\t\t\tdisabled={!widgetLoaded}\r\n\t\t\t\t\t\t\t\t\tclassName=\"bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPago Real\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={handleSimulatePaymentResult}\r\n\t\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\t\tclassName=\"bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{isLoading ? \"Verificando...\" : \"Simular Pago Exitoso\"}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"border-t pt-4\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={handleCompleteTestCheckout}\r\n\t\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-full bg-yellow-500 hover:bg-yellow-600 text-white font-medium py-3 px-4 rounded-md transition-colors disabled:opacity-50 flex items-center justify-center\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\tProcesando...\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\tPrueba Completa de Checkout\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<p className=\"text-xs text-gray-500 text-center mt-2\">\r\n\t\t\t\t\t\t\t\t\tSimula el proceso completo de checkout como el botón de prueba original\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<div className=\"flex justify-center\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetShowWidget(false);\r\n\t\t\t\t\t\t\t\tsetShowForm(true);\r\n\t\t\t\t\t\t\t\tsetWidgetLoaded(false);\r\n\t\t\t\t\t\t\t\tconst script = document.getElementById(\"datafast-widget-script\");\r\n\t\t\t\t\t\t\t\tif (script) script.remove();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\tclassName=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tVolver\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (showForm) {\r\n\t\treturn (\r\n\t\t\t<div className=\"datafast-form\">\r\n\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n\t\t\t\t\t<h3 className=\"text-xl font-bold mb-4\">Información para Datafast</h3>\r\n\r\n\t\t\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tNombre *\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.given_name}\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\thandleInputChange(\"given_name\", e.target.value)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tSegundo Nombre\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.middle_name}\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\thandleInputChange(\"middle_name\", e.target.value)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tApellido *\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.surname}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(\"surname\", e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tTeléfono *\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.phone}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(\"phone\", e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"0999999999\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tCédula * (10 dígitos)\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.doc_id}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t// ✅ Permitir hasta 13 dígitos temporalmente para RUC, luego auto-extraer cédula\r\n\t\t\t\t\t\t\t\t\tconst value = e.target.value.replace(/\\D/g, \"\").slice(0, 13);\r\n\t\t\t\t\t\t\t\t\thandleInputChange(\"doc_id\", value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"1234567890 (si ingresa RUC se extraerá automáticamente la cédula)\"\r\n\t\t\t\t\t\t\t\tmaxLength={13}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"md:col-span-2\">\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tDirección *\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.address}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(\"address\", e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tCiudad *\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.city}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(\"city\", e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tPaís *\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tvalue={formData.country}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(\"country\", e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"EC\">Ecuador</option>\r\n\t\t\t\t\t\t\t\t<option value=\"CO\">Colombia</option>\r\n\t\t\t\t\t\t\t\t<option value=\"PE\">Perú</option>\r\n\t\t\t\t\t\t\t\t<option value=\"US\">Estados Unidos</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"mt-6 flex gap-4\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={handleStartPayment}\r\n\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\tclassName=\"flex-1 bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-4 rounded-md transition-colors disabled:opacity-50 flex items-center justify-center\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n\t\t\t\t\t\t\t\t\tCreando checkout...\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\"Continuar con Datafast\"\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => setShowForm(false)}\r\n\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\tclassName=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCancelar\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"datafast-payment-button\">\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => setShowForm(true)}\r\n\t\t\t\tdisabled={isLoading || !cart || cart.items.length === 0}\r\n\t\t\t\tclassName=\"w-full transition-all duration-200 transform hover:scale-101 bg-[#003c58] border-1 hover:bg-[#00B86E] text-white font-medium py-3 px-4 rounded-md disabled:opacity-50 flex items-center justify-center\"\r\n\t\t\t>\r\n\t\t\t\t<svg\r\n\t\t\t\t\tclassName=\"w-5 h-5 mr-2\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<path\r\n\t\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\t\tstrokeWidth={2}\r\n\t\t\t\t\t\td=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</svg>\r\n\t\t\t\tPagar con Datafast\r\n\t\t\t</button>\r\n\r\n\t\t\t{(!cart || cart.items.length === 0) && (\r\n\t\t\t\t<p className=\"mt-2 text-sm text-gray-500 text-center\">\r\n\t\t\t\t\tAgrega productos al carrito para continuar\r\n\t\t\t\t</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DatafastPaymentButton;","// src/presentation/pages/CheckoutPage.tsx - ACTUALIZADO CON DESCUENTOS POR VOLUMEN\r\nimport {useState, useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useCart} from \"../hooks/useCart\";\r\nimport {useAuth} from \"../hooks/useAuth\";\r\nimport {useErrorHandler} from \"../hooks/useErrorHandler\";\r\nimport {useInvalidateCounters} from \"../hooks/useHeaderCounters\";\r\nimport {CheckoutService} from \"../../core/services/CheckoutService\";\r\nimport {CheckoutItemsService} from \"../../infrastructure/services/CheckoutItemsService\";\r\nimport {DatafastService} from \"../../core/services/DatafastService\";\r\nimport {calculateCartItemDiscountsAsync} from \"../../utils/volumeDiscountCalculator\";\r\n// 🎯 JORDAN: VolumeDiscountContext eliminado - funcionalidad migrada a volumeDiscountCalculator\r\n// import {useCartVolumeDiscounts} from \"../contexts/VolumeDiscountContext\";\r\nimport type {\r\n\tPaymentInfo,\r\n\tPaymentMethod,\r\n} from \"../../core/services/CheckoutService\";\r\nimport {NotificationType} from \"../contexts/CartContext\";\r\nimport CreditCardForm from \"../components/checkout/CreditCardForm\";\r\nimport QRPaymentForm from \"../components/checkout/QRPaymentForm\";\r\nimport AddressForm from \"../components/checkout/AddressForm\";\r\nimport type {Address} from \"../../core/domain/valueObjects/Address\";\r\nimport DatafastPaymentButton from \"../components/checkout/DatafastPaymentButtonProps\";\r\nimport {formatCurrency} from \"../../utils/formatters/formatCurrency\";\r\nimport {Gift, AlertTriangle, TrendingDown} from \"lucide-react\";\r\nimport type {CheckoutData, CheckoutState} from \"../../types/checkout\";\r\n\r\nconst CheckoutPage: React.FC = () => {\r\n\tconst navigate = useNavigate();\r\n\tconst {cart, clearCart, showNotification, appliedDiscount} = useCart();\r\n\tconst {user} = useAuth();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\t// ✅ Servicios para arquitectura centralizada\r\n\tconst datafastService = new DatafastService();\r\n\r\n\t// ✅ Hook para descuentos por volumen dinámicos desde BD\r\n\t// 🎯 JORDAN: Volume discounts ahora se manejan directamente en volumeDiscountCalculator\r\n\t// const {isEnabled: volumeDiscountsEnabled, config: volumeDiscountConfig} = useCartVolumeDiscounts();\r\n\r\n\tconst initialAddress: Address = {\r\n\t\tname: \"\",\r\n\t\tidentification: \"\",\r\n\t\tstreet: \"\",\r\n\t\tcity: \"\",\r\n\t\tstate: \"\",\r\n\t\tpostalCode: \"\",\r\n\t\tcountry: \"Ecuador\",\r\n\t\tphone: \"\",\r\n\t};\r\n\r\n\tconst {handleSuccess, handleError} = useErrorHandler({\r\n\t\tshowNotification,\r\n\t\tcontext: \"CheckoutPage\",\r\n\t});\r\n\r\n\t// ✅ Hook para actualizaciones optimistas del header\r\n\tconst {optimisticCartRemove} = useInvalidateCounters();\r\n\r\n\tconst [paymentMethod, setPaymentMethod] = useState<\"credit_card\" | \"deuna\">(\r\n\t\t\"credit_card\"\r\n\t);\r\n\r\n\tconst [shippingAddress, setShippingAddress] =\r\n\t\tuseState<Address>(initialAddress);\r\n\tconst [billingAddress, setBillingAddress] = useState<Address>(initialAddress);\r\n\tconst [useSameAddress, setUseSameAddress] = useState(true);\r\n\r\n\tconst [paymentInfo, setPaymentInfo] = useState<PaymentInfo>({\r\n\t\tmethod: \"credit_card\",\r\n\t\tcard_number: \"\",\r\n\t\tcard_expiry: \"\",\r\n\t\tcard_cvc: \"\",\r\n\t});\r\n\r\n\tconst [formErrors, setFormErrors] = useState<Record<string, string>>({});\r\n\tconst [orderComplete, setOrderComplete] = useState(false);\r\n\tconst [orderDetails, setOrderDetails] = useState<any>(null);\r\n\tconst [countdown, setCountdown] = useState(8);\r\n\r\n\t// ✅ NUEVO: Estados para el flujo de checkout centralizado\r\n\tconst [, setCheckoutState] = useState<CheckoutState>(\"forms_filling\" as CheckoutState);\r\n\tconst [validatedCheckoutData, setValidatedCheckoutData] = useState<CheckoutData | null>(null);\r\n\tconst [showPaymentMethods, setShowPaymentMethods] = useState(false);\r\n\r\n\tconst checkoutService = new CheckoutService();\r\n\r\n\t// ✅ ESTADO PARA CÁLCULOS DE CHECKOUT ASÍNCRONOS\r\n\tconst [checkoutCalculations, setCheckoutCalculations] = useState<{\r\n\t\titems: any[];\r\n\t\ttotals: {\r\n\t\t\tsubtotal: number;\r\n\t\t\toriginalSubtotal: number;\r\n\t\t\tsellerDiscounts: number;\r\n\t\t\tvolumeDiscounts: number;\r\n\t\t\ttotalDiscounts: number;\r\n\t\t\tcouponDiscount: number;\r\n\t\t\ttax: number;\r\n\t\t\tshipping: number;\r\n\t\t\ttotal: number;\r\n\t\t\tfreeShipping: boolean;\r\n\t\t};\r\n\t\tstockIssues: Array<{\r\n\t\t\tproductName: string;\r\n\t\t\trequested: number;\r\n\t\t\tavailable: number;\r\n\t\t\tisOutOfStock: boolean;\r\n\t\t}>;\r\n\t\tcheckoutItems: any[];\r\n\t}>({\r\n\t\titems: [],\r\n\t\ttotals: {\r\n\t\t\tsubtotal: 0,\r\n\t\t\toriginalSubtotal: 0,\r\n\t\t\tsellerDiscounts: 0,\r\n\t\t\tvolumeDiscounts: 0,\r\n\t\t\ttotalDiscounts: 0,\r\n\t\t\tcouponDiscount: 0,\r\n\t\t\ttax: 0,\r\n\t\t\tshipping: 0,\r\n\t\t\ttotal: 0,\r\n\t\t\tfreeShipping: false\r\n\t\t},\r\n\t\tstockIssues: [],\r\n\t\tcheckoutItems: []\r\n\t});\r\n\r\n\t// ✅ CALCULAR TOTALES DE FORMA ASÍNCRONA\r\n\tuseEffect(() => {\r\n\t\tconst calculateCheckout = async () => {\r\n\t\t\tif (!cart?.items?.length) {\r\n\t\t\t\tsetCheckoutCalculations({\r\n\t\t\t\t\titems: [],\r\n\t\t\t\t\ttotals: {\r\n\t\t\t\t\t\tsubtotal: 0,\r\n\t\t\t\t\t\toriginalSubtotal: 0,\r\n\t\t\t\t\t\tsellerDiscounts: 0,\r\n\t\t\t\t\t\tvolumeDiscounts: 0,\r\n\t\t\t\t\t\ttotalDiscounts: 0,\r\n\t\t\t\t\t\tcouponDiscount: 0,\r\n\t\t\t\t\t\ttax: 0,\r\n\t\t\t\t\t\tshipping: 0,\r\n\t\t\t\t\t\ttotal: 0,\r\n\t\t\t\t\t\tfreeShipping: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstockIssues: [],\r\n\t\t\t\t\tcheckoutItems: []\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// ✅ Calcular items con descuentos asíncronamente usando BD config\r\n\t\t\tconsole.log(\"🔄 CheckoutPage: Calculando descuentos con configuración dinámica\");\r\n\t\t\tconst itemsWithDiscounts = await Promise.all(\r\n\t\t\t\tcart.items.map(async (item) => {\r\n\t\t\t\t\t// 🎯 JORDAN: Usar calculadora asíncrona con configuración dinámica\r\n\t\t\t\t\tconst discount = await calculateCartItemDiscountsAsync(item);\r\n\t\t\t\t\tconst availableStock = item.product?.stockAvailable || item.product?.stock || 0;\r\n\t\t\t\t\tconst hasStockIssue = item.quantity > availableStock || !item.product?.is_in_stock;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tdiscount,\r\n\t\t\t\t\t\titemTotal: discount.finalPricePerUnit * item.quantity,\r\n\t\t\t\t\t\tavailableStock,\r\n\t\t\t\t\t\thasStockIssue,\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tconsole.log(\"✅ CheckoutPage: Descuentos calculados para\", itemsWithDiscounts.length, \"items\");\r\n\r\n\t\t// ✅ Identificar problemas de stock\r\n\t\tconst stockIssues = itemsWithDiscounts\r\n\t\t\t.filter((item) => item.hasStockIssue)\r\n\t\t\t.map((item) => ({\r\n\t\t\t\tproductName: item.product?.name || \"Producto\",\r\n\t\t\t\trequested: item.quantity,\r\n\t\t\t\tavailable: item.availableStock,\r\n\t\t\t\tisOutOfStock: !item.product?.is_in_stock,\r\n\t\t\t}));\r\n\r\n\t\t\t// ✅ CALCULAR TOTALES DE FORMA ASÍNCRONA\r\n\t\t\tconsole.log(\"🔍 FLUJO CHECKOUT - Calculando totales\");\r\n\t\t\tconsole.log(\"📊 Items en checkout:\", cart.items.length);\r\n\t\t\tconsole.log(\"📊 Cupón en checkout:\", appliedDiscount?.discountCode?.code || \"NINGUNO\");\r\n\t\t\t\r\n\t\t\t// 🎯 CRITICAL: forceRefresh para garantizar configuraciones frescas en Checkout\r\n\t\t\tconst totals = await CheckoutItemsService.calculateCheckoutTotals(cart.items, appliedDiscount, true);\r\n\t\t\tconsole.log(\"🎯 TOTAL CHECKOUT:\", totals.total);\r\n\r\n\t\t\t// ✅ JORDAN: Preparar items para envío al backend con configuración unificada\r\n\t\t\t// 🎯 CRITICAL: forceRefresh para garantizar configuraciones frescas\r\n\t\t\tconst checkoutItems = await CheckoutItemsService.prepareItemsForCheckout(cart.items, appliedDiscount, true);\r\n\r\n\t\t\tsetCheckoutCalculations({\r\n\t\t\t\titems: itemsWithDiscounts,\r\n\t\t\t\ttotals,\r\n\t\t\t\tstockIssues,\r\n\t\t\t\tcheckoutItems\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tcalculateCheckout();\r\n\t}, [cart?.items, cart?.total, cart?.subtotal, appliedDiscount]); // 🎯 JORDAN: Dependencias simplificadas\r\n\r\n\t// Funciones helper\r\n\tconst getAvailableStock = (product: any): number => {\r\n\t\tif (typeof product.stockAvailable === \"number\") {\r\n\t\t\treturn product.stockAvailable;\r\n\t\t}\r\n\t\tif (typeof product.stock === \"number\") {\r\n\t\t\treturn product.stock;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\tconst validateCartStock = () => {\r\n\t\tif (!cart?.items) return {valid: true, errors: []};\r\n\r\n\t\tconst errors: string[] = [];\r\n\r\n\t\tcart.items.forEach((item) => {\r\n\t\t\tconst availableStock = getAvailableStock(item.product);\r\n\r\n\t\t\tif (!item.product?.is_in_stock) {\r\n\t\t\t\terrors.push(`${item.product?.name || \"Producto\"} está agotado`);\r\n\t\t\t} else if (item.quantity > availableStock) {\r\n\t\t\t\terrors.push(\r\n\t\t\t\t\t`${item.product?.name || \"Producto\"}: solo hay ${availableStock} unidades disponibles (solicitaste ${item.quantity})`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tvalid: errors.length === 0,\r\n\t\t\terrors,\r\n\t\t};\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\tconst userAddress: Address = {\r\n\t\t\t\tname: `${user.name}`,\r\n\t\t\t\tstreet: user.address || \"\",\r\n\t\t\t\tcity: user.city || \"\",\r\n\t\t\t\tstate: user.state || user.province || \"\",\r\n\t\t\t\tpostalCode: user.postal_code || user.zip_code || \"\",\r\n\t\t\t\tcountry: user.country || \"Ecuador\",\r\n\t\t\t\tphone: user.phone || \"\",\r\n\t\t\t};\r\n\t\t\tsetShippingAddress(userAddress);\r\n\t\t\tsetBillingAddress(userAddress);\r\n\t\t}\r\n\t}, [user]);\r\n\r\n\tconst handleDatafastSuccess = (orderData: any) => {\r\n\t\tconsole.log(\"Pago exitoso:\", orderData);\r\n\t};\r\n\r\n\tconst handleDatafastError = (error: string) => {\r\n\t\tconsole.error(\"Error:\", error);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// 🔧 CRITICAL FIX: Don't redirect when order is complete (allows receipt display)\r\n\t\tif (orderComplete && orderDetails) {\r\n\t\t\tconsole.log('✅ Order complete - skipping cart validation to show receipt');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!cart || cart.items.length === 0) {\r\n\t\t\tshowNotification(NotificationType.ERROR, \"El carrito está vacío\");\r\n\t\t\tnavigate(\"/cart\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst stockValidation = validateCartStock();\r\n\t\tif (!stockValidation.valid) {\r\n\t\t\tconsole.warn(\"⚠️ Problemas de stock detectados:\", stockValidation.errors);\r\n\r\n\t\t\tif (stockValidation.errors.length > 0) {\r\n\t\t\t\tshowNotification(\r\n\t\t\t\t\tNotificationType.WARNING,\r\n\t\t\t\t\t`Problema de stock: ${stockValidation.errors[0]}`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [cart, navigate, showNotification, orderComplete, orderDetails]);\r\n\r\n\t// ✅ NUEVO: Redirect automático después de completar orden - mostrar recibo por 5 segundos\r\n\tuseEffect(() => {\r\n\t\tif (orderComplete) {\r\n\t\t\t// Reset countdown when order completes\r\n\t\t\tsetCountdown(8);\r\n\t\t\t\r\n\t\t\t// Update countdown every second\r\n\t\t\tconst countdownTimer = setInterval(() => {\r\n\t\t\t\tsetCountdown(prev => {\r\n\t\t\t\t\tif (prev <= 1) {\r\n\t\t\t\t\t\tclearInterval(countdownTimer);\r\n\t\t\t\t\t\t// Move navigation outside of setState to prevent React warning\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tconsole.log('🔄 Auto-redirecting to orders page after 8 seconds');\r\n\t\t\t\t\t\t\tnavigate(\"/orders\");\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn prev - 1;\r\n\t\t\t\t});\r\n\t\t\t}, 1000);\r\n\r\n\t\t\treturn () => clearInterval(countdownTimer);\r\n\t\t}\r\n\t}, [orderComplete, navigate]);\r\n\r\n\tconst handlePaymentMethodChange = (method: \"credit_card\" | \"deuna\") => {\r\n\t\tsetPaymentMethod(method);\r\n\t\tsetPaymentInfo({\r\n\t\t\t...paymentInfo,\r\n\t\t\tmethod: method === \"deuna\" ? \"transfer\" : \"credit_card\",\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleShippingChange = (field: keyof Address, value: string) => {\r\n\t\tconst newAddress = {...shippingAddress, [field]: value};\r\n\t\tsetShippingAddress(newAddress);\r\n\t\tif (useSameAddress) {\r\n\t\t\tsetBillingAddress(newAddress);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleBillingChange = (field: keyof Address, value: string) => {\r\n\t\tsetBillingAddress({...billingAddress, [field]: value});\r\n\t};\r\n\r\n\tconst handlePaymentChange = (field: keyof PaymentInfo, value: string) => {\r\n\t\tsetPaymentInfo({...paymentInfo, [field]: value});\r\n\t\tif (value.trim() && formErrors[field]) {\r\n\t\t\tconst newErrors = {...formErrors};\r\n\t\t\tdelete newErrors[field];\r\n\t\t\tsetFormErrors(newErrors);\r\n\t\t}\r\n\t};\r\n\r\n\t// ✅ VALIDACIÓN COMPLETA: Para formularios con método de pago específico (legacy)\r\n\tconst validateForm = (): boolean => {\r\n\t\tconst errors: Record<string, string> = {};\r\n\r\n\t\tconst validateAddress = (address: Address, prefix: string) => {\r\n\t\t\tconst requiredFields: (keyof Address)[] = [\r\n\t\t\t\t\"name\",\r\n\t\t\t\t\"identification\",\r\n\t\t\t\t\"street\",\r\n\t\t\t\t\"city\",\r\n\t\t\t\t\"state\",\r\n\t\t\t\t\"country\",\r\n\t\t\t\t\"phone\",\r\n\t\t\t];\r\n\t\t\trequiredFields.forEach((field) => {\r\n\t\t\t\tif (!address[field]) {\r\n\t\t\t\t\terrors[`${prefix}${field}`] =\r\n\t\t\t\t\t\t`El campo ${field.replace(\"_\", \" \")} es obligatorio`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Validación especial para el campo name (nombre completo)\r\n\t\t\t\tif (field === \"name\" && address[field]) {\r\n\t\t\t\t\tconst nameParts = address[field].trim().split(/\\s+/);\r\n\t\t\t\t\tif (nameParts.length < 2) {\r\n\t\t\t\t\t\terrors[`${prefix}${field}`] =\r\n\t\t\t\t\t\t\t\"Debe ingresar al menos un nombre y un apellido separados por espacio\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tvalidateAddress(shippingAddress, \"shipping\");\r\n\t\tif (!useSameAddress) {\r\n\t\t\tvalidateAddress(billingAddress, \"billing\");\r\n\t\t}\r\n\r\n\t\tif (paymentMethod === \"credit_card\") {\r\n\t\t\tif (!paymentInfo.card_number) {\r\n\t\t\t\terrors.card_number = \"El número de tarjeta es obligatorio\";\r\n\t\t\t} else if (!/^\\d{16}$/.test(paymentInfo.card_number || \"\")) {\r\n\t\t\t\terrors.card_number = \"El número de tarjeta debe tener 16 dígitos\";\r\n\t\t\t}\r\n\r\n\t\t\tif (!paymentInfo.card_expiry) {\r\n\t\t\t\terrors.card_expiry = \"La fecha de expiración es obligatoria\";\r\n\t\t\t} else if (!/^\\d{2}\\/\\d{2}$/.test(paymentInfo.card_expiry || \"\")) {\r\n\t\t\t\terrors.card_expiry = \"El formato debe ser MM/YY\";\r\n\t\t\t}\r\n\r\n\t\t\tif (!paymentInfo.card_cvc) {\r\n\t\t\t\terrors.card_cvc = \"El código de seguridad es obligatorio\";\r\n\t\t\t} else if (!/^\\d{3,4}$/.test(paymentInfo.card_cvc || \"\")) {\r\n\t\t\t\terrors.card_cvc = \"El código debe tener 3 o 4 dígitos\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetFormErrors(errors);\r\n\t\treturn Object.keys(errors).length === 0;\r\n\t};\r\n\r\n\t// ✅ NUEVA VALIDACIÓN: Solo para direcciones (sin método de pago)\r\n\tconst validateAddressesOnly = (): boolean => {\r\n\t\tconst errors: Record<string, string> = {};\r\n\r\n\t\tconst validateAddress = (address: Address, prefix: string) => {\r\n\t\t\tconst requiredFields: (keyof Address)[] = [\r\n\t\t\t\t\"name\",\r\n\t\t\t\t\"identification\",\r\n\t\t\t\t\"street\",\r\n\t\t\t\t\"city\",\r\n\t\t\t\t\"state\",\r\n\t\t\t\t\"country\",\r\n\t\t\t\t\"phone\",\r\n\t\t\t];\r\n\t\t\trequiredFields.forEach((field) => {\r\n\t\t\t\tif (!address[field]) {\r\n\t\t\t\t\terrors[`${prefix}${field}`] =\r\n\t\t\t\t\t\t`El campo ${field.replace(\"_\", \" \")} es obligatorio`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Validación especial para el campo name (nombre completo)\r\n\t\t\t\tif (field === \"name\" && address[field]) {\r\n\t\t\t\t\tconst nameParts = address[field].trim().split(/\\s+/);\r\n\t\t\t\t\tif (nameParts.length < 2) {\r\n\t\t\t\t\t\terrors[`${prefix}${field}`] =\r\n\t\t\t\t\t\t\t\"Debe ingresar al menos un nombre y un apellido separados por espacio\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// Validar dirección de envío\r\n\t\tvalidateAddress(shippingAddress, \"shipping\");\r\n\r\n\t\t// Solo validar dirección de facturación si NO se usa la misma dirección\r\n\t\tif (!useSameAddress) {\r\n\t\t\tvalidateAddress(billingAddress, \"billing\");\r\n\t\t}\r\n\r\n\t\tsetFormErrors(errors);\r\n\t\tconst isValid = Object.keys(errors).length === 0;\r\n\r\n\t\t// Debug para ver qué está fallando\r\n\t\tif (!isValid) {\r\n\t\t\tconsole.log(\"❌ VALIDACIÓN FALLÓ - Errores encontrados:\", errors);\r\n\t\t\tconsole.log(\"📊 Estado actual de direcciones:\");\r\n\t\t\tconsole.log(\"   - useSameAddress:\", useSameAddress);\r\n\t\t\tconsole.log(\"   - shippingAddress:\", shippingAddress);\r\n\t\t\tif (!useSameAddress) {\r\n\t\t\t\tconsole.log(\"   - billingAddress:\", billingAddress);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log(\"✅ VALIDACIÓN DE DIRECCIONES EXITOSA\");\r\n\t\t}\r\n\r\n\t\treturn isValid;\r\n\t};\r\n\r\n\t// ✅ FUNCIÓN HELPER: Combina datos del cart con cálculos validados (estrategia híbrida)\r\n\tconst combineCartWithCalculations = (cartItems: any[], calculatedItems: any[]) => {\r\n\t\tconsole.log(\"🔄 Combinando datos del cart con cálculos validados (estrategia híbrida)\");\r\n\r\n\t\treturn cartItems.map((cartItem, index) => {\r\n\t\t\tconst calculatedItem = calculatedItems[index];\r\n\r\n\t\t\t// Combinar información descriptiva del cart con precios validados de la calculadora\r\n\t\t\tconst combinedItem = {\r\n\t\t\t\t// Del cart original (información descriptiva)\r\n\t\t\t\tproduct_id: cartItem.productId || cartItem.product_id,\r\n\t\t\t\tname: cartItem.product?.name || `Product ${cartItem.productId || cartItem.product_id}`,\r\n\t\t\t\tsubtotal: calculatedItem.price * calculatedItem.quantity, // Calcular subtotal con precio validado\r\n\r\n\t\t\t\t// De la calculadora (precios validados)\r\n\t\t\t\tquantity: calculatedItem.quantity,\r\n\t\t\t\tprice: calculatedItem.price,\r\n\t\t\t\toriginal_price: calculatedItem.original_price || calculatedItem.base_price,\r\n\t\t\t\tdiscount_percentage: calculatedItem.volume_discount_percentage || 0,\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(`   Item ${index + 1}: ${combinedItem.name} - $${combinedItem.price} x ${combinedItem.quantity}`);\r\n\t\t\treturn combinedItem;\r\n\t\t});\r\n\t};\r\n\r\n\t// ✅ NUEVA FUNCIÓN: Validar formularios y crear objeto temporal de checkout\r\n\tconst validateAndPrepareCheckout = async () => {\r\n\t\tconsole.log(\"🔍 VALIDACIÓN DE CHECKOUT: Iniciando validación centralizada\");\r\n\r\n\t\t// Validar stock\r\n\t\tconst stockValidation = validateCartStock();\r\n\t\tif (!stockValidation.valid) {\r\n\t\t\tconsole.log(\"❌ Validación de stock falló:\", stockValidation.errors);\r\n\r\n\t\t\tstockValidation.errors.forEach((error) => {\r\n\t\t\t\tshowNotification(NotificationType.ERROR, error);\r\n\t\t\t});\r\n\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.WARNING,\r\n\t\t\t\t\"Por favor, ajusta las cantidades en tu carrito antes de continuar\"\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Validar solo direcciones (sin método de pago)\r\n\t\tif (!validateAddressesOnly()) {\r\n\t\t\tconsole.log(\"❌ Validación de direcciones falló\");\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\"Por favor, completa todos los campos de dirección obligatorios\"\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Validar que el usuario esté autenticado\r\n\t\tif (!user?.id) {\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\"Debes iniciar sesión para completar la compra\"\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"✅ VALIDACIÓN EXITOSA: Creando objeto temporal de checkout\");\r\n\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\r\n\t\t\t// Crear objeto temporal con toda la información necesaria\r\n\t\t\tconst now = new Date();\r\n\t\t\tconst sessionId = `checkout_${user.id}_${now.getTime()}`;\r\n\r\n\t\t\tconst checkoutData: CheckoutData = {\r\n\t\t\t\tuserId: user.id,\r\n\t\t\t\tshippingData: {\r\n\t\t\t\t\tname: shippingAddress.name || \"\",\r\n\t\t\t\t\temail: user.email || \"\",\r\n\t\t\t\t\tphone: shippingAddress.phone || \"\",\r\n\t\t\t\t\tstreet: shippingAddress.street || \"\",\r\n\t\t\t\t\tcity: shippingAddress.city || \"\",\r\n\t\t\t\t\tstate: shippingAddress.state || \"\",\r\n\t\t\t\t\tcountry: shippingAddress.country || \"\",\r\n\t\t\t\t\tpostal_code: shippingAddress.postalCode || \"\",\r\n\t\t\t\t\tidentification: shippingAddress.identification || \"\",\r\n\t\t\t\t},\r\n\t\t\t\tbillingData: {\r\n\t\t\t\t\tname: (useSameAddress ? shippingAddress : billingAddress).name || \"\",\r\n\t\t\t\t\temail: user.email || \"\",\r\n\t\t\t\t\tphone: (useSameAddress ? shippingAddress : billingAddress).phone || \"\",\r\n\t\t\t\t\tstreet: (useSameAddress ? shippingAddress : billingAddress).street || \"\",\r\n\t\t\t\t\tcity: (useSameAddress ? shippingAddress : billingAddress).city || \"\",\r\n\t\t\t\t\tstate: (useSameAddress ? shippingAddress : billingAddress).state || \"\",\r\n\t\t\t\t\tcountry: (useSameAddress ? shippingAddress : billingAddress).country || \"\",\r\n\t\t\t\t\tpostal_code: (useSameAddress ? shippingAddress : billingAddress).postalCode || \"\",\r\n\t\t\t\t\tidentification: (useSameAddress ? shippingAddress : billingAddress).identification || \"\",\r\n\t\t\t\t\tsame_as_shipping: useSameAddress,\r\n\t\t\t\t},\r\n\t\t\t\titems: combineCartWithCalculations(cart?.items || [], checkoutCalculations.checkoutItems),\r\n\t\t\t\ttotals: {\r\n\t\t\t\t\tsubtotal_original: checkoutCalculations.totals.originalSubtotal,\r\n\t\t\t\t\tsubtotal_with_discounts: checkoutCalculations.totals.subtotal,\r\n\t\t\t\t\tseller_discounts: checkoutCalculations.totals.sellerDiscounts,\r\n\t\t\t\t\tvolume_discounts: checkoutCalculations.totals.volumeDiscounts,\r\n\t\t\t\t\tcoupon_discount: checkoutCalculations.totals.couponDiscount,\r\n\t\t\t\t\ttotal_discounts: checkoutCalculations.totals.totalDiscounts,\r\n\t\t\t\t\tiva_amount: checkoutCalculations.totals.tax,\r\n\t\t\t\t\tshipping_cost: checkoutCalculations.totals.shipping,\r\n\t\t\t\t\tfree_shipping: checkoutCalculations.totals.freeShipping,\r\n\t\t\t\t\tfree_shipping_threshold: 50, // Valor por defecto\r\n\t\t\t\t\tfinal_total: checkoutCalculations.totals.total,\r\n\t\t\t\t},\r\n\t\t\t\tdiscountCode: appliedDiscount?.discountCode?.code,\r\n\t\t\t\tdiscountInfo: appliedDiscount ? {\r\n\t\t\t\t\tcode: appliedDiscount.discountCode.code,\r\n\t\t\t\t\tdiscount_percentage: appliedDiscount.discountCode.discount_percentage,\r\n\t\t\t\t\tdiscount_amount: checkoutCalculations.totals.couponDiscount,\r\n\t\t\t\t} : undefined,\r\n\t\t\t\ttimestamp: now.toISOString(),\r\n\t\t\t\tsessionId: sessionId,\r\n\t\t\t\tvalidatedAt: now.toISOString(),\r\n\t\t\t\texpiresAt: new Date(now.getTime() + 30 * 60 * 1000).toISOString(), // 30 minutos\r\n\t\t\t};\r\n\r\n\t\t\t// ✅ ARQUITECTURA CENTRALIZADA: Almacenar datos en backend antes de mostrar métodos de pago\r\n\t\t\tconsole.log(\"💾 Almacenando CheckoutData en backend (arquitectura centralizada)...\");\r\n\r\n\t\t\tconst storeRequest = {\r\n\t\t\t\tshippingData: checkoutData.shippingData,\r\n\t\t\t\tbillingData: checkoutData.billingData,\r\n\t\t\t\titems: checkoutData.items,\r\n\t\t\t\ttotals: checkoutData.totals,\r\n\t\t\t\tsessionId: checkoutData.sessionId,\r\n\t\t\t\tdiscountCode: checkoutData.discountCode,\r\n\t\t\t\tdiscountInfo: checkoutData.discountInfo\r\n\t\t\t};\r\n\r\n\t\t\tconst storeResponse = await datafastService.storeCheckoutData(storeRequest);\r\n\r\n\t\t\tif (!storeResponse.success) {\r\n\t\t\t\tthrow new Error(storeResponse.message || \"Error al almacenar datos de checkout\");\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"✅ CheckoutData almacenado en backend:\", {\r\n\t\t\t\tsessionId: storeResponse.data.session_id,\r\n\t\t\t\texpiresAt: storeResponse.data.expires_at,\r\n\t\t\t\tfinalTotal: storeResponse.data.final_total\r\n\t\t\t});\r\n\r\n\t\t\t// Guardar objeto temporal local\r\n\t\t\tsetValidatedCheckoutData(checkoutData);\r\n\t\t\tsetCheckoutState(\"forms_validated\" as CheckoutState);\r\n\t\t\tsetShowPaymentMethods(true);\r\n\r\n\t\t\tconsole.log(\"✅ OBJETO TEMPORAL CREADO Y ALMACENADO:\", {\r\n\t\t\t\tsessionId: checkoutData.sessionId,\r\n\t\t\t\tuserId: checkoutData.userId,\r\n\t\t\t\ttotal: checkoutData.totals.final_total,\r\n\t\t\t\titemsCount: checkoutData.items.length,\r\n\t\t\t\texpiresAt: checkoutData.expiresAt,\r\n\t\t\t\tbackendSessionId: storeResponse.data.session_id\r\n\t\t\t});\r\n\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.SUCCESS,\r\n\t\t\t\t\"Formularios validados y datos seguros almacenados. Selecciona tu método de pago preferido.\"\r\n\t\t\t);\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error creando objeto temporal:\", error);\r\n\t\t\thandleError(\r\n\t\t\t\terror as Error,\r\n\t\t\t\t\"Error validando los datos. Por favor, intenta de nuevo.\"\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// ✅ FUNCIÓN MANTENIDA: Fallback para procesamiento directo en emergencias\r\n\t// @ts-ignore - Legacy function mantenida como fallback, no se usa pero se preserva\r\n\tconst legacyProcessCheckout = async () => {\r\n\t\tconsole.log(\"🛒 CheckoutPage.processCheckout INICIADO CON DESCUENTOS POR VOLUMEN\");\r\n\r\n\t\tconst stockValidation = validateCartStock();\r\n\t\tif (!stockValidation.valid) {\r\n\t\t\tconsole.log(\"❌ Validación de stock falló:\", stockValidation.errors);\r\n\r\n\t\t\tstockValidation.errors.forEach((error) => {\r\n\t\t\t\tshowNotification(NotificationType.ERROR, error);\r\n\t\t\t});\r\n\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.WARNING,\r\n\t\t\t\t\"Por favor, ajusta las cantidades en tu carrito antes de continuar\"\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!validateForm()) {\r\n\t\t\tconsole.log(\"❌ Validación de formulario falló\");\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\"Por favor, completa todos los campos obligatorios\"\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"🛒 ANÁLISIS COMPLETO DEL CARRITO CON DESCUENTOS POR VOLUMEN:\");\r\n\t\tconsole.log(\"📊 Totales calculados:\", checkoutCalculations.totals);\r\n\t\tconsole.log(\"📊 Items para checkout:\", checkoutCalculations.checkoutItems);\r\n\r\n\t\tsetIsLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst sellerId = CheckoutService.getSellerIdFromCart(cart);\r\n\r\n\t\t\tconst checkoutData = {\r\n\t\t\t\tpayment: {\r\n\t\t\t\t\t...paymentInfo,\r\n\t\t\t\t\tmethod:\r\n\t\t\t\t\t\tpaymentMethod === \"deuna\"\r\n\t\t\t\t\t\t\t? (\"qr\" as PaymentMethod)\r\n\t\t\t\t\t\t\t: paymentMethod === \"credit_card\"\r\n\t\t\t\t\t\t\t? (\"credit_card\" as PaymentMethod)\r\n\t\t\t\t\t\t\t: paymentInfo.method,\r\n\t\t\t\t},\r\n\t\t\t\tshippingAddress: shippingAddress,\r\n\t\t\t\tbillingAddress: useSameAddress ? shippingAddress : billingAddress,\r\n\t\t\t\tseller_id: sellerId || undefined,\r\n\t\t\t\titems: checkoutCalculations.checkoutItems, // ✅ Usar items con descuentos calculados\r\n\t\t\t\t// ✅ NUEVO: Incluir código de descuento aplicado y su información\r\n\t\t\t\tdiscount_code: appliedDiscount?.discountCode?.code || null,\r\n\t\t\t\tdiscount_info: appliedDiscount || null, // ✅ Pasar información completa del descuento\r\n\t\t\t\t// ✅ CRÍTICO: Enviar totales calculados al backend\r\n\t\t\t\tcalculated_totals: {\r\n\t\t\t\t\tsubtotal: checkoutCalculations.totals.subtotal,\r\n\t\t\t\t\ttax: checkoutCalculations.totals.tax,\r\n\t\t\t\t\tshipping: checkoutCalculations.totals.shipping,\r\n\t\t\t\t\ttotal: checkoutCalculations.totals.total,\r\n\t\t\t\t\ttotal_discounts: checkoutCalculations.totals.totalDiscounts\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"📦 Datos completos de checkout con descuentos por volumen:\",\r\n\t\t\t\tJSON.stringify(checkoutData, null, 2)\r\n\t\t\t);\r\n\t\t\tconsole.log(\"🚀 Enviando checkout al backend...\");\r\n\r\n\t\t\tconst response = await checkoutService.processCheckout(checkoutData, user?.email);\r\n\r\n\t\t\tconsole.log(\"✅ Respuesta del checkout recibida:\", response);\r\n\r\n\t\t\tif (response.status === \"success\") {\r\n\t\t\t\tconsole.log(\"🎉 Checkout exitoso con descuentos por volumen, limpiando carrito...\");\r\n\t\t\t\tsetOrderComplete(true);\r\n\t\t\t\tsetOrderDetails(response.data);\r\n\r\n\t\t\t\tlet successMessage = \"¡Pedido completado con éxito!\";\r\n\t\t\t\tif (checkoutCalculations.totals.totalDiscounts > 0) {\r\n\t\t\t\t\tsuccessMessage += ` Has ahorrado ${formatCurrency(checkoutCalculations.totals.totalDiscounts)} con descuentos aplicados.`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\thandleSuccess(successMessage);\r\n\r\n\t\t\t\t// ✅ ACTUALIZACIÓN OPTIMISTA DEL HEADER (mismo patrón que CartPage)\r\n\t\t\t\tconst totalItems = cart?.items.reduce((total, item) => total + item.quantity, 0) || 0;\r\n\t\t\t\tfor (let i = 0; i < totalItems; i++) {\r\n\t\t\t\t\toptimisticCartRemove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclearCart();\r\n\r\n\t\t\t\t// ✅ Log de información de descuentos aplicados\r\n\t\t\t\tif (response.data && typeof response.data === \"object\") {\r\n\t\t\t\t\tconst orderData = response.data as any;\r\n\t\t\t\t\tconsole.log(\"🔍 ORDEN CREADA CON DESCUENTOS:\");\r\n\t\t\t\t\tconsole.log(\"📊 Order ID:\", orderData.order_id);\r\n\t\t\t\t\tconsole.log(\"📊 Order Number:\", orderData.order_number);\r\n\t\t\t\t\tconsole.log(\"📊 Total:\", orderData.total);\r\n\t\t\t\t\tconsole.log(\"📊 Total Savings:\", orderData.total_savings);\r\n\t\t\t\t\tconsole.log(\"📊 Volume Discounts Applied:\", orderData.volume_discounts_applied);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(response.message || \"Error al procesar el pedido\");\r\n\t\t\t}\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.error(\"❌ Error COMPLETO al procesar checkout con descuentos por volumen:\");\r\n\t\t\tconsole.error(\"📊 Error object:\", error);\r\n\t\t\tconsole.error(\"📊 Error message:\", (error as any)?.message);\r\n\r\n\t\t\thandleError(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error al procesar el pago. Por favor, intenta de nuevo más tarde.\"\r\n\t\t\t);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tconsole.log(\"🛒 CheckoutPage.processCheckout FINALIZADO\");\r\n\t\t}\r\n\t};\r\n\r\n\t// ✅ COMPONENTE DE RESUMEN CON DESCUENTOS POR VOLUMEN\r\n\tconst OrderSummaryComponent = () => (\r\n\t\t<div>\r\n\t\t\t<h2 className=\"text-xl font-bold text-gray-800 mb-4\">\r\n\t\t\t\tResumen del pedido\r\n\t\t\t</h2>\r\n\r\n\t\t\t{checkoutCalculations.stockIssues.length > 0 && (\r\n\t\t\t\t<div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-4\">\r\n\t\t\t\t\t<div className=\"flex items-start\">\r\n\t\t\t\t\t\t<AlertTriangle size={18} className=\"text-red-600 mr-2 mt-0.5\" />\r\n\t\t\t\t\t\t<div className=\"flex-1\">\r\n\t\t\t\t\t\t\t<h4 className=\"font-medium text-red-800 text-sm mb-2\">\r\n\t\t\t\t\t\t\t\tProblemas de stock detectados\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className=\"space-y-1\">\r\n\t\t\t\t\t\t\t\t{checkoutCalculations.stockIssues.map((issue, index) => (\r\n\t\t\t\t\t\t\t\t\t<div key={index} className=\"text-xs text-red-700\">\r\n\t\t\t\t\t\t\t\t\t\t<strong>{issue.productName}:</strong>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{issue.isOutOfStock\r\n\t\t\t\t\t\t\t\t\t\t\t? \"Producto agotado\"\r\n\t\t\t\t\t\t\t\t\t\t\t: `Solo ${issue.available} disponibles (solicitaste ${issue.requested})`}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"mt-2\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={() => navigate(\"/cart\")}\r\n\t\t\t\t\t\t\t\t\tclassName=\"text-xs text-red-600 underline hover:no-underline\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tIr al carrito para ajustar cantidades\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* ✅ BANNER DE DESCUENTOS APLICADOS */}\r\n\t\t\t{checkoutCalculations.totals.totalDiscounts > 0 && (\r\n\t\t\t\t<div className=\"bg-gradient-to-r from-green-50 to-blue-50 border border-green-200 rounded-lg p-4 mb-4\">\r\n\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t<div className=\"flex-1\">\r\n\t\t\t\t\t\t\t<h4 className=\"font-medium text-green-800 text-sm\">\r\n\t\t\t\t\t\t\t\t¡Descuentos Aplicados!\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className=\"text-xs text-green-600 mt-1 space-y-1\">\r\n\t\t\t\t\t\t\t\t{checkoutCalculations.totals.sellerDiscounts > 0 && (\r\n\t\t\t\t\t\t\t\t\t<p>Descuentos del vendedor: {formatCurrency(checkoutCalculations.totals.sellerDiscounts)}</p>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{checkoutCalculations.totals.volumeDiscounts > 0 && (\r\n\t\t\t\t\t\t\t\t\t<p>Descuentos por volumen: {formatCurrency(checkoutCalculations.totals.volumeDiscounts)}</p>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-lg font-bold text-green-600\">\r\n\t\t\t\t\t\t\t{formatCurrency(checkoutCalculations.totals.totalDiscounts)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t<div className=\"space-y-3 mb-6\">\r\n\t\t\t\t{checkoutCalculations.items.map((item, index) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tclassName={`flex items-center justify-between py-2 border-b border-gray-100 ${\r\n\t\t\t\t\t\t\titem.hasStockIssue ? \"bg-red-50 px-2 rounded\" : \"\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"flex-1\">\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tclassName={`text-sm font-medium ${item.hasStockIssue ? \"text-red-900\" : \"text-gray-900\"}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{item.product?.name || `Producto ${item.productId}`}\r\n\t\t\t\t\t\t\t\t{item.hasStockIssue && (\r\n\t\t\t\t\t\t\t\t\t<span className=\"ml-2 text-xs text-red-600\">⚠️</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className=\"flex items-center space-x-2 mt-1\">\r\n\t\t\t\t\t\t\t\t<span className=\"text-xs text-gray-500\">\r\n\t\t\t\t\t\t\t\t\tCantidad: {item.quantity}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{/* ✅ MOSTRAR DESCUENTOS APLICADOS */}\r\n\t\t\t\t\t\t\t\t{item.discount.sellerDiscountAmount > 0 && (\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-xs bg-blue-100 text-blue-600 px-2 py-0.5 rounded flex items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<Gift size={10} className=\"mr-1\" />\r\n\t\t\t\t\t\t\t\t\t\tSeller: {item.product?.discount_percentage || 0}% OFF\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{item.discount.volumeDiscountAmount > 0 && (\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-xs bg-green-100 text-green-600 px-2 py-0.5 rounded flex items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<TrendingDown size={10} className=\"mr-1\" />\r\n\t\t\t\t\t\t\t\t\t\tVolumen: {item.discount.discountPercentage}% OFF\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{/* ✅ MOSTRAR PRECIO CON DESCUENTOS */}\r\n\t\t\t\t\t\t\t{item.discount.hasDiscount && (\r\n\t\t\t\t\t\t\t\t<div className=\"text-xs text-gray-600 mt-1\">\r\n\t\t\t\t\t\t\t\t\tPrecio unitario: {formatCurrency(item.discount.finalPricePerUnit)}\r\n\t\t\t\t\t\t\t\t\t<span className=\"line-through text-gray-400 ml-1\">\r\n\t\t\t\t\t\t\t\t\t\t{formatCurrency(item.discount.originalPrice)}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{item.discount.savingsTotal > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-green-600 ml-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t(Ahorras: {formatCurrency(item.discount.savingsTotal)})\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={`text-sm font-medium ${item.hasStockIssue ? \"text-red-900\" : \"text-gray-900\"}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{formatCurrency(item.itemTotal)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* ✅ TOTALES CON DESCUENTOS DESGLOSADOS */}\r\n\t\t\t<div className=\"space-y-3 border-t border-gray-200 pt-4\">\r\n\t\t\t\t<div className=\"flex justify-between text-sm\">\r\n\t\t\t\t\t<span className=\"text-gray-600\">Subtotal (con descuentos):</span>\r\n\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t{formatCurrency(checkoutCalculations.totals.subtotal)}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* ✅ MOSTRAR AHORROS DESGLOSADOS */}\r\n\t\t\t\t{checkoutCalculations.totals.sellerDiscounts > 0 && (\r\n\t\t\t\t\t<div className=\"flex justify-between text-sm text-blue-600\">\r\n\t\t\t\t\t\t<span className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<Gift size={14} className=\"mr-1\" />\r\n\t\t\t\t\t\t\tDescuentos del vendedor:\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t\t-{formatCurrency(checkoutCalculations.totals.sellerDiscounts)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{checkoutCalculations.totals.volumeDiscounts > 0 && (\r\n\t\t\t\t\t<div className=\"flex justify-between text-sm text-green-600\">\r\n\t\t\t\t\t\t<span className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<TrendingDown size={14} className=\"mr-1\" />\r\n\t\t\t\t\t\t\tDescuentos por volumen:\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t\t-{formatCurrency(checkoutCalculations.totals.volumeDiscounts)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* ✅ NUEVO: Mostrar descuento de código aplicado */}\r\n\t\t\t\t{appliedDiscount && (\r\n\t\t\t\t\t<div className=\"flex justify-between text-sm text-green-600\">\r\n\t\t\t\t\t\t<span className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<Gift size={14} className=\"mr-1\" />\r\n\t\t\t\t\t\t\tCódigo de descuento ({appliedDiscount.discountCode.code}):\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t\t-{formatCurrency(checkoutCalculations.totals.couponDiscount || 0)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<div className=\"flex justify-between text-sm\">\r\n\t\t\t\t\t<span className=\"text-gray-600\">IVA (15%):</span>\r\n\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t{formatCurrency(checkoutCalculations.totals.tax)}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"flex justify-between text-sm\">\r\n\t\t\t\t\t<span className=\"text-gray-600\">Envío:</span>\r\n\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t{checkoutCalculations.totals.freeShipping ? \r\n\t\t\t\t\t\t\t\"Gratis\" : \r\n\t\t\t\t\t\t\tformatCurrency(checkoutCalculations.totals.shipping)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"flex justify-between text-lg font-bold border-t border-gray-200 pt-3\">\r\n\t\t\t\t\t<span>Total:</span>\r\n\t\t\t\t\t<span>{formatCurrency(checkoutCalculations.totals.total)}</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* ✅ RESUMEN DE AHORROS TOTALES */}\r\n\t\t\t\t{checkoutCalculations.totals.totalDiscounts > 0 && (\r\n\t\t\t\t\t<div className=\"bg-green-50 border border-green-200 rounded-lg p-3 mt-3\">\r\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\r\n\t\t\t\t\t\t\t<span className=\"text-sm font-medium text-green-800\">\r\n\t\t\t\t\t\t\t\tTotal ahorrado:\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"text-lg font-bold text-green-600\">\r\n\t\t\t\t\t\t\t\t{formatCurrency(checkoutCalculations.totals.totalDiscounts)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\tif (orderComplete && orderDetails) {\r\n\t\treturn (\r\n\t\t\t<div className=\"container mx-auto px-4 py-10\">\r\n\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-8 max-w-3xl mx-auto\">\r\n\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t<div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n\t\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\t\tclassName=\"h-10 w-10 text-green-500\"\r\n\t\t\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\t\t\t\t\tstrokeWidth={2}\r\n\t\t\t\t\t\t\t\t\td=\"M5 13l4 4L19 7\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<h2 className=\"text-3xl font-bold text-gray-800 mb-4\">\r\n\t\t\t\t\t\t\t¡Pago con DeUna completado!\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t<p className=\"text-gray-600 mb-6\">\r\n\t\t\t\t\t\t\tTu pago se procesó correctamente y tu pedido está siendo preparado. \r\n\t\t\t\t\t\t\tRecibirás un correo electrónico con los detalles.\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t{/* ✅ MOSTRAR AHORROS EN CONFIRMACIÓN */}\r\n\t\t\t\t\t\t{checkoutCalculations.totals.totalDiscounts > 0 && (\r\n\t\t\t\t\t\t\t<div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-6\">\r\n\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\r\n\t\t\t\t\t\t\t\t\t<Gift className=\"h-5 w-5 text-green-600 mr-2\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-green-800 font-medium\">\r\n\t\t\t\t\t\t\t\t\t\t¡Has ahorrado {formatCurrency(checkoutCalculations.totals.totalDiscounts)}!\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"border-t border-gray-200 pt-4 pb-2 mb-4\">\r\n\t\t\t\t\t\t<h3 className=\"text-lg font-semibold mb-2\">Detalles del pedido:</h3>\r\n\t\t\t\t\t\t<div className=\"flex justify-between py-2\">\r\n\t\t\t\t\t\t\t<span className=\"text-gray-600\">Número de orden:</span>\r\n\t\t\t\t\t\t\t<span className=\"font-medium\">{orderDetails.order_number}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"flex justify-between py-2\">\r\n\t\t\t\t\t\t\t<span className=\"text-gray-600\">Total:</span>\r\n\t\t\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t\t\t{formatCurrency(orderDetails.total || checkoutCalculations.totals.total)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{checkoutCalculations.totals.totalDiscounts > 0 && (\r\n\t\t\t\t\t\t\t<div className=\"flex justify-between py-2\">\r\n\t\t\t\t\t\t\t\t<span className=\"text-gray-600\">Total ahorrado:</span>\r\n\t\t\t\t\t\t\t\t<span className=\"font-medium text-green-600\">\r\n\t\t\t\t\t\t\t\t\t{formatCurrency(checkoutCalculations.totals.totalDiscounts)}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className=\"flex justify-between py-2\">\r\n\t\t\t\t\t\t\t<span className=\"text-gray-600\">Estado del pago:</span>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={`font-medium ${orderDetails.payment_status === \"paid\" ? \"text-green-600\" : \"text-yellow-600\"}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{orderDetails.payment_status === \"paid\"\r\n\t\t\t\t\t\t\t\t\t? \"Pagado\"\r\n\t\t\t\t\t\t\t\t\t: orderDetails.payment_status}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* ✅ NUEVO: Mensaje de redirección automática */}\r\n\t\t\t\t\t<div className=\"text-center mb-6\">\r\n\t\t\t\t\t\t<p className=\"text-sm text-gray-500\">\r\n\t\t\t\t\t\t\tSerás redirigido a tus pedidos en{\" \"}\r\n\t\t\t\t\t\t\t<span className=\"font-medium text-primary-600\">{countdown}</span>{\" \"}\r\n\t\t\t\t\t\t\tsegundos...\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"flex justify-center space-x-4 mt-6\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => navigate(\"/\")}\r\n\t\t\t\t\t\t\tclassName=\"px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tVolver a la tienda\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => navigate(\"/orders\")}\r\n\t\t\t\t\t\t\tclassName=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tVer mis pedidos\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container mx-auto px-4 py-10\">\r\n\t\t\t<div className=\"flex justify-between items-center mb-8\">\r\n\t\t\t\t<h1 className=\"text-3xl font-bold\">Finalizar compra</h1>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"flex flex-col lg:flex-row gap-8\">\r\n\t\t\t\t<div className=\"lg:w-2/3\">\r\n\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\r\n\t\t\t\t\t\t<h2 className=\"text-xl font-bold mb-4\">\r\n\t\t\t\t\t\t\tInformación de envío y facturación\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t\t<label className=\"inline-flex items-center\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-checkbox h-5 w-5 text-primary-600\"\r\n\t\t\t\t\t\t\t\t\tchecked={useSameAddress}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\tconst checked = e.target.checked;\r\n\t\t\t\t\t\t\t\t\t\tsetUseSameAddress(checked);\r\n\t\t\t\t\t\t\t\t\t\tif (!checked) {\r\n\t\t\t\t\t\t\t\t\t\t\tsetBillingAddress({...shippingAddress});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span className=\"ml-2 text-gray-700\">\r\n\t\t\t\t\t\t\t\t\tUsar la misma dirección para facturación\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<AddressForm\r\n\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\tuseSameAddress\r\n\t\t\t\t\t\t\t\t\t? \"Dirección de Envío y Facturación\"\r\n\t\t\t\t\t\t\t\t\t: \"Dirección de Envío\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\taddress={shippingAddress}\r\n\t\t\t\t\t\t\tonAddressChange={handleShippingChange}\r\n\t\t\t\t\t\t\terrors={formErrors}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t{!useSameAddress && (\r\n\t\t\t\t\t\t\t<div className=\"mt-8 pt-8 border-t border-gray-200\">\r\n\t\t\t\t\t\t\t\t<AddressForm\r\n\t\t\t\t\t\t\t\t\ttitle=\"Dirección de Facturación\"\r\n\t\t\t\t\t\t\t\t\taddress={billingAddress}\r\n\t\t\t\t\t\t\t\t\tonAddressChange={handleBillingChange}\r\n\t\t\t\t\t\t\t\t\terrors={formErrors}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* ✅ MOSTRAR MÉTODOS DE PAGO SOLO DESPUÉS DE VALIDACIÓN */}\r\n\t\t\t\t\t{showPaymentMethods && validatedCheckoutData && (\r\n\t\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\r\n\t\t\t\t\t\t\t<h2 className=\"text-xl font-bold mb-4\">Método de pago</h2>\r\n\r\n\t\t\t\t\t\t\t{/* ✅ INDICADOR DE DATOS VALIDADOS */}\r\n\t\t\t\t\t\t\t<div className=\"bg-green-50 border border-green-200 rounded-lg p-3 mb-4\">\r\n\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"w-4 h-4 bg-green-500 rounded-full mr-2\"></div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-sm text-green-800 font-medium\">\r\n\t\t\t\t\t\t\t\t\t\tDatos validados correctamente\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<p className=\"text-xs text-green-600 mt-1\">\r\n\t\t\t\t\t\t\t\t\tTotal a pagar: {formatCurrency(validatedCheckoutData.totals.final_total)}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"flex flex-wrap gap-4 mb-6\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => handlePaymentMethodChange(\"credit_card\")}\r\n\t\t\t\t\t\t\t\t\tclassName={`flex items-center border rounded-lg px-4 py-3 ${\r\n\t\t\t\t\t\t\t\t\t\tpaymentMethod === \"credit_card\"\r\n\t\t\t\t\t\t\t\t\t\t\t? \"border-primary-600 bg-primary-50 text-primary-600\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"border-gray-300 hover:bg-gray-50\"\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span>Tarjeta de crédito</span>\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => handlePaymentMethodChange(\"deuna\")}\r\n\t\t\t\t\t\t\t\t\tclassName={`flex items-center border rounded-lg px-4 py-3 ${\r\n\t\t\t\t\t\t\t\t\t\tpaymentMethod === \"deuna\"\r\n\t\t\t\t\t\t\t\t\t\t\t? \"border-primary-600 bg-primary-50 text-primary-600\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"border-gray-300 hover:bg-gray-50\"\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span>Pago con Deuna!</span>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{paymentMethod === \"credit_card\" && (\r\n\t\t\t\t\t\t\t\t<CreditCardForm\r\n\t\t\t\t\t\t\t\t\tpaymentInfo={paymentInfo}\r\n\t\t\t\t\t\t\t\t\terrors={formErrors}\r\n\t\t\t\t\t\t\t\t\tonChange={handlePaymentChange}\r\n\t\t\t\t\t\t\t\t\tcontent={\r\n\t\t\t\t\t\t\t\t\t\t<DatafastPaymentButton\r\n\t\t\t\t\t\t\t\t\t\t\tonSuccess={handleDatafastSuccess}\r\n\t\t\t\t\t\t\t\t\t\t\tonError={handleDatafastError}\r\n\t\t\t\t\t\t\t\t\t\t\tcheckoutData={validatedCheckoutData}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{paymentMethod === \"deuna\" && (\r\n\t\t\t\t\t\t\t\t<QRPaymentForm\r\n\t\t\t\t\t\t\t\t\tcheckoutData={validatedCheckoutData}\r\n\t\t\t\t\t\t\t\t\tonPaymentSuccess={async (paymentData) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('✅ DeUna payment successful, processing completion:', paymentData);\r\n\r\n\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\t// ✅ VALIDAR DATOS DEL PAGO ANTES DE PROCESAR\r\n\t\t\t\t\t\t\t\t\t\t\tif (!paymentData || !paymentData.payment_id) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthrow new Error('Datos de pago de DeUna incompletos');\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// ✅ INTENTAR VERIFICAR EL ESTADO DEL PAGO CON FALLBACKS\r\n\t\t\t\t\t\t\t\t\t\t\tlet orderData = null;\r\n\t\t\t\t\t\t\t\t\t\t\tlet attempts = 0;\r\n\t\t\t\t\t\t\t\t\t\t\tconst maxAttempts = 3;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\twhile (!orderData && attempts < maxAttempts) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tattempts++;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(`🔄 Intento ${attempts}/${maxAttempts} - Verificando orden creada por webhook...`);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Esperar un poco más en cada intento para que el webhook procese\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 1000 * attempts));\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Intentar obtener la orden del backend si está disponible\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// En el futuro se puede implementar una llamada al backend para verificar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Por ahora, usar los datos del paymentData\r\n\t\t\t\t\t\t\t\t\t\t\t\t\torderData = {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\torder_id: paymentData.order_id || `DEUNA-${Date.now()}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\torder_number: paymentData.payment_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotal: validatedCheckoutData.totals.final_total,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayment_status: 'paid',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayment_method: 'deuna',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayment_id: paymentData.payment_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcreated_via: 'deuna_webhook',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcompleted_at: paymentData.completed_at || new Date().toISOString()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t} catch (attemptError) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.warn(`⚠️ Intento ${attempts} falló:`, attemptError);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (attempts >= maxAttempts) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// En el último intento, usar datos básicos como fallback\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\torderData = {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\torder_id: paymentData.payment_id || `DEUNA-${Date.now()}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\torder_number: paymentData.payment_id || `DEUNA-${Date.now()}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotal: validatedCheckoutData.totals.final_total,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayment_status: 'processing', // Estado más conservador\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayment_method: 'deuna',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayment_id: paymentData.payment_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcreated_via: 'deuna_frontend_fallback',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcompleted_at: new Date().toISOString()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('🆘 Usando datos de fallback para mostrar recibo');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// ✅ MOSTRAR ESTADO DE LA ORDEN SEGÚN LO QUE SE OBTUVO\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('🎯 Setting orderComplete to true and orderDetails');\r\n\t\t\t\t\t\t\t\t\t\t\tsetOrderDetails(orderData);\r\n\t\t\t\t\t\t\t\t\t\t\tsetOrderComplete(true);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// ✅ ACTUALIZACIÓN OPTIMISTA DEL HEADER (mismo patrón que CartPage)\r\n\t\t\t\t\t\t\t\t\t\t\tconst totalItems = cart?.items.reduce((total, item) => total + item.quantity, 0) || 0;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < totalItems; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\toptimisticCartRemove();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// ✅ LIMPIAR CARRITO SOLO DESPUÉS DE PROCESAR EXITOSAMENTE\r\n\t\t\t\t\t\t\t\t\t\t\tclearCart();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// ✅ NOTIFICACIÓN ESPECÍFICA SEGÚN EL RESULTADO\r\n\t\t\t\t\t\t\t\t\t\t\tif (orderData && orderData.created_via === 'deuna_frontend_fallback') {\r\n\t\t\t\t\t\t\t\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNotificationType.WARNING,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'Pago completado. Si no aparece en tus órdenes inmediatamente, revisa en unos minutos.'\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNotificationType.SUCCESS,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'¡Pago completado exitosamente con DeUna!'\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('✅ DeUna payment completion processed successfully - should show receipt now');\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('📊 Order details set:', {\r\n\t\t\t\t\t\t\t\t\t\t\t\torder_id: orderData?.order_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttotal: orderData?.total,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcreated_via: orderData?.created_via\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.error('❌ Error processing DeUna payment completion:', error);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// ✅ FALLBACK CRÍTICO: MOSTRAR INFORMACIÓN MÍNIMA PARA EL USUARIO\r\n\t\t\t\t\t\t\t\t\t\t\tconst fallbackOrderData = {\r\n\t\t\t\t\t\t\t\t\t\t\t\torder_id: paymentData?.payment_id || `DEUNA-ERROR-${Date.now()}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\torder_number: paymentData?.payment_id || `ERROR-${Date.now()}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttotal: validatedCheckoutData.totals.final_total,\r\n\t\t\t\t\t\t\t\t\t\t\t\tpayment_status: 'unknown',\r\n\t\t\t\t\t\t\t\t\t\t\t\tpayment_method: 'deuna',\r\n\t\t\t\t\t\t\t\t\t\t\t\tpayment_id: paymentData?.payment_id || 'unknown',\r\n\t\t\t\t\t\t\t\t\t\t\t\tcreated_via: 'deuna_error_fallback',\r\n\t\t\t\t\t\t\t\t\t\t\t\tcompleted_at: new Date().toISOString(),\r\n\t\t\t\t\t\t\t\t\t\t\t\terror_message: 'Error procesando la confirmación. Verifica tus órdenes.'\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tsetOrderDetails(fallbackOrderData);\r\n\t\t\t\t\t\t\t\t\t\t\tsetOrderComplete(true);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// No limpiar carrito si hay error - mejor experiencia para el usuario\r\n\t\t\t\t\t\t\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\t\t\t\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Error procesando la confirmación del pago. Si el pago fue exitoso, aparecerá en tus órdenes.'\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\thandleError(error as Error, \"Error procesando la confirmación del pago. Por favor, verifica tus órdenes.\");\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonPaymentError={(error) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.error('❌ DeUna payment error:', error);\r\n\t\t\t\t\t\t\t\t\t\thandleError(new Error(error), \"Error en el pago con DeUna. Por favor, intenta de nuevo.\");\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{/* ✅ MENSAJE INFORMATIVO CUANDO NO HAY MÉTODOS DE PAGO */}\r\n\t\t\t\t\t{!showPaymentMethods && (\r\n\t\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\r\n\t\t\t\t\t\t\t<h2 className=\"text-xl font-bold mb-4\">Método de pago</h2>\r\n\t\t\t\t\t\t\t<div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n\t\t\t\t\t\t\t\t<p className=\"text-blue-800 text-sm\">\r\n\t\t\t\t\t\t\t\t\tLos métodos de pago se mostrarán después de validar tu información de envío y facturación.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"lg:w-1/3\">\r\n\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-6 sticky top-24\">\r\n\t\t\t\t\t\t<OrderSummaryComponent />\r\n\r\n\t\t\t\t\t\t{/* ✅ BOTÓN DINÁMICO SEGÚN EL ESTADO DEL CHECKOUT */}\r\n\t\t\t\t\t\t{!showPaymentMethods ? (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={validateAndPrepareCheckout}\r\n\t\t\t\t\t\t\t\tdisabled={isLoading || checkoutCalculations.stockIssues.length > 0}\r\n\t\t\t\t\t\t\t\tclassName=\"mt-6 w-full bg-primary-600 hover:bg-primary-700 text-white font-medium py-3 px-4 rounded-md transition-colors disabled:opacity-50 flex items-center justify-center\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<circle\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"opacity-25\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcx=\"12\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcy=\"12\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tr=\"10\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstrokeWidth=\"4\"\r\n\t\t\t\t\t\t\t\t\t\t\t></circle>\r\n\t\t\t\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"opacity-75\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\t\t\t\t\t\t\t\t\td=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n\t\t\t\t\t\t\t\t\t\t\t></path>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\tValidando datos...\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : checkoutCalculations.stockIssues.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\"Resuelve problemas de stock\"\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t`Validar datos y continuar - ${formatCurrency(checkoutCalculations.totals.total)}`\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"mt-6 bg-green-50 border border-green-200 rounded-lg p-4\">\r\n\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"text-sm font-medium text-green-800\">\r\n\t\t\t\t\t\t\t\t\t\t\t✅ Datos validados\r\n\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-xs text-green-600 mt-1\">\r\n\t\t\t\t\t\t\t\t\t\t\tSelecciona tu método de pago para continuar\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetShowPaymentMethods(false);\r\n\t\t\t\t\t\t\t\t\t\t\tsetValidatedCheckoutData(null);\r\n\t\t\t\t\t\t\t\t\t\t\tsetCheckoutState(\"forms_filling\" as CheckoutState);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-xs text-green-600 underline hover:no-underline\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tEditar datos\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{checkoutCalculations.stockIssues.length > 0 && (\r\n\t\t\t\t\t\t\t<div className=\"mt-3 text-xs text-center text-red-600\">\r\n\t\t\t\t\t\t\t\t⚠️ Ajusta las cantidades en tu carrito antes de continuar\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<p className=\"mt-4 text-xs text-gray-500 text-center\">\r\n\t\t\t\t\t\t\tAl hacer clic en \"Finalizar compra\", aceptas nuestros{\" \"}\r\n\t\t\t\t\t\t\t<a href=\"/terms\" className=\"text-primary-600 hover:underline\">\r\n\t\t\t\t\t\t\t\tTérminos y condiciones\r\n\t\t\t\t\t\t\t</a>{\" \"}\r\n\t\t\t\t\t\t\ty{\" \"}\r\n\t\t\t\t\t\t\t<a href=\"/privacy\" className=\"text-primary-600 hover:underline\">\r\n\t\t\t\t\t\t\t\tPolítica de privacidad\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CheckoutPage;"],"names":["CartService","response","ApiClient","API_ENDPOINTS","error","request","apiRequest","itemId","quantity","code","CartContext","createContext","storageService","LocalStorageService","cartService","CACHE_KEYS","CACHE_TIMES","CartProvider","children","cart","setCart","useState","loading","setLoading","setError","itemCount","setItemCount","totalAmount","setTotalAmount","appliedDiscount","setAppliedDiscount","isAuthenticated","useContext","AuthContext","showToast","useToast","isInitialized","useRef","lastCartString","isAuthenticatedRef","fetchCartTimeoutRef","isFetchingRef","cartUpdateTimeoutRef","useEffect","showNotification","useCallback","type","message","invalidateCartCache","CacheService","calculateTotalItems","cartItems","total","item","fetchCartFromAPI","cacheKey","cachedCart","cartData","product","sellerId","totalQuantities","itemCountValue","localCart","appConfig","parsedCart","totalItems","e","fetchCart","cartString","addToCartLocal","existingItemIndex","updatedCart","updatedItems","newTotal","sum","newItem","newItems","err","addToCart","result","removeFromCartLocal","removeFromCart","updateCartItemLocal","data","updateCartItem","clearCartLocal","emptyCart","clearCart","validateDiscountCode","applyDiscountCode","removeDiscountCode","jsx","HeaderCountersManager","callback","forceRefresh","now","cached","cartCount","favCount","notifCount","value","useHeaderCounters","state","setState","useAuth","managerRef","manager","unsubscribe","counters","refetch","useInvalidateCounters","useCart","context","ErrorHandlingService","translations","lowerMessage","NotificationType","shouldRetry","availableStock","requestedQuantity","validationErrors","errors","useErrorHandler","handleError","customMessage","errorInfo","handleSuccess","handleStockError","configManager","ConfigurationManager","DEFAULT_VOLUME_DISCOUNTS","calculateVolumeDiscount","basePrice","customTiers","tiers","applicableTier","tier","discountedPrice","savings","savingsTotal","calculateVolumeDiscountAsync","configResult","sortedTiers","a","b","calculateCartItemDiscounts","cartItem","originalPrice","sellerDiscountPercentage","sellerDiscountAmount","priceAfterSellerDiscount","volumeDiscount","finalPricePerUnit","totalSellerSavings","totalVolumeSavings","totalSavings","hasVolumeDiscount","displayDiscountPercentage","calculateCartItemDiscountsAsync","EcommerceCalculator","items","appliedDiscountCode","config","step1_originalSubtotal","step2_afterSellerDiscount","sellerDiscounts","step3_afterVolumeDiscount","volumeDiscounts","step4_afterCoupon","couponDiscount","shipping","step5_withShipping","step6_tax","step7_finalTotal","totalDiscounts","volumeDiscountsApplied","freeShipping","itemSubtotal","_originalSubtotal","totalDiscount","subtotalAfterDiscount","discountPercentage","discountPerUnit","priceAfterDiscount","itemDiscount","_currentSubtotal","volumeDiscountPercentage","sellerDiscountedPrice","volumeDiscountPerUnit","priceAfterVolumeDiscount","itemVolumeDiscount","subtotal","discountCode","discount","discountData","percentage","shippingConfig","totals","priceAfterSeller","CheckoutItemsService","index","checkoutItems","calculatedItems","checkoutItem","calculatedItem","getNumericEnvVar","key","defaultValue","__vite_import_meta_env__","CALCULATION_CONFIG","isNumberEqual","tolerance","difference","isEqual","DatafastService","checkoutData","errorMessage","extractErrorMessage","verifyData","checkoutId","transactionId","calculatedTotal","mockResourcePath","requestData","resourcePath","formData","resolve","resultUrl","url","CreditCardForm","content","jsxs","DeunaService","paymentData","paymentId","orderId","reason","amount","filters","params","options","maxAttempts","interval","onStatusChange","abortController","reject","attempts","lastStatus","timeoutId","cleanup","onAbort","statusResponse","currentStatus","resolveTimeout","rejectTimeout","checkAbort","qrCode","currency","method","status","React","FileText","Clock","CheckCircle","XCircle","Ban","DollarSign","HelpCircle","customerEmail","customerName","sessionId","requestPayload","webhookData","QRPaymentForm","onPaymentSuccess","onPaymentError","user","isGenerating","setIsGenerating","setPaymentData","isPolling","setIsPolling","setCurrentStatus","timeRemaining","setTimeRemaining","copySuccess","setCopySuccess","isSimulating","setIsSimulating","pollingRef","timerRef","cleanupRefs","generateOrderId","copyToClipboard","text","prev","resetPayment","formatTime","seconds","minutes","remainingSeconds","handleStatusChange","statusDisplay","errorMsg","generateQRPayment","paymentRequest","mappedItem","polling","handleCancelPayment","handleNewQR","handleSimulatePayment","StatusIndicator","RefreshCw","formatCurrency","Smartphone","Copy","ExternalLink","Fragment","Zap","AddressForm","title","address","onAddressChange","formId","useDatafastCSP","removeAllCSP","cspMetas","meta","httpEquiv","observer","mutations","mutation","node","element","aggressiveCheck","regularCheck","DatafastPaymentButton","onSuccess","onError","countryMapping","useNavigate","isLoading","setIsLoading","mapCountryCode","country","extractCedulaFromRUC","identification","cleanId","extractedCedula","showWidget","setShowWidget","checkoutResponse","setCheckoutResponse","showForm","setShowForm","widgetLoaded","setWidgetLoaded","calculatedTotals","setCalculatedTotals","setFormData","shippingData","nameParts","firstName","lastName","extractionResult","datafastService","script","handleInputChange","field","validateFormData","requiredFields","handleStartPayment","customerData","loadDatafastWidget","existingScript","form","_e","checkoutIdField","targetFrame","checkCount","maxChecks","checkInterval","paymentIframe","formAction","iframe","validationScriptUrl","widgetBaseUrl","forms","scripts","isDevelopment","CheckoutPage","navigate","initialAddress","optimisticCartRemove","paymentMethod","setPaymentMethod","shippingAddress","setShippingAddress","billingAddress","setBillingAddress","useSameAddress","setUseSameAddress","paymentInfo","setPaymentInfo","formErrors","setFormErrors","orderComplete","setOrderComplete","orderDetails","setOrderDetails","countdown","setCountdown","setCheckoutState","validatedCheckoutData","setValidatedCheckoutData","showPaymentMethods","setShowPaymentMethods","checkoutCalculations","setCheckoutCalculations","itemsWithDiscounts","hasStockIssue","stockIssues","getAvailableStock","validateCartStock","userAddress","handleDatafastSuccess","orderData","handleDatafastError","stockValidation","countdownTimer","handlePaymentMethodChange","handleShippingChange","newAddress","handleBillingChange","handlePaymentChange","newErrors","validateAddressesOnly","validateAddress","prefix","isValid","combineCartWithCalculations","combinedItem","validateAndPrepareCheckout","storeRequest","storeResponse","OrderSummaryComponent","AlertTriangle","issue","Gift","TrendingDown","checked","attemptError","i","fallbackOrderData"],"mappings":"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"}