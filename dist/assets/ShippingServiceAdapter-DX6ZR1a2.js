import{l as r,t as p}from"./index-DmNDOrWy.js";class y{async getShippingsList(e){try{console.log("ShippingServiceAdapter: Obteniendo lista de envíos con filtros:",e);const t=await r.get(p.ORDERS.SELLER_ORDERS,e);if(console.log("ShippingServiceAdapter: Respuesta de API:",t),!t||!t.data)throw new Error("Respuesta de API inválida");const i=Array.isArray(t.data)?t.data.map(n=>this.mapOrderToShippingItem(n)):[],a=t.pagination||{currentPage:1,totalPages:1,totalItems:i.length,itemsPerPage:10};return{items:i,pagination:{currentPage:Number(a.currentPage)||1,totalPages:Number(a.totalPages)||1,totalItems:Number(a.totalItems)||i.length,itemsPerPage:Number(a.itemsPerPage)||10}}}catch(t){return console.error("ShippingServiceAdapter: Error al obtener lista de envíos:",t),{items:[],pagination:{currentPage:1,totalPages:1,totalItems:0,itemsPerPage:10}}}}async getShippingDetails(e){try{console.log(`ShippingServiceAdapter: Obteniendo detalles del envío ${e}`);const t=await r.get(p.ORDERS.DETAILS(Number(e)));if(console.log(`ShippingServiceAdapter: Respuesta para envío ${e}:`,t),!t||!t.data)throw new Error("Respuesta de API inválida");const i=this.mapOrderToShippingItem(t.data);if(i.trackingNumber)try{const a=await this.getShippingHistory(i.trackingNumber);i.history=a}catch(a){console.warn("No se pudo obtener historial de envío:",a)}return i}catch(t){return console.error(`ShippingServiceAdapter: Error al obtener detalles del envío ${e}:`,t),null}}async getShippingHistory(e){try{console.log(`ShippingServiceAdapter: Obteniendo historial para ${e}`);const t=await r.get(p.SHIPPING.HISTORY(e));return console.log(`ShippingServiceAdapter: Historial para ${e}:`,t),!t||!t.data?[]:Array.isArray(t.data)?t.data.map(i=>({date:i.date||i.timestamp||new Date().toISOString(),status:i.status||"unknown",location:i.location||void 0,description:i.description||i.message||"Sin descripción"})):[]}catch(t){return console.error(`ShippingServiceAdapter: Error al obtener historial de ${e}:`,t),[]}}async getShippingRoute(e){try{console.log(`ShippingServiceAdapter: Obteniendo ruta para ${e}`);const t=await r.get(p.SHIPPING.ROUTE(e));return console.log(`ShippingServiceAdapter: Ruta para ${e}:`,t),!t||!t.data?[]:Array.isArray(t.data)?t.data.map(i=>({date:i.date||i.timestamp||new Date().toISOString(),location:i.location||"Desconocido",coordinates:i.coordinates||void 0,status:i.status||"unknown"})):[]}catch(t){return console.error(`ShippingServiceAdapter: Error al obtener ruta de ${e}:`,t),[]}}async assignTrackingNumber(e,t){try{console.log(`ShippingServiceAdapter: Asignando tracking a orden ${e}:`,t);const i={tracking_number:t.tracking_number,shipping_company:t.shipping_company,estimated_delivery:t.estimated_delivery,notes:t.notes},a=await r.patch(p.ORDERS.UPDATE_SHIPPING(Number(e)),i);return console.log("ShippingServiceAdapter: Respuesta al asignar tracking:",a),a&&(a.success===!0||a.status==="success")}catch(i){return console.error(`ShippingServiceAdapter: Error al asignar tracking a orden ${e}:`,i),!1}}async updateShippingStatus(e,t){try{console.log(`ShippingServiceAdapter: Actualizando estado de envío ${e} a ${t}`);const i=this.mapShippingStatusToOrderStatus(t),a=await r.put(p.ORDERS.UPDATE_STATUS(Number(e)),{status:i});return console.log("ShippingServiceAdapter: Respuesta de actualización:",a),a&&(a.success===!0||a.status==="success")}catch(i){return console.error(`ShippingServiceAdapter: Error al actualizar estado de envío ${e}:`,i),!1}}async markAsShipped(e,t){try{console.log(`ShippingServiceAdapter: Marcando orden ${e} como enviada:`,t);const i={tracking_number:t.tracking_number,shipping_company:t.shipping_company,estimated_delivery:t.estimated_delivery,notes:t.notes},a=await r.patch(p.ORDERS.UPDATE_SHIPPING(Number(e)),i);if(console.log("ShippingServiceAdapter: Respuesta al actualizar envío:",a),!a||a.success!==!0&&a.status!=="success")throw new Error("Error al actualizar información de envío");const n=await r.put(p.ORDERS.UPDATE_STATUS(Number(e)),{status:"shipped"});return console.log("ShippingServiceAdapter: Respuesta al actualizar estado:",n),n&&(n.success===!0||n.status==="success")}catch(i){return console.error(`ShippingServiceAdapter: Error al marcar orden ${e} como enviada:`,i),!1}}mapOrderToShippingItem(e){let t="";if(e.shipping_data||e.shippingData){const s=e.shipping_data||e.shippingData;t=[s.address,s.city,s.state,s.country,s.postal_code||s.postalCode].filter(Boolean).join(", ")}else typeof e.shippingAddress=="string"&&(t=e.shippingAddress);let i="pending";const a=e.shipping_data||e.shippingData;e.shipping&&e.shipping.status?i=e.shipping.status:e.status==="shipped"||e.status==="in_transit"?i="shipped":e.status==="delivered"?i="delivered":e.status==="cancelled"?i="failed":e.status==="completed"?i="delivered":e.status==="pending"?i="pending":e.status==="processing"&&(i=a?.tracking_number?"ready_to_ship":"pending");const n=e.user_name||(e.customer?e.customer.name:"Cliente"),o=e.user_email||(e.customer?e.customer.email:"email@example.com"),c=e.userId||e.user_id||(e.customer?e.customer.id:0),l=a?.tracking_number||e.trackingNumber||(e.shipping?e.shipping.tracking_number:void 0),g=a?.shipping_company||e.carrier||(e.shipping?e.shipping.carrier_name:void 0),u=a?.estimated_delivery||e.estimatedDelivery||(e.shipping?e.shipping.estimated_delivery:void 0),d=a?.phone,h=e.shipping?.current_location?typeof e.shipping.current_location=="string"?e.shipping.current_location:JSON.stringify(e.shipping.current_location):void 0;return{id:String(e.id||0),orderId:String(e.id||0),orderNumber:e.orderNumber||e.order_number||`ORD-${e.id||0}`,date:e.createdAt||e.created_at||e.date||new Date().toISOString(),customer:{id:c,name:n,email:o,phone:d},trackingNumber:l,status:i,carrier:g,estimatedDelivery:u,shippingAddress:t,shippingMethod:e.shippingMethod||"Estándar",lastUpdate:e.updatedAt||e.updated_at||e.lastUpdate,history:Array.isArray(e.history)?e.history.map(s=>({date:s.date||new Date().toISOString(),status:s.status,location:s.location||h,description:s.description})):void 0}}mapShippingStatusToOrderStatus(e){switch(e){case"pending":return"pending";case"ready_to_ship":return"processing";case"in_transit":case"shipped":return"shipped";case"delivered":return"delivered";case"failed":return"cancelled";case"returned":return"cancelled";default:return"processing"}}}export{y as S};
//# sourceMappingURL=ShippingServiceAdapter-DX6ZR1a2.js.map
