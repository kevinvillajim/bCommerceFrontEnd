{"version":3,"file":"useRatings-BPelRWkS.js","sources":["../../src/presentation/hooks/useRatings.ts"],"sourcesContent":["// src/presentation/hooks/useRatings.ts\r\nimport {useState, useCallback, useMemo} from \"react\";\r\nimport RatingService from \"../../core/services/RatingService\";\r\nimport type {\r\n\tProductRatingRequest,\r\n\tSellerRatingRequest,\r\n\tProblemReportRequest,\r\n\tRatingReplyRequest,\r\n\tRatingReportRequest,\r\n} from \"../../core/services/RatingService\";\r\nimport {extractErrorMessage} from \"../../utils/errorHandler\";\r\n\r\nexport const useRatings = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\t\r\n\t// ✅ CREAR INSTANCIA UNA SOLA VEZ\r\n\tconst ratingService = useMemo(() => new RatingService(), []);\r\n\r\n\t// Función para obtener valoraciones pendientes\r\n\tconst getPendingRatings = useCallback(async () => {\r\n\t\tsetLoading(true);\r\n\t\tsetError(null);\r\n\t\ttry {\r\n\t\tconsole.log(\"Solicitando valoraciones pendientes...\");\r\n\t\tconst response = await ratingService.getPendingRatings();\r\n\t\tconsole.log(\"Respuesta de valoraciones pendientes:\", response);\r\n\t\tconsole.log(\"🔍 DATOS COMPLETOS DEL BACKEND:\", JSON.stringify(response.data, null, 2));\r\n\t\t\t\treturn response;\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error al obtener valoraciones pendientes:\", err);\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terr,\r\n\t\t\t\t\"Error al obtener valoraciones pendientes\"\r\n\t\t\t);\r\n\t\t\tsetError(errorMessage);\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"error\",\r\n\t\t\t\tmessage: errorMessage,\r\n\t\t\t\tdata: {products: [], sellers: []},\r\n\t\t\t};\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, []); // ✅ SIN DEPENDENCIAS DE ratingService\r\n\r\n\t// Función para valorar un producto\r\n\tconst rateProduct = useCallback(\r\n\t\tasync (data: ProductRatingRequest) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(\"Enviando valoración de producto:\", data);\r\n\t\t\t\tconst response = await ratingService.rateProduct(data);\r\n\t\t\t\tconsole.log(\"Respuesta al valorar producto:\", response);\r\n\t\t\t\treturn response;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al valorar producto:\", err);\r\n\t\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\t\terr,\r\n\t\t\t\t\t\"Error al valorar producto\"\r\n\t\t\t\t);\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tthrow new Error(errorMessage);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[] // ✅ SIN DEPENDENCIAS DE ratingService\r\n\t);\r\n\r\n\t// Función para valorar un vendedor\r\n\tconst rateSeller = useCallback(\r\n\t\tasync (data: SellerRatingRequest) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(\"Enviando valoración de vendedor:\", data);\r\n\t\t\t\tconst response = await ratingService.rateSeller(data);\r\n\t\t\t\tconsole.log(\"Respuesta al valorar vendedor:\", response);\r\n\t\t\t\treturn response;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al valorar vendedor:\", err);\r\n\t\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\t\terr,\r\n\t\t\t\t\t\"Error al valorar vendedor\"\r\n\t\t\t\t);\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tthrow new Error(errorMessage);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[] // ✅ SIN DEPENDENCIAS DE ratingService\r\n\t);\r\n\r\n\t// Función para reportar un problema\r\n\tconst reportProblem = useCallback(\r\n\t\tasync (data: ProblemReportRequest) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(\"Enviando reporte de problema:\", data);\r\n\t\t\t\tconst response = await ratingService.reportProblem(data);\r\n\t\t\t\tconsole.log(\"Respuesta al reportar problema:\", response);\r\n\t\t\t\treturn response;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al reportar problema:\", err);\r\n\t\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\t\terr,\r\n\t\t\t\t\t\"Error al reportar problema\"\r\n\t\t\t\t);\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tthrow new Error(errorMessage);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[] // ✅ SIN DEPENDENCIAS DE ratingService\r\n\t);\r\n\r\n\t// Función para responder a una valoración\r\n\tconst replyToRating = useCallback(\r\n\t\tasync (ratingId: number, replyText: string) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(\"Enviando respuesta a valoración:\", {ratingId, replyText});\r\n\t\t\t\tconst request: RatingReplyRequest = {\r\n\t\t\t\t\trating_id: ratingId,\r\n\t\t\t\t\treply_text: replyText,\r\n\t\t\t\t};\r\n\t\t\t\tconst response = await ratingService.replyToRating(request);\r\n\t\t\t\tconsole.log(\"Respuesta al responder valoración:\", response);\r\n\t\t\t\treturn response;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al responder valoración:\", err);\r\n\t\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\t\terr,\r\n\t\t\t\t\t\"Error al responder valoración\"\r\n\t\t\t\t);\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tthrow new Error(errorMessage);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[] // ✅ SIN DEPENDENCIAS DE ratingService\r\n\t);\r\n\r\n\t// Función para reportar una valoración inapropiada\r\n\tconst reportRating = useCallback(\r\n\t\tasync (ratingId: number, reason: string) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(\"Enviando reporte de valoración:\", {ratingId, reason});\r\n\t\t\t\tconst request: RatingReportRequest = {\r\n\t\t\t\t\trating_id: ratingId,\r\n\t\t\t\t\treason: reason,\r\n\t\t\t\t};\r\n\t\t\t\tconst response = await ratingService.reportRating(request);\r\n\t\t\t\tconsole.log(\"Respuesta al reportar valoración:\", response);\r\n\t\t\t\treturn response;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al reportar valoración:\", err);\r\n\t\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\t\terr,\r\n\t\t\t\t\t\"Error al reportar valoración\"\r\n\t\t\t\t);\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tthrow new Error(errorMessage);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[] // ✅ SIN DEPENDENCIAS DE ratingService\r\n\t);\r\n\r\n\t// Función para obtener valoraciones de un producto\r\n\tconst getProductRatings = useCallback(\r\n\t\tasync (productId: number, page: number = 1, perPage: number = 10) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(`Obteniendo valoraciones del producto ${productId}...`);\r\n\t\t\t\tconst response = await ratingService.getProductRatings(\r\n\t\t\t\t\tproductId,\r\n\t\t\t\t\tpage,\r\n\t\t\t\t\tperPage\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(`Valoraciones del producto ${productId}:`, response);\r\n\t\t\t\treturn response;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t`Error al obtener valoraciones del producto ${productId}:`,\r\n\t\t\t\t\terr\r\n\t\t\t\t);\r\n\t\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\t\terr,\r\n\t\t\t\t\t\"Error al obtener valoraciones del producto\"\r\n\t\t\t\t);\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tthrow new Error(errorMessage);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[] // ✅ SIN DEPENDENCIAS DE ratingService\r\n\t);\r\n\r\n\t// Función para obtener valoraciones de un vendedor\r\n\tconst getSellerRatings = useCallback(\r\n\t\tasync (sellerId: number, page: number = 1, perPage: number = 10) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(`Obteniendo valoraciones del vendedor ${sellerId}...`);\r\n\t\t\t\tconst response = await ratingService.getSellerRatings(\r\n\t\t\t\t\tsellerId,\r\n\t\t\t\t\tpage,\r\n\t\t\t\t\tperPage\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(`Valoraciones del vendedor ${sellerId}:`, response);\r\n\t\t\t\treturn response;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t`Error al obtener valoraciones del vendedor ${sellerId}:`,\r\n\t\t\t\t\terr\r\n\t\t\t\t);\r\n\t\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\t\terr,\r\n\t\t\t\t\t\"Error al obtener valoraciones del vendedor\"\r\n\t\t\t\t);\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tthrow new Error(errorMessage);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[] // ✅ SIN DEPENDENCIAS DE ratingService\r\n\t);\r\n\r\n\t// Función para obtener mis valoraciones recibidas\r\n\tconst getMyReceivedRatings = useCallback(\r\n\t\tasync (page: number = 1, perPage: number = 10, status?: string) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(\"Obteniendo mis valoraciones recibidas...\");\r\n\t\t\t\tconst response = await ratingService.getMyReceivedRatings(\r\n\t\t\t\t\tpage,\r\n\t\t\t\t\tperPage,\r\n\t\t\t\t\tstatus\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(\"Mis valoraciones recibidas:\", response);\r\n\t\t\t\treturn response;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al obtener mis valoraciones recibidas:\", err);\r\n\t\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\t\terr,\r\n\t\t\t\t\t\"Error al obtener mis valoraciones recibidas\"\r\n\t\t\t\t);\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tthrow new Error(errorMessage);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[] // ✅ SIN DEPENDENCIAS DE ratingService\r\n\t);\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tgetPendingRatings,\r\n\t\trateProduct,\r\n\t\trateSeller,\r\n\t\treportProblem,\r\n\t\treplyToRating,\r\n\t\treportRating,\r\n\t\tgetProductRatings,\r\n\t\tgetSellerRatings,\r\n\t\tgetMyReceivedRatings,\r\n\t};\r\n};\r\n"],"names":["useRatings","loading","setLoading","useState","error","setError","ratingService","useMemo","RatingService","getPendingRatings","useCallback","response","err","errorMessage","extractErrorMessage","rateProduct","data","rateSeller","reportProblem","replyToRating","ratingId","replyText","request","reportRating","reason","getProductRatings","productId","page","perPage","getSellerRatings","sellerId","getMyReceivedRatings","status"],"mappings":"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"}