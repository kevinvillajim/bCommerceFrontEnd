{"version":3,"file":"SellerLayout-d0vqF0G-.js","sources":["../../src/presentation/layouts/groups/sellerGroups.tsx","../../src/presentation/hooks/useSellerNotifications.ts","../../src/presentation/layouts/SellerLayout.tsx"],"sourcesContent":["import {\r\n\tBarChart2,\r\n\tPackage,\r\n\tShoppingBag,\r\n\tTruck,\r\n\tStar,\r\n\tMessageSquare,\r\n\tDollarSign,\r\n\tUser,\r\n} from \"lucide-react\";\r\n\r\ninterface sellerGroups {\r\n\tgroups: {\r\n\t\ttitle: string;\r\n\t\tlinks: {\r\n\t\t\tpath: string;\r\n\t\t\tlabel: string;\r\n\t\t\ticon?: React.ReactNode;\r\n\t\t\tisNotificated?: boolean;\r\n\t\t\tnotificationCount?: number;\r\n\t\t}[];\r\n\t}[];\r\n\ttitle: {\r\n\t\ttitle: string;\r\n\t\ticon: React.ReactNode;\r\n\t};\r\n}\r\n\r\nconst sellerGroups = [\r\n\t{\r\n\t\ttitle: \"Principal\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/seller/dashboard\",\r\n\t\t\t\tlabel: \"Dashboard\",\r\n\t\t\t\ticon: <BarChart2 className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttitle: \"Productos\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/seller/products\",\r\n\t\t\t\tlabel: \"Todos los Productos\",\r\n\t\t\t\ticon: <Package className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"/seller/products/create\",\r\n\t\t\t\tlabel: \"Añadir Producto\",\r\n\t\t\t\ticon: <Package className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttitle: \"Pedidos\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/seller/orders\",\r\n\t\t\t\tlabel: \"Pedidos\",\r\n\t\t\t\ticon: <ShoppingBag className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t\tisNotificated: true,\r\n\t\t\t\tnotificationCount: 0, // Se actualizará dinámicamente\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"/seller/shipping\",\r\n\t\t\t\tlabel: \"Envíos\",\r\n\t\t\t\ticon: <Truck className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t\tisNotificated: true,\r\n\t\t\t\tnotificationCount: 0, // Se actualizará dinámicamente\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttitle: \"Clientes\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/seller/ratings\",\r\n\t\t\t\tlabel: \"Valoraciones y Reseñas\",\r\n\t\t\t\ticon: <Star className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t\tisNotificated: true,\r\n\t\t\t\tnotificationCount: 0, // Se actualizará dinámicamente\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"/seller/messages\",\r\n\t\t\t\tlabel: \"Mensajes\",\r\n\t\t\t\ticon: <MessageSquare className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t\tisNotificated: true,\r\n\t\t\t\tnotificationCount: 0, // Se actualizará dinámicamente\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttitle: \"Finanzas\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/seller/earnings\",\r\n\t\t\t\tlabel: \"Ganancias\",\r\n\t\t\t\ticon: <DollarSign className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttitle: \"Cuenta\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/seller/profile\",\r\n\t\t\t\tlabel: \"Perfil\",\r\n\t\t\t\ticon: <User className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n\r\nexport default sellerGroups;\r\n","import { useEffect, useCallback, useMemo, useRef } from \"react\";\r\nimport { useAuth } from \"./useAuth\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useNotifications } from \"./useNotifications\";\r\n\r\ninterface SellerNotificationCounts {\r\n  orders: number;\r\n  shipping: number;\r\n  ratings: number;\r\n  messages: number;\r\n}\r\n\r\ninterface UseSellerNotificationsReturn {\r\n  counts: SellerNotificationCounts;\r\n  loading: boolean;\r\n  error: string | null;\r\n  refetch: () => Promise<void>;\r\n  markSectionAsRead: (section: keyof SellerNotificationCounts) => Promise<void>;\r\n}\r\n\r\nconst SECTION_PATHS = {\r\n  orders: '/seller/orders',\r\n  shipping: '/seller/shipping', \r\n  ratings: '/seller/ratings',\r\n  messages: '/seller/messages'\r\n};\r\n\r\n// Mapeo de tipos de notificación a secciones\r\nconst NOTIFICATION_TYPE_TO_SECTION: Record<string, keyof SellerNotificationCounts> = {\r\n  'new_order': 'orders',\r\n  'order_status': 'orders',\r\n  'order_update': 'orders',\r\n  'shipping_update': 'shipping',\r\n  'shipping_status': 'shipping',\r\n  'rating_received': 'ratings',\r\n  'seller_rated': 'ratings',\r\n  'rating_request': 'ratings',\r\n  'new_message': 'messages',\r\n  'message_received': 'messages',\r\n};\r\n\r\nexport const useSellerNotifications = (): UseSellerNotificationsReturn => {\r\n  const { isAuthenticated, roleInfo } = useAuth();\r\n  const location = useLocation();\r\n  \r\n  // Usar el hook de notificaciones existente\r\n  const {\r\n    notifications,\r\n    loading,\r\n    error,\r\n    fetchNotifications,\r\n    markAsRead,\r\n  } = useNotifications();\r\n\r\n  // Calcular contadores basados en notificaciones no leídas\r\n  const counts = useMemo(() => {\r\n    if (!isAuthenticated || !roleInfo.isSeller || !notifications.length) {\r\n      return { orders: 0, shipping: 0, ratings: 0, messages: 0 };\r\n    }\r\n\r\n    const sectionCounts = {\r\n      orders: 0,\r\n      shipping: 0,\r\n      ratings: 0,\r\n      messages: 0,\r\n    };\r\n\r\n    // Contar notificaciones no leídas por sección\r\n    notifications\r\n      .filter(notification => !notification.read) // Solo las no leídas\r\n      .forEach(notification => {\r\n        const section = NOTIFICATION_TYPE_TO_SECTION[notification.type];\r\n        if (section) {\r\n          sectionCounts[section]++;\r\n        }\r\n      });\r\n\r\n\r\n    return sectionCounts;\r\n  }, [notifications, isAuthenticated, roleInfo.isSeller]);\r\n\r\n  // Marcar notificaciones de una sección como leídas\r\n  const markSectionAsRead = useCallback(async (section: keyof SellerNotificationCounts) => {\r\n    if (!isAuthenticated || !roleInfo.isSeller) return;\r\n\r\n    try {\r\n\r\n      \r\n      // Encontrar todas las notificaciones no leídas de esta sección\r\n      const sectionNotifications = notifications\r\n        .filter(notification => \r\n          !notification.read && \r\n          NOTIFICATION_TYPE_TO_SECTION[notification.type] === section\r\n        );\r\n      \r\n      // Marcar cada una como leída\r\n      for (const notification of sectionNotifications) {\r\n        await markAsRead(notification.id!);\r\n      }\r\n      \r\n\r\n      \r\n    } catch (err: any) {\r\n\r\n    }\r\n  }, [isAuthenticated, roleInfo.isSeller, notifications, markAsRead]);\r\n\r\n  // Refs para evitar bucles infinitos\r\n  const countsRef = useRef(counts);\r\n  const markSectionAsReadRef = useRef(markSectionAsRead);\r\n\r\n  // Actualizar refs\r\n  countsRef.current = counts;\r\n  markSectionAsReadRef.current = markSectionAsRead;\r\n\r\n  // Detectar cambios de ruta y marcar como leídas\r\n  useEffect(() => {\r\n    const currentPath = location.pathname;\r\n    \r\n    // Verificar si estamos en alguna de las secciones\r\n    for (const [section, path] of Object.entries(SECTION_PATHS)) {\r\n      if (currentPath.startsWith(path)) {\r\n        const sectionKey = section as keyof SellerNotificationCounts;\r\n        // Solo marcar si hay notificaciones no leídas en esa sección\r\n        if (countsRef.current[sectionKey] > 0) {\r\n          markSectionAsReadRef.current(sectionKey);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }, [location.pathname]); // Removido counts y markSectionAsRead para evitar bucles\r\n\r\n  // Cargar notificaciones al montar el componente\r\n  useEffect(() => {\r\n    if (isAuthenticated && roleInfo.isSeller) {\r\n      fetchNotifications(1, false); // Cargar todas las notificaciones\r\n    }\r\n  }, [isAuthenticated, roleInfo.isSeller, fetchNotifications]);\r\n\r\n  const refetch = useCallback(async () => {\r\n    if (isAuthenticated && roleInfo.isSeller) {\r\n      await fetchNotifications(1, false);\r\n    }\r\n  }, [isAuthenticated, roleInfo.isSeller, fetchNotifications]);\r\n\r\n  return {\r\n    counts,\r\n    loading,\r\n    error,\r\n    refetch,\r\n    markSectionAsRead,\r\n  };\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport type { ReactNode } from \"react\";\r\nimport {Package, TrendingUp} from \"lucide-react\";\r\nimport {DashboardProvider} from \"../components/dashboard/DashboardContext\";\r\nimport BaseDashboardLayout from \"../components/dashboard/BaseDashboardLayout\";\r\nimport sellerGroups from \"./groups/sellerGroups\";\r\nimport { useSellerNotifications } from \"../hooks/useSellerNotifications\";\r\n\r\n/**\r\n * Componente de Layout para el Panel del Vendedor\r\n */\r\nconst SellerLayout: React.FC = () => {\r\n\t// Hook para obtener contadores de notificaciones\r\n\tconst { counts } = useSellerNotifications();\r\n\r\n\t// Títulos dinámicos basados en rutas\r\n\tconst pageTitles: {[key: string]: string} = {\r\n\t\t\"/seller/dashboard\": \"Dashboard\",\r\n\t\t\"/seller/products\": \"Productos\",\r\n\t\t\"/seller/products/create\": \"Añadir Nuevo Producto\",\r\n\t\t\"/seller/orders\": \"Pedidos\",\r\n\t\t\"/seller/ratings\": \"Valoraciones y Reseñas\",\r\n\t\t\"/seller/messages\": \"Mensajes\",\r\n\t\t\"/seller/profile\": \"Mi Perfil\",\r\n\t\t\"/seller/settings\": \"Configuración\",\r\n\t\t\"/seller/shipping\": \"Envíos\",\r\n\t\t\"/seller/earnings\": \"Ganancias\",\r\n\t};\r\n\r\n\t// Título del sidebar\r\n\tconst sidebarTitle = {\r\n\t\ttitle: \"Portal del Vendedor\",\r\n\t\ticon: <Package className=\"w-7 h-7 text-primary-400\" />,\r\n\t};\r\n\r\n\t// Grupos del sidebar con contadores dinámicos\r\n\tconst dynamicSellerGroups = useMemo(() => {\r\n\t\treturn sellerGroups.map(group => ({\r\n\t\t\t...group,\r\n\t\t\tlinks: group.links.map(link => {\r\n\t\t\t\tlet notificationCount = 0;\r\n\t\t\t\t\r\n\t\t\t\t// Asignar contadores según la ruta\r\n\t\t\t\tswitch (link.path) {\r\n\t\t\t\t\tcase \"/seller/orders\":\r\n\t\t\t\t\t\tnotificationCount = counts.orders;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"/seller/shipping\":\r\n\t\t\t\t\t\tnotificationCount = counts.shipping;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"/seller/ratings\":\r\n\t\t\t\t\t\tnotificationCount = counts.ratings;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"/seller/messages\":\r\n\t\t\t\t\t\tnotificationCount = counts.messages;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tnotificationCount = (link as any).notificationCount || 0;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn {\r\n\t\t\t\t...link,\r\n\t\t\t\tnotificationCount,\r\n\t\t\t\t isNotificated: notificationCount > 0\r\n\t\t\t};\r\n\t\t\t})\r\n\t\t}));\r\n\t}, [counts]);\r\n\r\n\t// Componente de analytics rápidos para mostrar después del header\r\n\tconst SellerQuickStats = (): ReactNode => {\r\n\t\t// Simulamos leer datos de pendingActions del localStorage (en una app real vendría de un context o API)\r\n\t\tconst pendingOrders = parseInt(\r\n\t\t\tlocalStorage.getItem(\"sellerPendingOrders\") || \"0\"\r\n\t\t);\r\n\r\n\t\t// Solo mostrar si hay ventas recientes o hay pedidos pendientes\r\n\t\tif (pendingOrders === 0) return null;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"bg-gradient-to-r from-primary-50 to-blue-50 px-4 py-3 border-b border-primary-100\">\r\n\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t<TrendingUp className=\"h-5 w-5 text-primary-500 mr-2\" />\r\n\t\t\t\t\t<span className=\"text-sm text-primary-700\">\r\n\t\t\t\t\t\tTienes <strong>{pendingOrders}</strong> pedido\r\n\t\t\t\t\t\t{pendingOrders !== 1 ? \"s\" : \"\"} pendiente\r\n\t\t\t\t\t\t{pendingOrders !== 1 ? \"s\" : \"\"} por procesar. ¡Revísalos pronto!\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<DashboardProvider initialType=\"seller\" initialPageTitles={pageTitles}>\r\n\t\t\t<BaseDashboardLayout\r\n\t\t\t\tsidebarGroups={dynamicSellerGroups}\r\n\t\t\t\tsidebarTitle={sidebarTitle}\r\n\t\t\t\theaderExtras={<SellerQuickStats />}\r\n\t\t\t/>\r\n\t\t</DashboardProvider>\r\n\t);\r\n};\r\n\r\nexport default SellerLayout;\r\n"],"names":["sellerGroups","jsx","BarChart2","Package","ShoppingBag","Truck","Star","MessageSquare","DollarSign","User","SECTION_PATHS","NOTIFICATION_TYPE_TO_SECTION","useSellerNotifications","isAuthenticated","roleInfo","useAuth","location","useLocation","notifications","loading","error","fetchNotifications","markAsRead","useNotifications","counts","useMemo","sectionCounts","notification","section","markSectionAsRead","useCallback","sectionNotifications","countsRef","useRef","markSectionAsReadRef","useEffect","currentPath","path","sectionKey","refetch","SellerLayout","pageTitles","sidebarTitle","dynamicSellerGroups","group","link","notificationCount","SellerQuickStats","pendingOrders","jsxs","TrendingUp","DashboardProvider","BaseDashboardLayout"],"mappings":"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"}