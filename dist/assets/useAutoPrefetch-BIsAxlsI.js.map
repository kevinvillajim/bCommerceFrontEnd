{"version":3,"file":"useAutoPrefetch-BIsAxlsI.js","sources":["../../src/presentation/hooks/useAutoPrefetch.ts"],"sourcesContent":["import {useEffect, useCallback, useRef} from \"react\";\r\nimport PrefetchService from \"../../infrastructure/services/PrefetchService\";\r\n\r\n/**\r\n * Hook para prefetch autom√°tico inteligente\r\n * Se integra con PrefetchService para optimizar cargas de datos\r\n */\r\n\r\ninterface AutoPrefetchOptions {\r\n\tenabled?: boolean;\r\n\tdelay?: number; // ms antes de ejecutar prefetch\r\n\tprefetchImages?: boolean;\r\n\tonPrefetchStart?: () => void;\r\n\tonPrefetchComplete?: () => void;\r\n\tonPrefetchError?: (error: Error) => void;\r\n}\r\n\r\ninterface PrefetchTask {\r\n\tname: string;\r\n\texecute: () => Promise<void>;\r\n\tpriority: number; // 1 = alta, 2 = media, 3 = baja\r\n\tcondition?: () => boolean; // condici√≥n para ejecutar\r\n}\r\n\r\nexport const useAutoPrefetch = (options: AutoPrefetchOptions = {}) => {\r\n\tconst {\r\n\t\tenabled = true,\r\n\t\tdelay = 1000,\r\n\t\tonPrefetchStart,\r\n\t\tonPrefetchComplete,\r\n\t\tonPrefetchError,\r\n\t} = options;\r\n\r\n\tconst prefetchExecutedRef = useRef(false);\r\n\tconst timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n\t/**\r\n\t * Verifica si ya se ejecut√≥ prefetch en esta sesi√≥n\r\n\t */\r\n\tconst shouldExecutePrefetch = useCallback((): boolean => {\r\n\t\tif (!enabled) return false;\r\n\t\tif (prefetchExecutedRef.current) return false;\r\n\r\n\t\t// Verificar sessionStorage para evitar prefetch duplicado\r\n\t\tconst sessionFlag = sessionStorage.getItem(\"autoprefetch_executed\");\r\n\t\treturn sessionFlag !== \"true\";\r\n\t}, [enabled]);\r\n\r\n\t/**\r\n\t * Marca prefetch como ejecutado\r\n\t */\r\n\tconst markPrefetchExecuted = useCallback(() => {\r\n\t\tprefetchExecutedRef.current = true;\r\n\t\tsessionStorage.setItem(\"autoprefetch_executed\", \"true\");\r\n\t}, []);\r\n\r\n\t/**\r\n\t * Ejecuta prefetch con prioridades\r\n\t */\r\n\tconst executePrefetchTasks = useCallback(async (): Promise<void> => {\r\n\t\tif (!shouldExecutePrefetch()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tonPrefetchStart?.();\r\n\r\n\t\t\t// Definir tareas de prefetch por prioridad\r\n\t\t\tconst tasks: PrefetchTask[] = [\r\n\t\t\t\t// PRIORIDAD ALTA (1) - Datos cr√≠ticos\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"categories\",\r\n\t\t\t\t\texecute: () => PrefetchService.prefetchCategories(),\r\n\t\t\t\t\tpriority: 1,\r\n\t\t\t\t\tcondition: () => true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"featured_products\",\r\n\t\t\t\t\texecute: () => PrefetchService.prefetchFeaturedProducts(8),\r\n\t\t\t\t\tpriority: 1,\r\n\t\t\t\t\tcondition: () => true,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// PRIORIDAD MEDIA (2) - Datos importantes\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"category_1_products\",\r\n\t\t\t\t\texecute: () => PrefetchService.prefetchCategoryProducts(1, 6),\r\n\t\t\t\t\tpriority: 2,\r\n\t\t\t\t\tcondition: () => true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"category_2_products\",\r\n\t\t\t\t\texecute: () => PrefetchService.prefetchCategoryProducts(2, 6),\r\n\t\t\t\t\tpriority: 2,\r\n\t\t\t\t\tcondition: () => true,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// PRIORIDAD BAJA (3) - Datos opcionales\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"category_3_products\",\r\n\t\t\t\t\texecute: () => PrefetchService.prefetchCategoryProducts(3, 4),\r\n\t\t\t\t\tpriority: 3,\r\n\t\t\t\t\tcondition: () => Math.random() > 0.3, // Solo 70% de las veces\r\n\t\t\t\t},\r\n\t\t\t];\r\n\r\n\t\t\t// Ejecutar tareas por prioridad\r\n\t\t\tconst sortedTasks = tasks\r\n\t\t\t\t.filter((task) => !task.condition || task.condition())\r\n\t\t\t\t.sort((a, b) => a.priority - b.priority);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"üöÄ Iniciando prefetch autom√°tico con\",\r\n\t\t\t\tsortedTasks.length,\r\n\t\t\t\t\"tareas\"\r\n\t\t\t);\r\n\r\n\t\t\t// Ejecutar tareas de prioridad alta inmediatamente\r\n\t\t\tconst highPriorityTasks = sortedTasks.filter(\r\n\t\t\t\t(task) => task.priority === 1\r\n\t\t\t);\r\n\t\t\tawait Promise.allSettled(\r\n\t\t\t\thighPriorityTasks.map((task) => {\r\n\t\t\t\t\tconsole.log(`‚ö° Ejecutando tarea de alta prioridad: ${task.name}`);\r\n\t\t\t\t\treturn task.execute();\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\t// Ejecutar tareas de prioridad media con peque√±o delay\r\n\t\t\tconst mediumPriorityTasks = sortedTasks.filter(\r\n\t\t\t\t(task) => task.priority === 2\r\n\t\t\t);\r\n\t\t\tif (mediumPriorityTasks.length > 0) {\r\n\t\t\t\tsetTimeout(async () => {\r\n\t\t\t\t\tawait Promise.allSettled(\r\n\t\t\t\t\t\tmediumPriorityTasks.map((task) => {\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t`üì¶ Ejecutando tarea de prioridad media: ${task.name}`\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\treturn task.execute();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}, 500);\r\n\t\t\t}\r\n\r\n\t\t\t// Ejecutar tareas de prioridad baja con delay mayor\r\n\t\t\tconst lowPriorityTasks = sortedTasks.filter(\r\n\t\t\t\t(task) => task.priority === 3\r\n\t\t\t);\r\n\t\t\tif (lowPriorityTasks.length > 0) {\r\n\t\t\t\tsetTimeout(async () => {\r\n\t\t\t\t\tawait Promise.allSettled(\r\n\t\t\t\t\t\tlowPriorityTasks.map((task) => {\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t`üêå Ejecutando tarea de prioridad baja: ${task.name}`\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\treturn task.execute();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}, 2000);\r\n\t\t\t}\r\n\r\n\t\t\tmarkPrefetchExecuted();\r\n\t\t\tonPrefetchComplete?.();\r\n\t\t\tconsole.log(\"‚úÖ Prefetch autom√°tico completado\");\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"‚ùå Error en prefetch autom√°tico:\", error);\r\n\t\t\tonPrefetchError?.(\r\n\t\t\t\terror instanceof Error ? error : new Error(\"Unknown prefetch error\")\r\n\t\t\t);\r\n\t\t}\r\n\t}, [\r\n\t\tshouldExecutePrefetch,\r\n\t\tonPrefetchStart,\r\n\t\tonPrefetchComplete,\r\n\t\tonPrefetchError,\r\n\t\tmarkPrefetchExecuted,\r\n\t]);\r\n\r\n\t/**\r\n\t * Prefetch espec√≠fico para productos relacionados\r\n\t */\r\n\tconst prefetchRelatedProducts = useCallback(\r\n\t\tasync (productId: number): Promise<void> => {\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`üîó Prefetching productos relacionados para producto ${productId}`\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Simular prefetch de productos relacionados\r\n\t\t\t\t// En una implementaci√≥n real, esto llamar√≠a a una API espec√≠fica\r\n\t\t\t\tconst categoryIds = [1, 2, 3]; // IDs de categor√≠as populares\r\n\t\t\t\tconst randomCategoryId =\r\n\t\t\t\t\tcategoryIds[Math.floor(Math.random() * categoryIds.length)];\r\n\r\n\t\t\t\tawait PrefetchService.prefetchCategoryProducts(randomCategoryId, 4);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error prefetching related products:\", error);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\t/**\r\n\t * Prefetch espec√≠fico para p√°gina de carrito\r\n\t */\r\n\tconst prefetchCartPageData = useCallback(async (): Promise<void> => {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"üõí Prefetching datos para p√°gina de carrito\");\r\n\r\n\t\t\t// Precargar productos destacados que podr√≠an aparecer en \"recomendados\"\r\n\t\t\tawait PrefetchService.prefetchFeaturedProducts(4);\r\n\r\n\t\t\t// Precargar categor√≠as para navegaci√≥n\r\n\t\t\tawait PrefetchService.prefetchCategories();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error prefetching cart page data:\", error);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t/**\r\n\t * Prefetch espec√≠fico para p√°gina de favoritos\r\n\t */\r\n\tconst prefetchFavoritesPageData = useCallback(async (): Promise<void> => {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"‚ù§Ô∏è Prefetching datos para p√°gina de favoritos\");\r\n\r\n\t\t\t// Precargar productos destacados para recomendaciones\r\n\t\t\tawait PrefetchService.prefetchFeaturedProducts(6);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error prefetching favorites page data:\", error);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t/**\r\n\t * Limpia timeouts al desmontar\r\n\t */\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tif (timeoutRef.current) {\r\n\t\t\t\tclearTimeout(timeoutRef.current);\r\n\t\t\t\ttimeoutRef.current = null;\r\n\t\t\t}\r\n\t\t};\r\n\t}, []);\r\n\r\n\t/**\r\n\t * Ejecuta prefetch inicial con delay\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (enabled && shouldExecutePrefetch()) {\r\n\t\t\ttimeoutRef.current = setTimeout(() => {\r\n\t\t\t\texecutePrefetchTasks();\r\n\t\t\t}, delay);\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tif (timeoutRef.current) {\r\n\t\t\t\tclearTimeout(timeoutRef.current);\r\n\t\t\t\ttimeoutRef.current = null;\r\n\t\t\t}\r\n\t\t};\r\n\t}, [enabled, shouldExecutePrefetch, executePrefetchTasks, delay]);\r\n\r\n\t/**\r\n\t * Fuerza ejecuci√≥n de prefetch\r\n\t */\r\n\tconst forcePrefetch = useCallback(async (): Promise<void> => {\r\n\t\tprefetchExecutedRef.current = false;\r\n\t\tsessionStorage.removeItem(\"autoprefetch_executed\");\r\n\t\tawait executePrefetchTasks();\r\n\t}, [executePrefetchTasks]);\r\n\r\n\t/**\r\n\t * Resetea el estado de prefetch\r\n\t */\r\n\tconst resetPrefetchState = useCallback((): void => {\r\n\t\tprefetchExecutedRef.current = false;\r\n\t\tsessionStorage.removeItem(\"autoprefetch_executed\");\r\n\t}, []);\r\n\r\n\t/**\r\n\t * Obtiene estad√≠sticas de prefetch\r\n\t */\r\n\tconst getPrefetchStats = useCallback(() => {\r\n\t\treturn {\r\n\t\t\texecuted: prefetchExecutedRef.current,\r\n\t\t\tsessionFlag: sessionStorage.getItem(\"autoprefetch_executed\") === \"true\",\r\n\t\t\tenabled,\r\n\t\t};\r\n\t}, [enabled]);\r\n\r\n\treturn {\r\n\t\t// Estados\r\n\t\tisEnabled: enabled,\r\n\t\tisPrefetchExecuted: prefetchExecutedRef.current,\r\n\r\n\t\t// Funciones espec√≠ficas\r\n\t\tprefetchRelatedProducts,\r\n\t\tprefetchCartPageData,\r\n\t\tprefetchFavoritesPageData,\r\n\r\n\t\t// Control manual\r\n\t\tforcePrefetch,\r\n\t\tresetPrefetchState,\r\n\t\tgetPrefetchStats,\r\n\t};\r\n};\r\n"],"names":["useAutoPrefetch","options","enabled","delay","onPrefetchStart","onPrefetchComplete","onPrefetchError","prefetchExecutedRef","useRef","timeoutRef","shouldExecutePrefetch","useCallback","markPrefetchExecuted","executePrefetchTasks","sortedTasks","PrefetchService","task","a","b","highPriorityTasks","mediumPriorityTasks","lowPriorityTasks","error","prefetchRelatedProducts","productId","categoryIds","randomCategoryId","prefetchCartPageData","prefetchFavoritesPageData","useEffect","forcePrefetch","resetPrefetchState","getPrefetchStats"],"mappings":"uFAwBO,MAAMA,EAAkB,CAACC,EAA+B,KAAO,CAC/D,KAAA,CACL,QAAAC,EAAU,GACV,MAAAC,EAAQ,IACR,gBAAAC,EACA,mBAAAC,EACA,gBAAAC,CAAA,EACGL,EAEEM,EAAsBC,SAAO,EAAK,EAClCC,EAAaD,SAA8B,IAAI,EAK/CE,EAAwBC,EAAAA,YAAY,IACrC,CAACT,GACDK,EAAoB,QAAgB,GAGpB,eAAe,QAAQ,uBAAuB,IAC3C,OACrB,CAACL,CAAO,CAAC,EAKNU,EAAuBD,EAAAA,YAAY,IAAM,CAC9CJ,EAAoB,QAAU,GACf,eAAA,QAAQ,wBAAyB,MAAM,CACvD,EAAG,EAAE,EAKCM,EAAuBF,EAAAA,YAAY,SAA2B,CAC/D,GAACD,IAID,GAAA,CACeN,IAAA,EA0ClB,MAAMU,EAvCwB,CAE7B,CACC,KAAM,aACN,QAAS,IAAMC,EAAgB,mBAAmB,EAClD,SAAU,EACV,UAAW,IAAM,EAClB,EACA,CACC,KAAM,oBACN,QAAS,IAAMA,EAAgB,yBAAyB,CAAC,EACzD,SAAU,EACV,UAAW,IAAM,EAClB,EAGA,CACC,KAAM,sBACN,QAAS,IAAMA,EAAgB,yBAAyB,EAAG,CAAC,EAC5D,SAAU,EACV,UAAW,IAAM,EAClB,EACA,CACC,KAAM,sBACN,QAAS,IAAMA,EAAgB,yBAAyB,EAAG,CAAC,EAC5D,SAAU,EACV,UAAW,IAAM,EAClB,EAGA,CACC,KAAM,sBACN,QAAS,IAAMA,EAAgB,yBAAyB,EAAG,CAAC,EAC5D,SAAU,EACV,UAAW,IAAM,KAAK,SAAW,EAAA,CAEnC,EAIE,OAAQC,GAAS,CAACA,EAAK,WAAaA,EAAK,WAAW,EACpD,KAAK,CAACC,EAAGC,IAAMD,EAAE,SAAWC,EAAE,QAAQ,EAEhC,QAAA,IACP,uCACAJ,EAAY,OACZ,QACD,EAGA,MAAMK,EAAoBL,EAAY,OACpCE,GAASA,EAAK,WAAa,CAC7B,EACA,MAAM,QAAQ,WACbG,EAAkB,IAAKH,IACtB,QAAQ,IAAI,yCAAyCA,EAAK,IAAI,EAAE,EACzDA,EAAK,QAAQ,EACpB,CACF,EAGA,MAAMI,EAAsBN,EAAY,OACtCE,GAASA,EAAK,WAAa,CAC7B,EACII,EAAoB,OAAS,GAChC,WAAW,SAAY,CACtB,MAAM,QAAQ,WACbA,EAAoB,IAAKJ,IAChB,QAAA,IACP,2CAA2CA,EAAK,IAAI,EACrD,EACOA,EAAK,QAAQ,EACpB,CACF,GACE,GAAG,EAIP,MAAMK,EAAmBP,EAAY,OACnCE,GAASA,EAAK,WAAa,CAC7B,EACIK,EAAiB,OAAS,GAC7B,WAAW,SAAY,CACtB,MAAM,QAAQ,WACbA,EAAiB,IAAKL,IACb,QAAA,IACP,0CAA0CA,EAAK,IAAI,EACpD,EACOA,EAAK,QAAQ,EACpB,CACF,GACE,GAAI,EAGaJ,EAAA,EACAP,IAAA,EACrB,QAAQ,IAAI,kCAAkC,QACtCiB,EAAO,CACP,QAAA,MAAM,kCAAmCA,CAAK,EACtDhB,IACCgB,aAAiB,MAAQA,EAAQ,IAAI,MAAM,wBAAwB,CACpE,CAAA,CACD,EACE,CACFZ,EACAN,EACAC,EACAC,EACAM,CAAA,CACA,EAKKW,EAA0BZ,EAAA,YAC/B,MAAOa,GAAqC,CACvC,GAAA,CACK,QAAA,IACP,uDAAuDA,CAAS,EACjE,EAIA,MAAMC,EAAc,CAAC,EAAG,EAAG,CAAC,EACtBC,EACLD,EAAY,KAAK,MAAM,KAAK,OAAO,EAAIA,EAAY,MAAM,CAAC,EAErD,MAAAV,EAAgB,yBAAyBW,EAAkB,CAAC,QAC1DJ,EAAO,CACP,QAAA,MAAM,sCAAuCA,CAAK,CAAA,CAE5D,EACA,CAAA,CACD,EAKMK,EAAuBhB,EAAAA,YAAY,SAA2B,CAC/D,GAAA,CACH,QAAQ,IAAI,6CAA6C,EAGnD,MAAAI,EAAgB,yBAAyB,CAAC,EAGhD,MAAMA,EAAgB,mBAAmB,QACjCO,EAAO,CACP,QAAA,MAAM,oCAAqCA,CAAK,CAAA,CAE1D,EAAG,EAAE,EAKCM,EAA4BjB,EAAAA,YAAY,SAA2B,CACpE,GAAA,CACH,QAAQ,IAAI,+CAA+C,EAGrD,MAAAI,EAAgB,yBAAyB,CAAC,QACxCO,EAAO,CACP,QAAA,MAAM,yCAA0CA,CAAK,CAAA,CAE/D,EAAG,EAAE,EAKLO,EAAAA,UAAU,IACF,IAAM,CACRpB,EAAW,UACd,aAAaA,EAAW,OAAO,EAC/BA,EAAW,QAAU,KAEvB,EACE,EAAE,EAKLoB,EAAAA,UAAU,KACL3B,GAAWQ,MACHD,EAAA,QAAU,WAAW,IAAM,CAChBI,EAAA,GACnBV,CAAK,GAGF,IAAM,CACRM,EAAW,UACd,aAAaA,EAAW,OAAO,EAC/BA,EAAW,QAAU,KAEvB,GACE,CAACP,EAASQ,EAAuBG,EAAsBV,CAAK,CAAC,EAK1D,MAAA2B,EAAgBnB,EAAAA,YAAY,SAA2B,CAC5DJ,EAAoB,QAAU,GAC9B,eAAe,WAAW,uBAAuB,EACjD,MAAMM,EAAqB,CAAA,EACzB,CAACA,CAAoB,CAAC,EAKnBkB,EAAqBpB,EAAAA,YAAY,IAAY,CAClDJ,EAAoB,QAAU,GAC9B,eAAe,WAAW,uBAAuB,CAClD,EAAG,EAAE,EAKCyB,EAAmBrB,EAAAA,YAAY,KAC7B,CACN,SAAUJ,EAAoB,QAC9B,YAAa,eAAe,QAAQ,uBAAuB,IAAM,OACjE,QAAAL,CACD,GACE,CAACA,CAAO,CAAC,EAEL,MAAA,CAEN,UAAWA,EACX,mBAAoBK,EAAoB,QAGxC,wBAAAgB,EACA,qBAAAI,EACA,0BAAAC,EAGA,cAAAE,EACA,mBAAAC,EACA,iBAAAC,CACD,CACD"}