{"version":3,"file":"BaseDashboardLayout-Dw1ZI7dp.js","sources":["../../src/presentation/components/dashboard/DashboardContext.tsx","../../src/presentation/components/dashboard/SideBar.tsx","../../src/presentation/components/dashboard/DashboardHeader.tsx","../../src/presentation/components/dashboard/DashboardFooter.tsx","../../src/presentation/components/dashboard/BaseDashboardLayout.tsx"],"sourcesContent":["import React, {\r\n\tcreateContext,\r\n\tuseState,\r\n\tuseContext,\r\n\tuseEffect,\r\n} from \"react\";\r\nimport type { ReactNode } from \"react\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport type {Notification, PendingActions, DashboardType} from \"./index\";\r\n\r\ninterface DashboardContextProps {\r\n\t// Estado del sidebar\r\n\tisSidebarOpen: boolean;\r\n\ttoggleSidebar: () => void;\r\n\r\n\t// Estado de notificaciones\r\n\tnotifications: Notification[];\r\n\tunreadNotificationsCount: number;\r\n\taddNotification: (notification: Omit<Notification, \"id\">) => void;\r\n\tmarkAllNotificationsAsRead: () => void;\r\n\tmarkNotificationAsRead: (id: string) => void;\r\n\r\n\t// Acciones pendientes\r\n\tpendingActions: PendingActions;\r\n\tsetPendingAction: (key: string, value: number) => void;\r\n\tincrementPendingAction: (key: string) => void;\r\n\tdecrementPendingAction: (key: string) => void;\r\n\r\n\t// Tipo de dashboard actual\r\n\tdashboardType: DashboardType;\r\n\r\n\t// Título dinámico de la página actual\r\n\tcurrentPageTitle: string;\r\n\tsetPageTitle: (path: string, title: string) => void;\r\n}\r\n\r\n// Crear el contexto\r\nconst DashboardContext = createContext<DashboardContextProps | undefined>(\r\n\tundefined\r\n);\r\n\r\n// Props para el proveedor\r\ninterface DashboardProviderProps {\r\n\tchildren: ReactNode;\r\n\tinitialType: DashboardType;\r\n\tinitialPageTitles?: Record<string, string>;\r\n}\r\n\r\n// Generador de ID único para notificaciones\r\nconst generateId = (): string => {\r\n\treturn Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n};\r\n\r\n/**\r\n * Proveedor del contexto del Dashboard\r\n */\r\nexport const DashboardProvider: React.FC<DashboardProviderProps> = ({\r\n\tchildren,\r\n\tinitialType,\r\n\tinitialPageTitles = {},\r\n}) => {\r\n\t// Estado del sidebar\r\n\tconst [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n\r\n\t// Estado de notificaciones\r\n\tconst [notifications, setNotifications] = useState<Notification[]>([]);\r\n\tconst [unreadNotificationsCount, setUnreadNotificationsCount] = useState(0);\r\n\r\n\t// Acciones pendientes\r\n\tconst [pendingActions, setPendingActions] = useState<PendingActions>({});\r\n\r\n\t// Títulos de página\r\n\tconst [pageTitles, setPageTitles] =\r\n\t\tuseState<Record<string, string>>(initialPageTitles);\r\n\r\n\t// Tipo de dashboard\r\n\tconst [dashboardType] = useState<DashboardType>(initialType);\r\n\r\n\t// Current pathname para determinar el título actual\r\n\tconst location = useLocation();\r\n\r\n\t// Calcular el título actual basado en la ruta\r\n\tconst getCurrentPageTitle = (): string => {\r\n\t\tconst {pathname} = location;\r\n\r\n\t\t// Buscar coincidencias exactas primero\r\n\t\tif (pageTitles[pathname]) {\r\n\t\t\treturn pageTitles[pathname];\r\n\t\t}\r\n\r\n\t\t// Buscar coincidencias parciales\r\n\t\tfor (const [path, title] of Object.entries(pageTitles)) {\r\n\t\t\tif (pathname.includes(path)) {\r\n\t\t\t\treturn title;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Título por defecto según el tipo de dashboard\r\n\t\tswitch (dashboardType) {\r\n\t\t\tcase \"admin\":\r\n\t\t\t\treturn \"Panel de Administración\";\r\n\t\t\tcase \"seller\":\r\n\t\t\t\treturn \"Portal del Vendedor\";\r\n\t\t\tcase \"customer\":\r\n\t\t\t\treturn \"Mi Cuenta\";\r\n\t\t\tdefault:\r\n\t\t\t\treturn \"Dashboard\";\r\n\t\t}\r\n\t};\r\n\r\n\t// Actualizar el contador de notificaciones no leídas\r\n\tuseEffect(() => {\r\n\t\tconst count = notifications.filter(\r\n\t\t\t(notification) => !notification.read\r\n\t\t).length;\r\n\t\tsetUnreadNotificationsCount(count);\r\n\t}, [notifications]);\r\n\r\n\t// Utilidades y funciones para modificar estados\r\n\tconst toggleSidebar = () => setIsSidebarOpen((prev) => !prev);\r\n\r\n\tconst addNotification = (notification: Omit<Notification, \"id\">) => {\r\n\t\tconst newNotification: Notification = {\r\n\t\t\t...notification,\r\n\t\t\tid: generateId(),\r\n\t\t};\r\n\t\tsetNotifications((prev) => [newNotification, ...prev]);\r\n\t};\r\n\r\n\tconst markAllNotificationsAsRead = () => {\r\n\t\tsetNotifications((prev) =>\r\n\t\t\tprev.map((notification) => ({...notification, read: true}))\r\n\t\t);\r\n\t};\r\n\r\n\tconst markNotificationAsRead = (id: string) => {\r\n\t\tsetNotifications((prev) =>\r\n\t\t\tprev.map((notification) =>\r\n\t\t\t\tnotification.id === id ? {...notification, read: true} : notification\r\n\t\t\t)\r\n\t\t);\r\n\t};\r\n\r\n\tconst setPendingAction = (key: string, value: number) => {\r\n\t\tsetPendingActions((prev) => ({...prev, [key]: value}));\r\n\t};\r\n\r\n\tconst incrementPendingAction = (key: string) => {\r\n\t\tsetPendingActions((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\t[key]: (prev[key] || 0) + 1,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst decrementPendingAction = (key: string) => {\r\n\t\tsetPendingActions((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\t[key]: Math.max(0, (prev[key] || 0) - 1),\r\n\t\t}));\r\n\t};\r\n\r\n\tconst setPageTitle = (path: string, title: string) => {\r\n\t\tsetPageTitles((prev) => ({...prev, [path]: title}));\r\n\t};\r\n\r\n\t// Valor del contexto\r\n\tconst value: DashboardContextProps = {\r\n\t\tisSidebarOpen,\r\n\t\ttoggleSidebar,\r\n\t\tnotifications,\r\n\t\tunreadNotificationsCount,\r\n\t\taddNotification,\r\n\t\tmarkAllNotificationsAsRead,\r\n\t\tmarkNotificationAsRead,\r\n\t\tpendingActions,\r\n\t\tsetPendingAction,\r\n\t\tincrementPendingAction,\r\n\t\tdecrementPendingAction,\r\n\t\tdashboardType,\r\n\t\tcurrentPageTitle: getCurrentPageTitle(),\r\n\t\tsetPageTitle,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<DashboardContext.Provider value={value}>\r\n\t\t\t{children}\r\n\t\t</DashboardContext.Provider>\r\n\t);\r\n};\r\n\r\n/**\r\n * Hook para usar el contexto del Dashboard\r\n */\r\nexport const useDashboard = () => {\r\n\tconst context = useContext(DashboardContext);\r\n\r\n\tif (context === undefined) {\r\n\t\tthrow new Error(\r\n\t\t\t\"useDashboard debe ser usado dentro de un DashboardProvider\"\r\n\t\t);\r\n\t}\r\n\r\n\treturn context;\r\n};\r\n\r\nexport default DashboardContext;\r\n","import React from \"react\";\r\nimport type { ReactNode } from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {X} from \"lucide-react\";\r\n\r\ninterface SidebarLinkProps {\r\n\tpath: string;\r\n\tlabel: string;\r\n\ticon?: ReactNode;\r\n\tisNotificated?: boolean;\r\n\tnotificationCount?: number;\r\n}\r\n\r\ninterface SidebarGroupProps {\r\n\ttitle: string;\r\n\tlinks: SidebarLinkProps[];\r\n}\r\n\r\ninterface SidebarTitleProps {\r\n\ttitle: string;\r\n\ticon: ReactNode;\r\n}\r\n\r\ninterface SidebarProps {\r\n\t/**\r\n\t * Grupos de enlaces para el sidebar\r\n\t */\r\n\tgroups: SidebarGroupProps[];\r\n\r\n\t/**\r\n\t * Título e icono del sidebar\r\n\t */\r\n\ttitle: SidebarTitleProps;\r\n\r\n\t/**\r\n\t * Estado de apertura del sidebar (para móvil)\r\n\t */\r\n\tisOpen?: boolean;\r\n\r\n\t/**\r\n\t * Función para cambiar el estado de apertura del sidebar\r\n\t */\r\n\ttoggleSidebar?: () => void;\r\n}\r\n\r\n/**\r\n * Componente de enlace individual para el sidebar\r\n */\r\nconst SidebarLink: React.FC<SidebarLinkProps> = ({\r\n\tpath,\r\n\tlabel,\r\n\ticon,\r\n\tisNotificated,\r\n\tnotificationCount,\r\n}) => {\r\n\treturn (\r\n\t\t<NavLink\r\n\t\t\tto={path}\r\n\t\t\tclassName={({isActive}) =>\r\n\t\t\t\t`flex items-center px-4 py-2 mt-2 text-sm transition-colors duration-200 rounded-lg ${\r\n\t\t\t\t\tisActive\r\n\t\t\t\t\t\t? \"bg-primary-100 text-primary-700\"\r\n\t\t\t\t\t\t: \"text-gray-600 hover:bg-gray-200\"\r\n\t\t\t\t}`\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{icon}\r\n\t\t\t<span className=\"mx-1\">{label}</span>\r\n\t\t\t{isNotificated && notificationCount && notificationCount > 0 && (\r\n\t\t\t\t<span className=\"ml-auto inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-red-100 bg-red-500 rounded-full\">\r\n\t\t\t\t\t{notificationCount}\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t</NavLink>\r\n\t);\r\n};\r\n\r\n/**\r\n * Componente de barra lateral para dashboards\r\n */\r\nconst Sidebar: React.FC<SidebarProps> = ({\r\n\tgroups,\r\n\ttitle,\r\n\tisOpen = true,\r\n\ttoggleSidebar = () => {},\r\n}) => {\r\n\r\n\treturn (\r\n\t\t<aside\r\n\t\t\tclassName={`bg-white fixed md:static inset-y-0 left-0 z-30 w-64 transition-transform duration-300 transform ${\r\n\t\t\t\tisOpen ? \"translate-x-0\" : \"-translate-x-full\"\r\n\t\t\t} md:translate-x-0 overflow-y-auto`}\r\n\t\t>\r\n\t\t\t{/* Header del Sidebar */}\r\n\t\t\t<div className=\"flex items-center justify-between px-4 py-3 border-b border-gray-200\">\r\n\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t{title.icon}\r\n\t\t\t\t\t<h2 className=\"text-lg font-semibold text-gray-900 ml-2\">\r\n\t\t\t\t\t\t{title.title}\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={toggleSidebar}\r\n\t\t\t\t\tclassName=\"p-1 rounded-md text-gray-500 md:hidden hover:text-gray-900 hover:bg-gray-100\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<X size={20} />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Contenido del Sidebar */}\r\n\t\t\t<div className=\"p-4\">\r\n\t\t\t\t{groups.map((group, index) => (\r\n\t\t\t\t\t<div key={index} className=\"mb-6\">\r\n\t\t\t\t\t\t<h3 className=\"px-4 text-xs font-semibold text-gray-500 uppercase tracking-wider\">\r\n\t\t\t\t\t\t\t{group.title}\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<div className=\"mt-2\">\r\n\t\t\t\t\t\t\t{group.links.map((link, linkIndex) => (\r\n\t\t\t\t\t\t\t\t<SidebarLink key={linkIndex} {...link} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</aside>\r\n\t);\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, {useState, useEffect, useContext} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n\tUser,\r\n\tSettings,\r\n\tBell,\r\n\tMenu,\r\n\tChevronDown,\r\n\tLogOut,\r\n\tAlertTriangle,\r\n} from \"lucide-react\";\r\nimport {AuthContext} from \"../../contexts/AuthContext\";\r\nimport ThemeToggle from \"../common/ThemeToggle\";\r\nimport {useDashboard} from \"./DashboardContext\";\r\n\r\n/**\r\n * Tipos de notificaciones para mostrar en el panel\r\n */\r\nexport interface Notification {\r\n\tid: string;\r\n\ttitle: string;\r\n\tdescription: string;\r\n\ttime: string;\r\n\tread: boolean;\r\n\ttype?: \"default\" | \"warning\" | \"error\" | \"success\";\r\n}\r\n\r\n/**\r\n * Tipos de acciones pendientes para mostrar en la parte superior\r\n */\r\nexport interface PendingActions {\r\n\t[key: string]: number;\r\n}\r\n\r\ninterface DashboardHeaderProps {\r\n\ttoggleSidebar: () => void;\r\n\tisAdmin?: boolean;\r\n\tunreadNotifications?: number;\r\n\tnotifications?: Notification[];\r\n\tpendingActions?: PendingActions;\r\n\tonReadAllNotifications?: () => void;\r\n\tvisibleInMobile?: boolean;\r\n}\r\n\r\n/**\r\n * Componente Header reutilizable para dashboards\r\n */\r\nconst DashboardHeader: React.FC<DashboardHeaderProps> = ({\r\n\ttoggleSidebar,\r\n\tisAdmin = false,\r\n\tunreadNotifications = 0,\r\n\tnotifications = [],\r\n\tpendingActions = {},\r\n\tonReadAllNotifications = () => {},\r\n\tvisibleInMobile = true,\r\n}) => {\r\n\tconst [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);\r\n\tconst [isNotificationsOpen, setIsNotificationsOpen] = useState(false);\r\n\tconst {user, logout} = useContext(AuthContext);\r\n\tconst {currentPageTitle} = useDashboard();\r\n\r\n\t// Calcular total de acciones pendientes\r\n\tconst totalPendingActions = Object.values(pendingActions).reduce(\r\n\t\t(total, value) => total + (value || 0),\r\n\t\t0\r\n\t);\r\n\r\n\tconst toggleProfileMenu = () => {\r\n\t\tsetIsProfileMenuOpen(!isProfileMenuOpen);\r\n\t\tif (isNotificationsOpen) setIsNotificationsOpen(false);\r\n\t};\r\n\r\n\tconst toggleNotifications = () => {\r\n\t\tsetIsNotificationsOpen(!isNotificationsOpen);\r\n\t\tif (isProfileMenuOpen) setIsProfileMenuOpen(false);\r\n\t};\r\n\r\n\t// Obtener la inicial del nombre del usuario para el avatar\r\n\tconst getInitial = () => {\r\n\t\treturn user?.name?.charAt(0).toUpperCase() || (isAdmin ? \"A\" : \"U\");\r\n\t};\r\n\r\n\t// Cerrar menús al hacer clic fuera\r\n\tuseEffect(() => {\r\n\t\tconst handleClickOutside = (event: MouseEvent) => {\r\n\t\t\tconst target = event.target as Element;\r\n\r\n\t\t\tif (\r\n\t\t\t\t!target.closest(\".profile-menu\") &&\r\n\t\t\t\t!target.closest(\".profile-button\")\r\n\t\t\t) {\r\n\t\t\t\tsetIsProfileMenuOpen(false);\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t!target.closest(\".notifications-menu\") &&\r\n\t\t\t\t!target.closest(\".notifications-button\")\r\n\t\t\t) {\r\n\t\t\t\tsetIsNotificationsOpen(false);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\r\n\t\t};\r\n\t}, []);\r\n\r\n\t// Obtener el color del avatar basado en el rol\r\n\tconst getAvatarColor = () => {\r\n\t\treturn isAdmin\r\n\t\t\t? \"bg-red-100 text-red-600\"\r\n\t\t\t: \"bg-primary-100 text-primary-600\";\r\n\t};\r\n\r\n\treturn (\r\n\t\t<header className=\"bg-white shadow-sm z-20\">\r\n\t\t\t<div className=\"flex items-center justify-between px-4 py-3\">\r\n\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t{visibleInMobile && (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"md:hidden text-gray-600 focus:outline-none mr-3\"\r\n\t\t\t\t\t\t\tonClick={toggleSidebar}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Menu size={24} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{/* Indicador de acciones pendientes */}\r\n\t\t\t\t\t{totalPendingActions > 0 && (\r\n\t\t\t\t\t\t<div className=\"flex items-center mr-4\">\r\n\t\t\t\t\t\t\t<span className=\"bg-red-500 text-white text-sm font-medium rounded-md px-2 py-1 flex items-center\">\r\n\t\t\t\t\t\t\t\t<AlertTriangle size={16} className=\"mr-1\" />\r\n\t\t\t\t\t\t\t\t{totalPendingActions} acción\r\n\t\t\t\t\t\t\t\t{totalPendingActions === 1 ? \"\" : \"es\"} pendiente\r\n\t\t\t\t\t\t\t\t{totalPendingActions === 1 ? \"\" : \"s\"}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<h1 className=\"text-lg font-medium text-gray-800\">\r\n\t\t\t\t\t\t{currentPageTitle}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"flex items-center space-x-4\">\r\n\t\t\t\t\t{/* Theme toggle */}\r\n\t\t\t\t\t<ThemeToggle />\r\n\r\n\t\t\t\t\t{/* Visit store - Solo para administradores */}\r\n\t\t\t\t\t{isAdmin && (\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\thref=\"/\"\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\tclassName=\"text-gray-600 hover:text-gray-900 hidden md:block\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className=\"text-sm\">Visitar Tienda</span>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{/* Notifications */}\r\n\t\t\t\t\t<div className=\"relative\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"notifications-button text-gray-600 hover:text-gray-900 p-1 rounded-full relative\"\r\n\t\t\t\t\t\t\tonClick={toggleNotifications}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Bell size={20} />\r\n\t\t\t\t\t\t\t{unreadNotifications > 0 && (\r\n\t\t\t\t\t\t\t\t<span className=\"absolute top-0 right-0 transform translate-x-1/2 -translate-y-1/2 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\r\n\t\t\t\t\t\t\t\t\t{unreadNotifications > 9 ? \"9+\" : unreadNotifications}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t{/* Dropdown de notificaciones */}\r\n\t\t\t\t\t\t{isNotificationsOpen && (\r\n\t\t\t\t\t\t\t<div className=\"notifications-menu absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg py-2 z-30 border border-gray-200\">\r\n\t\t\t\t\t\t\t\t<div className=\"px-4 py-2 border-b border-gray-200 flex justify-between items-center\">\r\n\t\t\t\t\t\t\t\t\t<h3 className=\"text-sm font-semibold text-gray-800\">\r\n\t\t\t\t\t\t\t\t\t\tNotificaciones\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t{unreadNotifications > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-xs text-primary-600 hover:underline\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={onReadAllNotifications}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tMarcar todas como leídas\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"max-h-96 overflow-y-auto\">\r\n\t\t\t\t\t\t\t\t\t{notifications.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\tnotifications.map((notification) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={notification.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`px-4 py-3 hover:bg-gray-50 ${\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t!notification.read && notification.type === \"warning\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"border-l-4 border-red-500\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: !notification.read\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"border-l-4 border-primary-500\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm text-gray-800 font-medium\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{notification.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-xs text-gray-500\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{notification.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-xs text-gray-400 mt-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{notification.time}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"px-4 py-3 text-center text-gray-500\">\r\n\t\t\t\t\t\t\t\t\t\t\tNo hay notificaciones para mostrar\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"px-4 py-2 border-t border-gray-200\">\r\n\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\t\t\t\t\tisAdmin ? \"/admin/notifications\" : \"/seller/notifications\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-sm text-primary-600 hover:underline block text-center\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tVer todas las notificaciones\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* User Profile */}\r\n\t\t\t\t\t<div className=\"relative\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"profile-button flex items-center space-x-2 text-gray-800 focus:outline-none\"\r\n\t\t\t\t\t\t\tonClick={toggleProfileMenu}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={`h-8 w-8 rounded-full ${getAvatarColor()} flex items-center justify-center font-medium`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{getInitial()}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span className=\"hidden md:block font-medium\">\r\n\t\t\t\t\t\t\t\t{user?.name || (isAdmin ? \"Admin\" : \"Usuario\")}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<ChevronDown size={18} className=\"hidden md:block\" />\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t{/* User Dropdown Menu */}\r\n\t\t\t\t\t\t{isProfileMenuOpen && (\r\n\t\t\t\t\t\t\t<div className=\"profile-menu absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-30 border border-gray-200\">\r\n\t\t\t\t\t\t\t\t<div className=\"px-4 py-3 border-b border-gray-200\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-gray-800\">\r\n\t\t\t\t\t\t\t\t\t\t{user?.name || (isAdmin ? \"Admin\" : \"Usuario\")}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-xs text-gray-500 truncate\">\r\n\t\t\t\t\t\t\t\t\t\t{user?.email ||\r\n\t\t\t\t\t\t\t\t\t\t\t(isAdmin ? \"admin@ejemplo.com\" : \"usuario@ejemplo.com\")}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tto={isAdmin ? \"/admin/profile\" : \"/seller/profile\"}\r\n\t\t\t\t\t\t\t\t\tclassName=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => setIsProfileMenuOpen(false)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<User size={16} className=\"mr-2\" />\r\n\t\t\t\t\t\t\t\t\t\tMi Perfil\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tto={isAdmin ? \"/admin/settings\" : \"/seller/settings\"}\r\n\t\t\t\t\t\t\t\t\tclassName=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => setIsProfileMenuOpen(false)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<Settings size={16} className=\"mr-2\" />\r\n\t\t\t\t\t\t\t\t\t\tConfiguración\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={logout}\r\n\t\t\t\t\t\t\t\t\tclassName=\"block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-gray-100\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<LogOut size={16} className=\"mr-2\" />\r\n\t\t\t\t\t\t\t\t\t\tCerrar Sesión\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default DashboardHeader;\r\n","import React from \"react\";\r\n\r\ninterface DashboardFooterProps {\r\n\t/**\r\n\t * Tipo de dashboard para mostrar texto apropiado\r\n\t */\r\n\ttype: \"admin\" | \"seller\" | \"customer\";\r\n\r\n\t/**\r\n\t * Año actual (por defecto usa el año actual)\r\n\t */\r\n\tyear?: number;\r\n\r\n\t/**\r\n\t * Texto adicional opcional\r\n\t */\r\n\tadditionalText?: string;\r\n}\r\n\r\n/**\r\n * Componente Footer reutilizable para todos los dashboards\r\n */\r\nconst DashboardFooter: React.FC<DashboardFooterProps> = ({\r\n\ttype = \"admin\",\r\n\tyear = new Date().getFullYear(),\r\n\tadditionalText,\r\n}) => {\r\n\t// Determinar el texto según el tipo de dashboard\r\n\tconst getFooterText = () => {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"admin\":\r\n\t\t\t\treturn \"Panel de Administración BCommerce\";\r\n\t\t\tcase \"seller\":\r\n\t\t\t\treturn \"Portal de Vendedor BCommerce\";\r\n\t\t\tcase \"customer\":\r\n\t\t\t\treturn \"BCommerce\";\r\n\t\t\tdefault:\r\n\t\t\t\treturn \"BCommerce\";\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<footer className=\"bg-white py-3 px-4 text-center text-sm text-gray-500 border-t border-gray-200\">\r\n\t\t\t<p>\r\n\t\t\t\t&copy; {year} {getFooterText()}.\r\n\t\t\t\t{additionalText\r\n\t\t\t\t\t? ` ${additionalText}`\r\n\t\t\t\t\t: \" Todos los derechos reservados.\"}\r\n\t\t\t</p>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default DashboardFooter;\r\n","import type { ReactNode } from \"react\";\r\nimport {Outlet} from \"react-router-dom\";\r\nimport Sidebar from \"../dashboard/SideBar\";\r\nimport DashboardHeader from \"./DashboardHeader\";\r\nimport DashboardFooter from \"./DashboardFooter\";\r\nimport {useDashboard} from \"./DashboardContext\";\r\n\r\ninterface GroupItem {\r\n\ttitle: string;\r\n\tlinks: {\r\n\t\tpath: string;\r\n\t\tlabel: string;\r\n\t\ticon?: React.ReactNode;\r\n\t\tisNotificated?: boolean;\r\n\t\tnotificationCount?: number;\r\n\t}[];\r\n}\r\n\r\ninterface Title {\r\n\ttitle: string;\r\n\ticon: React.ReactNode;\r\n}\r\n\r\ninterface BaseDashboardLayoutProps {\r\n\t/**\r\n\t * Grupos de menú para el sidebar\r\n\t */\r\n\tsidebarGroups: GroupItem[];\r\n\r\n\t/**\r\n\t * Título del sidebar\r\n\t */\r\n\tsidebarTitle: Title;\r\n\r\n\t/**\r\n\t * Componentes adicionales para insertar después del header\r\n\t */\r\n\theaderExtras?: ReactNode;\r\n\r\n\t/**\r\n\t * Componentes adicionales para insertar antes del footer\r\n\t */\r\n\tfooterExtras?: ReactNode;\r\n}\r\n\r\n/**\r\n * Layout base para implementar en AdminLayout, SellerLayout y otros layouts de dashboard\r\n */\r\nconst BaseDashboardLayout: React.FC<BaseDashboardLayoutProps> = ({\r\n\tsidebarGroups,\r\n\tsidebarTitle,\r\n\theaderExtras,\r\n\tfooterExtras,\r\n}) => {\r\n\tconst {\r\n\t\tisSidebarOpen,\r\n\t\ttoggleSidebar,\r\n\t\tnotifications,\r\n\t\tunreadNotificationsCount,\r\n\t\tmarkAllNotificationsAsRead,\r\n\t\tpendingActions,\r\n\t\tdashboardType,\r\n\t} = useDashboard();\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"flex h-screen bg-gray-100\">\r\n\t\t\t{/* Sidebar */}\r\n\t\t\t<Sidebar\r\n\t\t\t\tgroups={sidebarGroups}\r\n\t\t\t\ttitle={sidebarTitle}\r\n\t\t\t\tisOpen={isSidebarOpen}\r\n\t\t\t\ttoggleSidebar={toggleSidebar}\r\n\t\t\t/>\r\n\r\n\t\t\t{/* Main Content */}\r\n\t\t\t<div className=\"flex-1 flex flex-col overflow-hidden\">\r\n\t\t\t\t{/* Header */}\r\n\t\t\t\t<DashboardHeader\r\n\t\t\t\t\ttoggleSidebar={toggleSidebar}\r\n\t\t\t\t\tisAdmin={dashboardType === \"admin\"}\r\n\t\t\t\t\tunreadNotifications={unreadNotificationsCount}\r\n\t\t\t\t\tnotifications={notifications}\r\n\t\t\t\t\tpendingActions={pendingActions}\r\n\t\t\t\t\tonReadAllNotifications={markAllNotificationsAsRead}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* Header extras - componentes adicionales que pueden ser inyectados */}\r\n\t\t\t\t{headerExtras && headerExtras}\r\n\r\n\t\t\t\t{/* Main Content */}\r\n\t\t\t\t<main className=\"flex-1 overflow-y-auto bg-gray-50 p-4 md:p-6\">\r\n\t\t\t\t\t<Outlet />\r\n\t\t\t\t</main>\r\n\r\n\t\t\t\t{/* Footer extras - componentes adicionales que pueden ser inyectados */}\r\n\t\t\t\t{footerExtras && footerExtras}\r\n\r\n\t\t\t\t{/* Footer */}\r\n\t\t\t\t<DashboardFooter type={dashboardType} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BaseDashboardLayout;\r\n"],"names":["DashboardContext","createContext","generateId","DashboardProvider","children","initialType","initialPageTitles","isSidebarOpen","setIsSidebarOpen","useState","notifications","setNotifications","unreadNotificationsCount","setUnreadNotificationsCount","pendingActions","setPendingActions","pageTitles","setPageTitles","dashboardType","location","useLocation","getCurrentPageTitle","pathname","path","title","useEffect","count","notification","toggleSidebar","prev","addNotification","newNotification","markAllNotificationsAsRead","markNotificationAsRead","id","setPendingAction","key","value","incrementPendingAction","decrementPendingAction","setPageTitle","jsx","useDashboard","context","useContext","SidebarLink","label","icon","isNotificated","notificationCount","jsxs","NavLink","isActive","Sidebar","groups","isOpen","X","group","index","link","linkIndex","DashboardHeader","isAdmin","unreadNotifications","onReadAllNotifications","visibleInMobile","isProfileMenuOpen","setIsProfileMenuOpen","isNotificationsOpen","setIsNotificationsOpen","user","logout","AuthContext","currentPageTitle","totalPendingActions","total","toggleProfileMenu","toggleNotifications","getInitial","handleClickOutside","event","target","getAvatarColor","Menu","AlertTriangle","ThemeToggle","Bell","Link","ChevronDown","User","Settings","LogOut","DashboardFooter","type","year","additionalText","getFooterText","BaseDashboardLayout","sidebarGroups","sidebarTitle","headerExtras","footerExtras","Outlet"],"mappings":"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"}