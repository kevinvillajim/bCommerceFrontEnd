{"version":3,"file":"DashboardCardList-DWHZauSR.js","sources":["../../src/presentation/components/dashboard/DashboardCard.tsx","../../src/presentation/components/dashboard/DashboardCardList.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { ArrowUp, ArrowDown } from \"lucide-react\";\r\n\r\nexport interface DashboardCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  change: number;\r\n  text?: string | React.ReactNode;\r\n  icon: React.ElementType;\r\n  iconBgColor?: string;\r\n  iconColor?: string;\r\n}\r\n\r\nconst DashboardCard: React.FC<DashboardCardProps> = ({\r\n  title,\r\n  value,\r\n  change,\r\n  text = null,\r\n  icon: Icon,\r\n  iconBgColor = \"bg-gray-100\",\r\n  iconColor = \"text-gray-600\",\r\n}) => {\r\n  const isPositive = change > 0;\r\n  const changeColor = isPositive\r\n    ? \"text-green-600\"\r\n    : \"text-red-600\";\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm p-6 flex items-start justify-between\">\r\n      <div>\r\n        <p className=\"text-sm font-medium text-gray-500\">\r\n          {title}\r\n        </p>\r\n        <p className=\"text-2xl font-bold text-gray-900 mt-1\">\r\n          {value}\r\n        </p>\r\n        {change !== 0 && (\r\n          <div className={`flex items-center mt-2 ${changeColor}`}>\r\n            {isPositive ? <ArrowUp size={16} /> : <ArrowDown size={16} />}\r\n            <span className=\"ml-1 text-sm font-medium\">\r\n              {Math.abs(change)}% respecto al mes anterior\r\n            </span>\r\n          </div>\r\n        )}\r\n        {text && (\r\n          <span className=\"text-sm text-gray-500 mt-2\">\r\n            {text}\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div className={`p-3 rounded-lg ${iconBgColor}`}>\r\n        <Icon className={`w-6 h-6 ${iconColor}`} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardCard;\r\n","import React from \"react\";\r\nimport DashboardCard from \"./DashboardCard\";\r\nimport type { DashboardCardProps } from \"./DashboardCard\";\r\n\r\ninterface DashboardCardListProps {\r\n  cards: DashboardCardProps[];\r\n}\r\n\r\nconst DashboardCardList: React.FC<DashboardCardListProps> = ({ cards }) => {\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n      {cards.map((card, index) => (\r\n        <DashboardCard key={index} {...card} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardCardList;\r\n"],"names":["DashboardCard","title","value","change","text","Icon","iconBgColor","iconColor","isPositive","changeColor","jsxs","jsx","ArrowUp","ArrowDown","DashboardCardList","cards","card","index"],"mappings":"0FAaA,MAAMA,EAA8C,CAAC,CACnD,MAAAC,EACA,MAAAC,EACA,OAAAC,EACA,KAAAC,EAAO,KACP,KAAMC,EACN,YAAAC,EAAc,cACd,UAAAC,EAAY,eACd,IAAM,CACJ,MAAMC,EAAaL,EAAS,EACtBM,EAAcD,EAChB,iBACA,eAGF,OAAAE,EAAA,KAAC,MAAI,CAAA,UAAU,qEACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAA,IAAA,CAAE,UAAU,oCACV,SACHV,EAAA,EACCU,EAAA,IAAA,IAAA,CAAE,UAAU,wCACV,SACHT,EAAA,EACCC,IAAW,GACVO,EAAA,KAAC,OAAI,UAAW,0BAA0BD,CAAW,GAClD,SAAA,CAAaD,EAAAG,EAAA,IAACC,GAAQ,KAAM,EAAA,CAAI,EAAMD,EAAAA,IAAAE,EAAA,CAAU,KAAM,EAAI,CAAA,EAC3DH,EAAAA,KAAC,OAAK,CAAA,UAAU,2BACb,SAAA,CAAA,KAAK,IAAIP,CAAM,EAAE,4BAAA,CACpB,CAAA,CAAA,EACF,EAEDC,GACCO,EAAA,IAAC,OAAK,CAAA,UAAU,6BACb,SACHP,CAAA,CAAA,CAAA,EAEJ,EACCO,EAAA,IAAA,MAAA,CAAI,UAAW,kBAAkBL,CAAW,GAC3C,SAACK,EAAAA,IAAAN,EAAA,CAAK,UAAW,WAAWE,CAAS,EAAA,CAAI,CAC3C,CAAA,CAAA,EACF,CAEJ,EC/CMO,EAAsD,CAAC,CAAE,MAAAC,KAE1DJ,EAAAA,IAAA,MAAA,CAAI,UAAU,uDACZ,WAAM,IAAI,CAACK,EAAMC,UACfjB,EAA2B,CAAA,GAAGgB,GAAXC,CAAiB,CACtC,EACH"}