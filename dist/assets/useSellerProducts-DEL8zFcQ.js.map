{"version":3,"file":"useSellerProducts-DEL8zFcQ.js","sources":["../../src/presentation/hooks/useSellerProducts.ts"],"sourcesContent":["import {useState, useCallback, useEffect} from \"react\";\r\nimport {ProductService} from \"../../core/services/ProductService\";\r\nimport type {\r\n\tProduct,\r\n\tProductDetail,\r\n\tProductCreationData,\r\n\tProductUpdateData,\r\n} from \"../../core/domain/entities/Product\";\r\nimport {useAuth} from \"../contexts/AuthContext\";\r\nimport ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport { API_ENDPOINTS } from \"../../constants/apiEndpoints\";\r\nimport type {ExtendedProductFilterParams} from \"../types/ProductFilterParams\";\r\n\r\n// Instancia del servicio de productos\r\nconst productService = new ProductService();\r\n\r\n/**\r\n * Hook personalizado para gestionar los productos del vendedor\r\n */\r\nexport const useSellerProducts = () => {\r\n\tconst {user} = useAuth();\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\tconst [products, setProducts] = useState<Product[]>([]);\r\n\tconst [productDetail, setProductDetail] = useState<ProductDetail | null>(\r\n\t\tnull\r\n\t);\r\n\tconst [totalProducts, setTotalProducts] = useState<number>(0);\r\n\tconst [page, setPage] = useState<number>(1);\r\n\tconst [itemsPerPage, setItemsPerPage] = useState<number>(10);\r\n\r\n\t/**\r\n\t * Obtiene los productos del vendedor actual\r\n\t */\r\n\tconst fetchSellerProducts = useCallback(\r\n\t\tasync (page = 1, limit = 10) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(\"Usuario actual:\", user);\r\n\r\n\t\t\t\tconst sellerId = user?.id;\r\n\t\t\t\tif (!sellerId) {\r\n\t\t\t\t\tthrow new Error(\"No se pudo obtener el ID del vendedor\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Crear parámetros de filtro para productos del vendedor\r\n\t\t\t\tconst filterParams: ExtendedProductFilterParams = {\r\n\t\t\t\t\t// CORREGIDO: usar ExtendedProductFilterParams\r\n\t\t\t\t\tlimit,\r\n\t\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\t\tpage,\r\n\t\t\t\t\tsellerId: sellerId,\r\n\t\t\t\t\tsortBy: \"created_at\",\r\n\t\t\t\t\tsortDir: \"desc\",\r\n\t\t\t\t\tfeatured: undefined,\r\n\t\t\t\t\tstatus: undefined,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst response = await productService.getProducts(filterParams);\r\n\r\n\t\t\t\tif (response) {\r\n\t\t\t\t\tif (Array.isArray(response.data)) {\r\n\t\t\t\t\t\tsetProducts(response.data);\r\n\t\t\t\t\t\tsetTotalProducts(response.meta?.total || response.data.length);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetProducts([]);\r\n\t\t\t\t\t\tsetTotalProducts(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetProducts([]);\r\n\t\t\t\t\tsetTotalProducts(0);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al obtener productos del vendedor\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al obtener productos del vendedor:\", err);\r\n\t\t\t\tsetProducts([]);\r\n\t\t\t\tsetTotalProducts(0);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[user]\r\n\t);\r\n\r\n\t/**\r\n\t * Obtiene los detalles de un producto específico por su ID\r\n\t */\r\n\tconst fetchProductById = useCallback(\r\n\t\tasync (id: number): Promise<ProductDetail | null> => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst product = await productService.getProductById(id);\r\n\t\t\t\tsetProductDetail(product);\r\n\t\t\t\treturn product;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al obtener los detalles del producto\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al obtener detalles del producto:\", err);\r\n\t\t\t\treturn null;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\t/**\r\n\t * Crea un nuevo producto\r\n\t */\r\n\tconst createProduct = useCallback(\r\n\t\tasync (data: ProductCreationData) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Crear un FormData manualmente para asegurarnos de que todos los campos se envíen correctamente\r\n\t\t\t\tconst formData = new FormData();\r\n\r\n\t\t\t\t// Añadir campos básicos - asegurando explícitamente el tipo de cada uno\r\n\t\t\t\tformData.append(\"name\", data.name);\r\n\t\t\t\tformData.append(\"description\", data.description);\r\n\r\n\t\t\t\t// Añadir descripción corta si existe\r\n\t\t\t\tif (data.shortDescription) {\r\n\t\t\t\t\tformData.append(\"short_description\", data.shortDescription);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Convertir números a string explícitamente\r\n\t\t\t\tformData.append(\"price\", String(data.price));\r\n\t\t\t\tformData.append(\"stock\", String(data.stock));\r\n\r\n\t\t\t\t// Añadir dimensiones si existen\r\n\t\t\t\tif (data.weight !== undefined)\r\n\t\t\t\t\tformData.append(\"weight\", String(data.weight));\r\n\t\t\t\tif (data.width !== undefined)\r\n\t\t\t\t\tformData.append(\"width\", String(data.width));\r\n\t\t\t\tif (data.height !== undefined)\r\n\t\t\t\t\tformData.append(\"height\", String(data.height));\r\n\t\t\t\tif (data.depth !== undefined)\r\n\t\t\t\t\tformData.append(\"depth\", String(data.depth));\r\n\t\t\t\tif (data.dimensions) formData.append(\"dimensions\", data.dimensions);\r\n\r\n\t\t\t\t// Añadir categoría\r\n\t\t\t\tformData.append(\"category_id\", String(data.category_id));\r\n\r\n\t\t\t\t// Campos adicionales\r\n\t\t\t\tif (data.sku) formData.append(\"sku\", data.sku);\r\n\t\t\t\tif (data.status !== undefined) formData.append(\"status\", data.status);\r\n\t\t\t\tif (data.featured !== undefined)\r\n\t\t\t\t\tformData.append(\"featured\", String(data.featured));\r\n\t\t\t\tif (data.published !== undefined)\r\n\t\t\t\t\tformData.append(\"published\", String(data.published));\r\n\t\t\t\tif (data.discount_percentage !== undefined) {\r\n\t\t\t\t\tformData.append(\r\n\t\t\t\t\t\t\"discount_percentage\",\r\n\t\t\t\t\t\tString(data.discount_percentage)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Añadir arrays como JSON string\r\n\t\t\t\tif (data.colors) {\r\n\t\t\t\t\tconst colorsValue =\r\n\t\t\t\t\t\ttypeof data.colors === \"string\"\r\n\t\t\t\t\t\t\t? data.colors\r\n\t\t\t\t\t\t\t: JSON.stringify(data.colors);\r\n\t\t\t\t\tformData.append(\"colors\", colorsValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.sizes) {\r\n\t\t\t\t\tconst sizesValue =\r\n\t\t\t\t\t\ttypeof data.sizes === \"string\"\r\n\t\t\t\t\t\t\t? data.sizes\r\n\t\t\t\t\t\t\t: JSON.stringify(data.sizes);\r\n\t\t\t\t\tformData.append(\"sizes\", sizesValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.tags) {\r\n\t\t\t\t\tconst tagsValue =\r\n\t\t\t\t\t\ttypeof data.tags === \"string\"\r\n\t\t\t\t\t\t\t? data.tags\r\n\t\t\t\t\t\t\t: JSON.stringify(data.tags);\r\n\t\t\t\t\tformData.append(\"tags\", tagsValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Añadir atributos si existen\r\n\t\t\t\tif (data.attributes && Object.keys(data.attributes).length > 0) {\r\n\t\t\t\t\tformData.append(\"attributes\", JSON.stringify(data.attributes));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Añadir imágenes\r\n\t\t\t\tif (data.images && data.images.length > 0) {\r\n\t\t\t\t\tdata.images.forEach((file, index) => {\r\n\t\t\t\t\t\tformData.append(`images[${index}]`, file);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Enviar un log completo para depuración\r\n\t\t\t\tconsole.log(\"Enviando datos de producto para creación:\");\r\n\t\t\t\tfor (const [key, value] of formData.entries()) {\r\n\t\t\t\t\t// No loggear el contenido binario de las imágenes\r\n\t\t\t\t\tif (key.startsWith(\"images[\")) {\r\n\t\t\t\t\t\tconsole.log(`${key}: (archivo binario)`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(`${key}: ${value}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Realizar la petición directamente usando ApiClient para subir archivos\r\n\t\t\t\tconst response = await ApiClient.uploadFile(\r\n\t\t\t\t\tAPI_ENDPOINTS.PRODUCTS.CREATE,\r\n\t\t\t\t\tformData\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Verificar la respuesta y extraer el producto creado\r\n\t\t\t\tlet newProduct = null;\r\n\r\n\t\t\t\t// Determinar el producto basado en la estructura de la respuesta\r\n\t\t\t\tif (response) {\r\n\t\t\t\t\tif (typeof response === \"object\") {\r\n\t\t\t\t\t\tnewProduct = response;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Actualizar la lista de productos si se creó correctamente\r\n\t\t\t\tif (newProduct) {\r\n\t\t\t\t\tconsole.log(\"Producto creado exitosamente:\", newProduct);\r\n\t\t\t\t\tfetchSellerProducts(page, itemsPerPage);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t\"Respuesta de creación de producto no válida:\",\r\n\t\t\t\t\t\tresponse\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\"No se pudo crear el producto. La respuesta del servidor no es válida.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn newProduct;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? `Error al crear producto: ${err.message}`\r\n\t\t\t\t\t\t: \"Error desconocido al crear producto\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al crear producto:\", err);\r\n\t\t\t\treturn null;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchSellerProducts, page, itemsPerPage]\r\n\t);\r\n\r\n\t/**\r\n\t * Actualiza un producto existente\r\n\t */\r\n\tconst updateProduct = useCallback(\r\n\t\tasync (data: ProductUpdateData) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(\"Actualizando producto con datos:\", data);\r\n\t\t\t\t// Crear un FormData manualmente\r\n\t\t\t\tconst formData = new FormData();\r\n\r\n\t\t\t\t// Añadir campos básicos si existen\r\n\t\t\t\tif (data.name) formData.append(\"name\", data.name);\r\n\t\t\t\tif (data.description) formData.append(\"description\", data.description);\r\n\t\t\t\tif (data.shortDescription)\r\n\t\t\t\t\tformData.append(\"short_description\", data.shortDescription);\r\n\r\n\t\t\t\t// Convertir números a string explícitamente\r\n\t\t\t\tif (data.price !== undefined)\r\n\t\t\t\t\tformData.append(\"price\", String(data.price));\r\n\t\t\t\tif (data.stock !== undefined)\r\n\t\t\t\t\tformData.append(\"stock\", String(data.stock));\r\n\r\n\t\t\t\t// Añadir dimensiones si existen\r\n\t\t\t\tif (data.weight !== undefined)\r\n\t\t\t\t\tformData.append(\"weight\", String(data.weight));\r\n\t\t\t\tif (data.width !== undefined)\r\n\t\t\t\t\tformData.append(\"width\", String(data.width));\r\n\t\t\t\tif (data.height !== undefined)\r\n\t\t\t\t\tformData.append(\"height\", String(data.height));\r\n\t\t\t\tif (data.depth !== undefined)\r\n\t\t\t\t\tformData.append(\"depth\", String(data.depth));\r\n\t\t\t\tif (data.dimensions) formData.append(\"dimensions\", data.dimensions);\r\n\r\n\t\t\t\t// Añadir categoría si existe\r\n\t\t\t\tif (data.category_id)\r\n\t\t\t\t\tformData.append(\"category_id\", String(data.category_id));\r\n\r\n\t\t\t\t// Estado del producto y otros campos\r\n\t\t\t\tif (data.status) formData.append(\"status\", data.status);\r\n\t\t\t\tif (data.featured !== undefined)\r\n\t\t\t\t\tformData.append(\"featured\", String(data.featured));\r\n\t\t\t\tif (data.published !== undefined)\r\n\t\t\t\t\tformData.append(\"published\", String(data.published));\r\n\t\t\t\tif (data.discount_percentage !== undefined) {\r\n\t\t\t\t\tformData.append(\r\n\t\t\t\t\t\t\"discount_percentage\",\r\n\t\t\t\t\t\tString(data.discount_percentage)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Añadir arrays como JSON string\r\n\t\t\t\tif (data.colors) {\r\n\t\t\t\t\tconst colorsValue =\r\n\t\t\t\t\t\ttypeof data.colors === \"string\"\r\n\t\t\t\t\t\t\t? data.colors\r\n\t\t\t\t\t\t\t: JSON.stringify(data.colors);\r\n\t\t\t\t\tformData.append(\"colors\", colorsValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.sizes) {\r\n\t\t\t\t\tconst sizesValue =\r\n\t\t\t\t\t\ttypeof data.sizes === \"string\"\r\n\t\t\t\t\t\t\t? data.sizes\r\n\t\t\t\t\t\t\t: JSON.stringify(data.sizes);\r\n\t\t\t\t\tformData.append(\"sizes\", sizesValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.tags) {\r\n\t\t\t\t\tconst tagsValue =\r\n\t\t\t\t\t\ttypeof data.tags === \"string\"\r\n\t\t\t\t\t\t\t? data.tags\r\n\t\t\t\t\t\t\t: JSON.stringify(data.tags);\r\n\t\t\t\t\tformData.append(\"tags\", tagsValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Añadir atributos si existen\r\n\t\t\t\tif (data.attributes && Object.keys(data.attributes).length > 0) {\r\n\t\t\t\t\tformData.append(\"attributes\", JSON.stringify(data.attributes));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Opciones de manejo de imágenes\r\n\t\t\t\tif (data.replace_images !== undefined) {\r\n\t\t\t\t\tformData.append(\"replace_images\", String(data.replace_images));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.remove_images && data.remove_images.length > 0) {\r\n\t\t\t\t\tformData.append(\"remove_images\", JSON.stringify(data.remove_images));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Añadir imágenes si existen\r\n\t\t\t\tif (data.images && data.images.length > 0) {\r\n\t\t\t\t\tdata.images.forEach((file, index) => {\r\n\t\t\t\t\t\tformData.append(`images[${index}]`, file);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Realizar la petición directamente usando ApiClient\r\n\t\t\t\tconst response = await ApiClient.updateFile(\r\n\t\t\t\t\tAPI_ENDPOINTS.PRODUCTS.UPDATE(data.id),\r\n\t\t\t\t\tformData,\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Verificar la respuesta y extraer el producto actualizado\r\n\t\t\t\tlet updatedProduct = null;\r\n\r\n\t\t\t\t// Determinar el producto basado en la estructura de la respuesta\r\n\t\t\t\tif (response) {\r\n\t\t\t\t\tif (typeof response === \"object\") {\r\n\t\t\t\t\t\tupdatedProduct = response;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Actualizar la lista de productos si se actualizó correctamente\r\n\t\t\t\tif (updatedProduct) {\r\n\t\t\t\t\tfetchSellerProducts(page, itemsPerPage);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"No se pudo actualizar el producto\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn updatedProduct;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error ? err.message : \"Error al actualizar producto\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al actualizar producto:\", err);\r\n\t\t\t\treturn null;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchSellerProducts, page, itemsPerPage]\r\n\t);\r\n\r\n\t/**\r\n\t * Elimina un producto\r\n\t */\r\n\tconst deleteProduct = useCallback(\r\n\t\tasync (id: number) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Usamos el servicio existente para eliminar el producto\r\n\t\t\t\tconst result = await productService.deleteProduct(id);\r\n\r\n\t\t\t\t// Actualizar la lista de productos si se eliminó correctamente\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tfetchSellerProducts(page, itemsPerPage);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error ? err.message : \"Error al eliminar producto\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al eliminar producto:\", err);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchSellerProducts, page, itemsPerPage]\r\n\t);\r\n\r\n\t/**\r\n\t * Cambia el estado de un producto (active/inactive)\r\n\t */\r\n\tconst toggleProductStatus = useCallback(\r\n\t\tasync (id: number, currentStatus: string) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst newStatus = currentStatus === \"active\" ? \"inactive\" : \"active\";\r\n\r\n\t\t\t\t// Crear FormData con solo el campo status\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append(\"status\", newStatus);\r\n\r\n\t\t\t\t// Enviar la actualización directamente\r\n\t\t\t\tconst response = await ApiClient.uploadFile(\r\n\t\t\t\t\tAPI_ENDPOINTS.PRODUCTS.UPDATE(id),\r\n\t\t\t\t\tformData\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Actualizar la lista de productos si se actualizó correctamente\r\n\t\t\t\tif (response) {\r\n\t\t\t\t\tfetchSellerProducts(page, itemsPerPage);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"Error al cambiar estado del producto\");\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al cambiar estado del producto\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al cambiar estado del producto:\", err);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchSellerProducts, page, itemsPerPage]\r\n\t);\r\n\r\n\t// Cargar productos del vendedor al montar el componente o cuando cambie el usuario\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\tfetchSellerProducts(page, itemsPerPage);\r\n\t\t}\r\n\t}, [user, page, itemsPerPage, fetchSellerProducts]);\r\n\r\n\t// Cambiar página\r\n\tconst changePage = useCallback((newPage: number) => {\r\n\t\tsetPage(newPage);\r\n\t}, []);\r\n\r\n\t// Cambiar ítems por página\r\n\tconst changeItemsPerPage = useCallback((newItemsPerPage: number) => {\r\n\t\tsetItemsPerPage(newItemsPerPage);\r\n\t\tsetPage(1); // Resetear a la primera página\r\n\t}, []);\r\n\r\n\treturn {\r\n\t\tproducts,\r\n\t\tproductDetail,\r\n\t\ttotalProducts,\r\n\t\tloading,\r\n\t\terror,\r\n\t\tpage,\r\n\t\titemsPerPage,\r\n\t\tfetchSellerProducts,\r\n\t\tfetchProductById,\r\n\t\tcreateProduct,\r\n\t\tupdateProduct,\r\n\t\tdeleteProduct,\r\n\t\ttoggleProductStatus,\r\n\t\tchangePage,\r\n\t\tchangeItemsPerPage,\r\n\t};\r\n};\r\n\r\nexport default useSellerProducts;\r\n"],"names":["productService","ProductService","useSellerProducts","user","useAuth","loading","setLoading","useState","error","setError","products","setProducts","productDetail","setProductDetail","totalProducts","setTotalProducts","page","setPage","itemsPerPage","setItemsPerPage","fetchSellerProducts","useCallback","limit","sellerId","filterParams","response","err","errorMessage","fetchProductById","id","product","createProduct","data","formData","colorsValue","sizesValue","tagsValue","file","index","key","value","ApiClient","API_ENDPOINTS","newProduct","updateProduct","updatedProduct","deleteProduct","result","toggleProductStatus","currentStatus","newStatus","useEffect","changePage","newPage","changeItemsPerPage","newItemsPerPage"],"mappings":"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"}