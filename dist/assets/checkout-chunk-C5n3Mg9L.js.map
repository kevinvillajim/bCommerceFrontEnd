{"version":3,"file":"checkout-chunk-C5n3Mg9L.js","sources":["../../src/core/services/CartService.ts","../../src/presentation/contexts/CartContext.tsx","../../src/presentation/hooks/useCart.ts","../../src/presentation/services/ErrorHandlingService.ts","../../src/presentation/hooks/useErrorHandler.ts","../../src/utils/volumeDiscountCalculator.ts","../../src/utils/ecommerceCalculator.ts","../../src/infrastructure/services/CheckoutItemsService.ts","../../src/constants/calculationConfig.ts","../../src/core/services/CheckoutService.ts","../../src/presentation/components/checkout/CreditCardForm.tsx","../../src/infrastructure/services/DeunaService.ts","../../src/presentation/components/checkout/QRPaymentForm.tsx","../../src/presentation/components/checkout/AddressForm.tsx","../../src/presentation/components/checkout/TestCheckoutButton.tsx","../../src/core/services/DatafastService.ts","../../src/presentation/components/checkout/DatafastPaymentButtonProps.tsx","../../src/presentation/pages/CheckoutPage.tsx"],"sourcesContent":["import ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\nimport type {\r\n\tAddToCartRequest,\r\n\tShoppingCartResponse,\r\n} from \"../domain/entities/ShoppingCart\";\r\n\r\n/**\r\n * Servicio optimizado para gestionar las operaciones del carrito de compras\r\n * ✅ Eliminadas consultas adicionales para seller_id que causaban lentitud\r\n */\r\nexport class CartService {\r\n\t/**\r\n\t * Obtiene el carrito del usuario actual\r\n\t * ✅ SIN ENRIQUECIMIENTO COSTOSO - más rápido y eficiente\r\n\t */\r\n\tasync getCart(): Promise<ShoppingCartResponse> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"CartService: Obteniendo carrito del usuario\");\r\n\r\n\t\t\tconst response = await ApiClient.get<ShoppingCartResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.CART.GET\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"CartService: Respuesta del carrito:\", response);\r\n\r\n\t\t\t// ✅ RETORNAR DIRECTAMENTE SIN ENRIQUECIMIENTO\r\n\t\t\t// El header ya no depende de estos datos adicionales\r\n\t\t\t// Si se necesita seller_id, se puede hacer en componentes específicos bajo demanda\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"CartService: Error al obtener carrito:\", error);\r\n\r\n\t\t\t// Devolver un carrito vacío en caso de error\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"error\",\r\n\t\t\t\tmessage:\r\n\t\t\t\t\terror instanceof Error ? error.message : \"Error al obtener carrito\",\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\ttotal: 0,\r\n\t\t\t\t\titems: [],\r\n\t\t\t\t\titem_count: 0,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Añade un producto al carrito\r\n\t * @param request Datos del producto a añadir\r\n\t */\r\n\tasync addToCart(request: AddToCartRequest): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"CartService: Añadiendo producto al carrito:\", request);\r\n\r\n\t\t\t// Convertir formato del request para el backend\r\n\t\t\tconst apiRequest = {\r\n\t\t\t\tproduct_id: request.productId,\r\n\t\t\t\tquantity: request.quantity,\r\n\t\t\t\tattributes: request.attributes,\r\n\t\t\t};\r\n\r\n\t\t\tconst response = await ApiClient.post(\r\n\t\t\t\tAPI_ENDPOINTS.CART.ADD_ITEM,\r\n\t\t\t\tapiRequest\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"CartService: Producto añadido al carrito:\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"CartService: Error al añadir al carrito:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Elimina un producto del carrito\r\n\t * @param itemId ID del item a eliminar\r\n\t */\r\n\tasync removeFromCart(itemId: number): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(`CartService: Eliminando producto ${itemId} del carrito`);\r\n\r\n\t\t\tconst response = await ApiClient.delete(\r\n\t\t\t\tAPI_ENDPOINTS.CART.REMOVE_ITEM(itemId)\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`CartService: Producto ${itemId} eliminado del carrito:`,\r\n\t\t\t\tresponse\r\n\t\t\t);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`CartService: Error al eliminar producto ${itemId} del carrito:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Actualiza la cantidad de un producto en el carrito\r\n\t * @param itemId ID del item a actualizar\r\n\t * @param quantity Nueva cantidad\r\n\t */\r\n\tasync updateCartItem(itemId: number, quantity: number): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`CartService: Actualizando cantidad de producto ${itemId} a ${quantity}`\r\n\t\t\t);\r\n\r\n\t\t\tconst response = await ApiClient.put(\r\n\t\t\t\tAPI_ENDPOINTS.CART.UPDATE_ITEM(itemId),\r\n\t\t\t\t{quantity}\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`CartService: Cantidad actualizada para producto ${itemId}:`,\r\n\t\t\t\tresponse\r\n\t\t\t);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`CartService: Error al actualizar cantidad de producto ${itemId}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Vacía el carrito por completo\r\n\t */\r\n\tasync clearCart(): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"CartService: Vaciando carrito\");\r\n\r\n\t\t\tconst response = await ApiClient.post(API_ENDPOINTS.CART.EMPTY);\r\n\r\n\t\t\tconsole.log(\"CartService: Carrito vaciado:\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"CartService: Error al vaciar carrito:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Valida un código de descuento\r\n\t * @param code Código de descuento a validar\r\n\t */\r\n\tasync validateDiscountCode(code: string): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"CartService: Validando código de descuento:\", code);\r\n\r\n\t\t\tconst response = await ApiClient.post(API_ENDPOINTS.CART.DISCOUNT.VALIDATE, {\r\n\t\t\t\tcode\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(\"CartService: Código de descuento validado:\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"CartService: Error al validar código de descuento:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Aplica un código de descuento al carrito\r\n\t * @param code Código de descuento a aplicar\r\n\t */\r\n\tasync applyDiscountCode(code: string): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"CartService: Aplicando código de descuento:\", code);\r\n\r\n\t\t\tconst response = await ApiClient.post(API_ENDPOINTS.CART.DISCOUNT.APPLY, {\r\n\t\t\t\tcode\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(\"CartService: Código de descuento aplicado:\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"CartService: Error al aplicar código de descuento:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Remueve el código de descuento aplicado\r\n\t */\r\n\tasync removeDiscountCode(): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"CartService: Removiendo código de descuento\");\r\n\r\n\t\t\tconst response = await ApiClient.post(API_ENDPOINTS.CART.DISCOUNT.REMOVE);\r\n\r\n\t\t\tconsole.log(\"CartService: Código de descuento removido:\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"CartService: Error al remover código de descuento:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default CartService;","import React, {\r\n\tcreateContext,\r\n\tuseState,\r\n\tuseEffect,\r\n\tuseCallback,\r\n\tuseContext,\r\n\tuseRef,\r\n} from \"react\";\r\nimport type {ReactNode} from \"react\";\r\nimport type {\r\n\tShoppingCart,\r\n\tCartItem,\r\n\tAddToCartRequest,\r\n\tCartItemUpdateData,\r\n} from \"../../core/domain/entities/ShoppingCart\";\r\nimport type { Product } from \"../../core/domain/entities/Product\";\r\nimport {LocalStorageService} from \"../../infrastructure/services/LocalStorageService\";\r\nimport {AuthContext} from \"./AuthContext\";\r\nimport {CartService} from \"../../core/services/CartService\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport CacheService from \"../../infrastructure/services/CacheService\";\r\n\r\n// Tipos para las notificaciones del carrito\r\nexport enum NotificationType {\r\n\tSUCCESS = \"success\",\r\n\tERROR = \"error\",\r\n\tINFO = \"info\",\r\n\tWARNING = \"warning\",\r\n}\r\n\r\ninterface CartNotification {\r\n\tid: string;\r\n\ttype: NotificationType;\r\n\tmessage: string;\r\n}\r\n\r\n// ✅ NUEVO: Interfaz para manejar códigos de descuento\r\ninterface DiscountCode {\r\n\tcode: string;\r\n\tdiscount_percentage: number;\r\n\tdiscount_amount: number;\r\n\texpires_at: string;\r\n}\r\n\r\ninterface AppliedDiscount {\r\n\tdiscountCode: DiscountCode;\r\n\tappliedAt: Date;\r\n}\r\n\r\n// Define context interface\r\ninterface CartContextProps {\r\n\tcart: ShoppingCart | null;\r\n\tloading: boolean;\r\n\terror: string | null;\r\n\taddToCart: (request: AddToCartRequest) => Promise<boolean>;\r\n\tremoveFromCart: (itemId: number) => Promise<boolean>;\r\n\tupdateCartItem: (data: CartItemUpdateData) => Promise<boolean>;\r\n\tclearCart: () => Promise<boolean>;\r\n\tfetchCart: () => Promise<void>;\r\n\titemCount: number;\r\n\ttotalAmount: number;\r\n\t// Propiedades de notificación\r\n\tnotification: CartNotification | null;\r\n\tshowNotification: (type: NotificationType, message: string) => void;\r\n\thideNotification: () => void;\r\n\tcartItemCount: number;\r\n\t// ✅ NUEVAS: Propiedades de código de descuento\r\n\tappliedDiscount: AppliedDiscount | null;\r\n\tvalidateDiscountCode: (code: string) => Promise<{ success: boolean; message: string; data?: DiscountCode }>;\r\n\tapplyDiscountCode: (code: string) => Promise<{ success: boolean; message: string; cart?: ShoppingCart }>;\r\n\tremoveDiscountCode: () => Promise<{ success: boolean; message: string; cart?: ShoppingCart }>;\r\n}\r\n\r\n// Create context with default values\r\nexport const CartContext = createContext<CartContextProps>({\r\n\tcart: null,\r\n\tloading: false,\r\n\terror: null,\r\n\taddToCart: async () => false,\r\n\tremoveFromCart: async () => false,\r\n\tupdateCartItem: async () => false,\r\n\tclearCart: async () => false,\r\n\tfetchCart: async () => {},\r\n\titemCount: 0,\r\n\ttotalAmount: 0,\r\n\tnotification: null,\r\n\tshowNotification: () => {},\r\n\thideNotification: () => {},\r\n\tcartItemCount: 0,\r\n\t// ✅ NUEVOS: Valores por defecto para descuentos\r\n\tappliedDiscount: null,\r\n\tvalidateDiscountCode: async () => ({ success: false, message: \"Not implemented\" }),\r\n\tapplyDiscountCode: async () => ({ success: false, message: \"Not implemented\" }),\r\n\tremoveDiscountCode: async () => ({ success: false, message: \"Not implemented\" }),\r\n});\r\n\r\n// Storage service instance\r\nconst storageService = new LocalStorageService();\r\nconst cartService = new CartService();\r\n\r\n// Cache keys y tiempos\r\nconst CACHE_KEYS = {\r\n\tCART_USER: \"cart_user_data\",\r\n\tCART_GUEST: \"cart_guest_data\",\r\n};\r\n\r\nconst CACHE_TIMES = {\r\n\tCART: 3 * 60 * 1000, // 3 minutos\r\n};\r\n\r\n// Provider component\r\ninterface CartProviderProps {\r\n\tchildren: ReactNode;\r\n}\r\n\r\nexport const CartProvider: React.FC<CartProviderProps> = ({children}) => {\r\n\tconst [cart, setCart] = useState<ShoppingCart | null>(null);\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\tconst [itemCount, setItemCount] = useState<number>(0);\r\n\tconst [totalAmount, setTotalAmount] = useState<number>(0);\r\n\tconst [notification, setNotification] = useState<CartNotification | null>(\r\n\t\tnull\r\n\t);\r\n\t// ✅ NUEVO: Estado para descuentos\r\n\tconst [appliedDiscount, setAppliedDiscount] = useState<AppliedDiscount | null>(null);\r\n\r\n\tconst {isAuthenticated} = useContext(AuthContext);\r\n\r\n\t// Referencias para controlar el flujo\r\n\tconst isInitialized = useRef(false);\r\n\tconst lastCartString = useRef(\"\");\r\n\tconst isAuthenticatedRef = useRef(isAuthenticated);\r\n\tconst notificationTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\tconst fetchCartTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\tconst isFetchingRef = useRef(false);\r\n\tconst cartUpdateTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n\t// Actualizar el ref cuando cambia isAuthenticated\r\n\tuseEffect(() => {\r\n\t\tisAuthenticatedRef.current = isAuthenticated;\r\n\t}, [isAuthenticated]);\r\n\r\n\t// Función para mostrar una notificación\r\n\tconst showNotification = useCallback(\r\n\t\t(type: NotificationType, message: string) => {\r\n\t\t\tif (notificationTimeoutRef.current) {\r\n\t\t\t\tclearTimeout(notificationTimeoutRef.current);\r\n\t\t\t}\r\n\r\n\t\t\tsetNotification({\r\n\t\t\t\tid: Date.now().toString(),\r\n\t\t\t\ttype,\r\n\t\t\t\tmessage,\r\n\t\t\t});\r\n\r\n\t\t\tnotificationTimeoutRef.current = setTimeout(() => {\r\n\t\t\t\tsetNotification(null);\r\n\t\t\t\tnotificationTimeoutRef.current = null;\r\n\t\t\t}, 3000);\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\t// Función para ocultar manualmente la notificación\r\n\tconst hideNotification = useCallback(() => {\r\n\t\tif (notificationTimeoutRef.current) {\r\n\t\t\tclearTimeout(notificationTimeoutRef.current);\r\n\t\t\tnotificationTimeoutRef.current = null;\r\n\t\t}\r\n\t\tsetNotification(null);\r\n\t}, []);\r\n\r\n\t// Limpiar temporizadores al desmontar\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tif (notificationTimeoutRef.current) {\r\n\t\t\t\tclearTimeout(notificationTimeoutRef.current);\r\n\t\t\t}\r\n\t\t\tif (fetchCartTimeoutRef.current) {\r\n\t\t\t\tclearTimeout(fetchCartTimeoutRef.current);\r\n\t\t\t}\r\n\t\t\tif (cartUpdateTimeoutRef.current) {\r\n\t\t\t\tclearTimeout(cartUpdateTimeoutRef.current);\r\n\t\t\t}\r\n\t\t};\r\n\t}, []);\r\n\r\n\t// Invalidar cache relacionado con carrito\r\n\tconst invalidateCartCache = useCallback(() => {\r\n\t\tCacheService.removeItem(CACHE_KEYS.CART_USER);\r\n\t\tCacheService.removeItem(CACHE_KEYS.CART_GUEST);\r\n\t\tCacheService.removeItem(\"header_counters\");\r\n\t\tconsole.log(\"🗑️ Cart cache invalidated\");\r\n\t}, []);\r\n\r\n\t// Calcular el número total de elementos en el carrito (sumando cantidades)\r\n\tconst calculateTotalItems = useCallback((cartItems: CartItem[]): number => {\r\n\t\tif (!cartItems || cartItems.length === 0) return 0;\r\n\t\treturn cartItems.reduce((total, item) => total + item.quantity, 0);\r\n\t}, []);\r\n\r\n\t// ✅ FUNCIÓN SIMPLE PARA CARGAR EL CARRITO (como funcionaba antes)\r\n\tconst fetchCartFromAPI = useCallback(async () => {\r\n\t\tif (isFetchingRef.current) return null;\r\n\r\n\t\tisFetchingRef.current = true;\r\n\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\t// ✅ VERIFICAR CACHE PRIMERO\r\n\t\t\tconst cacheKey = isAuthenticatedRef.current\r\n\t\t\t\t? CACHE_KEYS.CART_USER\r\n\t\t\t\t: CACHE_KEYS.CART_GUEST;\r\n\t\t\tconst cachedCart = CacheService.getItem(cacheKey);\r\n\r\n\t\t\tif (cachedCart) {\r\n\t\t\t\tconsole.log(\"📦 Using cached cart data\");\r\n\t\t\t\tsetCart(cachedCart);\r\n\t\t\t\tsetItemCount(cachedCart.items ? cachedCart.items.length : 0);\r\n\t\t\t\tsetTotalAmount(cachedCart.total || 0);\r\n\t\t\t\tlastCartString.current = JSON.stringify(cachedCart);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tisFetchingRef.current = false;\r\n\t\t\t\treturn cachedCart;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"🌐 Fetching cart from API...\");\r\n\t\t\t// ✅ USAR EL CARTSERVICE SIMPLE ORIGINAL\r\n\t\t\tconst response = await cartService.getCart();\r\n\r\n\t\t\tif (response && response.status === \"success\" && response.data) {\r\n\t\t\t\t// ✅ CONVERTIR DATOS DE LA API AL FORMATO DEL ESTADO (simple)\r\n\t\t\t\tconst cartData: ShoppingCart = {\r\n\t\t\t\t\tid: response.data.id,\r\n\t\t\t\t\ttotal: response.data.total,\r\n\t\t\t\t\titems: response.data.items.map((item) => {\r\n\t\t\t\t\t\tconst product = item.product as Product || {} as Product;\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\t\tproductId: product.id || 0,\r\n\t\t\t\t\t\t\tquantity: item.quantity,\r\n\t\t\t\t\t\t\tprice: item.price,\r\n\t\t\t\t\t\t\tsubtotal: item.subtotal,\r\n\t\t\t\t\t\t\tattributes: item.attributes,\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// ✅ INCLUIR INFORMACIÓN DE DESCUENTOS SI VIENE DEL BACKEND\r\n\t\t\t\t\t\t\tfinal_price: item.final_price || item.price,\r\n\t\t\t\t\t\t\toriginal_price: item.original_price || item.price,\r\n\t\t\t\t\t\t\tvolume_discount_percentage: item.volume_discount_percentage || 0,\r\n\t\t\t\t\t\t\tvolume_savings: item.volume_savings || 0,\r\n\t\t\t\t\t\t\tdiscount_label: item.discount_label || undefined,\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tproduct: {\r\n\t\t\t\t\t\t\t\tid: product.id || 0,\r\n\t\t\t\t\t\t\t\tname: product.name || \"Producto sin nombre\",\r\n\t\t\t\t\t\t\t\tslug: product.slug,\r\n\t\t\t\t\t\t\t\tprice: product.price || 0,\r\n\t\t\t\t\t\t\t\tfinal_price: product.final_price ?? product.price ?? 0,\r\n\t\t\t\t\t\t\t\tdiscount_percentage: product.discount_percentage ?? 0,\r\n\t\t\t\t\t\t\t\trating: product.rating ?? 0,\r\n\t\t\t\t\t\t\t\trating_count: product.rating_count ?? 0,\r\n\t\t\t\t\t\t\t\timage: (product.main_image || product.image || (product.images && product.images.length > 0 ? (typeof product.images[0] === 'string' ? product.images[0] : product.images[0].original || product.images[0].medium || product.images[0].thumbnail) : undefined)),\r\n\t\t\t\t\t\t\t\tmain_image: (product.main_image || product.image || (product.images && product.images.length > 0 ? (typeof product.images[0] === 'string' ? product.images[0] : product.images[0].original || product.images[0].medium || product.images[0].thumbnail) : undefined)),\r\n\t\t\t\t\t\t\t\tstockAvailable: product.stock || 0,\r\n\t\t\t\t\t\t\t\tsellerId: product.sellerId || product.seller_id || (product.seller ? product.seller.id : undefined) || product.user_id,\r\n\t\t\t\t\t\t\t\tseller_id: product.seller_id || product.sellerId || (product.seller ? product.seller.id : undefined) || product.user_id,\r\n\t\t\t\t\t\t\t\tseller: product.seller,\r\n\t\t\t\t\t\t\t\tuser_id: product.user_id,\r\n\t\t\t\t\t\t\t\tstock: product.stock || 0,\r\n\t\t\t\t\t\t\t\tis_in_stock: product.is_in_stock ?? true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}),\r\n\t\t\t\t\titem_count: response.data.item_count || 0,\r\n\t\t\t\t\t\r\n\t\t\t\t\t// ✅ INCLUIR INFORMACIÓN DE DESCUENTOS A NIVEL DE CARRITO SI VIENE\r\n\t\t\t\t\tsubtotal: response.data.subtotal || response.data.total,\r\n\t\t\t\t\ttotal_volume_savings: response.data.total_volume_savings || 0,\r\n\t\t\t\t\tvolume_discounts_applied: response.data.volume_discounts_applied || false,\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// ✅ GUARDAR EN CACHE\r\n\t\t\t\tCacheService.setItem(cacheKey, cartData, CACHE_TIMES.CART);\r\n\r\n\t\t\t\t// Calcular la suma total de cantidades\r\n\t\t\t\tconst totalQuantities = calculateTotalItems(cartData.items);\r\n\t\t\t\tconst itemCountValue = response.data.item_count || totalQuantities;\r\n\r\n\t\t\t\tsetCart(cartData);\r\n\t\t\t\tsetItemCount(itemCountValue);\r\n\t\t\t\tsetTotalAmount(cartData.total);\r\n\t\t\t\tlastCartString.current = JSON.stringify(cartData);\r\n\r\n\t\t\t\tconsole.log(\"✅ Cart loaded successfully:\", {\r\n\t\t\t\t\titemCount: itemCountValue,\r\n\t\t\t\t\ttotal: cartData.total,\r\n\t\t\t\t\titems: cartData.items.length,\r\n\t\t\t\t\tvolume_discounts_applied: cartData.volume_discounts_applied\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn cartData;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(\"Formato de respuesta de carrito inválido\");\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al obtener carrito desde la API:\", error);\r\n\t\t\tsetError(\r\n\t\t\t\terror instanceof Error ? error.message : \"Error al obtener carrito\"\r\n\t\t\t);\r\n\r\n\t\t\t// Intentar usar caché local en caso de error\r\n\t\t\tconst localCart = storageService.getItem(appConfig.storage.cartKey);\r\n\t\t\tif (localCart) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst parsedCart =\r\n\t\t\t\t\t\ttypeof localCart === \"string\" ? JSON.parse(localCart) : localCart;\r\n\t\t\t\t\tsetCart(parsedCart);\r\n\t\t\t\t\tlastCartString.current = JSON.stringify(parsedCart);\r\n\t\t\t\t\tconst totalItems = calculateTotalItems(parsedCart.items || []);\r\n\t\t\t\t\tsetItemCount(totalItems);\r\n\t\t\t\t\tsetTotalAmount(parsedCart.total || 0);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error(\"Error al usar caché local del carrito:\", e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t\tisFetchingRef.current = false;\r\n\t\t}\r\n\t}, [calculateTotalItems]);\r\n\r\n\t// Cargar carrito (desde API o localStorage)\r\n\tconst fetchCart = useCallback(async () => {\r\n\t\tif (fetchCartTimeoutRef.current) {\r\n\t\t\tclearTimeout(fetchCartTimeoutRef.current);\r\n\t\t}\r\n\r\n\t\tfetchCartTimeoutRef.current = setTimeout(async () => {\r\n\t\t\tif (isAuthenticatedRef.current) {\r\n\t\t\t\tawait fetchCartFromAPI();\r\n\t\t\t} else {\r\n\t\t\t\t// Usuario no autenticado, usar carrito local\r\n\t\t\t\tconst localCart = storageService.getItem(appConfig.storage.cartKey);\r\n\t\t\t\tif (localCart) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst parsedCart =\r\n\t\t\t\t\t\t\ttypeof localCart === \"string\" ? JSON.parse(localCart) : localCart;\r\n\t\t\t\t\t\tsetCart(parsedCart);\r\n\t\t\t\t\t\tlastCartString.current = JSON.stringify(parsedCart);\r\n\t\t\t\t\t\tconst totalItems = calculateTotalItems(parsedCart.items || []);\r\n\t\t\t\t\t\tsetItemCount(totalItems);\r\n\t\t\t\t\t\tsetTotalAmount(parsedCart.total || 0);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.error(\"Error al parsear carrito del localStorage:\", e);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// No hay carrito local, crear uno vacío\r\n\t\t\t\t\tconst emptyCart: ShoppingCart = {\r\n\t\t\t\t\t\tid: 0,\r\n\t\t\t\t\t\titems: [],\r\n\t\t\t\t\t\ttotal: 0,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tsetCart(emptyCart);\r\n\t\t\t\t\tsetItemCount(0);\r\n\t\t\t\t\tsetTotalAmount(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfetchCartTimeoutRef.current = null;\r\n\t\t}, 100);\r\n\t}, [fetchCartFromAPI, calculateTotalItems]);\r\n\r\n\t// Initialize cart only when needed (not on mount)\r\n\tuseEffect(() => {\r\n\t\t// No auto-fetch on mount - only fetch when explicitly requested\r\n\t\tisInitialized.current = true;\r\n\t}, [isAuthenticated]);\r\n\r\n\t// Update derived states when cart changes\r\n\tuseEffect(() => {\r\n\t\tif (!cart) {\r\n\t\t\tsetItemCount(0);\r\n\t\t\tsetTotalAmount(0);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (cartUpdateTimeoutRef.current) {\r\n\t\t\tclearTimeout(cartUpdateTimeoutRef.current);\r\n\t\t}\r\n\r\n\t\tcartUpdateTimeoutRef.current = setTimeout(() => {\r\n\t\t\tconst totalItems = cart.items ? cart.items.length : 0;\r\n\r\n\t\t\tif (itemCount !== totalItems) {\r\n\t\t\t\tsetItemCount(totalItems);\r\n\t\t\t}\r\n\r\n\t\t\tif (totalAmount !== cart.total) {\r\n\t\t\t\tsetTotalAmount(cart.total);\r\n\t\t\t}\r\n\r\n\t\t\t// Sincronizar con localStorage para usuarios anónimos\r\n\t\t\tconst cartString = JSON.stringify(cart);\r\n\t\t\tif (\r\n\t\t\t\t!isAuthenticatedRef.current &&\r\n\t\t\t\tcartString !== lastCartString.current\r\n\t\t\t) {\r\n\t\t\t\tstorageService.setItem(appConfig.storage.cartKey, cartString);\r\n\t\t\t\tlastCartString.current = cartString;\r\n\t\t\t}\r\n\r\n\t\t\tcartUpdateTimeoutRef.current = null;\r\n\t\t}, 100);\r\n\t}, [cart, calculateTotalItems, itemCount, totalAmount]);\r\n\r\n\t// Add item to cart - versión local\r\n\tconst addToCartLocal = useCallback(\r\n\t\tasync (request: AddToCartRequest): Promise<boolean> => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!cart) return false;\r\n\r\n\t\t\t\tconst existingItemIndex = cart.items.findIndex(\r\n\t\t\t\t\t(item) => item.productId === request.productId\r\n\t\t\t\t);\r\n\r\n\t\t\t\tlet updatedCart: ShoppingCart;\r\n\r\n\t\t\t\tif (existingItemIndex >= 0) {\r\n\t\t\t\t\tconst updatedItems = [...cart.items];\r\n\t\t\t\t\tupdatedItems[existingItemIndex].quantity += request.quantity;\r\n\t\t\t\t\tupdatedItems[existingItemIndex].subtotal =\r\n\t\t\t\t\t\tupdatedItems[existingItemIndex].price *\r\n\t\t\t\t\t\tupdatedItems[existingItemIndex].quantity;\r\n\r\n\t\t\t\t\tconst newTotal = updatedItems.reduce(\r\n\t\t\t\t\t\t(sum, item) => sum + item.subtotal,\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tupdatedCart = {\r\n\t\t\t\t\t\t...cart,\r\n\t\t\t\t\t\titems: updatedItems,\r\n\t\t\t\t\t\ttotal: newTotal,\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst price = 0;\r\n\t\t\t\t\tconst newItem: CartItem = {\r\n\t\t\t\t\t\tid: Date.now(),\r\n\t\t\t\t\t\tproductId: request.productId,\r\n\t\t\t\t\t\tquantity: request.quantity,\r\n\t\t\t\t\t\tprice: price,\r\n\t\t\t\t\t\tsubtotal: price * request.quantity,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tconst newItems = [...cart.items, newItem];\r\n\t\t\t\t\tconst newTotal = newItems.reduce(\r\n\t\t\t\t\t\t(sum, item) => sum + item.subtotal,\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tupdatedCart = {\r\n\t\t\t\t\t\t...cart,\r\n\t\t\t\t\t\titems: newItems,\r\n\t\t\t\t\t\ttotal: newTotal,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCart(updatedCart);\r\n\t\t\t\tlastCartString.current = JSON.stringify(updatedCart);\r\n\t\t\t\treturn true;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al añadir producto al carrito:\", err);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[cart]\r\n\t);\r\n\r\n\t// Add item to cart\r\n\tconst addToCart = useCallback(\r\n\t\tasync (request: AddToCartRequest): Promise<boolean> => {\r\n\t\t\tif (!isAuthenticatedRef.current) {\r\n\t\t\t\tconst result = await addToCartLocal(request);\r\n\t\t\t\tawait fetchCart();\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst response = await cartService.addToCart(request);\r\n\t\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\t\tinvalidateCartCache();\r\n\t\t\t\t\tawait fetchCart();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error(response?.message || \"No se pudo agregar al carrito\");\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al agregar producto al carrito:\", err);\r\n\t\t\t\tsetError(\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al agregar producto al carrito\"\r\n\t\t\t\t);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[addToCartLocal, fetchCart, invalidateCartCache]\r\n\t);\r\n\r\n\t// Remove item from cart - versión local\r\n\tconst removeFromCartLocal = useCallback(\r\n\t\tasync (itemId: number): Promise<boolean> => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!cart) return false;\r\n\r\n\t\t\t\tconst updatedItems = cart.items.filter((item) => item.id !== itemId);\r\n\t\t\t\tconst newTotal = updatedItems.reduce(\r\n\t\t\t\t\t(sum, item) => sum + item.subtotal,\r\n\t\t\t\t\t0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst updatedCart = {\r\n\t\t\t\t\t...cart,\r\n\t\t\t\t\titems: updatedItems,\r\n\t\t\t\t\ttotal: newTotal,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsetCart(updatedCart);\r\n\t\t\t\tlastCartString.current = JSON.stringify(updatedCart);\r\n\t\t\t\treturn true;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al eliminar producto del carrito:\", err);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[cart]\r\n\t);\r\n\r\n\t// Remove item from cart\r\n\tconst removeFromCart = useCallback(\r\n\t\tasync (itemId: number): Promise<boolean> => {\r\n\t\t\tif (!isAuthenticatedRef.current) {\r\n\t\t\t\tconst result = await removeFromCartLocal(itemId);\r\n\t\t\t\tawait fetchCart();\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst response = await cartService.removeFromCart(itemId);\r\n\t\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\t\tinvalidateCartCache();\r\n\t\t\t\t\tawait fetchCart();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error(response?.message || \"No se pudo eliminar del carrito\");\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al eliminar producto del carrito:\", err);\r\n\t\t\t\tsetError(\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al eliminar producto del carrito\"\r\n\t\t\t\t);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[removeFromCartLocal, fetchCart, invalidateCartCache]\r\n\t);\r\n\r\n\t// Update cart item quantity - versión local\r\n\tconst updateCartItemLocal = useCallback(\r\n\t\tasync (data: CartItemUpdateData): Promise<boolean> => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!cart) return false;\r\n\r\n\t\t\t\tconst updatedItems = cart.items.map((item) => {\r\n\t\t\t\t\tif (item.id === data.itemId) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\tquantity: data.quantity,\r\n\t\t\t\t\t\t\tsubtotal: item.price * data.quantity,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst newTotal = updatedItems.reduce(\r\n\t\t\t\t\t(sum, item) => sum + item.subtotal,\r\n\t\t\t\t\t0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst updatedCart = {\r\n\t\t\t\t\t...cart,\r\n\t\t\t\t\titems: updatedItems,\r\n\t\t\t\t\ttotal: newTotal,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsetCart(updatedCart);\r\n\t\t\t\tlastCartString.current = JSON.stringify(updatedCart);\r\n\t\t\t\treturn true;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al actualizar producto del carrito:\", err);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[cart]\r\n\t);\r\n\r\n\t// Update cart item quantity\r\n\tconst updateCartItem = useCallback(\r\n\t\tasync (data: CartItemUpdateData): Promise<boolean> => {\r\n\t\t\tif (!isAuthenticatedRef.current) {\r\n\t\t\t\tconst result = await updateCartItemLocal(data);\r\n\t\t\t\tawait fetchCart();\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst response = await cartService.updateCartItem(\r\n\t\t\t\t\tdata.itemId,\r\n\t\t\t\t\tdata.quantity\r\n\t\t\t\t);\r\n\t\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\t\tinvalidateCartCache();\r\n\t\t\t\t\tawait fetchCart();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\tresponse?.message || \"No se pudo actualizar el carrito\"\r\n\t\t\t\t);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Error al actualizar producto del carrito:\", err);\r\n\t\t\t\tsetError(\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al actualizar producto del carrito\"\r\n\t\t\t\t);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[updateCartItemLocal, fetchCart, invalidateCartCache]\r\n\t);\r\n\r\n\t// Clear entire cart - versión local\r\n\tconst clearCartLocal = useCallback(async (): Promise<boolean> => {\r\n\t\ttry {\r\n\t\t\tif (!cart) return false;\r\n\r\n\t\t\tconst emptyCart = {\r\n\t\t\t\tid: cart.id,\r\n\t\t\t\titems: [],\r\n\t\t\t\ttotal: 0,\r\n\t\t\t};\r\n\r\n\t\t\tsetCart(emptyCart);\r\n\t\t\tlastCartString.current = JSON.stringify(emptyCart);\r\n\r\n\t\t\tstorageService.setItem(\r\n\t\t\t\tappConfig.storage.cartKey,\r\n\t\t\t\tJSON.stringify(emptyCart)\r\n\t\t\t);\r\n\t\t\treturn true;\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error al vaciar carrito:\", err);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}, [cart]);\r\n\r\n\t// Clear entire cart\r\n\tconst clearCart = useCallback(async (): Promise<boolean> => {\r\n\t\tif (!isAuthenticatedRef.current) {\r\n\t\t\tconst result = await clearCartLocal();\r\n\t\t\tawait fetchCart();\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst response = await cartService.clearCart();\r\n\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\t// ✅ OPTIMIZADO: Solo invalidar cache, no refetch (el context se actualiza automáticamente)\r\n\t\t\t\tinvalidateCartCache();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tthrow new Error(response?.message || \"No se pudo vaciar el carrito\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error al vaciar carrito:\", err);\r\n\t\t\tsetError(err instanceof Error ? err.message : \"Error al vaciar carrito\");\r\n\t\t\treturn false;\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, [clearCartLocal, fetchCart, invalidateCartCache]);\r\n\r\n\t// ✅ NUEVO: Validar código de descuento\r\n\tconst validateDiscountCode = useCallback(async (code: string): Promise<{ success: boolean; message: string; data?: DiscountCode }> => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst response = await cartService.validateDiscountCode(code);\r\n\t\t\t\r\n\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tmessage: response.message || \"Código válido\",\r\n\t\t\t\t\tdata: response.data\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: response?.message || \"Código de descuento inválido\"\r\n\t\t\t};\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.error(\"Error validating discount code:\", error);\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: error.response?.data?.message || error.message || \"Error al validar código de descuento\"\r\n\t\t\t};\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// ✅ NUEVO: Aplicar código de descuento\r\n\tconst applyDiscountCode = useCallback(async (code: string): Promise<{ success: boolean; message: string; cart?: ShoppingCart }> => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst response = await cartService.applyDiscountCode(code);\r\n\t\t\t\r\n\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\t// Actualizar cart state con datos del response\r\n\t\t\t\tif (response.data?.cart) {\r\n\t\t\t\t\tsetCart(response.data.cart);\r\n\t\t\t\t\tlastCartString.current = JSON.stringify(response.data.cart);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Guardar información del descuento aplicado\r\n\t\t\t\tif (response.data?.discount_code) {\r\n\t\t\t\t\tsetAppliedDiscount({\r\n\t\t\t\t\t\tdiscountCode: response.data.discount_code,\r\n\t\t\t\t\t\tappliedAt: new Date()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Invalidar cache\r\n\t\t\t\tinvalidateCartCache();\r\n\t\t\t\t\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tmessage: response.message || \"Descuento aplicado exitosamente\",\r\n\t\t\t\t\tcart: response.data?.cart\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: response?.message || \"No se pudo aplicar el código de descuento\"\r\n\t\t\t};\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.error(\"Error applying discount code:\", error);\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: error.response?.data?.message || error.message || \"Error al aplicar código de descuento\"\r\n\t\t\t};\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, [invalidateCartCache]);\r\n\r\n\t// ✅ NUEVO: Remover código de descuento\r\n\tconst removeDiscountCode = useCallback(async (): Promise<{ success: boolean; message: string; cart?: ShoppingCart }> => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst response = await cartService.removeDiscountCode();\r\n\t\t\t\r\n\t\t\tif (response && response.status === \"success\") {\r\n\t\t\t\t// Actualizar cart state\r\n\t\t\t\tif (response.data?.cart) {\r\n\t\t\t\t\tsetCart(response.data.cart);\r\n\t\t\t\t\tlastCartString.current = JSON.stringify(response.data.cart);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Limpiar descuento aplicado\r\n\t\t\t\tsetAppliedDiscount(null);\r\n\t\t\t\t\r\n\t\t\t\t// Invalidar cache\r\n\t\t\t\tinvalidateCartCache();\r\n\t\t\t\t\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tmessage: response.message || \"Descuento removido exitosamente\",\r\n\t\t\t\t\tcart: response.data?.cart\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: response?.message || \"No se pudo remover el código de descuento\"\r\n\t\t\t};\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.error(\"Error removing discount code:\", error);\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: error.response?.data?.message || error.message || \"Error al remover código de descuento\"\r\n\t\t\t};\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, [invalidateCartCache]);\r\n\r\n\treturn (\r\n\t\t<CartContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tcart,\r\n\t\t\t\tloading,\r\n\t\t\t\terror,\r\n\t\t\t\taddToCart,\r\n\t\t\t\tremoveFromCart,\r\n\t\t\t\tupdateCartItem,\r\n\t\t\t\tclearCart,\r\n\t\t\t\tfetchCart,\r\n\t\t\t\titemCount,\r\n\t\t\t\ttotalAmount,\r\n\t\t\t\tnotification,\r\n\t\t\t\tshowNotification,\r\n\t\t\t\thideNotification,\r\n\t\t\t\tcartItemCount: itemCount,\r\n\t\t\t\t// ✅ NUEVOS: Propiedades de código de descuento\r\n\t\t\t\tappliedDiscount,\r\n\t\t\t\tvalidateDiscountCode,\r\n\t\t\t\tapplyDiscountCode,\r\n\t\t\t\tremoveDiscountCode,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t\t{/* Renderizar notificación si existe */}\r\n\t\t\t{notification && (\r\n\t\t\t\t<div className=\"fixed bottom-4 right-4 z-50 max-w-sm\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`px-4 py-3 rounded-lg shadow-lg flex items-center ${\r\n\t\t\t\t\t\t\tnotification.type === NotificationType.SUCCESS\r\n\t\t\t\t\t\t\t\t? \"bg-green-600 text-white\"\r\n\t\t\t\t\t\t\t\t: notification.type === NotificationType.ERROR\r\n\t\t\t\t\t\t\t\t\t? \"bg-red-500 text-white\"\r\n\t\t\t\t\t\t\t\t\t: notification.type === NotificationType.WARNING\r\n\t\t\t\t\t\t\t\t\t\t? \"bg-yellow-500 text-white\"\r\n\t\t\t\t\t\t\t\t\t\t: \"bg-blue-500 text-white\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"flex-1\">{notification.message}</span>\r\n\t\t\t\t\t\t<button onClick={hideNotification} className=\"ml-2 text-white\">\r\n\t\t\t\t\t\t\t×\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</CartContext.Provider>\r\n\t);\r\n};\r\n\r\nexport const useCartWithNotifications = () => {\r\n\tconst context = useContext(CartContext);\r\n\tif (!context) {\r\n\t\tthrow new Error(\r\n\t\t\t\"useCartWithNotifications debe usarse dentro de un CartProvider\"\r\n\t\t);\r\n\t}\r\n\treturn context;\r\n};\r\n\r\nexport default CartProvider;","// src/presentation/hooks/useCart.ts - SIMPLIFICADO\r\nimport {useContext} from \"react\";\r\nimport {CartContext} from \"../contexts/CartContext\";\r\n\r\nexport const useCart = () => {\r\n\tconst context = useContext(CartContext);\r\n\tif (!context) {\r\n\t\tthrow new Error(\"useCart debe usarse dentro de un CartProvider\");\r\n\t}\r\n\treturn context;\r\n};\r\n\r\nexport default useCart;\r\n","// src/presentation/services/ErrorHandlingService.ts - MEJORADO\r\nexport interface ApiError {\r\n\tstatus: string;\r\n\tmessage: string;\r\n\tcode?: string;\r\n\tdetails?: any;\r\n}\r\n\r\nexport interface ErrorResponse {\r\n\tstatus: 'error' | 'fail';\r\n\tmessage: string;\r\n\tdata?: any;\r\n\tcode?: string;\r\n}\r\n\r\nexport interface ErrorHandlingResult {\r\n\tmessage: string;\r\n\ttype: 'error' | 'warning' | 'info';\r\n\tshouldRetry: boolean;\r\n}\r\n\r\nexport class ErrorHandlingService {\r\n\t/**\r\n\t * Extrae el mensaje de error más útil para el usuario\r\n\t */\r\n\tstatic extractUserMessage(error: any): string {\r\n\t\t// Si es un error de respuesta de API\r\n\t\tif (error?.response?.data) {\r\n\t\t\tconst data = error.response.data;\r\n\t\t\t\r\n\t\t\t// Formato estándar de la API: { status: \"error\", message: \"...\" }\r\n\t\t\tif (data.message) {\r\n\t\t\t\treturn this.translateErrorMessage(data.message);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Si hay errores de validación\r\n\t\t\tif (data.errors && Array.isArray(data.errors)) {\r\n\t\t\t\treturn data.errors.map((err: any) => err.message || err).join(', ');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Si hay un error general\r\n\t\t\tif (data.error) {\r\n\t\t\t\treturn this.translateErrorMessage(data.error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Si es un error directo con message\r\n\t\tif (error?.message) {\r\n\t\t\treturn this.translateErrorMessage(error.message);\r\n\t\t}\r\n\r\n\t\t// Si es un string directo\r\n\t\tif (typeof error === 'string') {\r\n\t\t\treturn this.translateErrorMessage(error);\r\n\t\t}\r\n\r\n\t\t// Error de red\r\n\t\tif (error?.code === 'NETWORK_ERROR' || error?.message?.includes('Network Error')) {\r\n\t\t\treturn 'Error de conexión. Verifica tu conexión a internet.';\r\n\t\t}\r\n\r\n\t\t// Error por timeout\r\n\t\tif (error?.code === 'ECONNABORTED' || error?.message?.includes('timeout')) {\r\n\t\t\treturn 'La solicitud tardó demasiado. Inténtalo de nuevo.';\r\n\t\t}\r\n\r\n\t\t// Error por defecto\r\n\t\treturn 'Ha ocurrido un error inesperado. Inténtalo de nuevo.';\r\n\t}\r\n\r\n\t/**\r\n\t * Traduce mensajes de error del backend a mensajes amigables\r\n\t */\r\n\tstatic translateErrorMessage(message: string): string {\r\n\t\tconst translations: Record<string, string> = {\r\n\t\t\t// Errores de stock\r\n\t\t\t'Stock insuficiente': 'No hay suficiente stock disponible. Reduce la cantidad.',\r\n\t\t\t'Insufficient stock': 'No hay suficiente stock disponible. Reduce la cantidad.',\r\n\t\t\t'Out of stock': 'Producto agotado. No hay unidades disponibles.',\r\n\t\t\t'No hay suficiente stock': 'No hay suficiente stock disponible. Reduce la cantidad.',\r\n\t\t\t'Producto agotado': 'Producto agotado. No hay unidades disponibles.',\r\n\t\t\t\r\n\t\t\t// Errores de autenticación\r\n\t\t\t'Unauthorized': 'Debes iniciar sesión para realizar esta acción.',\r\n\t\t\t'Token expired': 'Tu sesión ha expirado. Inicia sesión nuevamente.',\r\n\t\t\t'Invalid credentials': 'Credenciales incorrectas. Verifica tu email y contraseña.',\r\n\t\t\t\r\n\t\t\t// Errores de validación\r\n\t\t\t'Validation failed': 'Los datos ingresados no son válidos.',\r\n\t\t\t'Required field missing': 'Faltan campos obligatorios.',\r\n\t\t\t'Invalid email format': 'El formato del email no es válido.',\r\n\t\t\t'Password too weak': 'La contraseña debe ser más segura.',\r\n\t\t\t\r\n\t\t\t// Errores de productos\r\n\t\t\t'Product not found': 'El producto no fue encontrado.',\r\n\t\t\t'Product unavailable': 'El producto no está disponible temporalmente.',\r\n\t\t\t'Price changed': 'El precio del producto ha cambiado. Actualiza la página.',\r\n\t\t\t\r\n\t\t\t// Errores de carrito\r\n\t\t\t'Cart empty': 'Tu carrito está vacío.',\r\n\t\t\t'Cart item not found': 'El producto no se encuentra en tu carrito.',\r\n\t\t\t'Cannot update cart': 'No se pudo actualizar el carrito. Inténtalo de nuevo.',\r\n\t\t\t\r\n\t\t\t// Errores de pago\r\n\t\t\t'Payment failed': 'El pago no pudo ser procesado. Verifica tus datos.',\r\n\t\t\t'Invalid payment method': 'Método de pago no válido.',\r\n\t\t\t'Insufficient funds': 'Fondos insuficientes en tu cuenta.',\r\n\t\t\t\r\n\t\t\t// Errores de envío\r\n\t\t\t'Invalid shipping address': 'La dirección de envío no es válida.',\r\n\t\t\t'Shipping not available': 'Envío no disponible para tu ubicación.',\r\n\t\t\t\r\n\t\t\t// Errores del sistema\r\n\t\t\t'Server error': 'Error del servidor. Inténtalo más tarde.',\r\n\t\t\t'Service unavailable': 'Servicio temporalmente no disponible.',\r\n\t\t\t'Rate limit exceeded': 'Has realizado demasiadas solicitudes. Espera un momento.',\r\n\t\t};\r\n\r\n\t\t// Buscar traducción exacta\r\n\t\tif (translations[message]) {\r\n\t\t\treturn translations[message];\r\n\t\t}\r\n\r\n\t\t// Buscar por palabras clave\r\n\t\tconst lowerMessage = message.toLowerCase();\r\n\t\t\r\n\t\tif (lowerMessage.includes('stock') || lowerMessage.includes('existencia')) {\r\n\t\t\treturn 'Problema con el stock del producto. Verifica la disponibilidad.';\r\n\t\t}\r\n\t\t\r\n\t\tif (lowerMessage.includes('payment') || lowerMessage.includes('pago')) {\r\n\t\t\treturn 'Error en el procesamiento del pago. Verifica tus datos.';\r\n\t\t}\r\n\t\t\r\n\t\tif (lowerMessage.includes('network') || lowerMessage.includes('connection') || lowerMessage.includes('conexión')) {\r\n\t\t\treturn 'Error de conexión. Verifica tu conexión a internet.';\r\n\t\t}\r\n\t\t\r\n\t\tif (lowerMessage.includes('timeout') || lowerMessage.includes('tiempo')) {\r\n\t\t\treturn 'La operación tardó demasiado. Inténtalo de nuevo.';\r\n\t\t}\r\n\r\n\t\tif (lowerMessage.includes('cantidad') || lowerMessage.includes('disponible')) {\r\n\t\t\treturn 'Cantidad solicitada no disponible. Verifica el stock.';\r\n\t\t}\r\n\r\n\t\t// Si no hay traducción, devolver el mensaje original\r\n\t\treturn message;\r\n\t}\r\n\r\n\t/**\r\n\t * Determina el tipo de notificación basado en el error\r\n\t */\r\n\tstatic getNotificationType(error: any): 'error' | 'warning' | 'info' {\r\n\t\tconst message = error?.response?.data?.message || error?.message || '';\r\n\t\tconst lowerMessage = message.toLowerCase();\r\n\r\n\t\t// Warnings para errores de validación o stock\r\n\t\tif (lowerMessage.includes('stock') || \r\n\t\t\tlowerMessage.includes('existencia') ||\r\n\t\t\tlowerMessage.includes('cantidad') ||\r\n\t\t\tlowerMessage.includes('validation') || \r\n\t\t\tlowerMessage.includes('required')) {\r\n\t\t\treturn 'warning';\r\n\t\t}\r\n\r\n\t\t// Info para errores de autenticación\r\n\t\tif (lowerMessage.includes('unauthorized') || \r\n\t\t\tlowerMessage.includes('token') ||\r\n\t\t\tlowerMessage.includes('login') ||\r\n\t\t\tlowerMessage.includes('sesión')) {\r\n\t\t\treturn 'info';\r\n\t\t}\r\n\r\n\t\t// Error por defecto\r\n\t\treturn 'error';\r\n\t}\r\n\r\n\t/**\r\n\t * Maneja errores de API de manera consistente\r\n\t */\r\n\tstatic handleApiError(error: any, context?: string): ErrorHandlingResult {\r\n\t\tconst message = this.extractUserMessage(error);\r\n\t\tconst type = this.getNotificationType(error);\r\n\t\t\r\n\t\t// Determinar si se puede reintentar\r\n\t\tconst shouldRetry = this.shouldRetry(error);\r\n\r\n\t\t// Log del error para debugging\r\n\t\tconsole.error(`Error${context ? ` in ${context}` : ''}:`, {\r\n\t\t\toriginalError: error,\r\n\t\t\tuserMessage: message,\r\n\t\t\ttype,\r\n\t\t\tshouldRetry\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tmessage,\r\n\t\t\ttype,\r\n\t\t\tshouldRetry\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Determina si un error permite reintentar la operación\r\n\t */\r\n\tstatic shouldRetry(error: any): boolean {\r\n\t\t// Errores de red o timeout - se puede reintentar\r\n\t\tif (error?.code === 'NETWORK_ERROR' || \r\n\t\t\terror?.code === 'ECONNABORTED' || \r\n\t\t\terror?.message?.includes('timeout') ||\r\n\t\t\terror?.message?.includes('Network Error')) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Errores del servidor (5xx) - se puede reintentar\r\n\t\tif (error?.response?.status >= 500) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Errores de cliente (4xx) - generalmente no se puede reintentar\r\n\t\tif (error?.response?.status >= 400 && error?.response?.status < 500) {\r\n\t\t\t// Excepto algunos casos específicos\r\n\t\t\tconst retryableCodes = [408, 429]; // Request Timeout, Too Many Requests\r\n\t\t\treturn retryableCodes.includes(error.response.status);\r\n\t\t}\r\n\r\n\t\t// Errores de stock - no se puede reintentar sin cambiar datos\r\n\t\tconst message = error?.response?.data?.message || error?.message || '';\r\n\t\tif (message.toLowerCase().includes('stock') || \r\n\t\t\tmessage.toLowerCase().includes('existencia') ||\r\n\t\t\tmessage.toLowerCase().includes('cantidad')) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Maneja errores específicos de stock\r\n\t */\r\n\tstatic handleStockError(availableStock: number, requestedQuantity: number): ErrorHandlingResult {\r\n\t\tconst message = `Solo hay ${availableStock} unidad${availableStock !== 1 ? 'es' : ''} disponible${availableStock !== 1 ? 's' : ''} en stock. Solicitaste ${requestedQuantity}.`;\r\n\t\t\r\n\t\treturn {\r\n\t\t\tmessage,\r\n\t\t\ttype: 'warning',\r\n\t\t\tshouldRetry: false\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Maneja errores de validación de formularios\r\n\t */\r\n\tstatic handleValidationError(validationErrors: Record<string, string[]>): ErrorHandlingResult {\r\n\t\tconst errors = Object.values(validationErrors).flat();\r\n\t\tconst message = errors.length > 0 ? errors.join('. ') : 'Error de validación';\r\n\t\t\r\n\t\treturn {\r\n\t\t\tmessage,\r\n\t\t\ttype: 'warning',\r\n\t\t\tshouldRetry: false\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport default ErrorHandlingService;","// src/presentation/hooks/useErrorHandler.ts - CORREGIDO\r\nimport { useCallback } from 'react';\r\nimport { NotificationType } from '../contexts/CartContext';\r\nimport { ErrorHandlingService } from '../services/ErrorHandlingService';\r\n\r\nexport interface UseErrorHandlerProps {\r\n\tshowNotification: (type: NotificationType, message: string) => void;\r\n\tcontext?: string;\r\n}\r\n\r\n// Tipos para el resultado del manejo de errores\r\ninterface ErrorHandlingResult {\r\n\tmessage: string;\r\n\ttype: 'error' | 'warning' | 'info';\r\n\tshouldRetry: boolean;\r\n}\r\n\r\nexport const useErrorHandler = ({ showNotification, context }: UseErrorHandlerProps) => {\r\n\tconst handleError = useCallback((error: any, customMessage?: string): boolean => {\r\n\t\tconst errorInfo: ErrorHandlingResult = ErrorHandlingService.handleApiError(error, context);\r\n\t\t\r\n\t\t// Usar mensaje personalizado si se proporciona\r\n\t\tconst message = customMessage || errorInfo.message;\r\n\t\t\r\n\t\t// Mapear tipos a NotificationType con tipado correcto\r\n\t\tconst notificationTypeMap: Record<string, NotificationType> = {\r\n\t\t\t'error': NotificationType.ERROR,\r\n\t\t\t'warning': NotificationType.WARNING,\r\n\t\t\t'info': NotificationType.INFO\r\n\t\t};\r\n\r\n\t\t// Obtener el tipo con fallback seguro\r\n\t\tconst notificationType = notificationTypeMap[errorInfo.type] || NotificationType.ERROR;\r\n\r\n\t\tshowNotification(notificationType, message);\r\n\r\n\t\treturn errorInfo.shouldRetry;\r\n\t}, [showNotification, context]);\r\n\r\n\tconst handleSuccess = useCallback((message: string) => {\r\n\t\tshowNotification(NotificationType.SUCCESS, message);\r\n\t}, [showNotification]);\r\n\r\n\t// Función específica para errores de stock\r\n\tconst handleStockError = useCallback((availableStock: number, requestedQuantity: number) => {\r\n\t\tconst message = `Solo hay ${availableStock} unidad${availableStock !== 1 ? 'es' : ''} disponible${availableStock !== 1 ? 's' : ''} en stock. Solicitaste ${requestedQuantity}.`;\r\n\t\tshowNotification(NotificationType.WARNING, message);\r\n\t}, [showNotification]);\r\n\r\n\treturn {\r\n\t\thandleError,\r\n\t\thandleSuccess,\r\n\t\thandleStockError\r\n\t};\r\n};","// src/utils/volumeDiscountCalculator.ts\r\n\r\n// import VolumeDiscountConfigService from '../core/services/VolumeDiscountConfigService'; // 🎯 JORDAN: Migrado a ConfigurationManager\r\nimport ConfigurationManager from '../core/services/ConfigurationManager';\r\n\r\n// ✅ TIPOS ACTUALIZADOS para compatibilidad con CartPage\r\nexport interface VolumeDiscountTier {\r\n  quantity: number;\r\n  discount: number;\r\n  label: string;\r\n}\r\n\r\nexport interface VolumeDiscountResult {\r\n  originalPrice: number;\r\n  discountedPrice: number;\r\n  discountPercentage: number;\r\n  savings: number;\r\n  savingsTotal: number;\r\n  hasDiscount: boolean;\r\n  tierLabel: string | null;\r\n}\r\n\r\n// ✅ NUEVO: Interface para items del carrito con descuentos aplicados\r\nexport interface CartItemWithDiscounts {\r\n  id: number;\r\n  productId: number;\r\n  quantity: number;\r\n  price: number; // Precio base original\r\n  product: any;\r\n  imageUrl: string;\r\n  // ✅ NUEVO: Información de descuentos calculados\r\n  discount: {\r\n    originalPrice: number;\r\n    discountedPrice: number;\r\n    discountPercentage: number;\r\n    savings: number;\r\n    savingsTotal: number;\r\n    hasDiscount: boolean;\r\n    sellerDiscountAmount: number;\r\n    volumeDiscountAmount: number;\r\n    finalPricePerUnit: number;\r\n  };\r\n}\r\n\r\n/**\r\n * 🎯 JORDAN: Servicio unificado para obtener configuración dinámica desde BD\r\n */\r\nconst configManager = ConfigurationManager.getInstance();\r\n\r\n/**\r\n * 🔧 CORREGIDO: Configuración de descuentos por volumen por defecto actualizada\r\n * Coincide con ConfigurationManager: 3+ = 5%, 6+ = 10%, 12+ = 15%\r\n */\r\nconst DEFAULT_VOLUME_DISCOUNTS: VolumeDiscountTier[] = [\r\n  { quantity: 3, discount: 5, label: \"3+\" },\r\n  { quantity: 6, discount: 10, label: \"6+\" },\r\n  { quantity: 12, discount: 15, label: \"12+\" }\r\n];\r\n\r\n/**\r\n * Calcula descuentos por volumen para un item del carrito\r\n * NOTA: Esta es la versión síncrona. Para aplicaciones real-time, usar calculateVolumeDiscountAsync\r\n */\r\nexport function calculateVolumeDiscount(\r\n  basePrice: number,\r\n  quantity: number,\r\n  customTiers?: VolumeDiscountTier[]\r\n): VolumeDiscountResult {\r\n  \r\n  // Si se proveen tiers personalizados, usarlos. Si no, usar los por defecto\r\n  // NOTA: Esta función es síncrona para compatibilidad con código existente\r\n  const tiers = customTiers || DEFAULT_VOLUME_DISCOUNTS;\r\n  \r\n  // Buscar el descuento aplicable para la cantidad\r\n  let applicableTier: VolumeDiscountTier | null = null;\r\n  \r\n  for (const tier of tiers) {\r\n    if (quantity >= tier.quantity) {\r\n      applicableTier = tier;\r\n    } else {\r\n      break; // Los tiers están ordenados por cantidad\r\n    }\r\n  }\r\n\r\n  if (!applicableTier) {\r\n    return {\r\n      originalPrice: basePrice, // Sin redondeo - frontend manejará en vista\r\n      discountedPrice: basePrice, // Sin redondeo - frontend manejará en vista\r\n      discountPercentage: 0,\r\n      savings: 0,\r\n      savingsTotal: 0,\r\n      hasDiscount: false,\r\n      tierLabel: null\r\n    };\r\n  }\r\n\r\n  const discountedPrice = basePrice * (1 - applicableTier.discount / 100); // Sin redondeo - frontend manejará\r\n  const savings = basePrice - discountedPrice; // Sin redondeo - frontend manejará\r\n  const savingsTotal = savings * quantity; // Sin redondeo - frontend manejará\r\n\r\n  return {\r\n    originalPrice: basePrice, // Sin redondeo - frontend manejará en vista\r\n    discountedPrice: discountedPrice, // Sin redondeo - frontend manejará en vista\r\n    discountPercentage: applicableTier.discount,\r\n    savings: savings, // Sin redondeo - frontend manejará en vista\r\n    savingsTotal: savingsTotal, // Sin redondeo - frontend manejará en vista\r\n    hasDiscount: true,\r\n    tierLabel: applicableTier.label\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Calcula descuentos por volumen de manera asíncrona usando configuración de BD\r\n */\r\nexport async function calculateVolumeDiscountAsync(\r\n  basePrice: number,\r\n  quantity: number,\r\n  customTiers?: VolumeDiscountTier[]\r\n): Promise<VolumeDiscountResult> {\r\n  \r\n  let tiers = customTiers;\r\n  \r\n  // 🎯 JORDAN: Si no se proveen tiers personalizados, obtenerlos desde ConfigurationManager\r\n  if (!tiers) {\r\n    try {\r\n      const configResult = await configManager.getUnifiedConfig();\r\n      if (configResult.config.volume_discounts && Array.isArray(configResult.config.volume_discounts) && configResult.config.volume_discounts.length > 0) {\r\n        tiers = configResult.config.volume_discounts;\r\n      }\r\n    } catch (error) {\r\n      console.warn('Error obteniendo configuración de descuentos, usando defaults:', error);\r\n      tiers = DEFAULT_VOLUME_DISCOUNTS;\r\n    }\r\n  }\r\n  \r\n  if (!tiers || tiers.length === 0) {\r\n    tiers = DEFAULT_VOLUME_DISCOUNTS;\r\n  }\r\n  \r\n  // Buscar el descuento aplicable para la cantidad\r\n  let applicableTier: VolumeDiscountTier | null = null;\r\n  \r\n  // Ordenar tiers por cantidad ascendente\r\n  const sortedTiers = [...tiers].sort((a, b) => a.quantity - b.quantity);\r\n  \r\n  for (const tier of sortedTiers) {\r\n    if (quantity >= tier.quantity) {\r\n      applicableTier = tier;\r\n    } else {\r\n      break; // Los tiers están ordenados por cantidad\r\n    }\r\n  }\r\n\r\n  if (!applicableTier) {\r\n    return {\r\n      originalPrice: basePrice, // Sin redondeo - frontend manejará en vista\r\n      discountedPrice: basePrice, // Sin redondeo - frontend manejará en vista\r\n      discountPercentage: 0,\r\n      savings: 0,\r\n      savingsTotal: 0,\r\n      hasDiscount: false,\r\n      tierLabel: null\r\n    };\r\n  }\r\n\r\n  const discountedPrice = basePrice * (1 - applicableTier.discount / 100); // Sin redondeo - frontend manejará\r\n  const savings = basePrice - discountedPrice; // Sin redondeo - frontend manejará\r\n  const savingsTotal = savings * quantity; // Sin redondeo - frontend manejará\r\n\r\n  return {\r\n    originalPrice: basePrice, // Sin redondeo - frontend manejará en vista\r\n    discountedPrice: discountedPrice, // Sin redondeo - frontend manejará en vista\r\n    discountPercentage: applicableTier.discount,\r\n    savings: savings, // Sin redondeo - frontend manejará en vista\r\n    savingsTotal: savingsTotal, // Sin redondeo - frontend manejará en vista\r\n    hasDiscount: true,\r\n    tierLabel: applicableTier.label\r\n  };\r\n}\r\n\r\n/**\r\n * ✅ FUNCIÓN PRINCIPAL: Calcula todos los descuentos para un item del carrito\r\n * Incluye descuento del seller + descuento por volumen\r\n * SECUENCIA EXACTA: Precio Normal → Descuento del vendedor → Descuento por volumen → Descuento cupón → IVA\r\n * NOTA: Esta es la versión síncrona para compatibilidad. Para tiers dinámicos usar calculateCartItemDiscountsAsync\r\n */\r\nexport function calculateCartItemDiscounts(cartItem: any): CartItemWithDiscounts['discount'] {\r\n  \r\n  const originalPrice = cartItem.product?.price || cartItem.price || 0;\r\n  const sellerDiscountPercentage = cartItem.product?.discount_percentage || 0;\r\n  const quantity = cartItem.quantity || 1;\r\n  \r\n  // 1. Calcular descuento del seller (sobre precio original)\r\n  const sellerDiscountAmount = originalPrice * (sellerDiscountPercentage / 100); // Sin redondeo - frontend manejará\r\n  const priceAfterSellerDiscount = originalPrice - sellerDiscountAmount; // Sin redondeo - frontend manejará\r\n  \r\n  // 2. Calcular descuento por volumen (sobre precio ya con descuento del seller)\r\n  // NOTA: Usando versión síncrona con defaults para compatibilidad\r\n  const volumeDiscount = calculateVolumeDiscount(priceAfterSellerDiscount, quantity);\r\n  \r\n  // 3. Precio final por unidad (después de ambos descuentos)\r\n  const finalPricePerUnit = volumeDiscount.discountedPrice; // Sin redondeo - frontend manejará\r\n  \r\n  // 4. Ahorros totales (precisos)\r\n  const totalSellerSavings = sellerDiscountAmount * quantity; // Sin redondeo - frontend manejará\r\n  const totalVolumeSavings = volumeDiscount.savingsTotal; // Sin redondeo - frontend manejará\r\n  const totalSavings = totalSellerSavings + totalVolumeSavings; // Sin redondeo - frontend manejará\r\n  \r\n  // 5. Determinar descuento principal a mostrar\r\n  const hasVolumeDiscount = volumeDiscount.hasDiscount;\r\n  const displayDiscountPercentage = hasVolumeDiscount ? \r\n    volumeDiscount.discountPercentage : sellerDiscountPercentage;\r\n  \r\n  return {\r\n    originalPrice: originalPrice, // Sin redondeo - frontend manejará en vista\r\n    discountedPrice: finalPricePerUnit, // Sin redondeo - frontend manejará en vista\r\n    discountPercentage: displayDiscountPercentage,\r\n    savings: originalPrice - finalPricePerUnit, // Sin redondeo - frontend manejará en vista\r\n    savingsTotal: totalSavings, // Sin redondeo - frontend manejará en vista\r\n    hasDiscount: sellerDiscountPercentage > 0 || hasVolumeDiscount,\r\n    sellerDiscountAmount: sellerDiscountAmount, // Sin redondeo - frontend manejará en vista\r\n    volumeDiscountAmount: volumeDiscount.savings, // Sin redondeo - frontend manejará en vista\r\n    finalPricePerUnit: finalPricePerUnit // Sin redondeo - frontend manejará en vista\r\n  };\r\n}\r\n\r\n/**\r\n * ✅ FUNCIÓN PRINCIPAL ASÍNCRONA: Calcula todos los descuentos con configuración dinámica de BD\r\n * Incluye descuento del seller + descuento por volumen desde BD\r\n * SECUENCIA EXACTA: Precio Normal → Descuento del vendedor → Descuento por volumen → Descuento cupón → IVA\r\n */\r\nexport async function calculateCartItemDiscountsAsync(cartItem: any, customTiers?: VolumeDiscountTier[]): Promise<CartItemWithDiscounts['discount']> {\r\n  \r\n  const originalPrice = cartItem.product?.price || cartItem.price || 0;\r\n  const sellerDiscountPercentage = cartItem.product?.discount_percentage || 0;\r\n  const quantity = cartItem.quantity || 1;\r\n  \r\n  // 1. Calcular descuento del seller (sobre precio original)\r\n  const sellerDiscountAmount = originalPrice * (sellerDiscountPercentage / 100); // Sin redondeo - frontend manejará\r\n  const priceAfterSellerDiscount = originalPrice - sellerDiscountAmount; // Sin redondeo - frontend manejará\r\n  \r\n  // 2. Calcular descuento por volumen (sobre precio ya con descuento del seller)\r\n  // NOTA: Usando versión asíncrona que obtiene tiers de BD si no se proveen\r\n  const volumeDiscount = await calculateVolumeDiscountAsync(priceAfterSellerDiscount, quantity, customTiers);\r\n  \r\n  // 3. Precio final por unidad (después de ambos descuentos)\r\n  const finalPricePerUnit = volumeDiscount.discountedPrice; // Sin redondeo - frontend manejará\r\n  \r\n  // 4. Ahorros totales (precisos)\r\n  const totalSellerSavings = sellerDiscountAmount * quantity; // Sin redondeo - frontend manejará\r\n  const totalVolumeSavings = volumeDiscount.savingsTotal; // Sin redondeo - frontend manejará\r\n  const totalSavings = totalSellerSavings + totalVolumeSavings; // Sin redondeo - frontend manejará\r\n  \r\n  // 5. Determinar descuento principal a mostrar\r\n  const hasVolumeDiscount = volumeDiscount.hasDiscount;\r\n  const displayDiscountPercentage = hasVolumeDiscount ? \r\n    volumeDiscount.discountPercentage : sellerDiscountPercentage;\r\n  \r\n  return {\r\n    originalPrice: originalPrice, // Sin redondeo - frontend manejará en vista\r\n    discountedPrice: finalPricePerUnit, // Sin redondeo - frontend manejará en vista\r\n    discountPercentage: displayDiscountPercentage,\r\n    savings: originalPrice - finalPricePerUnit, // Sin redondeo - frontend manejará en vista\r\n    savingsTotal: totalSavings, // Sin redondeo - frontend manejará en vista\r\n    hasDiscount: sellerDiscountPercentage > 0 || hasVolumeDiscount,\r\n    sellerDiscountAmount: sellerDiscountAmount, // Sin redondeo - frontend manejará en vista\r\n    volumeDiscountAmount: volumeDiscount.savings, // Sin redondeo - frontend manejará en vista\r\n    finalPricePerUnit: finalPricePerUnit // Sin redondeo - frontend manejará en vista\r\n  };\r\n}","/**\n * 🎯 JORDAN - CALCULADORA CENTRALIZADA DE E-COMMERCE\n * Garantiza consistencia total entre todo el sistema\n * ÚNICA fuente de verdad para todos los cálculos\n * MIGRADO: Ahora usa ConfigurationManager unificado\n */\n\nimport ConfigurationManager from '../core/services/ConfigurationManager';\n\nexport interface CartItem {\n  id?: number;\n  product?: {\n    id: number;\n    price: number;\n    discount_percentage?: number;\n    seller_id?: number;\n  };\n  product_id?: number;\n  productId?: number;\n  quantity: number;\n  base_price?: number;\n  price?: number;\n  final_price?: number;\n  volume_discount_percentage?: number;\n  volume_savings?: number;\n  seller_discount_amount?: number;\n  pricing_info?: {\n    seller_discount: number;\n    volume_discount_percentage: number;\n    volume_savings: number;\n    total_savings: number;\n  };\n}\n\nexport interface DiscountCode {\n  code: string;\n  type: 'percentage' | 'fixed';\n  value: number;\n  percentage?: number;\n  discount_percentage?: number;\n}\n\nexport interface CalculationResult {\n  // Flujo secuencial EXACTO\n  step1_originalSubtotal: number;        // $6.00 - Precio base × cantidad\n  step2_afterSellerDiscount: number;     // $3.00 - Después de descuento vendedor  \n  step3_afterVolumeDiscount: number;     // $2.85 - Después de descuento volumen\n  step4_afterCoupon: number;             // $2.71 - Después de cupón 5%\n  step5_withShipping: number;            // $7.71 - Con envío $5\n  step6_tax: number;                     // $1.16 - IVA 15%\n  step7_finalTotal: number;              // $8.87 - Total final\n\n  // Descuentos detallados\n  sellerDiscounts: number;               // $3.00 - Total descuentos vendedor\n  volumeDiscounts: number;               // $0.15 - Total descuentos volumen\n  couponDiscount: number;                // $0.14 - Descuento cupón\n  totalDiscounts: number;                // $3.29 - Suma de todos los descuentos\n\n  // Para backend\n  shipping: number;                      // $5.00\n  freeShipping: boolean;                 // false\n  volumeDiscountsApplied: boolean;       // true\n\n  // 🎯 JORDAN: Metadatos de configuración usada\n  configMetadata: {\n    source: 'cache' | 'api' | 'fallback';\n    version: string;\n    isStale: boolean;\n    warnings: string[];\n  };\n\n  // Aliases para compatibilidad\n  originalSubtotal: number;\n  subtotalAfterSellerDiscount: number;\n  subtotalAfterVolumeDiscount: number;\n  subtotalAfterCoupon: number;\n  subtotalWithShipping: number;\n  tax: number;\n  total: number;\n}\n\n/**\n * 🎯 JORDAN FASE 1: CALCULADORA MIGRADA CON CONFIGURACIÓN UNIFICADA\n * ELIMINA: Todas las configuraciones hardcoded\n * AÑADE: ConfigurationManager como única fuente de verdad\n * CORRIGE: Inconsistencias entre frontend/backend\n */\nexport class EcommerceCalculator {\n  private static configManager = ConfigurationManager.getInstance();\n\n  /**\n   * 🎯 JORDAN - FUNCIÓN PRINCIPAL MIGRADA\n   * Ahora usa ConfigurationManager unificado - ELIMINA TODAS LAS CONFIGURACIONES HARDCODED\n   */\n  static async calculateTotals(\n    items: CartItem[], \n    appliedDiscountCode?: any,\n    forceRefresh: boolean = false\n  ): Promise<CalculationResult> {\n    console.log('🧮 JORDAN CALCULADORA - INICIANDO CON CONFIGURACIÓN UNIFICADA', {\n      forceRefresh,\n      itemsCount: items.length\n    });\n    \n    // 🔧 OBTENER CONFIGURACIÓN SINCRONIZADA - Con reintentos automáticos\n    // 🎯 CRITICAL: forceRefresh en puntos críticos (Cart/Checkout)\n    const configResult = await this.configManager.getUnifiedConfig(forceRefresh);\n    const config = configResult.config;\n    \n    console.log('✅ JORDAN - Configuración obtenida:', {\n      source: configResult.source,\n      isStale: configResult.is_stale,\n      taxRate: config.tax_rate,\n      commissionRate: config.platform_commission_rate,\n      shippingCost: config.shipping.default_cost,\n      volumeTiers: config.volume_discounts.length\n    });\n\n    // PASO 1: Precio Base × Cantidad\n    const step1_originalSubtotal = this.calculateOriginalSubtotal(items);\n    console.log(`1️⃣ Subtotal original: $${step1_originalSubtotal.toFixed(2)}`);\n\n    // PASO 2: Aplicar Descuento Vendedor\n    const { subtotal: step2_afterSellerDiscount, totalDiscount: sellerDiscounts } = \n      this.calculateSellerDiscounts(items, step1_originalSubtotal);\n    console.log(`2️⃣ Después descuento vendedor: $${step2_afterSellerDiscount.toFixed(2)}`);\n\n    // PASO 3: Aplicar Descuento Volumen (usando configuración unificada)\n    const { subtotal: step3_afterVolumeDiscount, totalDiscount: volumeDiscounts } = \n      this.calculateVolumeDiscounts(items, step2_afterSellerDiscount, config.volume_discounts);\n    console.log(`3️⃣ Después descuento volumen: $${step3_afterVolumeDiscount.toFixed(2)}`);\n\n    // PASO 4: Aplicar Cupón\n    const { subtotal: step4_afterCoupon, discount: couponDiscount } = \n      this.calculateCouponDiscount(step3_afterVolumeDiscount, appliedDiscountCode);\n    console.log(`4️⃣ Después cupón: $${step4_afterCoupon.toFixed(2)}`);\n\n    // PASO 5: Agregar Envío (usando configuración unificada)\n    const shipping = this.calculateShipping(step4_afterCoupon, config.shipping);\n    const step5_withShipping = step4_afterCoupon + shipping;\n    console.log(`5️⃣ Con envío: $${step5_withShipping.toFixed(2)} (envío: $${shipping.toFixed(2)})`);\n\n    // PASO 6: Calcular IVA (usando configuración unificada)\n    const step6_tax = step5_withShipping * config.tax_rate;\n    console.log(`6️⃣ IVA calculado: $${step6_tax.toFixed(2)} (${(config.tax_rate * 100).toFixed(1)}%)`);\n\n    // PASO 7: Total Final\n    const step7_finalTotal = step5_withShipping + step6_tax;\n    console.log(`7️⃣ TOTAL FINAL: $${step7_finalTotal.toFixed(2)}`);\n\n    const totalDiscounts = sellerDiscounts + volumeDiscounts + couponDiscount;\n    const volumeDiscountsApplied = volumeDiscounts > 0;\n    const freeShipping = shipping === 0;\n\n    console.log('📊 JORDAN - RESUMEN CON CONFIGURACIÓN UNIFICADA:');\n    console.log(`   💰 Configuración: ${configResult.source} (${config.version})`);\n    console.log(`   💰 Tax rate: ${(config.tax_rate * 100).toFixed(1)}% (dinámico)`);\n    console.log(`   💰 Volume tiers: ${config.volume_discounts.length} configurados`);\n    console.log(`   💰 Shipping: $${config.shipping.default_cost} (umbral: $${config.shipping.free_threshold})`);\n\n    const result: CalculationResult = {\n      // Flujo secuencial EXACTO\n      step1_originalSubtotal,\n      step2_afterSellerDiscount, \n      step3_afterVolumeDiscount,\n      step4_afterCoupon,\n      step5_withShipping,\n      step6_tax,\n      step7_finalTotal,\n\n      // Descuentos detallados\n      sellerDiscounts,\n      volumeDiscounts, \n      couponDiscount,\n      totalDiscounts,\n\n      // Para backend\n      shipping,\n      freeShipping,\n      volumeDiscountsApplied,\n\n      // 🎯 JORDAN: Metadatos de configuración\n      configMetadata: {\n        source: configResult.source,\n        version: config.version,\n        isStale: configResult.is_stale,\n        warnings: configResult.warnings\n      },\n\n      // Aliases para compatibilidad\n      originalSubtotal: step1_originalSubtotal,\n      subtotalAfterSellerDiscount: step2_afterSellerDiscount,\n      subtotalAfterVolumeDiscount: step3_afterVolumeDiscount,\n      subtotalAfterCoupon: step4_afterCoupon,\n      subtotalWithShipping: step5_withShipping,\n      tax: step6_tax,\n      total: step7_finalTotal\n    };\n\n    return result;\n  }\n\n  /**\n   * PASO 1: Calcular subtotal original (precio base × cantidad)\n   */\n  private static calculateOriginalSubtotal(items: CartItem[]): number {\n    let total = 0;\n    \n    items.forEach(item => {\n      const basePrice = this.getBasePrice(item);\n      const quantity = item.quantity || 0;\n      const itemSubtotal = basePrice * quantity;\n      \n      console.log(`📦 Item: precio base $${basePrice} × ${quantity} = $${itemSubtotal}`);\n      total += itemSubtotal;\n    });\n\n    return total; // Sin redondeo intermedio - frontend manejará\n  }\n\n  /**\n   * PASO 2: Aplicar descuentos del vendedor\n   */\n  private static calculateSellerDiscounts(items: CartItem[], _originalSubtotal: number): { subtotal: number; totalDiscount: number } {\n    let totalDiscount = 0;\n    let subtotalAfterDiscount = 0;\n\n    items.forEach(item => {\n      const basePrice = this.getBasePrice(item);\n      const quantity = item.quantity || 0;\n      const discountPercentage = this.getSellerDiscountPercentage(item);\n      \n      const discountPerUnit = basePrice * (discountPercentage / 100);\n      const priceAfterDiscount = basePrice - discountPerUnit;\n      const itemDiscount = discountPerUnit * quantity;\n      const itemSubtotal = priceAfterDiscount * quantity;\n\n      totalDiscount += itemDiscount;\n      subtotalAfterDiscount += itemSubtotal;\n\n      console.log(`🏪 Seller discount: ${discountPercentage}% sobre $${basePrice} = descuento $${discountPerUnit}/unidad`);\n    });\n\n    return { \n      subtotal: subtotalAfterDiscount, // Sin redondeo intermedio - frontend manejará\n      totalDiscount: totalDiscount // Sin redondeo intermedio - frontend manejará\n    };\n  }\n\n  /**\n   * PASO 3: Aplicar descuentos por volumen con configuración dinámica\n   */\n  private static calculateVolumeDiscounts(\n    items: CartItem[], \n    _currentSubtotal: number, \n    volumeDiscounts: Array<{quantity: number, discount: number}>\n  ): { subtotal: number; totalDiscount: number } {\n    let totalDiscount = 0;\n    let subtotalAfterDiscount = 0;\n\n    items.forEach(item => {\n      const quantity = item.quantity || 0;\n      const volumeDiscountPercentage = this.getVolumeDiscountPercentage(quantity, volumeDiscounts);\n      \n      if (volumeDiscountPercentage > 0) {\n        const sellerDiscountedPrice = this.getPriceAfterSellerDiscount(item);\n        const volumeDiscountPerUnit = sellerDiscountedPrice * volumeDiscountPercentage;\n        const priceAfterVolumeDiscount = sellerDiscountedPrice - volumeDiscountPerUnit;\n        const itemVolumeDiscount = volumeDiscountPerUnit * quantity;\n        const itemSubtotal = priceAfterVolumeDiscount * quantity;\n\n        totalDiscount += itemVolumeDiscount;\n        subtotalAfterDiscount += itemSubtotal;\n\n        console.log(`📦 Volume discount: ${(volumeDiscountPercentage * 100).toFixed(1)}% sobre $${sellerDiscountedPrice} = descuento $${volumeDiscountPerUnit}/unidad`);\n      } else {\n        const sellerDiscountedPrice = this.getPriceAfterSellerDiscount(item);\n        subtotalAfterDiscount += sellerDiscountedPrice * quantity;\n      }\n    });\n\n    return { \n      subtotal: subtotalAfterDiscount, // Sin redondeo intermedio - frontend manejará\n      totalDiscount: totalDiscount // Sin redondeo intermedio - frontend manejará\n    };\n  }\n\n  /**\n   * PASO 4: Aplicar cupón de descuento\n   */\n  private static calculateCouponDiscount(subtotal: number, discountCode?: any): { subtotal: number; discount: number } {\n    if (!discountCode?.discountCode) {\n      return { subtotal, discount: 0 };\n    }\n\n    let discount = 0;\n    const discountData = discountCode.discountCode;\n    \n    if (discountData.discount_percentage) {\n      const percentage = parseFloat(discountData.discount_percentage);\n      discount = subtotal * (percentage / 100);\n    } else if (discountData.percentage) {\n      discount = subtotal * (discountData.percentage / 100);\n    } else if (discountData.value) {\n      discount = Math.min(discountData.value, subtotal);\n    }\n\n    console.log(`🎫 Cupón ${discountData.code}: ${discountData.discount_percentage || discountData.percentage || discountData.value}% = descuento $${discount.toFixed(2)}`);\n\n    return { \n      subtotal: subtotal - discount, // Sin redondeo intermedio - frontend manejará\n      discount: discount // Sin redondeo intermedio - frontend manejará\n    };\n  }\n\n  /**\n   * PASO 5: Calcular costo de envío\n   */\n  private static calculateShipping(\n    subtotal: number, \n    shippingConfig: { enabled: boolean; default_cost: number; free_threshold: number }\n  ): number {\n    if (!shippingConfig.enabled) {\n      return 0;\n    }\n    return subtotal >= shippingConfig.free_threshold ? 0 : shippingConfig.default_cost;\n  }\n\n  /**\n   * Obtiene el precio base del item\n   */\n  private static getBasePrice(item: CartItem): number {\n    if (item.base_price !== undefined) return item.base_price;\n    if (item.product?.price !== undefined) return item.product.price;\n    if (item.price !== undefined && item.final_price === undefined) return item.price;\n    return 2.0; // Fallback para el ejemplo\n  }\n\n  /**\n   * Obtiene el porcentaje de descuento del vendedor\n   */\n  private static getSellerDiscountPercentage(item: CartItem): number {\n    if (item.product?.discount_percentage !== undefined) return item.product.discount_percentage;\n    return 50.0; // Fallback para el ejemplo\n  }\n\n  /**\n   * Obtiene el precio después del descuento del vendedor\n   */\n  private static getPriceAfterSellerDiscount(item: CartItem): number {\n    const basePrice = this.getBasePrice(item);\n    const discountPercentage = this.getSellerDiscountPercentage(item);\n    return basePrice * (1 - discountPercentage / 100);\n  }\n\n  /**\n   * 🔧 JORDAN: Obtener porcentaje de descuento por volumen usando configuración dinámica\n   */\n  private static getVolumeDiscountPercentage(quantity: number, volumeDiscounts: Array<{quantity: number, discount: number}>): number {\n    // Ordenar tiers por cantidad descendente para encontrar el mayor aplicable\n    const sortedTiers = [...volumeDiscounts].sort((a, b) => b.quantity - a.quantity);\n    \n    for (const tier of sortedTiers) {\n      if (quantity >= tier.quantity) {\n        return tier.discount / 100; // ✅ CORREGIDO: Convertir porcentaje a decimal (15 -> 0.15)\n      }\n    }\n    return 0.0;\n  }\n\n  /**\n   * Redondeo para DISPLAY ÚNICAMENTE - NO usar en cálculos intermedios\n   * Solo para mostrar valores al usuario en la interfaz\n   */\n  static roundForDisplay(value: number): number {\n    return parseFloat(value.toFixed(2));\n  }\n\n  /**\n   * 🎯 JORDAN - HELPER PARA CHECKOUT migrado con configuración unificada\n   */\n  static async prepareCheckoutData(\n    items: CartItem[], \n    appliedDiscount?: any,\n    forceRefresh: boolean = false\n  ): Promise<{\n    items: any[];\n    totals: CalculationResult;\n  }> {\n    const totals = await this.calculateTotals(items, appliedDiscount, forceRefresh);\n    \n    // 🔧 OBTENER CONFIGURACIÓN SINCRONIZADA para preparar items\n    // 🎯 CRITICAL: usar forceRefresh si fue solicitado\n    const configResult = await this.configManager.getUnifiedConfig(forceRefresh);\n    const config = configResult.config;\n    \n    const preparedItems = items.map(item => {\n      const basePrice = this.getBasePrice(item);\n      const sellerDiscountPercentage = this.getSellerDiscountPercentage(item);\n      const volumeDiscountPercentage = this.getVolumeDiscountPercentage(item.quantity || 0, config.volume_discounts);\n      \n      // Calcular precio final por unidad\n      const priceAfterSeller = basePrice * (1 - sellerDiscountPercentage / 100);\n      const finalPricePerUnit = volumeDiscountPercentage > 0 ? \n        priceAfterSeller * (1 - volumeDiscountPercentage) : priceAfterSeller;\n\n      return {\n        product_id: item.product_id || item.product?.id || item.productId,\n        quantity: item.quantity,\n        price: finalPricePerUnit, // Sin redondeo - frontend manejará en vista\n        base_price: basePrice,\n        original_price: basePrice,\n        final_price: finalPricePerUnit, // Sin redondeo - frontend manejará en vista\n        volume_discount_percentage: volumeDiscountPercentage * 100, // Para compatibilidad con backend (como porcentaje)\n        volume_savings: (priceAfterSeller - finalPricePerUnit) * (item.quantity || 0), // Sin redondeo - frontend manejará\n        seller_discount_amount: (basePrice - priceAfterSeller) * (item.quantity || 0) // Sin redondeo - frontend manejará\n      };\n    });\n\n    return { items: preparedItems, totals };\n  }\n}","// src/services/CheckoutItemsService.ts - CORREGIDO CON CALCULADORA CENTRALIZADA\nimport { EcommerceCalculator } from \"../../utils/ecommerceCalculator\";\n\nexport interface CheckoutItem {\n  product_id: number;\n  quantity: number;\n  price: number; // ✅ Precio final con todos los descuentos aplicados\n  base_price?: number; // Precio original del producto\n  original_price?: number; // Precio original sin descuentos\n  final_price?: number; // Precio final con descuentos\n  discounted_price?: number; // Alias para final_price\n  volume_discount_percentage?: number;\n  volume_savings?: number;\n  seller_discount_amount?: number;\n}\n\nexport interface CheckoutTotals {\n  subtotal: number; // Subtotal con descuentos aplicados\n  originalSubtotal: number; // Subtotal sin descuentos\n  sellerDiscounts: number; // Total de descuentos del seller\n  volumeDiscounts: number; // Total de descuentos por volumen\n  totalDiscounts: number; // Total de todos los descuentos\n  couponDiscount: number; // Descuento por cupón específico\n  tax: number; // IVA\n  shipping: number; // Costo de envío\n  total: number; // Total final\n  freeShipping: boolean; // Si aplica envío gratis\n}\n\n/**\n * 🎯 SERVICIO PRINCIPAL: Prepara items del carrito para checkout\n * AHORA USA LA CALCULADORA CENTRALIZADA - GARANTIZA CONSISTENCIA TOTAL\n */\nexport class CheckoutItemsService {\n  \n  /**\n   * ✅ CORREGIDO: Prepara items usando calculadora centralizada con configuración dinámica\n   */\n  static async prepareItemsForCheckout(\n    cartItems: any[], \n    appliedDiscount: any = null,\n    forceRefresh: boolean = false\n  ): Promise<CheckoutItem[]> {\n    console.log(\"🛒 JORDAN CheckoutItemsService - Preparando items con configuración unificada\", { forceRefresh });\n    console.log(\"🎫 Cupón para items:\", appliedDiscount?.discountCode?.code || \"NINGUNO\");\n    \n    // ✅ JORDAN: USAR CALCULADORA MIGRADA CON CONFIGURACIÓN DINÁMICA\n    // 🎯 CRITICAL: forceRefresh para garantizar configuraciones frescas\n    const { items } = await EcommerceCalculator.prepareCheckoutData(cartItems, appliedDiscount, forceRefresh);\n    \n    const checkoutItems = items.map((item, index) => {\n      console.log(`✅ Item ${index + 1} preparado para checkout:`, {\n        product_id: item.product_id,\n        quantity: item.quantity,\n        price: item.price,\n        base_price: item.base_price,\n        final_price: item.final_price\n      });\n      \n      return item as CheckoutItem;\n    });\n\n    return checkoutItems;\n  }\n\n  /**\n   * ✅ CORREGIDO: Calcula totales usando calculadora centralizada  \n   * GARANTIZA EXACTAMENTE EL MISMO RESULTADO QUE CARTPAGE\n   */\n  static async calculateCheckoutTotals(\n    cartItems: any[], \n    appliedDiscount: any = null,\n    forceRefresh: boolean = false\n  ): Promise<CheckoutTotals> {\n    console.log(\"🔍 JORDAN - FLUJO CHECKOUT MIGRADO CON CONFIGURACIÓN UNIFICADA:\", { forceRefresh });\n    \n    // ✅ JORDAN: USAR CALCULADORA MIGRADA - CONFIGURACIÓN DINÁMICA DESDE BD\n    // 🎯 CRITICAL: forceRefresh en puntos críticos (Checkout)\n    const result = await EcommerceCalculator.calculateTotals(cartItems, appliedDiscount, forceRefresh);\n    \n    console.log(\"📊 PASO A PASO:\");\n    console.log(`   1️⃣ Subtotal original (sin descuentos): ${result.step1_originalSubtotal}`);\n    console.log(`   2️⃣ Después de seller + volume: ${result.step3_afterVolumeDiscount} ✅ DEBE SER $2.85`);\n    console.log(`   3️⃣ - Cupón 5% sobre subtotal: ${result.couponDiscount} -> Subtotal: ${result.step4_afterCoupon}`);\n    console.log(`   4️⃣ + Envío: ${result.step5_withShipping}`);\n    console.log(`   5️⃣ + IVA 15% sobre ${result.step5_withShipping} : ${result.step6_tax}`);\n    console.log(`   6️⃣ TOTAL FINAL: ${result.step7_finalTotal} ✅ DEBE SER $8.87`);\n    \n    console.log(\"💰 DESGLOSE COMPLETO:\");\n    console.log(`   - Descuentos seller: ${result.sellerDiscounts}`);\n    console.log(`   - Descuentos volume: ${result.volumeDiscounts}`);\n    console.log(`   - Descuento cupón: ${result.couponDiscount}`);\n    console.log(`   - Total descuentos: ${result.totalDiscounts}`);\n    console.log(`   - Envío: ${result.shipping}`);\n    console.log(`   - IVA (15%): ${result.tax}`);\n    console.log(`🎯 VALOR CORRECTO PARA BACKEND: ${result.total}`);\n\n    return {\n      subtotal: result.step3_afterVolumeDiscount, // CORREGIDO: Subtotal después de descuentos por volumen (antes del cupón)\n      originalSubtotal: result.originalSubtotal,\n      sellerDiscounts: result.sellerDiscounts,\n      volumeDiscounts: result.volumeDiscounts,\n      totalDiscounts: result.totalDiscounts,\n      couponDiscount: result.couponDiscount,\n      tax: result.tax,\n      shipping: result.shipping,\n      total: result.total, // ✅ ESTE ES EL VALOR CRÍTICO: $8.87\n      freeShipping: result.freeShipping\n    };\n  }\n\n  /**\n   * ✅ SIMPLIFICADO: Validación básica (la calculadora centralizada maneja la lógica)\n   */\n  static validateItemsForCheckout(items: CheckoutItem[]): { valid: boolean; errors: string[] } {\n    const errors: string[] = [];\n\n    console.log(`🔍 Validando ${items.length} items para checkout:`);\n    \n    items.forEach((item, index) => {\n      console.log(`📋 Validando Item ${index + 1}:`, {\n        product_id: item.product_id,\n        product_id_type: typeof item.product_id,\n        quantity: item.quantity,\n        quantity_type: typeof item.quantity,\n        price: item.price,\n        price_type: typeof item.price,\n      });\n      \n      if (!item.product_id || typeof item.product_id !== 'number' || isNaN(item.product_id) || item.product_id <= 0) {\n        const error = `Item ${index + 1}: product_id inválido (${item.product_id}, tipo: ${typeof item.product_id})`;\n        console.error(\"❌\", error);\n        errors.push(error);\n      }\n      \n      if (!item.quantity || typeof item.quantity !== 'number' || isNaN(item.quantity) || item.quantity <= 0) {\n        const error = `Item ${index + 1}: quantity inválida (${item.quantity}, tipo: ${typeof item.quantity})`;\n        console.error(\"❌\", error);\n        errors.push(error);\n      }\n      \n      if (typeof item.price !== 'number' || isNaN(item.price) || item.price <= 0) {\n        const error = `Item ${index + 1}: price inválido (${item.price}, tipo: ${typeof item.price})`;\n        console.error(\"❌\", error);\n        errors.push(error);\n      }\n    });\n\n    const result = {\n      valid: errors.length === 0,\n      errors\n    };\n    \n    console.log(`📊 Validación resultado:`, result);\n    return result;\n  }\n\n  /**\n   * ✅ SIMPLIFICADO: Debug helper usando calculadora centralizada\n   */\n  static async debugItemPricing(cartItems: any[], checkoutItems: CheckoutItem[]): Promise<void> {\n  console.log(\"🔍 DEBUG: Comparación usando calculadora centralizada\");\n\n  const checkoutData = await EcommerceCalculator.prepareCheckoutData(cartItems);\n  const calculatedItems = checkoutData.items;\n\n  cartItems.forEach((cartItem, index) => {\n    const checkoutItem = checkoutItems[index];\n    const calculatedItem = calculatedItems[index];\n\n    console.log(`📦 Item ${index + 1}:`, {\n      product_id: cartItem.productId || cartItem.product?.id,\n      quantity: cartItem.quantity,\n      calculated_final_price: calculatedItem?.price,\n      checkout_price: checkoutItem?.price,\n      prices_match: Math.abs((checkoutItem?.price || 0) - (calculatedItem?.price || 0)) < 0.01,\n      \"✅\": \"USANDO CALCULADORA CENTRALIZADA\"\n    });\n  });\n}\n\n}","/**\r\n * 🧮 CONFIGURACIÓN DE CÁLCULOS Y PRECISIÓN\r\n * Configuraciones centralizadas para tolerancias de precisión y validaciones de cálculos\r\n */\r\n\r\n// Obtener configuraciones del environment o usar valores por defecto\r\nconst getNumericEnvVar = (key: string, defaultValue: number): number => {\r\n  const value = import.meta.env?.[key];\r\n  if (value && !isNaN(Number(value))) {\r\n    return Number(value);\r\n  }\r\n  return defaultValue;\r\n};\r\n\r\nexport const CALCULATION_CONFIG = {\r\n  \r\n  // 💰 CONFIGURACIÓN DE PRECISIÓN FINANCIERA\r\n  PRECISION: {\r\n    // Tolerancia para comparaciones de totales entre frontend y backend\r\n    // Recomendado: 0.001 para evitar errores de precisión flotante sin ser demasiado permisivo\r\n    PRICE_COMPARISON_TOLERANCE: getNumericEnvVar('VITE_PRICE_TOLERANCE', 0.001),\r\n    \r\n    // Decimales para mostrar precios al usuario\r\n    DISPLAY_DECIMALS: getNumericEnvVar('VITE_PRICE_DECIMALS', 2),\r\n    \r\n    // Tolerancia para validaciones de descuentos\r\n    DISCOUNT_TOLERANCE: getNumericEnvVar('VITE_DISCOUNT_TOLERANCE', 0.001),\r\n  },\r\n\r\n  // 🧮 CONFIGURACIÓN DE VALIDACIONES\r\n  VALIDATIONS: {\r\n    // Tolerancia para validaciones de totales de checkout\r\n    CHECKOUT_TOLERANCE: getNumericEnvVar('VITE_CHECKOUT_TOLERANCE', 0.001),\r\n    \r\n    // Tolerancia para comparaciones de subtotales\r\n    SUBTOTAL_TOLERANCE: getNumericEnvVar('VITE_SUBTOTAL_TOLERANCE', 0.001),\r\n    \r\n    // Tolerancia para comparaciones de impuestos\r\n    TAX_TOLERANCE: getNumericEnvVar('VITE_TAX_TOLERANCE', 0.001),\r\n  },\r\n\r\n  // 🔍 CONFIGURACIÓN DE DEBUG\r\n  DEBUG: {\r\n    // Mostrar logs detallados de cálculos (solo en desarrollo)\r\n    SHOW_CALCULATION_LOGS: import.meta.env?.VITE_DEBUG_CALCULATIONS === 'true' || import.meta.env?.NODE_ENV === 'development',\r\n    \r\n    // Mostrar diferencias de precisión en consola\r\n    SHOW_PRECISION_WARNINGS: import.meta.env?.VITE_DEBUG_PRECISION === 'true' || import.meta.env?.NODE_ENV === 'development',\r\n  }\r\n  \r\n} as const;\r\n\r\n/**\r\n * 🛠️ UTILITARIO: Comparar dos valores numéricos con tolerancia\r\n */\r\nexport const isNumberEqual = (a: number, b: number, tolerance: number = CALCULATION_CONFIG.PRECISION.PRICE_COMPARISON_TOLERANCE): boolean => {\r\n  const difference = Math.abs(a - b);\r\n  const isEqual = difference <= tolerance;\r\n  \r\n  // Log en desarrollo si hay diferencias detectables\r\n  if (CALCULATION_CONFIG.DEBUG.SHOW_PRECISION_WARNINGS && difference > 0 && difference <= tolerance) {\r\n    console.warn(`⚠️ Diferencia de precisión detectada: ${a} vs ${b} (diff: ${difference.toFixed(6)}, tolerance: ${tolerance})`);\r\n  }\r\n  \r\n  return isEqual;\r\n};\r\n\r\n/**\r\n * 🛠️ UTILITARIO: Validar que dos totales sean equivalentes\r\n */\r\nexport const validateTotalsEquality = (\r\n  frontendTotal: number, \r\n  backendTotal: number, \r\n  context: string = 'Comparación de totales',\r\n  customTolerance?: number\r\n): boolean => {\r\n  const tolerance = customTolerance ?? CALCULATION_CONFIG.VALIDATIONS.CHECKOUT_TOLERANCE;\r\n  const difference = Math.abs(frontendTotal - backendTotal);\r\n  const isValid = difference <= tolerance;\r\n  \r\n  if (CALCULATION_CONFIG.DEBUG.SHOW_CALCULATION_LOGS) {\r\n    console.log(`🔍 ${context}:`, {\r\n      frontendTotal: frontendTotal.toFixed(6),\r\n      backendTotal: backendTotal.toFixed(6),\r\n      difference: difference.toFixed(6),\r\n      tolerance: tolerance.toFixed(6),\r\n      isValid,\r\n      status: isValid ? '✅ VÁLIDO' : '❌ DISCREPANCIA'\r\n    });\r\n  }\r\n  \r\n  return isValid;\r\n};\r\n\r\nexport default CALCULATION_CONFIG;","// src/core/services/CheckoutService.ts - ACTUALIZADO CON DESCUENTOS POR VOLUMEN\r\nimport ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\nimport {extractErrorMessage} from \"../../utils/errorHandler\";\r\nimport type {Address} from \"../domain/valueObjects/Address\";\r\nimport type {ShoppingCart} from \"../domain/entities/ShoppingCart\";\r\nimport {CheckoutItemsService} from \"../../infrastructure/services/CheckoutItemsService\";\r\nimport type {CheckoutItem} from \"../../infrastructure/services/CheckoutItemsService\";\r\nimport { validateTotalsEquality } from \"../../constants/calculationConfig\";\r\n\r\nexport type PaymentMethod = \"credit_card\" | \"paypal\" | \"transfer\" | \"qr\" | \"datafast\" | \"debit_card\" | \"de_una\";\r\n\r\nexport interface PaymentInfo {\r\n\tmethod: PaymentMethod;\r\n\tcard_number?: string;\r\n\tcard_expiry?: string;\r\n\tcard_cvc?: string;\r\n\tpaypal_email?: string;\r\n}\r\n\r\n// ✅ ACTUALIZADO: Interface CheckoutRequest con precios finales\r\nexport interface CheckoutRequest {\r\n\tpayment: PaymentInfo;\r\n\tshippingAddress: Address;\r\n\tbillingAddress?: Address;\r\n\tseller_id?: number;\r\n\titems?: CheckoutItem[]; // ✅ Usar CheckoutItem con precios finales\r\n\tdiscount_code?: string | null; // ✅ NUEVO: Código de descuento\r\n\tdiscount_info?: any; // ✅ NUEVO: Información completa del descuento aplicado\r\n\tcalculated_totals?: { // ✅ CRÍTICO: Agregar totales calculados\r\n\t\tsubtotal: number;\r\n\t\ttax: number;\r\n\t\tshipping: number;\r\n\t\ttotal: number;\r\n\t\ttotal_discounts: number;\r\n\t};\r\n}\r\n\r\nexport interface BackendCheckoutRequest {\r\n\tpayment: PaymentInfo;\r\n\tshipping: {\r\n\t\tfirst_name: string;\r\n\t\tlast_name: string;\r\n\t\temail: string;\r\n\t\tphone: string;\r\n\t\taddress: string;\r\n\t\tcity: string;\r\n\t\tstate: string;\r\n\t\tpostal_code: string;\r\n\t\tcountry: string;\r\n\t};\r\n\tseller_id?: number;\r\n\titems?: CheckoutItem[]; // ✅ Usar CheckoutItem con precios finales\r\n\tdiscount_code?: string; // ✅ FIX: Opcional - solo se incluye si hay cupón\r\n\t// ✅ CRÍTICO: Totales exactos calculados que el backend DEBE usar\r\n\tcalculated_totals?: {\r\n\t\tsubtotal: number;\r\n\t\ttax: number;\r\n\t\tshipping: number;\r\n\t\ttotal: number;\r\n\t\ttotal_discounts: number;\r\n\t};\r\n}\r\n\r\nexport interface CheckoutResponse {\r\n\tstatus: string;\r\n\tmessage: string;\r\n\tdata: {\r\n\t\torder_id: string;\r\n\t\torder_number: string;\r\n\t\ttotal: string;\r\n\t\tpayment_status: string;\r\n\t\t// ✅ NUEVOS: Campos de pricing con descuentos\r\n\t\tbilled_amount?: number;\r\n\t\tpaid_amount?: number;\r\n\t\ttotal_savings?: number;\r\n\t\tvolume_discounts_applied?: boolean;\r\n\t\tvolume_discount_savings?: number;\r\n\t\tseller_discount_savings?: number;\r\n\t};\r\n}\r\n\r\nexport class CheckoutService {\r\n\t/**\r\n\t * Obtiene el seller ID del carrito de compras\r\n\t */\r\n\tstatic getSellerIdFromCart(cart: ShoppingCart | null): number | null {\r\n\t\tif (!cart || !cart.items || cart.items.length === 0) {\r\n\t\t\tconsole.log(\"🛒 getSellerIdFromCart: Carrito vacío o sin items\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"🛒 getSellerIdFromCart: Analizando carrito:\", {\r\n\t\t\ttotalItems: cart.items.length,\r\n\t\t\titems: cart.items.map((item) => ({\r\n\t\t\t\tid: item.id,\r\n\t\t\t\tproductId: item.productId,\r\n\t\t\t\tquantity: item.quantity,\r\n\t\t\t\tproductData: item.product,\r\n\t\t\t})),\r\n\t\t});\r\n\r\n\t\tconst firstItem = cart.items[0];\r\n\t\tconsole.log(\"🛒 getSellerIdFromCart: Primer item del carrito:\", firstItem);\r\n\r\n\t\tif (firstItem.product) {\r\n\t\t\tconsole.log(\"🛒 getSellerIdFromCart: Producto encontrado:\", {\r\n\t\t\t\tsellerId: firstItem.product.sellerId,\r\n\t\t\t\tseller_id: firstItem.product.seller_id,\r\n\t\t\t\tseller: firstItem.product.seller,\r\n\t\t\t\tuser_id: firstItem.product.user_id,\r\n\t\t\t});\r\n\r\n\t\t\tif (firstItem.product.sellerId) {\r\n\t\t\t\tconsole.log(\"✅ getSellerIdFromCart: Usando sellerId:\", firstItem.product.sellerId);\r\n\t\t\t\treturn firstItem.product.sellerId;\r\n\t\t\t}\r\n\r\n\t\t\tif (firstItem.product.seller_id) {\r\n\t\t\t\tconsole.log(\"✅ getSellerIdFromCart: Usando seller_id:\", firstItem.product.seller_id);\r\n\t\t\t\treturn firstItem.product.seller_id;\r\n\t\t\t}\r\n\r\n\t\t\tif (firstItem.product.seller && firstItem.product.seller.id) {\r\n\t\t\t\tconsole.log(\"✅ getSellerIdFromCart: Usando seller.id:\", firstItem.product.seller.id);\r\n\t\t\t\treturn firstItem.product.seller.id;\r\n\t\t\t}\r\n\r\n\t\t\tif (firstItem.product.user_id) {\r\n\t\t\t\tconsole.log(\"✅ getSellerIdFromCart: Usando user_id como fallback:\", firstItem.product.user_id);\r\n\t\t\t\treturn firstItem.product.user_id;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.warn(\"❌ getSellerIdFromCart: No se pudo obtener seller ID del carrito:\", cart);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * ✅ ACTUALIZADO: Procesar el pago usando precios con descuentos por volumen\r\n\t */\r\n\tasync processCheckout(\r\n\t\tcheckoutData: CheckoutRequest,\r\n\t\tuserEmail?: string\r\n\t): Promise<CheckoutResponse> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"🚀 CheckoutService.processCheckout INICIADO CON DESCUENTOS POR VOLUMEN\");\r\n\t\t\tconsole.log(\"📦 Datos de checkout enviados:\", JSON.stringify(checkoutData, null, 2));\r\n\r\n\t\t\t// ✅ VALIDACIÓN SEGURA: Verificar que address.name existe\r\n\t\t\tif (!checkoutData.shippingAddress.name) {\r\n\t\t\t\tthrow new Error('El nombre en la dirección de envío es requerido');\r\n\t\t\t}\r\n\r\n\t\t\t// ✅ MAPEAR método de pago de manera más robusta\r\n\t\t\tlet paymentMethod: PaymentMethod = checkoutData.payment.method;\r\n\t\t\t\r\n\t\t\t// Mapeo de métodos de pago\r\n\t\t\tconst methodMapping: Record<string, PaymentMethod> = {\r\n\t\t\t\t\"transfer\": \"datafast\",\r\n\t\t\t\t\"credit_card\": \"credit_card\",\r\n\t\t\t\t\"debit_card\": \"debit_card\", \r\n\t\t\t\t\"paypal\": \"paypal\",\r\n\t\t\t\t\"qr\": \"de_una\",\r\n\t\t\t\t\"datafast\": \"datafast\",\r\n\t\t\t\t\"de_una\": \"de_una\"\r\n\t\t\t};\r\n\r\n\t\t\tif (methodMapping[paymentMethod]) {\r\n\t\t\t\tpaymentMethod = methodMapping[paymentMethod];\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"🔍 DEBUGGING - Método después de mapear:\", paymentMethod);\r\n\r\n\t\t\t// ✅ PROCESAR ITEMS CON DESCUENTOS POR VOLUMEN\r\n\t\t\tconst items = checkoutData.items || [];\r\n\t\t\tconsole.log(\"🔍 DEBUGGING - Items recibidos:\", items);\r\n\r\n\t\t\tif (items.length === 0) {\r\n\t\t\t\tconsole.warn(\"⚠️ No se recibieron items en checkoutData\");\r\n\t\t\t}\r\n\r\n\t\t\t// ✅ VALIDAR que los items tengan precios finales correctos\r\n\t\t\tconst validation = CheckoutItemsService.validateItemsForCheckout(items);\r\n\t\t\tif (!validation.valid) {\r\n\t\t\t\tthrow new Error(`Validación de items falló: ${validation.errors.join(', ')}`);\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"✅ Items validados correctamente:\", items);\r\n\r\n\t\t\t// ✅ CONVERSIÓN SEGURA: Mapear dirección a formato requerido por backend\r\n\t\t\t// ✅ USAR CALCULADORA CENTRALIZADA PARA TOTALES EXACTOS\r\n\t\t\tconst appliedDiscount = checkoutData.discount_info || \r\n\t\t\t\t(checkoutData.discount_code ? { \r\n\t\t\t\t\tdiscountCode: { \r\n\t\t\t\t\t\tcode: checkoutData.discount_code,\r\n\t\t\t\t\t\tdiscount_percentage: 5, // Valor por defecto si no se proporciona discount_info\r\n\t\t\t\t\t\tdiscount_amount: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t} : null);\r\n\t\t\t\r\n\t\t\t// ✅ CRÍTICO: NO RECALCULAR - Usar totales ya calculados que se pasaron como parámetro\r\n\t\t\tconsole.log(\"🔍 USANDO TOTALES PRECALCULADOS (NO SE RECALCULA):\");\r\n\t\t\tconsole.log(\"   📊 calculated_totals recibidos:\", checkoutData.calculated_totals);\r\n\r\n\t\t\tconsole.log(\"🔍 FLUJO COMPLETO DE CHECKOUT CORREGIDO:\");\r\n\t\t\tconsole.log(\"1️⃣ Items del carrito:\", checkoutData.items?.length || 0);\r\n\t\t\tconsole.log(\"2️⃣ Código de descuento:\", checkoutData.discount_code || \"NINGUNO\");\r\n\t\t\tconsole.log(\"3️⃣ appliedDiscount:\", appliedDiscount);\r\n\t\t\tconsole.log(\"4️⃣ TOTALES EXACTOS CALCULADOS (CALCULADORA CENTRALIZADA):\", checkoutData.calculated_totals);\r\n\t\t\tconsole.log(\"5️⃣ Total final CORRECTO que debe guardarse en DB:\", checkoutData.calculated_totals?.total, \"✅ DEBE SER $8.87\");\r\n\r\n\t\t\tconst nameParts = (checkoutData.shippingAddress.name || '').split(' ');\r\n\t\t\t\r\n\t\t\t// ✅ FIX: Construir objeto base sin discount_code\r\n\t\t\tconst backendData: any = {\r\n\t\t\t\tpayment: {\r\n\t\t\t\t\t...checkoutData.payment,\r\n\t\t\t\t\tmethod: paymentMethod\r\n\t\t\t\t},\r\n\t\t\t\tshipping: {\r\n\t\t\t\t\tfirst_name: nameParts[0] || '',\r\n\t\t\t\t\tlast_name: nameParts.slice(1).join(' ') || '',\r\n\t\t\t\t\temail: userEmail || '',\r\n\t\t\t\t\tphone: checkoutData.shippingAddress.phone || '',\r\n\t\t\t\t\taddress: checkoutData.shippingAddress.street || '',\r\n\t\t\t\t\tcity: checkoutData.shippingAddress.city || '',\r\n\t\t\t\t\tstate: checkoutData.shippingAddress.state || '',\r\n\t\t\t\t\tpostal_code: checkoutData.shippingAddress.postalCode || '',\r\n\t\t\t\t\tcountry: checkoutData.shippingAddress.country || ''\r\n\t\t\t\t},\r\n\t\t\t\tseller_id: checkoutData.seller_id,\r\n\t\t\t\titems: items, // ✅ Usar items con precios finales calculados\r\n\t\t\t\t// ✅ CRÍTICO: Enviar totales exactos de calculadora centralizada para que backend los use SIN RECALCULAR\r\n\t\t\t\tcalculated_totals: checkoutData.calculated_totals || {\r\n\t\t\t\t\tsubtotal: 0,\r\n\t\t\t\t\ttax: 0,\r\n\t\t\t\t\tshipping: 0,\r\n\t\t\t\t\ttotal: 0,\r\n\t\t\t\t\ttotal_discounts: 0\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t// ✅ FIX: Solo agregar discount_code si hay un cupón válido\r\n\t\t\tif (checkoutData.discount_code && checkoutData.discount_code.trim() !== \"\") {\r\n\t\t\t\tbackendData.discount_code = checkoutData.discount_code.trim();\r\n\t\t\t\tconsole.log(\"✅ Cupón aplicado enviado al backend:\", backendData.discount_code);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"✅ No hay cupón - campo discount_code omitido del request\");\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"🔍 DEBUGGING - Datos completos enviados al backend:\", JSON.stringify(backendData, null, 2));\r\n\t\t\t\r\n\t\t\t// ✅ LOGS CRÍTICOS PARA TOTALES CORREGIDOS\r\n\t\t\tconsole.log(\"💰 TOTALES CRÍTICOS CORREGIDOS QUE DEBE USAR EL BACKEND:\");\r\n\t\t\tconsole.log(\"   📊 Subtotal:\", checkoutData.calculated_totals?.subtotal);\r\n\t\t\tconsole.log(\"   📊 IVA:\", checkoutData.calculated_totals?.tax);\r\n\t\t\tconsole.log(\"   📊 Envío:\", checkoutData.calculated_totals?.shipping);\r\n\t\t\tconsole.log(\"   📊 TOTAL FINAL:\", checkoutData.calculated_totals?.total, \"✅ DEBE SER $8.87\");\r\n\t\t\tconsole.log(\"   📊 Total descuentos:\", checkoutData.calculated_totals?.total_discounts);\r\n\t\t\tconsole.log(\"🚨 EL BACKEND NO DEBE RECALCULAR - USAR ESTOS TOTALES EXACTOS\");\r\n\t\t\tconsole.log(\"🚨 TOTAL ESPERADO EN RESPUESTA:\", checkoutData.calculated_totals?.total);\r\n\r\n\t\t\t// ✅ VALIDACIÓN FINAL antes de enviar\r\n\t\t\tif (backendData.items && backendData.items.length > 0) {\r\n\t\t\t\tfor (let i = 0; i < backendData.items.length; i++) {\r\n\t\t\t\t\tconst item = backendData.items[i];\r\n\t\t\t\t\tif (!item.hasOwnProperty('price') || item.price === undefined || item.price === null) {\r\n\t\t\t\t\t\tthrow new Error(`FATAL: Item ${i} no tiene campo 'price' definido. Item: ${JSON.stringify(item)}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof item.price !== 'number' || item.price <= 0) {\r\n\t\t\t\t\t\tthrow new Error(`FATAL: Item ${i} tiene precio inválido: ${item.price} (tipo: ${typeof item.price})`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"✅ VALIDACIÓN FINAL: Todos los items tienen precios finales válidos\");\r\n\t\t\t}\r\n\r\n\t\t\tconst response = await ApiClient.post<CheckoutResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.CHECKOUT.PROCESS,\r\n\t\t\t\tbackendData\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"✅ CheckoutService: Respuesta del backend:\");\r\n\t\t\tconsole.log(\"📊 Status:\", response.status);\r\n\t\t\tconsole.log(\"💬 Message:\", response.message);\r\n\t\t\tconsole.log(\"📦 Data:\", JSON.stringify(response.data, null, 2));\r\n\r\n\t\t\t// ✅ LOG de información de descuentos si está disponible\r\n\t\t\tif (response.data && typeof response.data === \"object\") {\r\n\t\t\t\tconst dataObj = response.data as any;\r\n\t\t\t\t\r\n\t\t\t\tif (dataObj.total_savings && dataObj.total_savings > 0) {\r\n\t\t\t\t\tconsole.log(\"💰 DESCUENTOS APLICADOS EN LA ORDEN:\");\r\n\t\t\t\t\tconsole.log(`💵 Total ahorrado: $${dataObj.total_savings}`);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (dataObj.volume_discount_savings) {\r\n\t\t\t\t\t\tconsole.log(`📈 Descuentos por volumen: $${dataObj.volume_discount_savings}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (dataObj.seller_discount_savings) {\r\n\t\t\t\t\t\tconsole.log(`🏪 Descuentos del seller: $${dataObj.seller_discount_savings}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"🎉 CheckoutService.processCheckout COMPLETADO CON DESCUENTOS POR VOLUMEN\");\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ CheckoutService: Error al procesar checkout:\");\r\n\t\t\tconsole.error(\"📊 Error object:\", error);\r\n\t\t\tconsole.error(\"📊 Error message:\", (error as any)?.message);\r\n\t\t\tconsole.error(\"📊 Error response:\", (error as any)?.response?.data);\r\n\r\n\t\t\t// ✅ DEBUGGING ADICIONAL para identificar el problema\r\n\t\t\tif ((error as any)?.response?.status === 400) {\r\n\t\t\t\tconsole.error(\"🔍 ERROR 400 DETECTADO - Analizando request enviada:\");\r\n\t\t\t\tconsole.error(\"📊 Payment method enviado:\", checkoutData.payment.method);\r\n\t\t\t\tconsole.error(\"📊 Items enviados:\", checkoutData.items);\r\n\t\t\t\tconsole.error(\"📊 Seller ID enviado:\", checkoutData.seller_id);\r\n\t\t\t}\r\n\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error al procesar el pago. Por favor, intenta de nuevo más tarde.\"\r\n\t\t\t);\r\n\r\n\t\t\tconsole.error(\"📊 Error message final:\", errorMessage);\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtener el carrito actual\r\n\t */\r\n\tasync getCurrentCart(): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"🛒 Obteniendo carrito actual...\");\r\n\t\t\treturn null;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error al obtener carrito actual:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * ✅ CORREGIDO: Preparar items del carrito con descuentos para checkout\r\n\t */\r\n\tstatic async prepareCartItemsForCheckout(cartItems: any[], appliedDiscount: any = null): Promise<CheckoutItem[]> {\r\n\t\tconsole.log(\"🛒 Preparando items del carrito con descuentos\");\r\n\t\tconsole.log(\"🎫 Cupón aplicado:\", appliedDiscount?.discountCode?.code || \"NINGUNO\");\r\n\t\t\r\n\t\tconst checkoutItems = await CheckoutItemsService.prepareItemsForCheckout(cartItems, appliedDiscount);\r\n\t\t\r\n\t\t// ✅ Debug para verificar consistencia\r\n\t\tawait CheckoutItemsService.debugItemPricing(cartItems, checkoutItems);\r\n\t\t\r\n\t\tconsole.log(\"✅ Items preparados para checkout:\", checkoutItems);\r\n\t\t\r\n\t\treturn checkoutItems;\r\n\t}\r\n\r\n\t/**\r\n\t * ✅ NUEVO: Calcular totales para mostrar en checkout\r\n\t */\r\n\tstatic calculateCheckoutTotals(cartItems: any[]) {\r\n\t\treturn CheckoutItemsService.calculateCheckoutTotals(cartItems);\r\n\t}\r\n\r\n\t/**\r\n\t * ✅ ACTUALIZADO: Validar totales considerando descuentos por volumen\r\n\t */\r\n\tstatic validateCheckoutTotals(cartTotal: number, checkoutTotal: number, customTolerance?: number): boolean {\r\n\t\treturn validateTotalsEquality(\r\n\t\t\tcartTotal, \r\n\t\t\tcheckoutTotal, \r\n\t\t\t'Validación CheckoutService',\r\n\t\t\tcustomTolerance\r\n\t\t);\r\n\t}\r\n}","// src/presentation/components/checkout/CreditCardForm.tsx\r\nimport type { PaymentInfo } from \"../../../core/services/CheckoutService\";\r\nimport React from \"react\";\r\n\r\ninterface CreditCardFormProps {\r\n\t// CORREGIDO: Agregar paymentInfo a las props\r\n\tpaymentInfo: PaymentInfo;\r\n\terrors: Record<string, string>;\r\n\tonChange: (field: keyof PaymentInfo, value: string) => void;\r\n\tcontent?: React.ReactNode; // AGREGADO para el content\r\n}\r\n\r\nconst CreditCardForm: React.FC<CreditCardFormProps> = ({content}) => {\r\n\tconst deunaInitiated = false; // Simulación de estado, reemplazar con lógica real\r\n\treturn (\r\n\t\t<div className=\"space-y-4\">\r\n\t\t\t<div className=\"text-center\">\r\n      <p className=\"mb-4 text-gray-600\">\r\n        Paga con Datafast!, ingresa los datos personales para pagar\r\n        de forma rápida y segura.\r\n      </p>\r\n\r\n      {deunaInitiated ? (\r\n        <div className=\"mb-4 mx-auto\">\r\n          <div className=\"bg-gradient-to-r from-[#2fd8a8] to-[#4d1d81] p-6 rounded-lg text-white\">\r\n            {/* Logo de DeUna placeholder */}\r\n            <div className=\"w-24 h-24 mx-auto mb-4 bg-white rounded-full flex items-center justify-center\">\r\n              <div className=\"text-2xl font-bold text-purple-600\">Deuna</div>\r\n            </div>\r\n\r\n            <h3 className=\"text-xl font-bold mb-2\">Pago con Deuna</h3>\r\n            <p className=\"text-purple-100 mb-4\">\r\n            </p>\r\n\r\n            <div className=\"bg-white/20 rounded-lg p-4 mb-4\">\r\n              <div className=\"animate-pulse\">\r\n                <div className=\"text-sm text-purple-100\">\r\n                  Conectando con Deuna...\r\n                </div>\r\n                <div className=\"w-full bg-white/30 rounded-full h-2 mt-2\">\r\n                  <div className=\"bg-white h-2 rounded-full w-3/4 animate-pulse\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              className=\"bg-white/20 hover:bg-white/30 text-white font-medium py-2 px-4 rounded-md transition-colors\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"space-y-4\">\r\n          {/* Información sobre DeUna */}\r\n          <div className=\"bg-[linear-gradient(to_right,_rgba(0,184,110,1)_0%,_rgba(0,77,112,1)_46%,_rgba(0,77,112,1)_100%)] border-purple-200 rounded-lg p-6\">\r\n            <div className=\"flex items-center justify-center mb-4 h-50\">\r\n              <img\r\n                src=\"https://www.datafast.com.ec/images/logo.png\"\r\n                alt=\"DeUna Logo\"\r\n                className=\"h-20\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {content}\r\n        </div>\r\n      )}\r\n      <div className=\"mt-4 text-sm text-gray-500\">\r\n        <p>\r\n          <strong>1.</strong> Haz clic en \"Pagar con Datafast!\"\r\n        </p>\r\n        <p>\r\n          <strong>2.</strong> Completa los datos de tu tarjeta de crédito o débito.\r\n        </p>\r\n        <p>\r\n          <strong>3.</strong> Confirma tu compra al finalizar.\r\n        </p>\r\n      </div>\r\n    </div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CreditCardForm;\r\n","// src/infrastructure/services/DeunaService.ts\nimport { ApiClient } from \"../api/apiClient\";\nimport type { DeunaPaymentRequest, DeunaPaymentResponse, DeunaPaymentStatus } from \"./DeunaTypes\";\nimport { FileText, Clock, CheckCircle, XCircle, Ban, DollarSign, HelpCircle } from \"lucide-react\";\nimport React from \"react\";\n\n// Re-export types for convenience\nexport type { DeunaPaymentRequest, DeunaPaymentResponse, DeunaPaymentStatus };\n\nexport class DeunaService {\n  private static readonly BASE_PATH = '/deuna';\n\n  /**\n   * Create a new DeUna payment\n   */\n  static async createPayment(paymentData: DeunaPaymentRequest): Promise<DeunaPaymentResponse> {\n    try {\n      console.log('DeunaService: Creating payment', paymentData);\n      \n      // Debug: Log exactly what we're sending to the API\n      console.log('🔍 DEUNA SERVICE - EXACT PAYLOAD TO SEND:', {\n        path: `${this.BASE_PATH}/payments`,\n        payload: paymentData,\n        payload_json: JSON.stringify(paymentData),\n        items_in_payload: paymentData.items,\n        items_count: paymentData.items?.length || 0,\n        first_item_keys: paymentData.items && paymentData.items.length > 0 ? Object.keys(paymentData.items[0]) : 'no_items'\n      });\n\n      const response = await ApiClient.post<DeunaPaymentResponse>(\n        `${this.BASE_PATH}/payments`,\n        paymentData\n      );\n\n      console.log('DeunaService: Payment created successfully', response);\n      return response;\n\n    } catch (error: any) {\n      console.error('DeunaService: Error creating payment', error);\n      throw new Error(\n        error.response?.data?.message || \n        error.message || \n        'Error creating payment'\n      );\n    }\n  }\n\n  /**\n   * Generate QR code for existing payment or create new one\n   */\n  static async generateQR(data: Partial<DeunaPaymentRequest> & { payment_id?: string }): Promise<DeunaPaymentResponse> {\n    try {\n      console.log('DeunaService: Generating QR code', data);\n\n      const response = await ApiClient.post<DeunaPaymentResponse>(\n        `${this.BASE_PATH}/payments/qr`,\n        data\n      );\n\n      console.log('DeunaService: QR code generated successfully', response);\n      return response;\n\n    } catch (error: any) {\n      console.error('DeunaService: Error generating QR code', error);\n      throw new Error(\n        error.response?.data?.message || \n        error.message || \n        'Error generating QR code'\n      );\n    }\n  }\n\n  /**\n   * Get payment status by payment ID\n   */\n  static async getPaymentStatus(paymentId: string): Promise<DeunaPaymentStatus> {\n    try {\n      console.log('DeunaService: Getting payment status', { paymentId });\n\n      const response = await ApiClient.get<DeunaPaymentStatus>(\n        `${this.BASE_PATH}/payments/${paymentId}/status`\n      );\n\n      console.log('DeunaService: Payment status retrieved', response);\n      return response;\n\n    } catch (error: any) {\n      console.error('DeunaService: Error getting payment status', error);\n      throw new Error(\n        error.response?.data?.message || \n        error.message || \n        'Error getting payment status'\n      );\n    }\n  }\n\n  /**\n   * Get payment by order ID\n   */\n  static async getPaymentByOrderId(orderId: string): Promise<DeunaPaymentStatus> {\n    try {\n      console.log('DeunaService: Getting payment by order ID', { orderId });\n\n      const response = await ApiClient.get<DeunaPaymentStatus>(\n        `${this.BASE_PATH}/orders/${orderId}/payment`\n      );\n\n      console.log('DeunaService: Payment retrieved by order ID', response);\n      return response;\n\n    } catch (error: any) {\n      console.error('DeunaService: Error getting payment by order ID', error);\n      throw new Error(\n        error.response?.data?.message || \n        error.message || \n        'Error getting payment'\n      );\n    }\n  }\n\n  /**\n   * Cancel a payment\n   */\n  static async cancelPayment(paymentId: string, reason?: string): Promise<{\n    success: boolean;\n    message: string;\n    data: {\n      payment_id: string;\n      status: string;\n      reason: string;\n      cancelled_at: string;\n    };\n  }> {\n    try {\n      console.log('DeunaService: Cancelling payment', { paymentId, reason });\n\n      const response = await ApiClient.post(\n        `${this.BASE_PATH}/payments/${paymentId}/cancel`,\n        { reason: reason || 'Cancelled by user' }\n      );\n\n      console.log('DeunaService: Payment cancelled successfully', response);\n      return response as {\n        success: boolean;\n        message: string;\n        data: {\n          payment_id: string;\n          status: string;\n          reason: string;\n          cancelled_at: string;\n        };\n      };\n\n    } catch (error: any) {\n      console.error('DeunaService: Error cancelling payment', error);\n      throw new Error(\n        error.response?.data?.message || \n        error.message || \n        'Error cancelling payment'\n      );\n    }\n  }\n\n  /**\n   * Void/Refund a payment\n   */\n  static async voidPayment(paymentId: string, amount: number, reason?: string): Promise<{\n    success: boolean;\n    message: string;\n    data: {\n      payment_id: string;\n      status: string;\n      refund_amount: number;\n      reason: string;\n      refunded_at: string;\n    };\n  }> {\n    try {\n      console.log('DeunaService: Processing void/refund', { paymentId, amount, reason });\n\n      const response = await ApiClient.post(\n        `${this.BASE_PATH}/payments/${paymentId}/void`,\n        { \n          amount,\n          reason: reason || 'Void/refund requested by user' \n        }\n      );\n\n      console.log('DeunaService: Payment void/refund processed successfully', response);\n      return response as {\n        success: boolean;\n        message: string;\n        data: {\n          payment_id: string;\n          status: string;\n          refund_amount: number;\n          reason: string;\n          refunded_at: string;\n        };\n      };\n\n    } catch (error: any) {\n      console.error('DeunaService: Error processing void/refund', error);\n      throw new Error(\n        error.response?.data?.message || \n        error.message || \n        'Error processing void/refund'\n      );\n    }\n  }\n\n  /**\n   * List payments with filters\n   */\n  static async listPayments(filters?: {\n    status?: string;\n    order_id?: string;\n    currency?: string;\n    from_date?: string;\n    to_date?: string;\n    customer_email?: string;\n    limit?: number;\n    offset?: number;\n  }): Promise<{\n    success: boolean;\n    data: Array<{\n      payment_id: string;\n      order_id: string;\n      status: string;\n      amount: number;\n      currency: string;\n      customer: Record<string, any>;\n      created_at: string;\n      updated_at: string;\n      completed_at?: string;\n    }>;\n    meta: {\n      count: number;\n      limit: number;\n      offset: number;\n      filters_applied: Record<string, any>;\n    };\n  }> {\n    try {\n      console.log('DeunaService: Listing payments', filters);\n\n      const params = new URLSearchParams();\n      \n      if (filters) {\n        Object.entries(filters).forEach(([key, value]) => {\n          if (value !== undefined && value !== null && value !== '') {\n            params.append(key, String(value));\n          }\n        });\n      }\n\n      const response = await ApiClient.get(\n        `${this.BASE_PATH}/payments?${params.toString()}`\n      );\n\n      console.log('DeunaService: Payments listed successfully', response);\n      return response as {\n        success: boolean;\n        data: {\n          payment_id: string;\n          order_id: string;\n          status: string;\n          amount: number;\n          currency: string;\n          customer: Record<string, any>;\n          created_at: string;\n          updated_at: string;\n          completed_at?: string;\n        }[];\n        meta: {\n          count: number;\n          total: number;\n          limit: number;\n          offset: number;\n          filters_applied: Record<string, any>;\n        };\n      };\n\n    } catch (error: any) {\n      console.error('DeunaService: Error listing payments', error);\n      throw new Error(\n        error.response?.data?.message || \n        error.message || \n        'Error listing payments'\n      );\n    }\n  }\n\n  /**\n   * Poll payment status until completion or timeout (cancelable)\n   */\n  static pollPaymentStatus(\n    paymentId: string, \n    options?: {\n      maxAttempts?: number;\n      interval?: number;\n      onStatusChange?: (status: string) => void;\n      abortSignal?: AbortSignal;\n    }\n  ): { promise: Promise<DeunaPaymentStatus>; cancel: () => void } {\n    const maxAttempts = options?.maxAttempts || 60; // 5 minutes with 5s intervals\n    const interval = options?.interval || 5000; // 5 seconds\n    const onStatusChange = options?.onStatusChange;\n\n    // Create abort controller for cancellation\n    const abortController = new AbortController();\n    \n    const promise = new Promise<DeunaPaymentStatus>(async (resolve, reject) => {\n      let attempts = 0;\n      let lastStatus = '';\n      let timeoutId: NodeJS.Timeout | null = null;\n\n      const cleanup = () => {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n      };\n\n      // Handle abort signal\n      const onAbort = () => {\n        cleanup();\n        reject(new Error('Payment polling was cancelled'));\n      };\n\n      abortController.signal.addEventListener('abort', onAbort);\n\n      try {\n        while (attempts < maxAttempts && !abortController.signal.aborted) {\n          try {\n            const statusResponse = await this.getPaymentStatus(paymentId);\n            const currentStatus = statusResponse.data.status;\n\n            // Check for abortion before processing\n            if (abortController.signal.aborted) {\n              cleanup();\n              return;\n            }\n\n            // Notify status change if callback provided\n            if (currentStatus !== lastStatus && onStatusChange) {\n              onStatusChange(currentStatus);\n              lastStatus = currentStatus;\n            }\n\n            // Check if payment is in final state\n            if (['completed', 'failed', 'cancelled', 'refunded'].includes(currentStatus)) {\n              console.log(`DeunaService: Payment reached final status: ${currentStatus}`);\n              cleanup();\n              abortController.signal.removeEventListener('abort', onAbort);\n              resolve(statusResponse);\n              return;\n            }\n\n            attempts++;\n            \n            // Wait before next attempt (with cancellation check)\n            if (attempts < maxAttempts && !abortController.signal.aborted) {\n              await new Promise<void>((resolveTimeout, rejectTimeout) => {\n                timeoutId = setTimeout(() => {\n                  timeoutId = null;\n                  if (abortController.signal.aborted) {\n                    rejectTimeout(new Error('Cancelled'));\n                  } else {\n                    resolveTimeout();\n                  }\n                }, interval);\n\n                // Also check abort during timeout\n                const checkAbort = () => {\n                  if (timeoutId) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                  }\n                  rejectTimeout(new Error('Cancelled'));\n                };\n\n                abortController.signal.addEventListener('abort', checkAbort, { once: true });\n              });\n            }\n\n          } catch (error: any) {\n            if (abortController.signal.aborted) {\n              cleanup();\n              return;\n            }\n\n            console.warn(`DeunaService: Error polling payment status (attempt ${attempts + 1})`, error);\n            attempts++;\n            \n            if (attempts < maxAttempts) {\n              // Wait before retry with cancellation check\n              await new Promise<void>((resolveTimeout, rejectTimeout) => {\n                timeoutId = setTimeout(() => {\n                  timeoutId = null;\n                  if (abortController.signal.aborted) {\n                    rejectTimeout(new Error('Cancelled'));\n                  } else {\n                    resolveTimeout();\n                  }\n                }, interval);\n\n                const checkAbort = () => {\n                  if (timeoutId) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                  }\n                  rejectTimeout(new Error('Cancelled'));\n                };\n\n                abortController.signal.addEventListener('abort', checkAbort, { once: true });\n              });\n            }\n          }\n        }\n\n        cleanup();\n        abortController.signal.removeEventListener('abort', onAbort);\n\n        if (abortController.signal.aborted) {\n          reject(new Error('Payment polling was cancelled'));\n        } else {\n          reject(new Error(`Payment status polling timed out after ${maxAttempts} attempts`));\n        }\n\n      } catch (error: any) {\n        cleanup();\n        abortController.signal.removeEventListener('abort', onAbort);\n        if (error.message === 'Cancelled') {\n          reject(new Error('Payment polling was cancelled'));\n        } else {\n          reject(error);\n        }\n      }\n    });\n\n    return {\n      promise,\n      cancel: () => {\n        console.log('DeunaService: Cancelling payment polling');\n        abortController.abort();\n      }\n    };\n  }\n\n  /**\n   * Validate QR code format\n   */\n  static isValidQRCode(qrCode: string): boolean {\n    if (!qrCode || qrCode.trim() === '') {\n      return false;\n    }\n\n    // Check if it's a base64 encoded image\n    if (qrCode.startsWith('data:image/')) {\n      return true;\n    }\n\n    // Check if it's a valid URL\n    try {\n      new URL(qrCode);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Format currency for display\n   */\n  static formatCurrency(amount: number, currency: string = 'USD'): string {\n    return new Intl.NumberFormat('es-EC', {\n      style: 'currency',\n      currency: currency,\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(amount);\n  }\n\n  /**\n   * Get payment method display name\n   */\n  static getPaymentMethodDisplayName(method: string): string {\n    const methodNames: Record<string, string> = {\n      'qr_code': 'Código QR',\n      'payment_link': 'Enlace de Pago',\n      'numeric_code': 'Código Numérico',\n      'deuna': 'DeUna',\n    };\n\n    return methodNames[method] || method;\n  }\n\n  /**\n   * Get status display information\n   */\n  static getStatusDisplay(status: string): { label: string; color: string; icon: React.ReactElement } {\n    const statusMap: Record<string, { label: string; color: string; icon: React.ReactElement }> = {\n      'created': { label: 'Creado', color: 'blue', icon: React.createElement(FileText, { className: \"w-4 h-4\" }) },\n      'pending': { label: 'Pendiente', color: 'yellow', icon: React.createElement(Clock, { className: \"w-4 h-4\" }) },\n      'completed': { label: 'Completado', color: 'green', icon: React.createElement(CheckCircle, { className: \"w-4 h-4\" }) },\n      'failed': { label: 'Fallido', color: 'red', icon: React.createElement(XCircle, { className: \"w-4 h-4\" }) },\n      'cancelled': { label: 'Cancelado', color: 'gray', icon: React.createElement(Ban, { className: \"w-4 h-4\" }) },\n      'refunded': { label: 'Reembolsado', color: 'purple', icon: React.createElement(DollarSign, { className: \"w-4 h-4\" }) },\n    };\n\n    return statusMap[status] || { label: status, color: 'gray', icon: React.createElement(HelpCircle, { className: \"w-4 h-4\" }) };\n  }\n\n  /**\n   * Simulate payment success (for testing only)\n   * This triggers the webhook simulation endpoint\n   */\n  static async simulatePaymentSuccess(paymentId: string, amount?: number, customerEmail?: string): Promise<{\n    success: boolean;\n    message: string;\n    data?: any;\n  }> {\n    try {\n      console.log('🧪 Simulating payment success for testing', { paymentId, amount, customerEmail });\n\n      const response = await ApiClient.post<{\n        success: boolean;\n        message: string;\n        data: any;\n      }>(\n        '/webhooks/deuna/simulate-payment-success',\n        {\n          payment_id: paymentId,\n          amount: amount || 100.00,\n          currency: 'USD',\n          customer_email: customerEmail || 'test@example.com',\n          customer_name: 'Test Customer'\n        }\n      );\n\n      console.log('🎉 Payment simulation response:', response);\n      return response;\n\n    } catch (error: any) {\n      console.error('❌ Error simulating payment:', error);\n      throw new Error(\n        error.response?.data?.message || \n        error.message || \n        'Error simulando el pago'\n      );\n    }\n  }\n\n  /**\n   * Check if we're in development environment\n   */\n  static isDevelopmentMode(): boolean {\n    return process.env.NODE_ENV === 'development' || \n           window.location.hostname === 'localhost' || \n           window.location.hostname === '127.0.0.1';\n  }\n}","// src/presentation/components/checkout/QRPaymentForm.tsx\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useCart } from \"../../hooks/useCart\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { formatCurrency } from \"../../../utils/formatters/formatCurrency\";\r\nimport { DeunaService } from \"../../../infrastructure/services/DeunaService\";\r\nimport type { DeunaPaymentRequest } from \"../../../infrastructure/services/DeunaTypes\";\r\nimport { CheckCircle, XCircle, Clock, RefreshCw, Copy, ExternalLink, Smartphone, Zap } from \"lucide-react\";\r\n\r\ninterface QRPaymentFormProps {\r\n  total?: number;\r\n  onPaymentSuccess?: (paymentData: any) => void;\r\n  onPaymentError?: (error: string) => void;\r\n}\r\n\r\nconst QRPaymentForm: React.FC<QRPaymentFormProps> = ({\r\n  total: totalProp,\r\n  onPaymentSuccess,\r\n  onPaymentError\r\n}) => {\r\n  const { cart } = useCart();\r\n  const { user } = useAuth();\r\n  \r\n  // States\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [paymentData, setPaymentData] = useState<any>(null);\r\n  const [error, setError] = useState<string>(\"\");\r\n  const [isPolling, setIsPolling] = useState(false);\r\n  const [currentStatus, setCurrentStatus] = useState<string>(\"\");\r\n  const [timeRemaining, setTimeRemaining] = useState<number>(600); // 10 minutes\r\n  const [copySuccess, setCopySuccess] = useState<boolean>(false);\r\n  const [isSimulating, setIsSimulating] = useState<boolean>(false);\r\n  \r\n  // 🚨 CRITICAL FIX: References for cleanup - prevent memory leaks\r\n  const pollingRef = React.useRef<any>(null);\r\n  const timerRef = React.useRef<NodeJS.Timeout | null>(null);\r\n  const cleanupRefs = React.useRef<(() => void)[]>([]);\r\n\r\n  // Use prop total if provided, otherwise fallback to cart total\r\n  const total = totalProp ?? cart?.total ?? 0;\r\n\r\n  // Create order ID for payment\r\n  const generateOrderId = useCallback(() => {\r\n    return `ORDER-${Date.now()}-${Math.random().toString(36).substr(2, 9).toUpperCase()}`;\r\n  }, []);\r\n\r\n  // Copy to clipboard functionality\r\n  const copyToClipboard = async (text: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      setCopySuccess(true);\r\n      setTimeout(() => setCopySuccess(false), 2000);\r\n    } catch (err) {\r\n      console.error('Failed to copy to clipboard:', err);\r\n    }\r\n  };\r\n\r\n  // 🚨 CRITICAL FIX: Timer countdown effect with complete cleanup\r\n  useEffect(() => {\r\n    if (paymentData && isPolling && timeRemaining > 0) {\r\n      const interval = setInterval(() => {\r\n        setTimeRemaining(prev => {\r\n          if (prev <= 1) {\r\n            setIsPolling(false);\r\n            setError(\"El tiempo de pago ha expirado. El pago ha sido cancelado automáticamente.\");\r\n            \r\n            // Automatically cancel the payment when timer reaches 0\r\n            if (paymentData?.payment_id) {\r\n              console.log('⏰ Timer expired - automatically cancelling payment:', paymentData.payment_id);\r\n              \r\n              // Cancel the payment immediately (don't wait for async)\r\n              DeunaService.cancelPayment(paymentData.payment_id, 'Timer expired - automatic cancellation')\r\n                .then(() => {\r\n                  console.log('✅ Payment automatically cancelled due to timer expiration');\r\n                  setCurrentStatus('cancelled');\r\n                  \r\n                  // Stop any active polling\r\n                  if (pollingRef.current?.cancel) {\r\n                    pollingRef.current.cancel();\r\n                    pollingRef.current = null;\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  console.error('❌ Error automatically cancelling expired payment:', error);\r\n                  // Still set as cancelled in UI even if API call fails\r\n                  setCurrentStatus('cancelled');\r\n                });\r\n            }\r\n            \r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n\r\n      // 🚨 CRITICAL FIX: Store timer reference for cleanup\r\n      timerRef.current = interval;\r\n      \r\n      // Add to cleanup refs\r\n      cleanupRefs.current.push(() => {\r\n        if (interval) {\r\n          clearInterval(interval);\r\n        }\r\n      });\r\n    }\r\n\r\n    // 🚨 CRITICAL FIX: Complete cleanup function\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [paymentData, isPolling, timeRemaining]);\r\n\r\n  // 🚨 CRITICAL FIX: Component unmount cleanup to prevent memory leaks\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log('🚨 QRPaymentForm: Component unmounting, executing critical cleanup');\r\n      resetPayment();\r\n    };\r\n  }, []); // Empty dependency array - only run on unmount\r\n\r\n  // Format time remaining\r\n  const formatTime = (seconds: number) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Handle payment status changes during polling\r\n  const handleStatusChange = useCallback((status: string) => {\r\n    console.log('Payment status changed:', status);\r\n    setCurrentStatus(status);\r\n    \r\n    const statusDisplay = DeunaService.getStatusDisplay(status);\r\n    \r\n    switch (status) {\r\n      case 'completed':\r\n        setIsPolling(false);\r\n        console.log('✅ Payment completed successfully, calling onPaymentSuccess');\r\n        // Give webhook time to process and create the order\r\n        setTimeout(() => {\r\n          if (onPaymentSuccess) {\r\n            onPaymentSuccess({\r\n              ...paymentData,\r\n              status: 'completed',\r\n              completed_at: new Date().toISOString()\r\n            });\r\n          }\r\n        }, 2000); // 2 second delay to allow webhook processing\r\n        break;\r\n      case 'failed':\r\n      case 'cancelled':\r\n        setIsPolling(false);\r\n        const errorMsg = `Pago ${statusDisplay.label.toLowerCase()}`;\r\n        setError(errorMsg);\r\n        if (onPaymentError) {\r\n          onPaymentError(errorMsg);\r\n        }\r\n        break;\r\n    }\r\n  }, [paymentData, onPaymentSuccess, onPaymentError]);\r\n\r\n  // Generate QR code for payment\r\n  const generateQRPayment = async () => {\r\n    if (!user || !cart?.items?.length) {\r\n      setError(\"Información de usuario o carrito no disponible\");\r\n      return;\r\n    }\r\n\r\n    setIsGenerating(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const orderId = generateOrderId();\r\n\r\n      // Debug: Log cart items before transformation\r\n      console.log('🔍 CART ITEMS BEFORE TRANSFORMATION:', cart.items.map((item, index) => ({\r\n        index,\r\n        productId: item.productId,\r\n        product_name: item.product?.name,\r\n        quantity: item.quantity,\r\n        final_price: item.final_price,\r\n        price: item.price,\r\n        subtotal: item.subtotal,\r\n        all_keys: Object.keys(item)\r\n      })));\r\n\r\n      // Prepare payment request\r\n      const paymentRequest: DeunaPaymentRequest = {\r\n        order_id: orderId,\r\n        amount: total,\r\n        currency: 'USD',\r\n        customer: {\r\n          name: user.name || 'Cliente',\r\n          email: user.email,\r\n          phone: user.phone || undefined,\r\n        },\r\n        items: cart.items.map((item, index) => {\r\n          // 🔧 CRITICAL FIX: Ensure product_id is always present and valid\r\n          const productId = item.productId || item.product?.id || (item.product as any)?.product_id;\r\n          \r\n          if (!productId) {\r\n            console.error(`❌ CRITICAL: Missing product_id for cart item ${index}:`, {\r\n              item_keys: Object.keys(item),\r\n              item_productId: item.productId,\r\n              product_id_alternatives: {\r\n                'item.product?.id': item.product?.id,\r\n                'item.product?.product_id': (item.product as any)?.product_id,\r\n                'item.id': item.id\r\n              },\r\n              full_item: item\r\n            });\r\n            throw new Error(`Cart item ${index} is missing product_id. Cannot proceed with payment.`);\r\n          }\r\n\r\n          const mappedItem = {\r\n            name: item.product?.name || 'Producto',\r\n            quantity: item.quantity,\r\n            price: item.final_price || item.price || item.subtotal || 0,\r\n            description: (item.product as any)?.description || '',\r\n            product_id: productId, // 🔧 FIXED: Use the validated product_id\r\n          };\r\n          \r\n          // Debug: Log each item transformation\r\n          console.log(`✅ ITEM ${index} TRANSFORMATION SUCCESS:`, {\r\n            original_productId: item.productId,\r\n            mapped_product_id: mappedItem.product_id,\r\n            product_id_source: item.productId ? 'item.productId' : item.product?.id ? 'item.product.id' : 'other',\r\n            mapped_item_keys: Object.keys(mappedItem),\r\n            mapped_item: mappedItem\r\n          });\r\n          \r\n          return mappedItem;\r\n        }),\r\n        qr_type: 'dynamic',\r\n        format: '2', // QR + Payment Link\r\n        metadata: {\r\n          source: 'bcommerce_frontend',\r\n          user_id: user.id,\r\n          cart_id: cart.id,\r\n          checkout_timestamp: new Date().toISOString(),\r\n        }\r\n      };\r\n\r\n      // Debug: Log final payment request\r\n      console.log('🚀 FINAL PAYMENT REQUEST TO SEND:', {\r\n        order_id: paymentRequest.order_id,\r\n        amount: paymentRequest.amount,\r\n        items_count: paymentRequest.items?.length || 0,\r\n        items: paymentRequest.items,\r\n        first_item_keys: paymentRequest.items && paymentRequest.items.length > 0 ? Object.keys(paymentRequest.items[0]) : 'no_items'\r\n      });\r\n\r\n      console.log('Creating DeUna payment:', paymentRequest);\r\n\r\n      // Create payment with DeUna\r\n      const response = await DeunaService.createPayment(paymentRequest);\r\n      \r\n      console.log('DeUna API Response:', response);\r\n      console.log('Response structure:', Object.keys(response));\r\n      \r\n      if (response.success) {\r\n        console.log('Payment data from response:', response.data);\r\n        console.log('QR code in response:', response.data?.qr_code_base64);\r\n        setPaymentData(response.data);\r\n        setCurrentStatus(response.data.status);\r\n        setTimeRemaining(600); // Reset to 10 minutes\r\n        \r\n        // Start polling for status updates\r\n        setIsPolling(true);\r\n        \r\n        // Start polling in background (now cancelable)\r\n        const polling = DeunaService.pollPaymentStatus(response.data.payment_id, {\r\n          maxAttempts: 120, // 10 minutes\r\n          interval: 5000, // 5 seconds\r\n          onStatusChange: handleStatusChange\r\n        });\r\n\r\n        pollingRef.current = polling;\r\n\r\n        polling.promise.catch(err => {\r\n          if (err.message === 'Payment polling was cancelled') {\r\n            console.log('DeunaService: Polling cancelled successfully');\r\n          } else {\r\n            console.error('Polling error:', err);\r\n            if (isPolling) {\r\n              setError('Error monitoreando el estado del pago');\r\n            }\r\n          }\r\n        });\r\n        \r\n      } else {\r\n        throw new Error(response.message || 'Error creating payment');\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.error('Error generating QR payment:', error);\r\n      setError(error.message || 'Error al generar el código QR');\r\n      if (onPaymentError) {\r\n        onPaymentError(error.message);\r\n      }\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  // 🚨 CRITICAL FIX: Complete reset with all cleanup\r\n  const resetPayment = () => {\r\n    // Cancel active polling\r\n    if (pollingRef.current?.cancel) {\r\n      pollingRef.current.cancel();\r\n      pollingRef.current = null;\r\n    }\r\n    \r\n    // 🚨 CRITICAL FIX: Clear timer to prevent memory leak\r\n    if (timerRef.current) {\r\n      clearInterval(timerRef.current);\r\n      timerRef.current = null;\r\n    }\r\n    \r\n    // 🚨 CRITICAL FIX: Execute all cleanup functions\r\n    cleanupRefs.current.forEach(cleanup => {\r\n      try {\r\n        cleanup();\r\n      } catch (error) {\r\n        console.error('Error during cleanup:', error);\r\n      }\r\n    });\r\n    cleanupRefs.current = [];\r\n    \r\n    setPaymentData(null);\r\n    setError(\"\");\r\n    setCurrentStatus(\"\");\r\n    setIsPolling(false);\r\n    setTimeRemaining(600);\r\n    setCopySuccess(false);\r\n    \r\n    console.log('🧹 QRPaymentForm: Complete cleanup executed');\r\n  };\r\n\r\n  // Cancel payment\r\n  const handleCancelPayment = async () => {\r\n    if (!paymentData?.payment_id || currentStatus === 'completed') {\r\n      resetPayment();\r\n      return;\r\n    }\r\n\r\n    if (!isPolling) {\r\n      resetPayment();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Cancelling payment:', paymentData.payment_id);\r\n      \r\n      // Stop polling first (cancel the polling Promise)\r\n      if (pollingRef.current?.cancel) {\r\n        pollingRef.current.cancel();\r\n        pollingRef.current = null;\r\n      }\r\n      setIsPolling(false);\r\n      \r\n      // Cancel payment via API\r\n      await DeunaService.cancelPayment(paymentData.payment_id, 'Cancelled by user');\r\n      \r\n      // Update UI\r\n      setCurrentStatus('cancelled');\r\n      setError('Pago cancelado por el usuario');\r\n      \r\n      console.log('Payment successfully cancelled by user');\r\n      \r\n    } catch (error: any) {\r\n      console.error('Error cancelling payment:', error);\r\n      setError('Error al cancelar el pago: ' + error.message);\r\n      setIsPolling(false);\r\n    }\r\n  };\r\n\r\n  // Handle generating new QR (cancels current payment first if active)\r\n  const handleNewQR = async () => {\r\n    try {\r\n      setIsGenerating(true);\r\n      setError(\"\");\r\n\r\n      // If there's an active payment being polled, cancel it first\r\n      if (paymentData?.payment_id && isPolling && !['completed', 'cancelled', 'failed'].includes(currentStatus)) {\r\n        try {\r\n          console.log('Cancelling current payment before generating new QR:', paymentData.payment_id);\r\n          \r\n          // Stop polling\r\n          if (pollingRef.current?.cancel) {\r\n            pollingRef.current.cancel();\r\n            pollingRef.current = null;\r\n          }\r\n          setIsPolling(false);\r\n          \r\n          // Cancel current payment\r\n          await DeunaService.cancelPayment(paymentData.payment_id, 'Cancelled to generate new QR');\r\n          \r\n          console.log('Current payment cancelled successfully');\r\n          \r\n        } catch (error: any) {\r\n          console.error('Error cancelling current payment:', error);\r\n          // Continue with new payment generation even if cancel fails\r\n        }\r\n      }\r\n\r\n      // Generate new payment (reuse existing logic)\r\n      await generateQRPayment();\r\n\r\n    } catch (error: any) {\r\n      console.error('Error generating new QR:', error);\r\n      setError('Error al generar nuevo código QR: ' + error.message);\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  // Simulate payment success (for testing only)\r\n  const handleSimulatePayment = async () => {\r\n    if (!paymentData?.payment_id) {\r\n      setError(\"No hay un pago activo para simular\");\r\n      return;\r\n    }\r\n\r\n    setIsSimulating(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      console.log('🧪 Simulating payment success for testing purposes');\r\n      \r\n      // Call the simulation endpoint\r\n      const result = await DeunaService.simulatePaymentSuccess(\r\n        paymentData.payment_id,\r\n        paymentData.amount,\r\n        user?.email\r\n      );\r\n\r\n      if (result.success) {\r\n        console.log('✅ Payment simulation successful:', result);\r\n        \r\n        // Update status to completed\r\n        setCurrentStatus('completed');\r\n        setIsPolling(false);\r\n        \r\n        // Stop any active polling\r\n        if (pollingRef.current?.cancel) {\r\n          pollingRef.current.cancel();\r\n          pollingRef.current = null;\r\n        }\r\n        \r\n        // Trigger success callback\r\n        if (onPaymentSuccess) {\r\n          onPaymentSuccess({\r\n            ...paymentData,\r\n            status: 'completed',\r\n            completed_at: new Date().toISOString(),\r\n            simulated: true\r\n          });\r\n        }\r\n        \r\n      } else {\r\n        throw new Error(result.message || 'Simulation failed');\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.error('❌ Error simulating payment:', error);\r\n      setError('Error simulando el pago: ' + error.message);\r\n    } finally {\r\n      setIsSimulating(false);\r\n    }\r\n  };\r\n\r\n  // Status indicator component\r\n  const StatusIndicator = () => {\r\n    if (!currentStatus) return null;\r\n    \r\n    const statusDisplay = DeunaService.getStatusDisplay(currentStatus);\r\n    \r\n    return (\r\n      <div className={`flex items-center justify-center p-3 rounded-lg mb-4 ${\r\n        statusDisplay.color === 'green' ? 'bg-green-50 text-green-700' :\r\n        statusDisplay.color === 'red' ? 'bg-red-50 text-red-700' :\r\n        statusDisplay.color === 'yellow' ? 'bg-yellow-50 text-yellow-700' :\r\n        'bg-blue-50 text-blue-700'\r\n      }`}>\r\n        <span className=\"mr-2\">{statusDisplay.icon}</span>\r\n        <span className=\"font-medium\">{statusDisplay.label}</span>\r\n        {isPolling && statusDisplay.color === 'yellow' && (\r\n          <RefreshCw className=\"w-4 h-4 ml-2 animate-spin\" />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // If payment is generated, show QR code interface\r\n  if (paymentData) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <StatusIndicator />\r\n        \r\n        {/* Timer */}\r\n        {isPolling && (\r\n          <div className=\"text-center\">\r\n            <div className=\"inline-flex items-center bg-blue-50 text-blue-700 px-4 py-2 rounded-lg\">\r\n              <Clock className=\"w-4 h-4 mr-2\" />\r\n              <span className=\"font-mono text-lg\">{formatTime(timeRemaining)}</span>\r\n            </div>\r\n            <p className=\"text-sm text-gray-500 mt-2\">\r\n              Tiempo restante para completar el pago\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* QR Code Display with DeUna Style */}\r\n        {paymentData.qr_code_base64 && !['cancelled', 'failed'].includes(currentStatus) ? (\r\n          <div className=\"mb-4 mx-auto\">\r\n            <div className=\"bg-[#2fd8a8] p-6 rounded-lg text-white\">\r\n              {/* Logo de DeUna placeholder */}\r\n              <div className=\"w-24 h-24 mx-auto mb-4 bg-white rounded-full flex items-center justify-center\">\r\n                <img\r\n                  src=\"https://deuna.app/assets/img/brand/logo-deuna.svg\"\r\n                  alt=\"DeUna Logo\"\r\n                  className=\"w-20 h-20\"\r\n                />\r\n              </div>\r\n\r\n              <h3 className=\"text-xl font-bold mb-2\">Pago con Deuna</h3>\r\n              <p className=\"text-purple-100 mb-4\">\r\n                Monto a pagar: {formatCurrency(total)}\r\n              </p>\r\n\r\n              <div className=\"bg-white rounded-lg p-4 mb-4\">\r\n                <img \r\n                  src={paymentData.qr_code_base64} \r\n                  alt=\"Código QR para pago\" \r\n                  className=\"w-full h-auto max-w-64 mx-auto\"\r\n                />\r\n              </div>\r\n\r\n              <p className=\"text-purple-100 text-sm mb-4 flex items-center justify-center\">\r\n                <Smartphone className=\"w-4 h-4 mr-2\" />\r\n                Escanea con tu app Deuna\r\n              </p>\r\n\r\n              <button\r\n                onClick={handleCancelPayment}\r\n                className=\"bg-white/20 hover:bg-white/30 text-white font-medium py-2 px-4 rounded-md transition-colors\"\r\n                disabled={!isPolling || currentStatus === 'completed'}\r\n              >\r\n                {isPolling ? 'Cancelar Pago' : 'Cerrar'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          // Show message when payment is cancelled or failed\r\n          ['cancelled', 'failed'].includes(currentStatus) && (\r\n            <div className=\"mb-4 mx-auto\">\r\n              <div className=\"bg-gray-100 border-2 border-gray-300 p-6 rounded-lg text-center\">\r\n                <div className=\"w-24 h-24 mx-auto mb-4 bg-gray-300 rounded-full flex items-center justify-center\">\r\n                  <XCircle className=\"w-12 h-12 text-gray-500\" />\r\n                </div>\r\n                \r\n                <h3 className=\"text-xl font-bold text-gray-700 mb-2\">\r\n                  {currentStatus === 'cancelled' ? 'Pago Cancelado' : 'Pago Fallido'}\r\n                </h3>\r\n                <p className=\"text-gray-600 mb-4\">\r\n                  {currentStatus === 'cancelled' \r\n                    ? 'El pago fue cancelado. Puedes generar un nuevo código QR.' \r\n                    : 'El pago falló. Puedes intentar generar un nuevo código QR.'\r\n                  }\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )\r\n        )}\r\n\r\n        {/* Payment Link */}\r\n        {paymentData.payment_url && !['cancelled', 'failed'].includes(currentStatus) && (\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex flex-col sm:flex-row gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={paymentData.payment_url}\r\n                readOnly\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-sm\"\r\n              />\r\n              <button\r\n                onClick={() => copyToClipboard(paymentData.payment_url)}\r\n                className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg transition-colors flex items-center justify-center\"\r\n              >\r\n                <Copy className=\"w-4 h-4 mr-1\" />\r\n                {copySuccess ? 'Copiado!' : 'Copiar'}\r\n              </button>\r\n            </div>\r\n            \r\n            <a\r\n              href={paymentData.payment_url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"w-full bg-[#3f2b57] hover:bg-[#3f2b45] text-white font-medium py-3 px-4 rounded-lg transition-colors flex items-center justify-center\"\r\n            >\r\n              <ExternalLink className=\"w-4 h-4 mr-2\" />\r\n              Abrir enlace de pago\r\n            </a>\r\n          </div>\r\n        )}\r\n\r\n        {/* Numeric Code */}\r\n        {paymentData.numeric_code && !['cancelled', 'failed'].includes(currentStatus) && (\r\n          <div className=\"bg-gray-50 p-4 rounded-lg text-center\">\r\n            <p className=\"text-sm text-gray-600 mb-2\">Código numérico:</p>\r\n            <p className=\"text-2xl font-mono font-bold text-gray-900 tracking-wider\">\r\n              {paymentData.numeric_code}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Payment Amount */}\r\n        <div className=\"text-center\">\r\n          <p className=\"text-lg font-semibold text-gray-900\">\r\n            Monto a pagar: {formatCurrency(total)}\r\n          </p>\r\n          <p className=\"text-sm text-gray-500\">\r\n            ID de Pago: {paymentData.payment_id}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"flex flex-col sm:flex-row gap-3\">\r\n          <button\r\n            onClick={handleNewQR}\r\n            disabled={isGenerating}\r\n            className=\"flex-1 bg-gray-100 hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed text-gray-700 font-medium py-2 px-4 rounded-lg transition-colors flex items-center justify-center\"\r\n          >\r\n            {isGenerating ? (\r\n              <>\r\n                <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                Generando...\r\n              </>\r\n            ) : (\r\n              'Generar Nuevo QR'\r\n            )}\r\n          </button>\r\n\r\n          {/* Simulation Button - Only show in development and when payment is active */}\r\n          {DeunaService.isDevelopmentMode() && isPolling && !['completed', 'cancelled', 'failed'].includes(currentStatus) && (\r\n            <button\r\n              onClick={handleSimulatePayment}\r\n              disabled={isSimulating}\r\n              className=\"flex-1 bg-orange-500 hover:bg-orange-600 disabled:opacity-50 disabled:cursor-not-allowed text-white font-medium py-2 px-4 rounded-lg transition-colors flex items-center justify-center\"\r\n            >\r\n              {isSimulating ? (\r\n                <>\r\n                  <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                  Simulando...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Zap className=\"w-4 h-4 mr-2\" />\r\n                  🧪 Simular Pago\r\n                </>\r\n              )}\r\n            </button>\r\n          )}\r\n          \r\n          {currentStatus === 'completed' && (\r\n            <button\r\n              onClick={() => onPaymentSuccess && onPaymentSuccess(paymentData)}\r\n              className=\"flex-1 bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-lg transition-colors flex items-center justify-center\"\r\n            >\r\n              <CheckCircle className=\"w-4 h-4 mr-2\" />\r\n              Continuar\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Error Display */}\r\n        {error && (\r\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n            <div className=\"flex items-center\">\r\n              <XCircle className=\"w-5 h-5 text-red-600 mr-2\" />\r\n              <p className=\"text-red-700\">{error}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Instructions */}\r\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n          <h4 className=\"font-medium text-blue-900 mb-2\">Instrucciones:</h4>\r\n          <ol className=\"text-sm text-blue-800 space-y-1\">\r\n            <li><strong>1.</strong> Escanea el código QR con tu app de pagos</li>\r\n            <li><strong>2.</strong> O usa el enlace de pago en tu dispositivo móvil</li>\r\n            <li><strong>3.</strong> Completa el pago en la aplicación</li>\r\n            <li><strong>4.</strong> Espera la confirmación automática</li>\r\n          </ol>\r\n          \r\n          {/* Development Note */}\r\n          {DeunaService.isDevelopmentMode() && isPolling && (\r\n            <div className=\"mt-3 pt-3 border-t border-blue-300\">\r\n              <p className=\"text-xs text-orange-700 bg-orange-50 p-2 rounded\">\r\n                🧪 <strong>Modo de desarrollo:</strong> Puedes usar el botón \"Simular Pago\" para testear el flujo completo sin necesidad de realizar un pago real.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Initial state - show generate button\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <p className=\"mb-4 text-center text-gray-600\">\r\n        Paga con DeUna!, Genera el código qr y escanealo desde tu app para pagar\r\n        de forma rápida y segura.\r\n      </p>\r\n\r\n      {/* Información sobre DeUna */}\r\n      <div className=\"bg-[#2fd8a8] border-purple-200 rounded-lg p-6\">\r\n        <div className=\"flex items-center justify-center mb-4\">\r\n          <img\r\n            src=\"https://deuna.app/assets/img/brand/logo-deuna.svg\"\r\n            alt=\"DeUna Logo\"\r\n            className=\"w-50 h-50\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Generate Payment Button */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={generateQRPayment}\r\n        disabled={isGenerating || !user || !cart?.items?.length}\r\n        className=\"w-full bg-[#3f2b57] hover:bg-[#342843] disabled:opacity-50 disabled:cursor-not-allowed text-white font-bold py-3 px-6 rounded-lg transition-all duration-200 transform hover:scale-101 disabled:transform-none flex items-center justify-center\"\r\n      >\r\n        {isGenerating ? (\r\n          <>\r\n            <RefreshCw className=\"w-5 h-5 mr-2 animate-spin\" />\r\n            Generando código QR...\r\n          </>\r\n        ) : (\r\n          `Pagar con DeUna! - ${formatCurrency(total)}`\r\n        )}\r\n      </button>\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center\">\r\n            <XCircle className=\"w-5 h-5 text-red-600 mr-2\" />\r\n            <p className=\"text-red-700\">{error}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mt-4 text-sm text-center text-gray-500\">\r\n        <p>\r\n          <strong>1.</strong> Haz clic en \"Pagar con DeUna!\"\r\n        </p>\r\n        <p>\r\n          <strong>2.</strong> Completa el pago con el QR\r\n        </p>\r\n        <p>\r\n          <strong>3.</strong> Confirma tu compra al finalizar.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRPaymentForm;","import React from \"react\";\r\nimport type {Address} from \"../../../core/domain/valueObjects/Address\";\r\n\r\ninterface AddressFormProps {\r\n\ttitle: string;\r\n\taddress: Partial<Address>;\r\n\tonAddressChange: (field: keyof Address, value: string) => void;\r\n\terrors: Record<string, string>;\r\n}\r\n\r\nconst AddressForm: React.FC<AddressFormProps> = ({\r\n\ttitle,\r\n\taddress,\r\n\tonAddressChange,\r\n\terrors,\r\n}) => {\r\n\tconst formId = title.replace(/\\s+/g, \"-\").toLowerCase();\r\n\r\n\treturn (\r\n\t\t<div className=\"space-y-4\">\r\n\t\t\t<h3 className=\"text-lg font-semibold text-gray-800\">\r\n\t\t\t\t{title}\r\n\t\t\t</h3>\r\n\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n\t\t\t\t<div className=\"md:col-span-2\">\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`name-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNombre Completo *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`name-${formId}`}\r\n\t\t\t\t\t\tvalue={address.name || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"name\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.name ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"Nombre y Apellido\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.name && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.name}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"md:col-span-2\">\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`street-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDirección / Calle Principal *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`street-${formId}`}\r\n\t\t\t\t\t\tvalue={address.street || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"street\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.street ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"Calle, número, piso, etc.\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.street && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.street}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`city-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCiudad *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`city-${formId}`}\r\n\t\t\t\t\t\tvalue={address.city || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"city\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.city ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"Ciudad\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.city && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.city}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`state-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tProvincia/Estado *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`state-${formId}`}\r\n\t\t\t\t\t\tvalue={address.state || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"state\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.state ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"Provincia o Estado\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.state && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.state}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`postalCode-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCódigo Postal *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`postalCode-${formId}`}\r\n\t\t\t\t\t\tvalue={address.postalCode || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"postalCode\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.postalCode ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"Código Postal\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.postalCode && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.postalCode}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`country-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tPaís *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`country-${formId}`}\r\n\t\t\t\t\t\tvalue={address.country || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"country\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.country ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"País\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.country && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.country}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"md:col-span-2\">\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor={`phone-${formId}`}\r\n\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tTeléfono *\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\tid={`phone-${formId}`}\r\n\t\t\t\t\t\tvalue={address.phone || \"\"}\r\n\t\t\t\t\t\tonChange={(e) => onAddressChange(\"phone\", e.target.value)}\r\n\t\t\t\t\t\tclassName={`w-full px-4 py-2 border rounded-md focus:ring-primary-500 focus:border-primary-500 ${\r\n\t\t\t\t\t\t\terrors.phone ? \"border-red-500\" : \"border-gray-300\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tplaceholder=\"Número de teléfono\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.phone && (\r\n\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddressForm;\r\n","import React, {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useCart} from \"../../hooks/useCart\";\r\nimport {CheckoutService} from \"../../../core/services/CheckoutService\";\r\nimport type {PaymentMethod} from \"../../../core/services/CheckoutService\";\r\nimport {NotificationType} from \"../../contexts/CartContext\";\r\nimport {extractErrorMessage} from \"../../../utils/errorHandler\";\r\n\r\ninterface TestCheckoutButtonProps {}\r\n\r\nconst TestCheckoutButton: React.FC<TestCheckoutButtonProps> = () => {\r\n\tconst navigate = useNavigate();\r\n\tconst {cart, clearCart, showNotification, appliedDiscount} = useCart();\r\n\tconst checkoutService = new CheckoutService();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst handleTestCheckout = async () => {\r\n\t\tconsole.log(\"🧪 TestCheckoutButton.handleTestCheckout INICIADO\");\r\n\r\n\t\tif (!cart || cart.items.length === 0) {\r\n\t\t\tconsole.log(\"❌ Carrito vacío, abortando checkout\");\r\n\t\t\tshowNotification(NotificationType.ERROR, \"El carrito está vacío\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"🛒 ANÁLISIS COMPLETO DEL CARRITO ANTES DEL CHECKOUT:\");\r\n\t\tconsole.log(\"📊 Cart completo:\", JSON.stringify(cart, null, 2));\r\n\t\tconsole.log(\"📊 Total de items en carrito:\", cart.items.length);\r\n\t\tconsole.log(\"📊 Total del carrito:\", cart.total);\r\n\r\n\t\t// ✅ NUEVO: Análisis detallado de cada item\r\n\t\tconsole.log(\"🔍 ANÁLISIS ITEM POR ITEM:\");\r\n\t\tcart.items.forEach((item, index) => {\r\n\t\t\tconsole.log(`📋 Item ${index + 1}:`, {\r\n\t\t\t\tid: item.id,\r\n\t\t\t\tproductId: item.productId,\r\n\t\t\t\tquantity: item.quantity,\r\n\t\t\t\tprice: item.price,\r\n\t\t\t\tproduct: item.product ? {\r\n\t\t\t\t\tid: item.product.id,\r\n\t\t\t\t\tname: item.product.name,\r\n\t\t\t\t\tprice: item.product.price,\r\n\t\t\t\t\tsellerId: item.product.sellerId,\r\n\t\t\t\t\tseller_id: item.product.seller_id,\r\n\t\t\t\t\tuser_id: item.product.user_id\r\n\t\t\t\t} : null,\r\n\t\t\t\tcompleteItem: item\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// ✅ NUEVO: Detectar duplicados en el carrito\r\n\t\tconsole.log(\"🔍 VERIFICANDO DUPLICADOS EN EL CARRITO:\");\r\n\t\tconst itemsByProductId = cart.items.reduce((acc: any, item, index) => {\r\n\t\t\tif (!acc[item.productId]) {\r\n\t\t\t\tacc[item.productId] = [];\r\n\t\t\t}\r\n\t\t\tacc[item.productId].push({index, item});\r\n\t\t\treturn acc;\r\n\t\t}, {});\r\n\r\n\t\tconsole.log(\"📊 Items agrupados por productId:\", itemsByProductId);\r\n\r\n\t\tObject.keys(itemsByProductId).forEach(productId => {\r\n\t\t\tconst items = itemsByProductId[productId];\r\n\t\t\tif (items.length > 1) {\r\n\t\t\t\tconsole.warn(`⚠️ DUPLICADO EN CARRITO DETECTADO para productId ${productId}:`);\r\n\t\t\t\tconsole.warn(`❌ Se encontraron ${items.length} items para el mismo producto`);\r\n\t\t\t\titems.forEach((itemData: any, i: number) => {\r\n\t\t\t\t\tconsole.warn(`   ${i + 1}. Item[${itemData.index}]:`, itemData.item);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(`✅ Producto ${productId}: Sin duplicados (${items[0].item.quantity} unidades)`);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\t// ✅ OBTENER SELLER_ID DEL CARRITO\r\n\t\t\tconst sellerId = CheckoutService.getSellerIdFromCart(cart);\r\n\t\t\tconsole.log(\"🏪 Seller ID obtenido para test:\", sellerId);\r\n\r\n\t\t\t// ✅ CORREGIDO: Construir items del carrito con precios válidos\r\n\t\t\tconst items = cart.items.map(item => {\r\n\t\t\t\t// Priorizar precios válidos: product.final_price > product.price > item.price > subtotal/quantity\r\n\t\t\t\tlet price = 0;\r\n\t\t\t\t\r\n\t\t\t\tif (item.product?.final_price && item.product.final_price > 0) {\r\n\t\t\t\t\tprice = item.product.final_price;\r\n\t\t\t\t} else if (item.product?.price && item.product.price > 0) {\r\n\t\t\t\t\tprice = item.product.price;\r\n\t\t\t\t} else if (item.price && item.price > 0) {\r\n\t\t\t\t\tprice = item.price;\r\n\t\t\t\t} else if (item.subtotal && item.quantity > 0) {\r\n\t\t\t\t\tprice = item.subtotal / item.quantity;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(`⚠️ No se pudo determinar precio para producto ${item.productId}, usando 1.00`);\r\n\t\t\t\t\tprice = 1.00; // Precio mínimo como fallback\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn {\r\n\t\t\t\t\tproduct_id: item.productId,\r\n\t\t\t\t\tquantity: item.quantity,\r\n\t\t\t\t\tprice: price\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(\"🛒 Items formateados para backend:\", JSON.stringify(items, null, 2));\r\n\r\n\t\t\t// Datos de prueba - agregado seller_id y items\r\n\t\t\tconst testData = {\r\n\t\t\t\tpayment: {\r\n\t\t\t\t\tmethod: \"credit_card\" as PaymentMethod,\r\n\t\t\t\t\tcard_number: \"4111111111111111\",\r\n\t\t\t\t\tcard_expiry: \"12/25\",\r\n\t\t\t\t\tcard_cvc: \"123\",\r\n\t\t\t\t},\r\n\t\t\t\tshippingAddress: {\r\n\t\t\t\t\tname: \"Test User\",\r\n\t\t\t\t\tstreet: \"Calle de Prueba 123\",\r\n\t\t\t\t\tcity: \"Ciudad de Prueba\",\r\n\t\t\t\t\tstate: \"Estado de Prueba\",\r\n\t\t\t\t\tpostalCode: \"12345\",\r\n\t\t\t\t\tcountry: \"País de Prueba\",\r\n\t\t\t\t\tphone: \"123456789\",\r\n\t\t\t\t},\r\n\t\t\t\tseller_id: sellerId || undefined,\r\n\t\t\t\titems: items, // ✅ AGREGAR ITEMS CON PRECIOS VÁLIDOS\r\n\t\t\t\t// ✅ NUEVO: Incluir código de descuento aplicado y su información\r\n\t\t\t\tdiscount_code: appliedDiscount?.discountCode?.code || null,\r\n\t\t\t\tdiscount_info: appliedDiscount || null // ✅ Pasar información completa del descuento\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\"📦 Datos completos de checkout de prueba:\", JSON.stringify(testData, null, 2));\r\n\t\t\tconsole.log(\"🚀 Enviando checkout al backend...\");\r\n\r\n\t\t\tconst response = await checkoutService.processCheckout(testData);\r\n\r\n\t\t\tconsole.log(\"✅ Respuesta del checkout recibida:\", response);\r\n\r\n\t\t\tif (response.status === \"success\") {\r\n\t\t\t\tconsole.log(\"🎉 Checkout exitoso, limpiando carrito...\");\r\n\t\t\t\tclearCart();\r\n\t\t\t\tshowNotification(\r\n\t\t\t\t\tNotificationType.SUCCESS,\r\n\t\t\t\t\t\"¡Pedido de prueba completado con éxito!\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Mostrar los detalles de la orden por consola\r\n\t\t\t\tconsole.log(\"📊 Detalles COMPLETOS de la orden:\", JSON.stringify(response.data, null, 2));\r\n\r\n\t\t\t\t// ✅ NUEVO: Análisis específico de la respuesta\r\n\t\t\t\tif (response.data && typeof response.data === 'object') {\r\n\t\t\t\t\tconst orderData = response.data as any;\r\n\t\t\t\t\tconsole.log(\"🔍 ANÁLISIS DE LA ORDEN CREADA:\");\r\n\t\t\t\t\tconsole.log(\"📊 Order ID:\", orderData.order_id);\r\n\t\t\t\t\tconsole.log(\"📊 Order Number:\", orderData.order_number);\r\n\t\t\t\t\tconsole.log(\"📊 Total:\", orderData.total);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (orderData.items) {\r\n\t\t\t\t\t\tconsole.log(\"📊 Items en la orden creada:\", orderData.items.length);\r\n\t\t\t\t\t\torderData.items.forEach((item: any, index: number) => {\r\n\t\t\t\t\t\t\tconsole.log(`📋 Order Item ${index + 1}:`, {\r\n\t\t\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\t\t\tproduct_id: item.product_id,\r\n\t\t\t\t\t\t\t\tproduct_name: item.product_name,\r\n\t\t\t\t\t\t\t\tquantity: item.quantity,\r\n\t\t\t\t\t\t\t\tprice: item.price\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Navegar a una página de confirmación o dashboard\r\n\t\t\t\tnavigate(\"/orders\");\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(response.message || \"Error en el checkout de prueba\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error COMPLETO en el checkout de prueba:\");\r\n\t\t\tconsole.error(\"📊 Error object:\", error);\r\n\t\t\tconsole.error(\"📊 Error stack:\", (error as any)?.stack);\r\n\r\n\t\t\t// Usar el extractor de mensajes de error\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error en el checkout de prueba. Por favor, intenta de nuevo más tarde.\"\r\n\t\t\t);\r\n\r\n\t\t\tconsole.error(\"📊 Error message final:\", errorMessage);\r\n\t\t\tshowNotification(NotificationType.ERROR, errorMessage);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tconsole.log(\"🧪 TestCheckoutButton.handleTestCheckout FINALIZADO\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={handleTestCheckout}\r\n\t\t\tdisabled={isLoading}\r\n\t\t\tclassName=\"px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600 transition-colors flex items-center disabled:opacity-50\"\r\n\t\t>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<span className=\"inline-block h-4 w-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></span>\r\n\t\t\t) : null}\r\n\t\t\tPrueba rápida de checkout\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default TestCheckoutButton;","import ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\nimport {extractErrorMessage} from \"../../utils/errorHandler\";\r\n\r\nexport interface DatafastCheckoutRequest {\r\n\tshipping: {\r\n\t\taddress: string;\r\n\t\tcity: string;\r\n\t\tcountry: string;\r\n\t};\r\n\tcustomer?: {\r\n\t\tgiven_name?: string;\r\n\t\tmiddle_name?: string;\r\n\t\tsurname?: string;\r\n\t\tphone?: string;\r\n\t\tdoc_id?: string;\r\n\t};\r\n\titems?: {\r\n\t\tproduct_id: number;\r\n\t\tquantity: number;\r\n\t\tprice: number;\r\n\t}[];\r\n\ttotal: number;\r\n\tsubtotal: number;\r\n\tshipping_cost: number;\r\n\ttax: number;\r\n\tdiscount_code?: string | null;\r\n\tdiscount_info?: any;\r\n}\r\n\r\nexport interface DatafastCheckoutResponse {\r\n\tsuccess: boolean;\r\n\tstatus?: string;\r\n\tdata?: {\r\n\t\tcheckout_id: string;\r\n\t\twidget_url: string;\r\n\t\ttransaction_id: string;\r\n\t\tamount: number;\r\n\t};\r\n\tmessage: string;\r\n\terror_code?: string;\r\n}\r\n\r\nexport interface DatafastVerifyPaymentRequest {\r\n\tresource_path: string;\r\n\ttransaction_id: string;\r\n\tcalculated_total?: number; // ✅ AGREGAR SOPORTE PARA TOTAL CALCULADO\r\n}\r\n\r\nexport interface DatafastVerifyPaymentResponse {\r\n\tsuccess: boolean;\r\n\tstatus?: string;\r\n\tdata?: {\r\n\t\torder_id: string;\r\n\t\torder_number: string;\r\n\t\ttotal: number;\r\n\t\tpayment_status: string;\r\n\t\tpayment_id: string;\r\n\t};\r\n\tmessage: string;\r\n\tresult_code?: string;\r\n\tis_phase_1_error?: boolean;\r\n}\r\n\r\nexport class DatafastService {\r\n\t/**\r\n\t * Crear un checkout de Datafast\r\n\t */\r\n\tasync createCheckout(\r\n\t\tcheckoutData: DatafastCheckoutRequest\r\n\t): Promise<DatafastCheckoutResponse> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"DatafastService: Creando checkout\", checkoutData);\r\n\r\n\t\t\tconst response = await ApiClient.post<DatafastCheckoutResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.DATAFAST.CREATE_CHECKOUT,\r\n\t\t\t\tcheckoutData\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"DatafastService: Respuesta de checkout\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"DatafastService: Error al crear checkout:\", error);\r\n\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error al crear el checkout de Datafast\"\r\n\t\t\t);\r\n\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Verificar el estado del pago\r\n\t */\r\n\tasync verifyPayment(\r\n\t\tverifyData: DatafastVerifyPaymentRequest\r\n\t): Promise<DatafastVerifyPaymentResponse> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"DatafastService: Verificando pago\", verifyData);\r\n\r\n\t\t\tconst response = await ApiClient.post<DatafastVerifyPaymentResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.DATAFAST.VERIFY_PAYMENT,\r\n\t\t\t\tverifyData\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"DatafastService: Respuesta de verificación\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"DatafastService: Error al verificar pago:\", error);\r\n\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error al verificar el pago de Datafast\"\r\n\t\t\t);\r\n\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Simular una transacción exitosa para pruebas en Fase 1\r\n\t * (En producción, esto no debe usarse)\r\n\t */\r\n\tasync simulateSuccessfulPayment(\r\n\t\tcheckoutId: string,\r\n\t\ttransactionId: string,\r\n\t\tcalculatedTotal?: number\r\n\t): Promise<DatafastVerifyPaymentResponse> {\r\n\t\tif (!checkoutId) {\r\n\t\t\tthrow new Error(\"checkout_id es requerido para simular el pago\");\r\n\t\t}\r\n\r\n\t\tif (!transactionId) {\r\n\t\t\tthrow new Error(\"transaction_id es requerido para simular el pago\");\r\n\t\t}\r\n\r\n\t\t// Simular el resourcePath que normalmente viene del widget\r\n\t\tconst mockResourcePath = `/v1/checkouts/${checkoutId}/payment`;\r\n\r\n\t\tconsole.log(\"DatafastService: Simulando pago exitoso\", {\r\n\t\t\tcheckoutId,\r\n\t\t\ttransactionId,\r\n\t\t\tmockResourcePath,\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\t// Llamar al endpoint de verificación con el parámetro simulate_success\r\n\t\t\tconst requestData = {\r\n\t\t\t\tresource_path: mockResourcePath,\r\n\t\t\t\ttransaction_id: transactionId,\r\n\t\t\t\tcalculated_total: calculatedTotal, // ✅ ENVIAR TOTAL CALCULADO\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tconsole.log(\"🔄 Enviando datos de simulación:\", requestData);\r\n\t\t\t\r\n\t\t\tconst response = await ApiClient.post<DatafastVerifyPaymentResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.DATAFAST.VERIFY_PAYMENT + \"?simulate_success=true\",\r\n\t\t\t\trequestData\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"DatafastService: Respuesta de simulación:\", response);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"DatafastService: Error en simulación:\", error);\r\n\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error al simular el pago de Datafast\"\r\n\t\t\t);\r\n\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Manejar el resultado real de Datafast (cuando viene del widget)\r\n\t */\r\n\tasync handleDatafastResult(\r\n\t\tresourcePath: string,\r\n\t\ttransactionId: string,\r\n\t\tcalculatedTotal?: number\r\n\t): Promise<DatafastVerifyPaymentResponse> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"DatafastService: Manejando resultado real de Datafast\", {\r\n\t\t\t\tresourcePath,\r\n\t\t\t\ttransactionId,\r\n\t\t\t\tcalculatedTotal,\r\n\t\t\t});\r\n\r\n\t\t\tconst response = await this.verifyPayment({\r\n\t\t\t\tresource_path: resourcePath,\r\n\t\t\t\ttransaction_id: transactionId,\r\n\t\t\t\tcalculated_total: calculatedTotal, // ✅ INCLUIR TOTAL CALCULADO\r\n\t\t\t});\r\n\r\n\t\t\t// Si es el error típico de Fase 1, devolver un mensaje más claro\r\n\t\t\tif (response.status !== \"success\" && response.result_code === \"800.900.300\") { // ✅ CORREGIDO: Cambiar response.success por response.status\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsuccess: false,\r\n\t\t\t\t\tmessage:\r\n\t\t\t\t\t\t'No se completó un pago real. Este es el comportamiento esperado en Fase 1 de pruebas. Use \"Simular Pago Exitoso\" para probar el flujo completo.',\r\n\t\t\t\t\tresult_code: response.result_code,\r\n\t\t\t\t\tis_phase_1_error: true,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"DatafastService: Error al manejar resultado:\", error);\r\n\r\n\t\t\tconst errorMessage = extractErrorMessage(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error al procesar el resultado de Datafast\"\r\n\t\t\t);\r\n\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Extraer resourcePath de la URL de respuesta\r\n\t */\r\n\textractResourcePath(url: string): string | null {\r\n\t\ttry {\r\n\t\t\tconst urlParams = new URLSearchParams(url.split(\"?\")[1]);\r\n\t\t\tconst resourcePath = urlParams.get(\"resourcePath\");\r\n\t\t\tconsole.log(\"DatafastService: ResourcePath extraído:\", resourcePath);\r\n\t\t\treturn resourcePath;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"DatafastService: Error al extraer resourcePath:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useCart} from \"../../hooks/useCart\";\r\nimport {useAuth} from \"../../hooks/useAuth\";\r\nimport {DatafastService} from \"../../../core/services/DatafastService\";\r\nimport {CheckoutService} from \"../../../core/services/CheckoutService\";\r\nimport {CheckoutItemsService} from \"../../../infrastructure/services/CheckoutItemsService\";\r\nimport type {DatafastCheckoutRequest} from \"../../../core/services/DatafastService\";\r\nimport type {PaymentMethod, PaymentInfo} from \"../../../core/services/CheckoutService\";\r\nimport {NotificationType} from \"../../contexts/CartContext\";\r\n\r\ninterface DatafastPaymentButtonProps {\r\n\tonSuccess?: (orderData: any) => void;\r\n\tonError?: (error: string) => void;\r\n}\r\n\r\ninterface FormData {\r\n\taddress: string;\r\n\tcity: string;\r\n\tcountry: string;\r\n\tgiven_name: string;\r\n\tmiddle_name: string;\r\n\tsurname: string;\r\n\tphone: string;\r\n\tdoc_id: string;\r\n}\r\n\r\nconst DatafastPaymentButton: React.FC<DatafastPaymentButtonProps> = ({\r\n\tonSuccess,\r\n\tonError,\r\n}) => {\r\n\tconst navigate = useNavigate();\r\n\tconst {cart, clearCart, showNotification, appliedDiscount} = useCart();\r\n\tconst {user} = useAuth();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [showWidget, setShowWidget] = useState(false);\r\n\tconst [checkoutData, setCheckoutData] = useState<any>(null);\r\n\tconst [showForm, setShowForm] = useState(false);\r\n\tconst [widgetLoaded, setWidgetLoaded] = useState(false);\r\n\tconst [calculatedTotals, setCalculatedTotals] = useState<any>(null);\r\n\r\n\tconst [formData, setFormData] = useState<FormData>({\r\n\t\taddress: \"Av. Test 123\",\r\n\t\tcity: \"Quito\",\r\n\t\tcountry: \"EC\",\r\n\t\tgiven_name: \"Juan\",\r\n\t\tmiddle_name: \"Carlos\",\r\n\t\tsurname: \"Pérez\",\r\n\t\tphone: \"0999999999\",\r\n\t\tdoc_id: \"1234567890\",\r\n\t});\r\n\r\n\tconst datafastService = new DatafastService();\r\n\tconst checkoutService = new CheckoutService();\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tconst script = document.getElementById(\"datafast-widget-script\");\r\n\t\t\tif (script) {\r\n\t\t\t\tscript.remove();\r\n\t\t\t}\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst handleInputChange = (field: keyof FormData, value: string) => {\r\n\t\tsetFormData((prev) => ({...prev, [field]: value}));\r\n\t};\r\n\r\n\tconst validateFormData = (): boolean => {\r\n\t\tconst requiredFields: (keyof FormData)[] = [\r\n\t\t\t\"address\",\r\n\t\t\t\"city\",\r\n\t\t\t\"country\",\r\n\t\t\t\"given_name\",\r\n\t\t\t\"surname\",\r\n\t\t\t\"phone\",\r\n\t\t\t\"doc_id\",\r\n\t\t];\r\n\r\n\t\tfor (const field of requiredFields) {\r\n\t\t\tif (!formData[field] || formData[field].trim() === \"\") {\r\n\t\t\t\tshowNotification(\r\n\t\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\t`El campo ${field.replace(\"_\", \" \")} es obligatorio`\r\n\t\t\t\t);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (formData.doc_id.length !== 10 || !/^\\d+$/.test(formData.doc_id)) {\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\"La cédula debe tener exactamente 10 dígitos\"\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst handleStartPayment = async () => {\r\n\t\tif (!cart || cart.items.length === 0) {\r\n\t\t\tshowNotification(NotificationType.ERROR, \"El carrito está vacío\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!validateFormData()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetIsLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\t// ✅ USAR MISMA LÓGICA QUE EL BOTÓN \"PRUEBA COMPLETA\" QUE FUNCIONA PERFECTO\r\n\t\t\tconst checkoutItems = await CheckoutItemsService.prepareItemsForCheckout(cart.items); // SIN appliedDiscount\r\n\t\t\tconst totals = await CheckoutItemsService.calculateCheckoutTotals(cart.items, appliedDiscount);\r\n\t\t\t\r\n\t\t\t// Almacenar totales para usar en el widget\r\n\t\t\tsetCalculatedTotals(totals);\r\n\t\t\t\r\n\t\t\tconsole.log(\"💰 Totales calculados para Datafast:\", totals);\r\n\t\t\tconsole.log(\"🛒 Items para Datafast (preparados como Prueba Completa):\", checkoutItems);\r\n\t\t\t\r\n\t\t\tconst requestData: DatafastCheckoutRequest = {\r\n\t\t\t\tshipping: {\r\n\t\t\t\t\taddress: formData.address,\r\n\t\t\t\t\tcity: formData.city,\r\n\t\t\t\t\tcountry: formData.country.toUpperCase(),\r\n\t\t\t\t},\r\n\t\t\t\tcustomer: {\r\n\t\t\t\t\tgiven_name: formData.given_name,\r\n\t\t\t\t\tmiddle_name: formData.middle_name,\r\n\t\t\t\t\tsurname: formData.surname,\r\n\t\t\t\t\tphone: formData.phone,\r\n\t\t\t\t\tdoc_id: formData.doc_id,\r\n\t\t\t\t},\r\n\t\t\t\titems: checkoutItems,\r\n\t\t\t\ttotal: totals.total,\r\n\t\t\t\tsubtotal: totals.subtotal,\r\n\t\t\t\tshipping_cost: totals.shipping,\r\n\t\t\t\ttax: totals.tax,\r\n\t\t\t\t// ✅ AGREGAR LO MISMO QUE HACE \"PRUEBA COMPLETA\"\r\n\t\t\t\tdiscount_code: appliedDiscount?.discountCode.code || null,\r\n\t\t\t\tdiscount_info: appliedDiscount || null\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\"Iniciando checkout con Datafast...\", requestData);\r\n\t\t\tconsole.log(\"💰 Total enviado a Datafast: $\", totals.total);\r\n\r\n\t\t\tconst response = await datafastService.createCheckout(requestData);\r\n\t\t\tconsole.log(\"Respuesta del checkout:\", response);\r\n\r\n\t\t\tif (response.status === \"success\" && response.data) { // ✅ CORREGIDO: Cambiar response.success por response.status\r\n\t\t\t\tsetCheckoutData(response.data);\r\n\t\t\t\tsetShowForm(false);\r\n\t\t\t\tsetShowWidget(true);\r\n\r\n\t\t\t\t// ✅ GUARDAR DATOS NECESARIOS PARA LA VERIFICACIÓN\r\n\t\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\t\"datafast_transaction_id\",\r\n\t\t\t\t\tresponse.data.transaction_id\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\t// ✅ GUARDAR CHECKOUT_ID PARA SIMULACIÓN\r\n\t\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\t\"datafast_checkout_id\",\r\n\t\t\t\t\tresponse.data.checkout_id\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\t// ✅ GUARDAR TOTAL CALCULADO PARA PAGOS REALES\r\n\t\t\t\tlocalStorage.setItem(\"datafast_calculated_total\", totals.total.toString());\r\n\r\n\t\t\t\tshowNotification(\r\n\t\t\t\t\tNotificationType.SUCCESS,\r\n\t\t\t\t\t\"Checkout creado. Preparando formulario de pago...\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (response.data) {\r\n\t\t\t\t\t\tloadDatafastWidget(response.data.checkout_id);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\t\t\t\"Datos de checkout no disponibles\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 100);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(response.message || \"Error al crear checkout\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al iniciar pago con Datafast:\", error);\r\n\t\t\tconst errorMessage =\r\n\t\t\t\terror instanceof Error ? error.message : \"Error desconocido\";\r\n\t\t\tshowNotification(NotificationType.ERROR, errorMessage);\r\n\t\t\tonError?.(errorMessage);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst loadDatafastWidget = (checkoutId: string) => {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"Cargando widget de Datafast...\", checkoutId);\r\n\r\n\t\t\tconst existingScript = document.getElementById(\"datafast-widget-script\");\r\n\t\t\tif (existingScript) {\r\n\t\t\t\texistingScript.remove();\r\n\t\t\t}\r\n\r\n\t\t\t(window as any).wpwlOptions = {\r\n\t\t\t\tonReady: function () {\r\n\t\t\t\t\tconsole.log(\"✅ Widget de Datafast listo!\");\r\n\t\t\t\t\tsetWidgetLoaded(true);\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.SUCCESS,\r\n\t\t\t\t\t\t\"Formulario de pago cargado correctamente.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tonBeforeSubmitCard: function (data: any) {\r\n\t\t\t\t\tconsole.log(\"🔄 Widget Datafast: Usuario hizo clic en Pagar, procesando...\");\r\n\t\t\t\t\tconsole.log(\"🔍 Datos de la tarjeta que se están enviando:\", data);\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.INFO,\r\n\t\t\t\t\t\t\"Procesando pago con Datafast...\"\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tonAfterSubmitCard: function (data: any) {\r\n\t\t\t\t\tconsole.log(\"⏳ Widget Datafast: Datos enviados, esperando respuesta...\");\r\n\t\t\t\t\tconsole.log(\"📤 Respuesta después del envío:\", data);\r\n\t\t\t\t},\r\n\t\t\t\tonLoadThreeDSecure: function () {\r\n\t\t\t\t\tconsole.log(\"🔐 Widget Datafast: Cargando 3D Secure...\");\r\n\t\t\t\t},\r\n\t\t\t\tonBeforeRedirectToResult: function (data: any) {\r\n\t\t\t\t\tconsole.log(\"🔄 Widget Datafast: Redirigiendo a página de resultado...\");\r\n\t\t\t\t\tconsole.log(\"🔗 Datos de redirección:\", data);\r\n\t\t\t\t},\r\n\t\t\t\tonChangeBrand: function (e: any) {\r\n\t\t\t\t\tconsole.log(\"💳 Widget Datafast: Marca de tarjeta detectada:\", e.brand);\r\n\t\t\t\t\tconsole.log(\"💳 Datos completos del evento:\", e);\r\n\t\t\t\t},\r\n\t\t\t\tonError: function (error: any) {\r\n\t\t\t\t\tconsole.error(\"❌ Widget Datafast: Error en el pago\", error);\r\n\t\t\t\t\tconsole.error(\"❌ Detalles completos del error:\", {\r\n\t\t\t\t\t\tmessage: error.message,\r\n\t\t\t\t\t\tcode: error.code,\r\n\t\t\t\t\t\tname: error.name,\r\n\t\t\t\t\t\tfull: error\r\n\t\t\t\t\t});\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\t\t\"Error al procesar el pago: \" + (error.message || error.code || 'Error desconocido')\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tonSubmit: function (data: any) {\r\n\t\t\t\t\tconsole.log(\"📋 Widget Datafast: Formulario enviado\");\r\n\t\t\t\t\tconsole.log(\"📋 Datos del formulario:\", data);\r\n\t\t\t\t},\r\n\t\t\t\tstyle: \"card\",\r\n\t\t\t\tlocale: \"es\",\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tcvv: \"CVV\",\r\n\t\t\t\t\tcardHolder: \"Nombre (igual que en la tarjeta)\",\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\t// Cargar script adicional de validaciones de Datafast\r\n\t\t\tconst additionalScript = document.createElement(\"script\");\r\n\t\t\tadditionalScript.src = \"https://www.datafast.com.ec/js/dfAdditionalValidations1.js\";\r\n\t\t\tadditionalScript.async = true;\r\n\t\t\tdocument.head.appendChild(additionalScript);\r\n\r\n\t\t\tconst script = document.createElement(\"script\");\r\n\t\t\tscript.id = \"datafast-widget-script\";\r\n\t\t\tscript.src = checkoutData?.widget_url || `https://eu-test.oppwa.com/v1/paymentWidgets.js?checkoutId=${checkoutId}`;\r\n\t\t\tscript.async = true;\r\n\r\n\t\t\tscript.onload = () => {\r\n\t\t\t\tconsole.log(\"Script de widget cargado\");\r\n\t\t\t};\r\n\r\n\t\t\tscript.onerror = () => {\r\n\t\t\t\tconsole.error(\"Error al cargar script del widget\");\r\n\t\t\t\tshowNotification(\r\n\t\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\t\"Error al cargar el formulario de pago\"\r\n\t\t\t\t);\r\n\t\t\t};\r\n\r\n\t\t\tdocument.head.appendChild(script);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al configurar widget:\", error);\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\"Error al configurar el formulario de pago\"\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCompleteTestCheckout = async () => {\r\n\t\tconsole.log(\"🧪 DatafastPaymentButton.handleCompleteTestCheckout INICIADO\");\r\n\t\r\n\t\tif (!cart || cart.items.length === 0) {\r\n\t\t\tconsole.log(\"❌ Carrito vacío o null, abortando checkout\");\r\n\t\t\tshowNotification(NotificationType.ERROR, \"El carrito está vacío\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!validateFormData()) {\r\n\t\t\tconsole.log(\"❌ Validación de formulario falló\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"🛒 ANÁLISIS COMPLETO DEL CARRITO ANTES DEL CHECKOUT (DATAFAST):\");\r\n\t\tconsole.log(\"📊 Cart completo:\", JSON.stringify(cart, null, 2));\r\n\t\tconsole.log(\"📊 Total de items en carrito:\", cart.items.length);\r\n\t\tconsole.log(\"📊 Total del carrito:\", cart.total);\r\n\r\n\t\tcart.items.forEach((item, index) => {\r\n\t\t\tconsole.log(`📋 Item ${index + 1}:`, {\r\n\t\t\t\tid: item.id,\r\n\t\t\t\tproductId: item.productId,\r\n\t\t\t\tquantity: item.quantity,\r\n\t\t\t\tprice: item.price,\r\n\t\t\t\tsubtotal: item.subtotal,\r\n\t\t\t\tproduct: item.product ? {\r\n\t\t\t\t\tid: item.product.id,\r\n\t\t\t\t\tname: item.product.name,\r\n\t\t\t\t\tprice: item.product.price,\r\n\t\t\t\t\tfinal_price: item.product.final_price,\r\n\t\t\t\t\tsellerId: item.product.sellerId,\r\n\t\t\t\t\tseller_id: item.product.seller_id,\r\n\t\t\t\t\tuser_id: item.product.user_id\r\n\t\t\t\t} : null,\r\n\t\t\t\tcompleteItem: item\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconsole.log(\"🔍 VERIFICANDO DUPLICADOS EN EL CARRITO (DATAFAST):\");\r\n\t\tconst itemsByProductId = cart.items.reduce((acc: any, item, index) => {\r\n\t\t\tif (!acc[item.productId]) {\r\n\t\t\t\tacc[item.productId] = [];\r\n\t\t\t}\r\n\t\t\tacc[item.productId].push({index, item});\r\n\t\t\treturn acc;\r\n\t\t}, {});\r\n\r\n\t\tconsole.log(\"📊 Items agrupados por productId:\", itemsByProductId);\r\n\r\n\t\tObject.keys(itemsByProductId).forEach(productId => {\r\n\t\t\tconst items = itemsByProductId[productId];\r\n\t\t\tif (items.length > 1) {\r\n\t\t\t\tconsole.warn(`⚠️ DUPLICADO EN CARRITO DETECTADO para productId ${productId}:`);\r\n\t\t\t\tconsole.warn(`❌ Se encontraron ${items.length} items para el mismo producto`);\r\n\t\t\t\titems.forEach((itemData: any, i: number) => {\r\n\t\t\t\t\tconsole.warn(`   ${i + 1}. Item[${itemData.index}]:`, itemData.item);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(`✅ Producto ${productId}: Sin duplicados (${items[0].item.quantity} unidades)`);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsetIsLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconsole.log(\"🚀 Iniciando checkout de prueba completo (DATAFAST)...\");\r\n\r\n\t\t\t// ✅ CORREGIDO: Agregar null check para cart\r\n\t\t\tconst sellerId = cart ? CheckoutService.getSellerIdFromCart(cart) : null;\r\n\t\t\tconsole.log(\"🏪 Seller ID obtenido (DATAFAST):\", sellerId);\r\n\r\n\t\t\t// ✅ USAR MISMA LÓGICA DE CÁLCULO QUE CHECKOUT PAGE\r\n\t\t\tconst checkoutItems = await CheckoutItemsService.prepareItemsForCheckout(cart.items);\r\n\t\t\tconsole.log(\"🛒 Items formateados con descuentos aplicados (DATAFAST):\", JSON.stringify(checkoutItems, null, 2));\r\n\r\n\t\t\t// ✅ CALCULAR TOTALES CORRECTOS PARA EL BACKEND\r\n\t\t\tconsole.log(\"🔍 DEBUG: cart.items antes de calcular:\", cart.items);\r\n\t\t\tconsole.log(\"🔍 DEBUG: appliedDiscount antes de calcular:\", appliedDiscount);\r\n\t\t\t\r\n\t\t\tconst calculatedTotals = await CheckoutItemsService.calculateCheckoutTotals(cart.items, appliedDiscount);\r\n\t\t\tconsole.log(\"💰 Totales calculados para backend (DATAFAST):\", calculatedTotals);\r\n\t\t\tconsole.log(\"🔍 DEBUG: calculatedTotals es null?\", calculatedTotals === null);\r\n\t\t\tconsole.log(\"🔍 DEBUG: calculatedTotals es undefined?\", calculatedTotals === undefined);\r\n\t\t\tconsole.log(\"🔍 DEBUG: tipo de calculatedTotals:\", typeof calculatedTotals);\r\n\r\n\t\t\tconsole.log(\"🛒 Items formateados para backend (DATAFAST):\", JSON.stringify(checkoutItems, null, 2));\r\n\r\n\t\t\tconst testCheckoutData = {\r\n\t\t\t\tpayment: {\r\n\t\t\t\t\tmethod: \"datafast\" as PaymentMethod,\r\n\t\t\t\t} as PaymentInfo,\r\n\t\t\t\tshippingAddress: {\r\n\t\t\t\t\tname: formData.given_name + \" \" + formData.surname,\r\n\t\t\t\t\tstreet: formData.address || \"Calle de Prueba 123\",\r\n\t\t\t\t\tcity: formData.city || \"Quito\", \r\n\t\t\t\t\tstate: formData.country || \"Pichincha\",\r\n\t\t\t\t\tpostalCode: \"170000\",\r\n\t\t\t\t\tcountry: formData.country || \"Ecuador\",\r\n\t\t\t\t\tphone: formData.phone || \"0999999999\",\r\n\t\t\t\t},\r\n\t\t\t\tseller_id: sellerId || undefined,\r\n\t\t\t\titems: checkoutItems, // ✅ USAR ITEMS CON DESCUENTOS CALCULADOS\r\n\t\t\t\t// ✅ CRÍTICO: Incluir totales calculados requeridos por el backend\r\n\t\t\t\tcalculated_totals: {\r\n\t\t\t\t\tsubtotal: calculatedTotals?.subtotal || 0,     // subtotal_products (después de descuentos)\r\n\t\t\t\t\ttax: calculatedTotals?.tax || 0,               // iva_amount\r\n\t\t\t\t\tshipping: calculatedTotals?.shipping || 0,     // shipping_cost  \r\n\t\t\t\t\ttotal: calculatedTotals?.total || 0,           // total final (subtotal + shipping + tax)\r\n\t\t\t\t\ttotal_discounts: calculatedTotals?.totalDiscounts || 0 // total_discounts\r\n\t\t\t\t},\r\n\t\t\t\t// ✅ NUEVO: Incluir código de descuento aplicado y su información\r\n\t\t\t\tdiscount_code: appliedDiscount?.discountCode.code || null,\r\n\t\t\t\tdiscount_info: appliedDiscount || null // ✅ Pasar información completa del descuento\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\"📦 Datos completos de checkout (DATAFAST):\", JSON.stringify(testCheckoutData, null, 2));\r\n\t\t\tconsole.log(\"🔍 DEBUG: testCheckoutData.calculated_totals:\", testCheckoutData.calculated_totals);\r\n\t\t\tconsole.log(\"🔍 DEBUG: Estructura del objeto calculated_totals:\");\r\n\t\t\tconsole.log(\"   - subtotal:\", testCheckoutData.calculated_totals.subtotal);\r\n\t\t\tconsole.log(\"   - tax:\", testCheckoutData.calculated_totals.tax);  \r\n\t\t\tconsole.log(\"   - shipping:\", testCheckoutData.calculated_totals.shipping);\r\n\t\t\tconsole.log(\"   - total:\", testCheckoutData.calculated_totals.total);\r\n\t\t\tconsole.log(\"   - total_discounts:\", testCheckoutData.calculated_totals.total_discounts);\r\n\t\t\t// 🔧 SOLUCIÓN SIMPLE: USAR EL FLUJO NORMAL handleStartPayment EN LUGAR DE CREAR NUEVA LÓGICA\r\n\t\t\tconsole.log(\"🔄 PRUEBA COMPLETA DATAFAST: Usando handleStartPayment + simulación automática\");\r\n\r\n\t\t\t// Usar el flujo normal de handleStartPayment que ya funciona\r\n\t\t\tawait handleStartPayment();\r\n\r\n\t\t\t// Esperar un momento para que el checkout se complete\r\n\t\t\tsetTimeout(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Obtener transaction_id y checkout_id del localStorage (guardado por handleStartPayment)\r\n\t\t\t\t\tconst transactionId = localStorage.getItem(\"datafast_transaction_id\");\r\n\t\t\t\t\tconst checkoutId = localStorage.getItem(\"datafast_checkout_id\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!transactionId) {\r\n\t\t\t\t\t\tthrow new Error(\"No se encontró transaction_id para simular pago\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!checkoutId) {\r\n\t\t\t\t\t\tthrow new Error(\"No se encontró checkout_id para simular pago\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.log(\"🎯 Simulando pago exitoso automáticamente con:\", { checkoutId, transactionId, total: calculatedTotals.total });\r\n\t\t\t\t\tconst simulationResponse = await datafastService.simulateSuccessfulPayment(\r\n\t\t\t\t\t\tcheckoutId,\r\n\t\t\t\t\t\ttransactionId,\r\n\t\t\t\t\t\tcalculatedTotals.total\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconsole.log(\"✅ Respuesta de simulación DATAFAST:\", simulationResponse);\r\n\r\n\t\t\t\t\tif (simulationResponse.status === \"success\") {\r\n\t\t\t\t\t\tconsole.log(\"🎉 Simulación exitosa - orden DATAFAST creada, limpiando carrito...\");\r\n\t\t\t\t\t\tclearCart();\r\n\t\t\t\t\t\tsetShowWidget(false);\r\n\t\t\t\t\t\tsetShowForm(false);\r\n\r\n\t\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\t\tNotificationType.SUCCESS,\r\n\t\t\t\t\t\t\t\"¡Pedido de prueba DATAFAST completado con éxito!\"\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconsole.log(\"📊 Detalles COMPLETOS de la orden DATAFAST:\", JSON.stringify(simulationResponse.data, null, 2));\r\n\r\n\t\t\t\t\t\tif (simulationResponse.data && typeof simulationResponse.data === 'object') {\r\n\t\t\t\t\t\t\tconst orderData = simulationResponse.data as any;\r\n\t\t\t\t\t\t\tconsole.log(\"🔍 ANÁLISIS DE LA ORDEN CREADA (DATAFAST):\");\r\n\t\t\t\t\t\t\tconsole.log(\"📊 Order ID:\", orderData.order_id);\r\n\t\t\t\t\t\t\tconsole.log(\"📊 Order Number:\", orderData.order_number);\r\n\t\t\t\t\t\t\tconsole.log(\"📊 Total:\", orderData.total);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (orderData.items) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"📊 Items en la orden creada:\", orderData.items?.length);\r\n\t\t\t\t\t\t\t\torderData.items?.forEach((item: any, index: number) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(`📋 Order Item ${index + 1}:`, {\r\n\t\t\t\t\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\t\t\t\t\tproduct_id: item.product_id,\r\n\t\t\t\t\t\t\t\t\t\tproduct_name: item.product_name,\r\n\t\t\t\t\t\t\t\t\t\tquantity: item.quantity,\r\n\t\t\t\t\t\t\t\t\t\tprice: item.price\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tonSuccess?.(simulationResponse.data);\r\n\t\t\t\t\t\tnavigate(\"/orders\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(simulationResponse.message || \"Error en simulación de pago DATAFAST\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (simulationError) {\r\n\t\t\t\t\tconsole.error(\"❌ Error en simulación automática:\", simulationError);\r\n\t\t\t\t\tshowNotification(NotificationType.ERROR, \"Error en simulación automática de pago\");\r\n\t\t\t\t}\r\n\t\t\t}, 2000); // Esperar 2 segundos para que se complete el checkout\r\n\r\n\t\t\t// Salir de la función aquí para que no continúe con el código de error\r\n\t\t\treturn;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error COMPLETO en el checkout de prueba (DATAFAST):\");\r\n\t\t\tconsole.error(\"📊 Error object:\", error);\r\n\t\t\tconsole.error(\"📊 Error stack:\", (error as any)?.stack);\r\n\t\t\tconst errorMessage =\r\n\t\t\t\terror instanceof Error ? error.message : \"Error al procesar el checkout de prueba\";\r\n\t\t\tconsole.error(\"📊 Error message final:\", errorMessage);\r\n\t\t\tshowNotification(NotificationType.ERROR, errorMessage);\r\n\t\t\tonError?.(errorMessage);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tconsole.log(\"🧪 DatafastPaymentButton.handleCompleteTestCheckout FINALIZADO\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSimulatePaymentResult = async () => {\r\n\t\tif (!checkoutData) {\r\n\t\t\tshowNotification(NotificationType.ERROR, \"No hay datos de checkout\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconsole.log(\"Simulando pago exitoso completo...\");\r\n\r\n\t\t\t// ✅ ENVIAR EL TOTAL CALCULADO CORRECTO PARA SIMULACIÓN\r\n\t\t\tconst totals = cart ? await CheckoutItemsService.calculateCheckoutTotals(cart.items, appliedDiscount) : null;\r\n\t\t\t\r\n\t\t\tconst verifyResponse = await datafastService.simulateSuccessfulPayment(\r\n\t\t\t\tcheckoutData.checkout_id,\r\n\t\t\t\tcheckoutData.transaction_id,\r\n\t\t\t\ttotals?.total || 0\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"Respuesta de verificación Datafast:\", verifyResponse);\r\n\r\n\t\t\tif (verifyResponse.success && verifyResponse.data) {\r\n\t\t\t\tconsole.log(\"Procesando checkout completo en el sistema...\");\r\n\t\t\t\t\r\n\t\t\t\t// ✅ CORREGIDO: Agregar null check para cart\r\n\t\t\t\tconst sellerId = cart ? CheckoutService.getSellerIdFromCart(cart) : null;\r\n\t\t\t\tconsole.log(\"Seller ID obtenido:\", sellerId);\r\n\t\t\t\t\r\n\t\t\t\t// ✅ USAR MISMA LÓGICA DE CÁLCULO QUE CHECKOUT PAGE\r\n\t\t\t\tconst items = cart ? await CheckoutItemsService.prepareItemsForCheckout(cart.items) : [];\r\n\t\t\t\t\r\n\t\t\t\t// ✅ CALCULAR TOTALES CORRECTOS PARA EL BACKEND\r\n\t\t\t\tconsole.log(\"🔍 DEBUG SIMULATE: cart.items antes de calcular:\", cart?.items);\r\n\t\t\t\tconsole.log(\"🔍 DEBUG SIMULATE: appliedDiscount antes de calcular:\", appliedDiscount);\r\n\t\t\t\t\r\n\t\t\t\tconst calculatedTotals = cart ? await CheckoutItemsService.calculateCheckoutTotals(cart.items, appliedDiscount) : null;\r\n\t\t\t\tconsole.log(\"💰 DEBUG SIMULATE: Totales calculados:\", calculatedTotals);\r\n\t\t\t\tconsole.log(\"🔍 DEBUG SIMULATE: calculatedTotals es null?\", calculatedTotals === null);\r\n\t\t\t\tconsole.log(\"🔍 DEBUG SIMULATE: calculatedTotals es undefined?\", calculatedTotals === undefined);\r\n\t\t\t\t\r\n\t\t\t\tconst checkoutRequestData = {\r\n\t\t\t\t\tpayment: {\r\n\t\t\t\t\t\tmethod: \"datafast\" as PaymentMethod,\r\n\t\t\t\t\t} as PaymentInfo,\r\n\t\t\t\t\tshippingAddress: {\r\n\t\t\t\t\t\tname: formData.given_name + \" \" + formData.surname,\r\n\t\t\t\t\t\tstreet: formData.address,\r\n\t\t\t\t\t\tcity: formData.city,\r\n\t\t\t\t\t\tstate: formData.country,\r\n\t\t\t\t\t\tpostalCode: \"00000\",\r\n\t\t\t\t\t\tcountry: formData.country,\r\n\t\t\t\t\t\tphone: formData.phone,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tseller_id: sellerId || undefined,\r\n\t\t\t\t\titems: items,\r\n\t\t\t\t\t// ✅ CRÍTICO: Incluir totales calculados requeridos por el backend\r\n\t\t\t\t\tcalculated_totals: calculatedTotals ? {\r\n\t\t\t\t\t\tsubtotal: calculatedTotals.subtotal,     // subtotal_products (después de descuentos)\r\n\t\t\t\t\t\ttax: calculatedTotals.tax,               // iva_amount\r\n\t\t\t\t\t\tshipping: calculatedTotals.shipping,     // shipping_cost\r\n\t\t\t\t\t\ttotal: calculatedTotals.total,           // total final (subtotal + shipping + tax)\r\n\t\t\t\t\t\ttotal_discounts: calculatedTotals.totalDiscounts // total_discounts\r\n\t\t\t\t\t} : undefined\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst checkoutResponse = await checkoutService.processCheckout(checkoutRequestData, user?.email);\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(\"Respuesta del checkout completo:\", checkoutResponse);\r\n\r\n\t\t\t\tif (checkoutResponse.status === \"success\") {\r\n\t\t\t\t\tclearCart();\r\n\t\t\t\t\tsetShowWidget(false);\r\n\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.SUCCESS,\r\n\t\t\t\t\t\t\"¡Pago y pedido completados exitosamente!\"\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconsole.log(\"Detalles completos de la orden:\", {\r\n\t\t\t\t\t\tdatafast: verifyResponse.data,\r\n\t\t\t\t\t\tcheckout: checkoutResponse.data\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tonSuccess?.(checkoutResponse.data);\r\n\t\t\t\t\tnavigate(\"/orders\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(checkoutResponse.message || \"Error al procesar el checkout completo\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(verifyResponse.message || \"Error en la simulación de Datafast\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error en la simulación completa:\", error);\r\n\t\t\tconst errorMessage =\r\n\t\t\t\terror instanceof Error ? error.message : \"Error al procesar la simulación completa\";\r\n\t\t\tshowNotification(NotificationType.ERROR, errorMessage);\r\n\t\t\tonError?.(errorMessage);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleRealPayment = async () => {\r\n\t\tif (!checkoutData) {\r\n\t\t\tshowNotification(NotificationType.ERROR, \"No hay datos de checkout disponibles\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\t\r\n\t\t\t// ✅ GUARDAR EL TOTAL CALCULADO EN LOCALSTORAGE PARA LA PÁGINA DE RESULTADO\r\n\t\t\tconst totals = cart ? await CheckoutItemsService.calculateCheckoutTotals(cart.items, appliedDiscount) : null;\r\n\t\t\tif (totals) {\r\n\t\t\t\tlocalStorage.setItem(\"datafast_calculated_total\", totals.total.toString());\r\n\t\t\t\tconsole.log(\"💰 Total calculado guardado para verificación:\", totals.total);\r\n\t\t\t}\r\n\r\n\t\t\t// ✅ GUARDAR DATOS DEL CARRITO PARA RECUPERACIÓN EN CASO DE ERROR\r\n\t\t\tlocalStorage.setItem(\"datafast_cart_backup\", JSON.stringify(cart));\r\n\t\t\t\r\n\t\t\t// ✅ CONFIGURAR EL CALLBACK PARA MANEJAR EL RESULTADO DEL PAGO REAL\r\n\t\t\t(window as any).wpwlOptions = {\r\n\t\t\t\tonReady: function() {\r\n\t\t\t\t\tconsole.log(\"🎯 Widget Datafast listo para pago real\");\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.INFO,\r\n\t\t\t\t\t\t\"Complete los datos de su tarjeta en el formulario y haga clic en 'Pagar'.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tonSuccess: function(result: any) {\r\n\t\t\t\t\tconsole.log(\"🎉 Pago real exitoso:\", result);\r\n\t\t\t\t\t// Redirigir a página de resultado\r\n\t\t\t\t\twindow.location.href = `/datafast-result?resourcePath=${encodeURIComponent(result.resourcePath)}`;\r\n\t\t\t\t},\r\n\t\t\t\tonError: function(error: any) {\r\n\t\t\t\t\tconsole.error(\"❌ Error en pago real:\", error);\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\t\t\"Error al procesar el pago. Inténtelo nuevamente.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\"🔄 Configuración lista para pago real con Datafast\");\r\n\t\t\t\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error configurando pago real:\", error);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\"Error al configurar el pago real\"\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tif (showWidget) {\r\n\t\treturn (\r\n\t\t\t<div className=\"datafast-payment-widget\">\r\n\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n\t\t\t\t\t<h3 className=\"text-xl font-bold mb-4\">Pagar con Datafast</h3>\r\n\r\n\t\t\t\t\t<div className=\"mb-4 p-4 bg-blue-50 rounded-lg\">\r\n\t\t\t\t\t\t<h4 className=\"font-semibold text-blue-800\">\r\n\t\t\t\t\t\t\tInformación del pedido:\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t<p className=\"text-blue-700\">Monto: ${calculatedTotals?.total?.toFixed(2) || checkoutData?.amount || cart?.total}</p>\r\n\t\t\t\t\t\t<p className=\"text-blue-700\">ID: {checkoutData?.transaction_id}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"min-h-[400px] border border-gray-200 rounded-lg p-4\">\r\n\t\t\t\t\t\t<form\r\n\t\t\t\t\t\t\taction={`${import.meta.env.VITE_URL_BASE}/datafast-result`}\r\n\t\t\t\t\t\t\tclassName=\"paymentWidgets\"\r\n\t\t\t\t\t\t\tdata-brands=\"VISA MASTER AMEX DINERS DISCOVER\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{!widgetLoaded && (\r\n\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-center h-64\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-2\"></div>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-gray-600\">\r\n\t\t\t\t\t\t\t\t\t\t\tCargando formulario de pago...\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n\t\t\t\t\t\t<h4 className=\"font-semibold text-yellow-800 mb-2\">\r\n\t\t\t\t\t\t\tDatos de prueba para usar:\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t<div className=\"text-sm text-yellow-700 space-y-1\">\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Tarjeta VISA:</strong> 4200 0000 0000 0000\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Fecha:</strong> 07/26\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>CVV:</strong> 246\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Titular:</strong> {formData.given_name}{\" \"}\r\n\t\t\t\t\t\t\t\t{formData.surname}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"text-xs mt-2 text-blue-600\">\r\n\t\t\t\t\t\t\t\t<strong>Fase 2:</strong> Credenciales de testing avanzado con transacciones reales limitadas\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"mt-6 space-y-4\">\r\n\t\t\t\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={handleRealPayment}\r\n\t\t\t\t\t\t\t\tdisabled={!widgetLoaded}\r\n\t\t\t\t\t\t\t\tclassName=\"bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tPago Real\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={handleSimulatePaymentResult}\r\n\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\tclassName=\"bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{isLoading ? \"Verificando...\" : \"Simular Pago Exitoso\"}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"border-t pt-4\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={handleCompleteTestCheckout}\r\n\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full bg-yellow-500 hover:bg-yellow-600 text-white font-medium py-3 px-4 rounded-md transition-colors disabled:opacity-50 flex items-center justify-center\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n\t\t\t\t\t\t\t\t\t\tProcesando...\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n\t\t\t\t\t\t\t\t\t\t\t<path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\tPrueba Completa de Checkout\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<p className=\"text-xs text-gray-500 text-center mt-2\">\r\n\t\t\t\t\t\t\t\tSimula el proceso completo de checkout como el botón de prueba original\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"flex justify-center\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetShowWidget(false);\r\n\t\t\t\t\t\t\t\t\tsetShowForm(true);\r\n\t\t\t\t\t\t\t\t\tsetWidgetLoaded(false);\r\n\t\t\t\t\t\t\t\t\tconst script = document.getElementById(\"datafast-widget-script\");\r\n\t\t\t\t\t\t\t\t\tif (script) script.remove();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\tclassName=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tVolver\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (showForm) {\r\n\t\treturn (\r\n\t\t\t<div className=\"datafast-form\">\r\n\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n\t\t\t\t\t<h3 className=\"text-xl font-bold mb-4\">Información para Datafast</h3>\r\n\r\n\t\t\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tNombre *\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.given_name}\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\thandleInputChange(\"given_name\", e.target.value)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tSegundo Nombre\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.middle_name}\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\thandleInputChange(\"middle_name\", e.target.value)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tApellido *\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.surname}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(\"surname\", e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tTeléfono *\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.phone}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(\"phone\", e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"0999999999\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tCédula/ID * (10 dígitos)\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.doc_id}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tconst value = e.target.value.replace(/\\D/g, \"\").slice(0, 10);\r\n\t\t\t\t\t\t\t\t\thandleInputChange(\"doc_id\", value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"1234567890\"\r\n\t\t\t\t\t\t\t\tmaxLength={10}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"md:col-span-2\">\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tDirección *\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.address}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(\"address\", e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tCiudad *\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={formData.city}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(\"city\", e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n\t\t\t\t\t\t\t\tPaís *\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tvalue={formData.country}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(\"country\", e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"EC\">Ecuador</option>\r\n\t\t\t\t\t\t\t\t<option value=\"CO\">Colombia</option>\r\n\t\t\t\t\t\t\t\t<option value=\"PE\">Perú</option>\r\n\t\t\t\t\t\t\t\t<option value=\"US\">Estados Unidos</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"mt-6 flex gap-4\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={handleStartPayment}\r\n\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\tclassName=\"flex-1 bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-4 rounded-md transition-colors disabled:opacity-50 flex items-center justify-center\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n\t\t\t\t\t\t\t\t\tCreando checkout...\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\"Continuar con Datafast\"\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => setShowForm(false)}\r\n\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\tclassName=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCancelar\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"datafast-payment-button\">\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => setShowForm(true)}\r\n\t\t\t\tdisabled={isLoading || !cart || cart.items.length === 0}\r\n\t\t\t\tclassName=\"w-full transition-all duration-200 transform hover:scale-101 bg-[#003c58] border-1 hover:bg-[#00B86E] text-white font-medium py-3 px-4 rounded-md disabled:opacity-50 flex items-center justify-center\"\r\n\t\t\t>\r\n\t\t\t\t<svg\r\n\t\t\t\t\tclassName=\"w-5 h-5 mr-2\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<path\r\n\t\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\t\tstrokeWidth={2}\r\n\t\t\t\t\t\td=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</svg>\r\n\t\t\t\tPagar con Datafast\r\n\t\t\t</button>\r\n\r\n\t\t\t{(!cart || cart.items.length === 0) && (\r\n\t\t\t\t<p className=\"mt-2 text-sm text-gray-500 text-center\">\r\n\t\t\t\t\tAgrega productos al carrito para continuar\r\n\t\t\t\t</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DatafastPaymentButton;","// src/presentation/pages/CheckoutPage.tsx - ACTUALIZADO CON DESCUENTOS POR VOLUMEN\r\nimport {useState, useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useCart} from \"../hooks/useCart\";\r\nimport {useAuth} from \"../hooks/useAuth\";\r\nimport {useErrorHandler} from \"../hooks/useErrorHandler\";\r\nimport {CheckoutService} from \"../../core/services/CheckoutService\";\r\nimport {CheckoutItemsService} from \"../../infrastructure/services/CheckoutItemsService\";\r\nimport {calculateCartItemDiscountsAsync} from \"../../utils/volumeDiscountCalculator\";\r\n// 🎯 JORDAN: VolumeDiscountContext eliminado - funcionalidad migrada a volumeDiscountCalculator\r\n// import {useCartVolumeDiscounts} from \"../contexts/VolumeDiscountContext\";\r\nimport type {\r\n\tPaymentInfo,\r\n\tPaymentMethod,\r\n} from \"../../core/services/CheckoutService\";\r\nimport {NotificationType} from \"../contexts/CartContext\";\r\nimport CreditCardForm from \"../components/checkout/CreditCardForm\";\r\nimport QRPaymentForm from \"../components/checkout/QRPaymentForm\";\r\nimport AddressForm from \"../components/checkout/AddressForm\";\r\nimport type {Address} from \"../../core/domain/valueObjects/Address\";\r\nimport TestCheckoutButton from \"../components/checkout/TestCheckoutButton\";\r\nimport DatafastPaymentButton from \"../components/checkout/DatafastPaymentButtonProps\";\r\nimport {formatCurrency} from \"../../utils/formatters/formatCurrency\";\r\nimport {Gift, AlertTriangle, TrendingDown} from \"lucide-react\";\r\n\r\nconst CheckoutPage: React.FC = () => {\r\n\tconst navigate = useNavigate();\r\n\tconst {cart, clearCart, showNotification, appliedDiscount} = useCart();\r\n\tconst {user} = useAuth();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\t// ✅ Hook para descuentos por volumen dinámicos desde BD\r\n\t// 🎯 JORDAN: Volume discounts ahora se manejan directamente en volumeDiscountCalculator\r\n\t// const {isEnabled: volumeDiscountsEnabled, config: volumeDiscountConfig} = useCartVolumeDiscounts();\r\n\r\n\tconst initialAddress: Address = {\r\n\t\tname: \"\",\r\n\t\tstreet: \"\",\r\n\t\tcity: \"\",\r\n\t\tstate: \"\",\r\n\t\tpostalCode: \"\",\r\n\t\tcountry: \"Ecuador\",\r\n\t\tphone: \"\",\r\n\t};\r\n\r\n\tconst {handleSuccess, handleError} = useErrorHandler({\r\n\t\tshowNotification,\r\n\t\tcontext: \"CheckoutPage\",\r\n\t});\r\n\r\n\tconst [paymentMethod, setPaymentMethod] = useState<\"credit_card\" | \"deuna\">(\r\n\t\t\"credit_card\"\r\n\t);\r\n\r\n\tconst [shippingAddress, setShippingAddress] =\r\n\t\tuseState<Address>(initialAddress);\r\n\tconst [billingAddress, setBillingAddress] = useState<Address>(initialAddress);\r\n\tconst [useSameAddress, setUseSameAddress] = useState(true);\r\n\r\n\tconst [paymentInfo, setPaymentInfo] = useState<PaymentInfo>({\r\n\t\tmethod: \"credit_card\",\r\n\t\tcard_number: \"\",\r\n\t\tcard_expiry: \"\",\r\n\t\tcard_cvc: \"\",\r\n\t});\r\n\r\n\tconst [formErrors, setFormErrors] = useState<Record<string, string>>({});\r\n\tconst [orderComplete, setOrderComplete] = useState(false);\r\n\tconst [orderDetails, setOrderDetails] = useState<any>(null);\r\n\tconst [countdown, setCountdown] = useState(8);\r\n\r\n\tconst checkoutService = new CheckoutService();\r\n\r\n\t// ✅ ESTADO PARA CÁLCULOS DE CHECKOUT ASÍNCRONOS\r\n\tconst [checkoutCalculations, setCheckoutCalculations] = useState<{\r\n\t\titems: any[];\r\n\t\ttotals: {\r\n\t\t\tsubtotal: number;\r\n\t\t\toriginalSubtotal: number;\r\n\t\t\tsellerDiscounts: number;\r\n\t\t\tvolumeDiscounts: number;\r\n\t\t\ttotalDiscounts: number;\r\n\t\t\tcouponDiscount: number;\r\n\t\t\ttax: number;\r\n\t\t\tshipping: number;\r\n\t\t\ttotal: number;\r\n\t\t\tfreeShipping: boolean;\r\n\t\t};\r\n\t\tstockIssues: Array<{\r\n\t\t\tproductName: string;\r\n\t\t\trequested: number;\r\n\t\t\tavailable: number;\r\n\t\t\tisOutOfStock: boolean;\r\n\t\t}>;\r\n\t\tcheckoutItems: any[];\r\n\t}>({\r\n\t\titems: [],\r\n\t\ttotals: {\r\n\t\t\tsubtotal: 0,\r\n\t\t\toriginalSubtotal: 0,\r\n\t\t\tsellerDiscounts: 0,\r\n\t\t\tvolumeDiscounts: 0,\r\n\t\t\ttotalDiscounts: 0,\r\n\t\t\tcouponDiscount: 0,\r\n\t\t\ttax: 0,\r\n\t\t\tshipping: 0,\r\n\t\t\ttotal: 0,\r\n\t\t\tfreeShipping: false\r\n\t\t},\r\n\t\tstockIssues: [],\r\n\t\tcheckoutItems: []\r\n\t});\r\n\r\n\t// ✅ CALCULAR TOTALES DE FORMA ASÍNCRONA\r\n\tuseEffect(() => {\r\n\t\tconst calculateCheckout = async () => {\r\n\t\t\tif (!cart?.items?.length) {\r\n\t\t\t\tsetCheckoutCalculations({\r\n\t\t\t\t\titems: [],\r\n\t\t\t\t\ttotals: {\r\n\t\t\t\t\t\tsubtotal: 0,\r\n\t\t\t\t\t\toriginalSubtotal: 0,\r\n\t\t\t\t\t\tsellerDiscounts: 0,\r\n\t\t\t\t\t\tvolumeDiscounts: 0,\r\n\t\t\t\t\t\ttotalDiscounts: 0,\r\n\t\t\t\t\t\tcouponDiscount: 0,\r\n\t\t\t\t\t\ttax: 0,\r\n\t\t\t\t\t\tshipping: 0,\r\n\t\t\t\t\t\ttotal: 0,\r\n\t\t\t\t\t\tfreeShipping: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstockIssues: [],\r\n\t\t\t\t\tcheckoutItems: []\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// ✅ Calcular items con descuentos asíncronamente usando BD config\r\n\t\t\tconsole.log(\"🔄 CheckoutPage: Calculando descuentos con configuración dinámica\");\r\n\t\t\tconst itemsWithDiscounts = await Promise.all(\r\n\t\t\t\tcart.items.map(async (item) => {\r\n\t\t\t\t\t// 🎯 JORDAN: Usar calculadora asíncrona con configuración dinámica\r\n\t\t\t\t\tconst discount = await calculateCartItemDiscountsAsync(item);\r\n\t\t\t\t\tconst availableStock = item.product?.stockAvailable || item.product?.stock || 0;\r\n\t\t\t\t\tconst hasStockIssue = item.quantity > availableStock || !item.product?.is_in_stock;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tdiscount,\r\n\t\t\t\t\t\titemTotal: discount.finalPricePerUnit * item.quantity,\r\n\t\t\t\t\t\tavailableStock,\r\n\t\t\t\t\t\thasStockIssue,\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tconsole.log(\"✅ CheckoutPage: Descuentos calculados para\", itemsWithDiscounts.length, \"items\");\r\n\r\n\t\t// ✅ Identificar problemas de stock\r\n\t\tconst stockIssues = itemsWithDiscounts\r\n\t\t\t.filter((item) => item.hasStockIssue)\r\n\t\t\t.map((item) => ({\r\n\t\t\t\tproductName: item.product?.name || \"Producto\",\r\n\t\t\t\trequested: item.quantity,\r\n\t\t\t\tavailable: item.availableStock,\r\n\t\t\t\tisOutOfStock: !item.product?.is_in_stock,\r\n\t\t\t}));\r\n\r\n\t\t\t// ✅ CALCULAR TOTALES DE FORMA ASÍNCRONA\r\n\t\t\tconsole.log(\"🔍 FLUJO CHECKOUT - Calculando totales\");\r\n\t\t\tconsole.log(\"📊 Items en checkout:\", cart.items.length);\r\n\t\t\tconsole.log(\"📊 Cupón en checkout:\", appliedDiscount?.discountCode?.code || \"NINGUNO\");\r\n\t\t\t\r\n\t\t\t// 🎯 CRITICAL: forceRefresh para garantizar configuraciones frescas en Checkout\r\n\t\t\tconst totals = await CheckoutItemsService.calculateCheckoutTotals(cart.items, appliedDiscount, true);\r\n\t\t\tconsole.log(\"🎯 TOTAL CHECKOUT:\", totals.total);\r\n\r\n\t\t\t// ✅ JORDAN: Preparar items para envío al backend con configuración unificada\r\n\t\t\t// 🎯 CRITICAL: forceRefresh para garantizar configuraciones frescas\r\n\t\t\tconst checkoutItems = await CheckoutItemsService.prepareItemsForCheckout(cart.items, appliedDiscount, true);\r\n\r\n\t\t\tsetCheckoutCalculations({\r\n\t\t\t\titems: itemsWithDiscounts,\r\n\t\t\t\ttotals,\r\n\t\t\t\tstockIssues,\r\n\t\t\t\tcheckoutItems\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tcalculateCheckout();\r\n\t}, [cart?.items, cart?.total, cart?.subtotal, appliedDiscount]); // 🎯 JORDAN: Dependencias simplificadas\r\n\r\n\t// Funciones helper\r\n\tconst getAvailableStock = (product: any): number => {\r\n\t\tif (typeof product.stockAvailable === \"number\") {\r\n\t\t\treturn product.stockAvailable;\r\n\t\t}\r\n\t\tif (typeof product.stock === \"number\") {\r\n\t\t\treturn product.stock;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\tconst validateCartStock = () => {\r\n\t\tif (!cart?.items) return {valid: true, errors: []};\r\n\r\n\t\tconst errors: string[] = [];\r\n\r\n\t\tcart.items.forEach((item) => {\r\n\t\t\tconst availableStock = getAvailableStock(item.product);\r\n\r\n\t\t\tif (!item.product?.is_in_stock) {\r\n\t\t\t\terrors.push(`${item.product?.name || \"Producto\"} está agotado`);\r\n\t\t\t} else if (item.quantity > availableStock) {\r\n\t\t\t\terrors.push(\r\n\t\t\t\t\t`${item.product?.name || \"Producto\"}: solo hay ${availableStock} unidades disponibles (solicitaste ${item.quantity})`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tvalid: errors.length === 0,\r\n\t\t\terrors,\r\n\t\t};\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\tconst userAddress: Address = {\r\n\t\t\t\tname: `${user.name}`,\r\n\t\t\t\tstreet: user.address || \"\",\r\n\t\t\t\tcity: user.city || \"\",\r\n\t\t\t\tstate: user.state || user.province || \"\",\r\n\t\t\t\tpostalCode: user.postal_code || user.zip_code || \"\",\r\n\t\t\t\tcountry: user.country || \"Ecuador\",\r\n\t\t\t\tphone: user.phone || \"\",\r\n\t\t\t};\r\n\t\t\tsetShippingAddress(userAddress);\r\n\t\t\tsetBillingAddress(userAddress);\r\n\t\t}\r\n\t}, [user]);\r\n\r\n\tconst handleDatafastSuccess = (orderData: any) => {\r\n\t\tconsole.log(\"Pago exitoso:\", orderData);\r\n\t};\r\n\r\n\tconst handleDatafastError = (error: string) => {\r\n\t\tconsole.error(\"Error:\", error);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// 🔧 CRITICAL FIX: Don't redirect when order is complete (allows receipt display)\r\n\t\tif (orderComplete && orderDetails) {\r\n\t\t\tconsole.log('✅ Order complete - skipping cart validation to show receipt');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!cart || cart.items.length === 0) {\r\n\t\t\tshowNotification(NotificationType.ERROR, \"El carrito está vacío\");\r\n\t\t\tnavigate(\"/cart\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst stockValidation = validateCartStock();\r\n\t\tif (!stockValidation.valid) {\r\n\t\t\tconsole.warn(\"⚠️ Problemas de stock detectados:\", stockValidation.errors);\r\n\r\n\t\t\tif (stockValidation.errors.length > 0) {\r\n\t\t\t\tshowNotification(\r\n\t\t\t\t\tNotificationType.WARNING,\r\n\t\t\t\t\t`Problema de stock: ${stockValidation.errors[0]}`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [cart, navigate, showNotification, orderComplete, orderDetails]);\r\n\r\n\t// ✅ NUEVO: Redirect automático después de completar orden - mostrar recibo por 5 segundos\r\n\tuseEffect(() => {\r\n\t\tif (orderComplete) {\r\n\t\t\t// Reset countdown when order completes\r\n\t\t\tsetCountdown(8);\r\n\t\t\t\r\n\t\t\t// Update countdown every second\r\n\t\t\tconst countdownTimer = setInterval(() => {\r\n\t\t\t\tsetCountdown(prev => {\r\n\t\t\t\t\tif (prev <= 1) {\r\n\t\t\t\t\t\tclearInterval(countdownTimer);\r\n\t\t\t\t\t\t// Move navigation outside of setState to prevent React warning\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tconsole.log('🔄 Auto-redirecting to orders page after 8 seconds');\r\n\t\t\t\t\t\t\tnavigate(\"/orders\");\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn prev - 1;\r\n\t\t\t\t});\r\n\t\t\t}, 1000);\r\n\r\n\t\t\treturn () => clearInterval(countdownTimer);\r\n\t\t}\r\n\t}, [orderComplete, navigate]);\r\n\r\n\tconst handlePaymentMethodChange = (method: \"credit_card\" | \"deuna\") => {\r\n\t\tsetPaymentMethod(method);\r\n\t\tsetPaymentInfo({\r\n\t\t\t...paymentInfo,\r\n\t\t\tmethod: method === \"deuna\" ? \"transfer\" : \"credit_card\",\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleShippingChange = (field: keyof Address, value: string) => {\r\n\t\tconst newAddress = {...shippingAddress, [field]: value};\r\n\t\tsetShippingAddress(newAddress);\r\n\t\tif (useSameAddress) {\r\n\t\t\tsetBillingAddress(newAddress);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleBillingChange = (field: keyof Address, value: string) => {\r\n\t\tsetBillingAddress({...billingAddress, [field]: value});\r\n\t};\r\n\r\n\tconst handlePaymentChange = (field: keyof PaymentInfo, value: string) => {\r\n\t\tsetPaymentInfo({...paymentInfo, [field]: value});\r\n\t\tif (value.trim() && formErrors[field]) {\r\n\t\t\tconst newErrors = {...formErrors};\r\n\t\t\tdelete newErrors[field];\r\n\t\t\tsetFormErrors(newErrors);\r\n\t\t}\r\n\t};\r\n\r\n\tconst validateForm = (): boolean => {\r\n\t\tconst errors: Record<string, string> = {};\r\n\r\n\t\tconst validateAddress = (address: Address, prefix: string) => {\r\n\t\t\tconst requiredFields: (keyof Address)[] = [\r\n\t\t\t\t\"name\",\r\n\t\t\t\t\"street\",\r\n\t\t\t\t\"city\",\r\n\t\t\t\t\"state\",\r\n\t\t\t\t\"postalCode\",\r\n\t\t\t\t\"country\",\r\n\t\t\t\t\"phone\",\r\n\t\t\t];\r\n\t\t\trequiredFields.forEach((field) => {\r\n\t\t\t\tif (!address[field]) {\r\n\t\t\t\t\terrors[`${prefix}${field}`] =\r\n\t\t\t\t\t\t`El campo ${field.replace(\"_\", \" \")} es obligatorio`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tvalidateAddress(shippingAddress, \"shipping\");\r\n\t\tif (!useSameAddress) {\r\n\t\t\tvalidateAddress(billingAddress, \"billing\");\r\n\t\t}\r\n\r\n\t\tif (paymentMethod === \"credit_card\") {\r\n\t\t\tif (!paymentInfo.card_number) {\r\n\t\t\t\terrors.card_number = \"El número de tarjeta es obligatorio\";\r\n\t\t\t} else if (!/^\\d{16}$/.test(paymentInfo.card_number || \"\")) {\r\n\t\t\t\terrors.card_number = \"El número de tarjeta debe tener 16 dígitos\";\r\n\t\t\t}\r\n\r\n\t\t\tif (!paymentInfo.card_expiry) {\r\n\t\t\t\terrors.card_expiry = \"La fecha de expiración es obligatoria\";\r\n\t\t\t} else if (!/^\\d{2}\\/\\d{2}$/.test(paymentInfo.card_expiry || \"\")) {\r\n\t\t\t\terrors.card_expiry = \"El formato debe ser MM/YY\";\r\n\t\t\t}\r\n\r\n\t\t\tif (!paymentInfo.card_cvc) {\r\n\t\t\t\terrors.card_cvc = \"El código de seguridad es obligatorio\";\r\n\t\t\t} else if (!/^\\d{3,4}$/.test(paymentInfo.card_cvc || \"\")) {\r\n\t\t\t\terrors.card_cvc = \"El código debe tener 3 o 4 dígitos\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetFormErrors(errors);\r\n\t\treturn Object.keys(errors).length === 0;\r\n\t};\r\n\r\n\tconst processCheckout = async () => {\r\n\t\tconsole.log(\"🛒 CheckoutPage.processCheckout INICIADO CON DESCUENTOS POR VOLUMEN\");\r\n\r\n\t\tconst stockValidation = validateCartStock();\r\n\t\tif (!stockValidation.valid) {\r\n\t\t\tconsole.log(\"❌ Validación de stock falló:\", stockValidation.errors);\r\n\r\n\t\t\tstockValidation.errors.forEach((error) => {\r\n\t\t\t\tshowNotification(NotificationType.ERROR, error);\r\n\t\t\t});\r\n\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.WARNING,\r\n\t\t\t\t\"Por favor, ajusta las cantidades en tu carrito antes de continuar\"\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!validateForm()) {\r\n\t\t\tconsole.log(\"❌ Validación de formulario falló\");\r\n\t\t\tshowNotification(\r\n\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\"Por favor, completa todos los campos obligatorios\"\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"🛒 ANÁLISIS COMPLETO DEL CARRITO CON DESCUENTOS POR VOLUMEN:\");\r\n\t\tconsole.log(\"📊 Totales calculados:\", checkoutCalculations.totals);\r\n\t\tconsole.log(\"📊 Items para checkout:\", checkoutCalculations.checkoutItems);\r\n\r\n\t\tsetIsLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst sellerId = CheckoutService.getSellerIdFromCart(cart);\r\n\t\t\t\r\n\t\t\tconst checkoutData = {\r\n\t\t\t\tpayment: {\r\n\t\t\t\t\t...paymentInfo,\r\n\t\t\t\t\tmethod:\r\n\t\t\t\t\t\tpaymentMethod === \"deuna\"\r\n\t\t\t\t\t\t\t? (\"qr\" as PaymentMethod)\r\n\t\t\t\t\t\t\t: paymentMethod === \"credit_card\" \r\n\t\t\t\t\t\t\t? (\"credit_card\" as PaymentMethod)\r\n\t\t\t\t\t\t\t: paymentInfo.method,\r\n\t\t\t\t},\r\n\t\t\t\tshippingAddress: shippingAddress,\r\n\t\t\t\tbillingAddress: useSameAddress ? shippingAddress : billingAddress,\r\n\t\t\t\tseller_id: sellerId || undefined,\r\n\t\t\t\titems: checkoutCalculations.checkoutItems, // ✅ Usar items con descuentos calculados\r\n\t\t\t\t// ✅ NUEVO: Incluir código de descuento aplicado y su información\r\n\t\t\t\tdiscount_code: appliedDiscount?.discountCode?.code || null,\r\n\t\t\t\tdiscount_info: appliedDiscount || null, // ✅ Pasar información completa del descuento\r\n\t\t\t\t// ✅ CRÍTICO: Enviar totales calculados al backend\r\n\t\t\t\tcalculated_totals: {\r\n\t\t\t\t\tsubtotal: checkoutCalculations.totals.subtotal,\r\n\t\t\t\t\ttax: checkoutCalculations.totals.tax,\r\n\t\t\t\t\tshipping: checkoutCalculations.totals.shipping,\r\n\t\t\t\t\ttotal: checkoutCalculations.totals.total,\r\n\t\t\t\t\ttotal_discounts: checkoutCalculations.totals.totalDiscounts\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"📦 Datos completos de checkout con descuentos por volumen:\",\r\n\t\t\t\tJSON.stringify(checkoutData, null, 2)\r\n\t\t\t);\r\n\t\t\tconsole.log(\"🚀 Enviando checkout al backend...\");\r\n\r\n\t\t\tconst response = await checkoutService.processCheckout(checkoutData, user?.email);\r\n\r\n\t\t\tconsole.log(\"✅ Respuesta del checkout recibida:\", response);\r\n\r\n\t\t\tif (response.status === \"success\") {\r\n\t\t\t\tconsole.log(\"🎉 Checkout exitoso con descuentos por volumen, limpiando carrito...\");\r\n\t\t\t\tsetOrderComplete(true);\r\n\t\t\t\tsetOrderDetails(response.data);\r\n\r\n\t\t\t\tlet successMessage = \"¡Pedido completado con éxito!\";\r\n\t\t\t\tif (checkoutCalculations.totals.totalDiscounts > 0) {\r\n\t\t\t\t\tsuccessMessage += ` Has ahorrado ${formatCurrency(checkoutCalculations.totals.totalDiscounts)} con descuentos aplicados.`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\thandleSuccess(successMessage);\r\n\t\t\t\tclearCart();\r\n\r\n\t\t\t\t// ✅ Log de información de descuentos aplicados\r\n\t\t\t\tif (response.data && typeof response.data === \"object\") {\r\n\t\t\t\t\tconst orderData = response.data as any;\r\n\t\t\t\t\tconsole.log(\"🔍 ORDEN CREADA CON DESCUENTOS:\");\r\n\t\t\t\t\tconsole.log(\"📊 Order ID:\", orderData.order_id);\r\n\t\t\t\t\tconsole.log(\"📊 Order Number:\", orderData.order_number);\r\n\t\t\t\t\tconsole.log(\"📊 Total:\", orderData.total);\r\n\t\t\t\t\tconsole.log(\"📊 Total Savings:\", orderData.total_savings);\r\n\t\t\t\t\tconsole.log(\"📊 Volume Discounts Applied:\", orderData.volume_discounts_applied);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(response.message || \"Error al procesar el pedido\");\r\n\t\t\t}\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.error(\"❌ Error COMPLETO al procesar checkout con descuentos por volumen:\");\r\n\t\t\tconsole.error(\"📊 Error object:\", error);\r\n\t\t\tconsole.error(\"📊 Error message:\", (error as any)?.message);\r\n\r\n\t\t\thandleError(\r\n\t\t\t\terror,\r\n\t\t\t\t\"Error al procesar el pago. Por favor, intenta de nuevo más tarde.\"\r\n\t\t\t);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tconsole.log(\"🛒 CheckoutPage.processCheckout FINALIZADO\");\r\n\t\t}\r\n\t};\r\n\r\n\t// ✅ COMPONENTE DE RESUMEN CON DESCUENTOS POR VOLUMEN\r\n\tconst OrderSummaryComponent = () => (\r\n\t\t<div>\r\n\t\t\t<h2 className=\"text-xl font-bold text-gray-800 mb-4\">\r\n\t\t\t\tResumen del pedido\r\n\t\t\t</h2>\r\n\r\n\t\t\t{checkoutCalculations.stockIssues.length > 0 && (\r\n\t\t\t\t<div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-4\">\r\n\t\t\t\t\t<div className=\"flex items-start\">\r\n\t\t\t\t\t\t<AlertTriangle size={18} className=\"text-red-600 mr-2 mt-0.5\" />\r\n\t\t\t\t\t\t<div className=\"flex-1\">\r\n\t\t\t\t\t\t\t<h4 className=\"font-medium text-red-800 text-sm mb-2\">\r\n\t\t\t\t\t\t\t\tProblemas de stock detectados\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className=\"space-y-1\">\r\n\t\t\t\t\t\t\t\t{checkoutCalculations.stockIssues.map((issue, index) => (\r\n\t\t\t\t\t\t\t\t\t<div key={index} className=\"text-xs text-red-700\">\r\n\t\t\t\t\t\t\t\t\t\t<strong>{issue.productName}:</strong>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{issue.isOutOfStock\r\n\t\t\t\t\t\t\t\t\t\t\t? \"Producto agotado\"\r\n\t\t\t\t\t\t\t\t\t\t\t: `Solo ${issue.available} disponibles (solicitaste ${issue.requested})`}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"mt-2\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={() => navigate(\"/cart\")}\r\n\t\t\t\t\t\t\t\t\tclassName=\"text-xs text-red-600 underline hover:no-underline\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tIr al carrito para ajustar cantidades\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* ✅ BANNER DE DESCUENTOS APLICADOS */}\r\n\t\t\t{checkoutCalculations.totals.totalDiscounts > 0 && (\r\n\t\t\t\t<div className=\"bg-gradient-to-r from-green-50 to-blue-50 border border-green-200 rounded-lg p-4 mb-4\">\r\n\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t<div className=\"flex-1\">\r\n\t\t\t\t\t\t\t<h4 className=\"font-medium text-green-800 text-sm\">\r\n\t\t\t\t\t\t\t\t¡Descuentos Aplicados!\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className=\"text-xs text-green-600 mt-1 space-y-1\">\r\n\t\t\t\t\t\t\t\t{checkoutCalculations.totals.sellerDiscounts > 0 && (\r\n\t\t\t\t\t\t\t\t\t<p>Descuentos del vendedor: {formatCurrency(checkoutCalculations.totals.sellerDiscounts)}</p>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{checkoutCalculations.totals.volumeDiscounts > 0 && (\r\n\t\t\t\t\t\t\t\t\t<p>Descuentos por volumen: {formatCurrency(checkoutCalculations.totals.volumeDiscounts)}</p>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-lg font-bold text-green-600\">\r\n\t\t\t\t\t\t\t{formatCurrency(checkoutCalculations.totals.totalDiscounts)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t<div className=\"space-y-3 mb-6\">\r\n\t\t\t\t{checkoutCalculations.items.map((item, index) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tclassName={`flex items-center justify-between py-2 border-b border-gray-100 ${\r\n\t\t\t\t\t\t\titem.hasStockIssue ? \"bg-red-50 px-2 rounded\" : \"\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"flex-1\">\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tclassName={`text-sm font-medium ${item.hasStockIssue ? \"text-red-900\" : \"text-gray-900\"}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{item.product?.name || `Producto ${item.productId}`}\r\n\t\t\t\t\t\t\t\t{item.hasStockIssue && (\r\n\t\t\t\t\t\t\t\t\t<span className=\"ml-2 text-xs text-red-600\">⚠️</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className=\"flex items-center space-x-2 mt-1\">\r\n\t\t\t\t\t\t\t\t<span className=\"text-xs text-gray-500\">\r\n\t\t\t\t\t\t\t\t\tCantidad: {item.quantity}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{/* ✅ MOSTRAR DESCUENTOS APLICADOS */}\r\n\t\t\t\t\t\t\t\t{item.discount.sellerDiscountAmount > 0 && (\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-xs bg-blue-100 text-blue-600 px-2 py-0.5 rounded flex items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<Gift size={10} className=\"mr-1\" />\r\n\t\t\t\t\t\t\t\t\t\tSeller: {item.product?.discount_percentage || 0}% OFF\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{item.discount.volumeDiscountAmount > 0 && (\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-xs bg-green-100 text-green-600 px-2 py-0.5 rounded flex items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<TrendingDown size={10} className=\"mr-1\" />\r\n\t\t\t\t\t\t\t\t\t\tVolumen: {item.discount.discountPercentage}% OFF\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{/* ✅ MOSTRAR PRECIO CON DESCUENTOS */}\r\n\t\t\t\t\t\t\t{item.discount.hasDiscount && (\r\n\t\t\t\t\t\t\t\t<div className=\"text-xs text-gray-600 mt-1\">\r\n\t\t\t\t\t\t\t\t\tPrecio unitario: {formatCurrency(item.discount.finalPricePerUnit)}\r\n\t\t\t\t\t\t\t\t\t<span className=\"line-through text-gray-400 ml-1\">\r\n\t\t\t\t\t\t\t\t\t\t{formatCurrency(item.discount.originalPrice)}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{item.discount.savingsTotal > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-green-600 ml-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t(Ahorras: {formatCurrency(item.discount.savingsTotal)})\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={`text-sm font-medium ${item.hasStockIssue ? \"text-red-900\" : \"text-gray-900\"}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{formatCurrency(item.itemTotal)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* ✅ TOTALES CON DESCUENTOS DESGLOSADOS */}\r\n\t\t\t<div className=\"space-y-3 border-t border-gray-200 pt-4\">\r\n\t\t\t\t<div className=\"flex justify-between text-sm\">\r\n\t\t\t\t\t<span className=\"text-gray-600\">Subtotal (con descuentos):</span>\r\n\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t{formatCurrency(checkoutCalculations.totals.subtotal)}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* ✅ MOSTRAR AHORROS DESGLOSADOS */}\r\n\t\t\t\t{checkoutCalculations.totals.sellerDiscounts > 0 && (\r\n\t\t\t\t\t<div className=\"flex justify-between text-sm text-blue-600\">\r\n\t\t\t\t\t\t<span className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<Gift size={14} className=\"mr-1\" />\r\n\t\t\t\t\t\t\tDescuentos del vendedor:\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t\t-{formatCurrency(checkoutCalculations.totals.sellerDiscounts)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{checkoutCalculations.totals.volumeDiscounts > 0 && (\r\n\t\t\t\t\t<div className=\"flex justify-between text-sm text-green-600\">\r\n\t\t\t\t\t\t<span className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<TrendingDown size={14} className=\"mr-1\" />\r\n\t\t\t\t\t\t\tDescuentos por volumen:\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t\t-{formatCurrency(checkoutCalculations.totals.volumeDiscounts)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* ✅ NUEVO: Mostrar descuento de código aplicado */}\r\n\t\t\t\t{appliedDiscount && (\r\n\t\t\t\t\t<div className=\"flex justify-between text-sm text-green-600\">\r\n\t\t\t\t\t\t<span className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<Gift size={14} className=\"mr-1\" />\r\n\t\t\t\t\t\t\tCódigo de descuento ({appliedDiscount.discountCode.code}):\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t\t-{formatCurrency(checkoutCalculations.totals.couponDiscount || 0)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<div className=\"flex justify-between text-sm\">\r\n\t\t\t\t\t<span className=\"text-gray-600\">IVA (15%):</span>\r\n\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t{formatCurrency(checkoutCalculations.totals.tax)}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"flex justify-between text-sm\">\r\n\t\t\t\t\t<span className=\"text-gray-600\">Envío:</span>\r\n\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t{checkoutCalculations.totals.freeShipping ? \r\n\t\t\t\t\t\t\t\"Gratis\" : \r\n\t\t\t\t\t\t\tformatCurrency(checkoutCalculations.totals.shipping)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"flex justify-between text-lg font-bold border-t border-gray-200 pt-3\">\r\n\t\t\t\t\t<span>Total:</span>\r\n\t\t\t\t\t<span>{formatCurrency(checkoutCalculations.totals.total)}</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* ✅ RESUMEN DE AHORROS TOTALES */}\r\n\t\t\t\t{checkoutCalculations.totals.totalDiscounts > 0 && (\r\n\t\t\t\t\t<div className=\"bg-green-50 border border-green-200 rounded-lg p-3 mt-3\">\r\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\r\n\t\t\t\t\t\t\t<span className=\"text-sm font-medium text-green-800\">\r\n\t\t\t\t\t\t\t\tTotal ahorrado:\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"text-lg font-bold text-green-600\">\r\n\t\t\t\t\t\t\t\t{formatCurrency(checkoutCalculations.totals.totalDiscounts)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\tif (orderComplete && orderDetails) {\r\n\t\treturn (\r\n\t\t\t<div className=\"container mx-auto px-4 py-10\">\r\n\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-8 max-w-3xl mx-auto\">\r\n\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t<div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n\t\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\t\tclassName=\"h-10 w-10 text-green-500\"\r\n\t\t\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\t\t\t\t\tstrokeWidth={2}\r\n\t\t\t\t\t\t\t\t\td=\"M5 13l4 4L19 7\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<h2 className=\"text-3xl font-bold text-gray-800 mb-4\">\r\n\t\t\t\t\t\t\t¡Pago con DeUna completado!\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t<p className=\"text-gray-600 mb-6\">\r\n\t\t\t\t\t\t\tTu pago se procesó correctamente y tu pedido está siendo preparado. \r\n\t\t\t\t\t\t\tRecibirás un correo electrónico con los detalles.\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t{/* ✅ MOSTRAR AHORROS EN CONFIRMACIÓN */}\r\n\t\t\t\t\t\t{checkoutCalculations.totals.totalDiscounts > 0 && (\r\n\t\t\t\t\t\t\t<div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-6\">\r\n\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\r\n\t\t\t\t\t\t\t\t\t<Gift className=\"h-5 w-5 text-green-600 mr-2\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-green-800 font-medium\">\r\n\t\t\t\t\t\t\t\t\t\t¡Has ahorrado {formatCurrency(checkoutCalculations.totals.totalDiscounts)}!\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"border-t border-gray-200 pt-4 pb-2 mb-4\">\r\n\t\t\t\t\t\t<h3 className=\"text-lg font-semibold mb-2\">Detalles del pedido:</h3>\r\n\t\t\t\t\t\t<div className=\"flex justify-between py-2\">\r\n\t\t\t\t\t\t\t<span className=\"text-gray-600\">Número de orden:</span>\r\n\t\t\t\t\t\t\t<span className=\"font-medium\">{orderDetails.order_number}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"flex justify-between py-2\">\r\n\t\t\t\t\t\t\t<span className=\"text-gray-600\">Total:</span>\r\n\t\t\t\t\t\t\t<span className=\"font-medium\">\r\n\t\t\t\t\t\t\t\t{formatCurrency(orderDetails.total || checkoutCalculations.totals.total)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{checkoutCalculations.totals.totalDiscounts > 0 && (\r\n\t\t\t\t\t\t\t<div className=\"flex justify-between py-2\">\r\n\t\t\t\t\t\t\t\t<span className=\"text-gray-600\">Total ahorrado:</span>\r\n\t\t\t\t\t\t\t\t<span className=\"font-medium text-green-600\">\r\n\t\t\t\t\t\t\t\t\t{formatCurrency(checkoutCalculations.totals.totalDiscounts)}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className=\"flex justify-between py-2\">\r\n\t\t\t\t\t\t\t<span className=\"text-gray-600\">Estado del pago:</span>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={`font-medium ${orderDetails.payment_status === \"paid\" ? \"text-green-600\" : \"text-yellow-600\"}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{orderDetails.payment_status === \"paid\"\r\n\t\t\t\t\t\t\t\t\t? \"Pagado\"\r\n\t\t\t\t\t\t\t\t\t: orderDetails.payment_status}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* ✅ NUEVO: Mensaje de redirección automática */}\r\n\t\t\t\t\t<div className=\"text-center mb-6\">\r\n\t\t\t\t\t\t<p className=\"text-sm text-gray-500\">\r\n\t\t\t\t\t\t\tSerás redirigido a tus pedidos en{\" \"}\r\n\t\t\t\t\t\t\t<span className=\"font-medium text-primary-600\">{countdown}</span>{\" \"}\r\n\t\t\t\t\t\t\tsegundos...\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"flex justify-center space-x-4 mt-6\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => navigate(\"/\")}\r\n\t\t\t\t\t\t\tclassName=\"px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tVolver a la tienda\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => navigate(\"/orders\")}\r\n\t\t\t\t\t\t\tclassName=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tVer mis pedidos\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container mx-auto px-4 py-10\">\r\n\t\t\t<div className=\"flex justify-between items-center mb-8\">\r\n\t\t\t\t<h1 className=\"text-3xl font-bold\">Finalizar compra</h1>\r\n\t\t\t\t<TestCheckoutButton />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"flex flex-col lg:flex-row gap-8\">\r\n\t\t\t\t<div className=\"lg:w-2/3\">\r\n\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\r\n\t\t\t\t\t\t<h2 className=\"text-xl font-bold mb-4\">\r\n\t\t\t\t\t\t\tInformación de envío y facturación\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t\t<label className=\"inline-flex items-center\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-checkbox h-5 w-5 text-primary-600\"\r\n\t\t\t\t\t\t\t\t\tchecked={useSameAddress}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setUseSameAddress(e.target.checked)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span className=\"ml-2 text-gray-700\">\r\n\t\t\t\t\t\t\t\t\tUsar la misma dirección para facturación\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<AddressForm\r\n\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\tuseSameAddress\r\n\t\t\t\t\t\t\t\t\t? \"Dirección de Envío y Facturación\"\r\n\t\t\t\t\t\t\t\t\t: \"Dirección de Envío\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\taddress={shippingAddress}\r\n\t\t\t\t\t\t\tonAddressChange={handleShippingChange}\r\n\t\t\t\t\t\t\terrors={formErrors}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t{!useSameAddress && (\r\n\t\t\t\t\t\t\t<div className=\"mt-8 pt-8 border-t border-gray-200\">\r\n\t\t\t\t\t\t\t\t<AddressForm\r\n\t\t\t\t\t\t\t\t\ttitle=\"Dirección de Facturación\"\r\n\t\t\t\t\t\t\t\t\taddress={billingAddress}\r\n\t\t\t\t\t\t\t\t\tonAddressChange={handleBillingChange}\r\n\t\t\t\t\t\t\t\t\terrors={formErrors}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\r\n\t\t\t\t\t\t<h2 className=\"text-xl font-bold mb-4\">Método de pago</h2>\r\n\r\n\t\t\t\t\t\t<div className=\"flex flex-wrap gap-4 mb-6\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tonClick={() => handlePaymentMethodChange(\"credit_card\")}\r\n\t\t\t\t\t\t\t\tclassName={`flex items-center border rounded-lg px-4 py-3 ${\r\n\t\t\t\t\t\t\t\t\tpaymentMethod === \"credit_card\"\r\n\t\t\t\t\t\t\t\t\t\t? \"border-primary-600 bg-primary-50 text-primary-600\"\r\n\t\t\t\t\t\t\t\t\t\t: \"border-gray-300 hover:bg-gray-50\"\r\n\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span>Tarjeta de crédito</span>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tonClick={() => handlePaymentMethodChange(\"deuna\")}\r\n\t\t\t\t\t\t\t\tclassName={`flex items-center border rounded-lg px-4 py-3 ${\r\n\t\t\t\t\t\t\t\t\tpaymentMethod === \"deuna\"\r\n\t\t\t\t\t\t\t\t\t\t? \"border-primary-600 bg-primary-50 text-primary-600\"\r\n\t\t\t\t\t\t\t\t\t\t: \"border-gray-300 hover:bg-gray-50\"\r\n\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span>Pago con Deuna!</span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{paymentMethod === \"credit_card\" && (\r\n\t\t\t\t\t\t\t<CreditCardForm\r\n\t\t\t\t\t\t\t\tpaymentInfo={paymentInfo}\r\n\t\t\t\t\t\t\t\terrors={formErrors}\r\n\t\t\t\t\t\t\t\tonChange={handlePaymentChange}\r\n\t\t\t\t\t\t\t\tcontent={\r\n\t\t\t\t\t\t\t\t\t<DatafastPaymentButton\r\n\t\t\t\t\t\t\t\t\t\tonSuccess={handleDatafastSuccess}\r\n\t\t\t\t\t\t\t\t\t\tonError={handleDatafastError}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{paymentMethod === \"deuna\" && (\r\n\t\t\t\t\t<QRPaymentForm \r\n\t\t\t\t\t\ttotal={checkoutCalculations.totals.total}\r\n\t\t\t\t\t\tonPaymentSuccess={async (paymentData) => {\r\n\t\t\t\t\t\t\tconsole.log('✅ DeUna payment successful, processing completion:', paymentData);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t// ✅ VALIDAR DATOS DEL PAGO ANTES DE PROCESAR\r\n\t\t\t\t\t\t\t\tif (!paymentData || !paymentData.payment_id) {\r\n\t\t\t\t\t\t\t\t\tthrow new Error('Datos de pago de DeUna incompletos');\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// ✅ INTENTAR VERIFICAR EL ESTADO DEL PAGO CON FALLBACKS\r\n\t\t\t\t\t\t\t\tlet orderData = null;\r\n\t\t\t\t\t\t\t\tlet attempts = 0;\r\n\t\t\t\t\t\t\t\tconst maxAttempts = 3;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\twhile (!orderData && attempts < maxAttempts) {\r\n\t\t\t\t\t\t\t\t\tattempts++;\r\n\t\t\t\t\t\t\t\t\tconsole.log(`🔄 Intento ${attempts}/${maxAttempts} - Verificando orden creada por webhook...`);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t// Esperar un poco más en cada intento para que el webhook procese\r\n\t\t\t\t\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 1000 * attempts));\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// Intentar obtener la orden del backend si está disponible\r\n\t\t\t\t\t\t\t\t\t\t// En el futuro se puede implementar una llamada al backend para verificar\r\n\t\t\t\t\t\t\t\t\t\t// Por ahora, usar los datos del paymentData\r\n\t\t\t\t\t\t\t\t\t\torderData = {\r\n\t\t\t\t\t\t\t\t\t\t\torder_id: paymentData.order_id || `DEUNA-${Date.now()}`,\r\n\t\t\t\t\t\t\t\t\t\t\torder_number: paymentData.payment_id,\r\n\t\t\t\t\t\t\t\t\t\t\ttotal: checkoutCalculations.totals.total,\r\n\t\t\t\t\t\t\t\t\t\t\tpayment_status: 'paid',\r\n\t\t\t\t\t\t\t\t\t\t\tpayment_method: 'deuna',\r\n\t\t\t\t\t\t\t\t\t\t\tpayment_id: paymentData.payment_id,\r\n\t\t\t\t\t\t\t\t\t\t\tcreated_via: 'deuna_webhook',\r\n\t\t\t\t\t\t\t\t\t\t\tcompleted_at: paymentData.completed_at || new Date().toISOString()\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t} catch (attemptError) {\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn(`⚠️ Intento ${attempts} falló:`, attemptError);\r\n\t\t\t\t\t\t\t\t\t\tif (attempts >= maxAttempts) {\r\n\t\t\t\t\t\t\t\t\t\t\t// En el último intento, usar datos básicos como fallback\r\n\t\t\t\t\t\t\t\t\t\t\torderData = {\r\n\t\t\t\t\t\t\t\t\t\t\t\torder_id: paymentData.payment_id || `DEUNA-${Date.now()}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\torder_number: paymentData.payment_id || `DEUNA-${Date.now()}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttotal: checkoutCalculations.totals.total,\r\n\t\t\t\t\t\t\t\t\t\t\t\tpayment_status: 'processing', // Estado más conservador\r\n\t\t\t\t\t\t\t\t\t\t\t\tpayment_method: 'deuna',\r\n\t\t\t\t\t\t\t\t\t\t\t\tpayment_id: paymentData.payment_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcreated_via: 'deuna_frontend_fallback',\r\n\t\t\t\t\t\t\t\t\t\t\t\tcompleted_at: new Date().toISOString()\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('🆘 Usando datos de fallback para mostrar recibo');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// ✅ MOSTRAR ESTADO DE LA ORDEN SEGÚN LO QUE SE OBTUVO\r\n\t\t\t\t\t\t\t\tconsole.log('🎯 Setting orderComplete to true and orderDetails');\r\n\t\t\t\t\t\t\t\tsetOrderDetails(orderData);\r\n\t\t\t\t\t\t\t\tsetOrderComplete(true);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// ✅ LIMPIAR CARRITO SOLO DESPUÉS DE PROCESAR EXITOSAMENTE\r\n\t\t\t\t\t\t\t\tclearCart();\r\n\r\n\t\t\t\t\t\t\t\t// ✅ NOTIFICACIÓN ESPECÍFICA SEGÚN EL RESULTADO\r\n\t\t\t\t\t\t\t\tif (orderData && orderData.created_via === 'deuna_frontend_fallback') {\r\n\t\t\t\t\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\t\t\t\t\tNotificationType.WARNING,\r\n\t\t\t\t\t\t\t\t\t\t'Pago completado. Si no aparece en tus órdenes inmediatamente, revisa en unos minutos.'\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\t\t\t\t\tNotificationType.SUCCESS,\r\n\t\t\t\t\t\t\t\t\t\t'¡Pago completado exitosamente con DeUna!'\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tconsole.log('✅ DeUna payment completion processed successfully - should show receipt now');\r\n\t\t\t\t\t\t\t\tconsole.log('📊 Order details set:', {\r\n\t\t\t\t\t\t\t\t\torder_id: orderData?.order_id,\r\n\t\t\t\t\t\t\t\t\ttotal: orderData?.total,\r\n\t\t\t\t\t\t\t\t\tcreated_via: orderData?.created_via\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\tconsole.error('❌ Error processing DeUna payment completion:', error);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// ✅ FALLBACK CRÍTICO: MOSTRAR INFORMACIÓN MÍNIMA PARA EL USUARIO\r\n\t\t\t\t\t\t\t\tconst fallbackOrderData = {\r\n\t\t\t\t\t\t\t\t\torder_id: paymentData?.payment_id || `DEUNA-ERROR-${Date.now()}`,\r\n\t\t\t\t\t\t\t\t\torder_number: paymentData?.payment_id || `ERROR-${Date.now()}`,\r\n\t\t\t\t\t\t\t\t\ttotal: checkoutCalculations.totals.total,\r\n\t\t\t\t\t\t\t\t\tpayment_status: 'unknown',\r\n\t\t\t\t\t\t\t\t\tpayment_method: 'deuna',\r\n\t\t\t\t\t\t\t\t\tpayment_id: paymentData?.payment_id || 'unknown',\r\n\t\t\t\t\t\t\t\t\tcreated_via: 'deuna_error_fallback',\r\n\t\t\t\t\t\t\t\t\tcompleted_at: new Date().toISOString(),\r\n\t\t\t\t\t\t\t\t\terror_message: 'Error procesando la confirmación. Verifica tus órdenes.'\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tsetOrderDetails(fallbackOrderData);\r\n\t\t\t\t\t\t\t\tsetOrderComplete(true);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// No limpiar carrito si hay error - mejor experiencia para el usuario\r\n\t\t\t\t\t\t\t\tshowNotification(\r\n\t\t\t\t\t\t\t\t\tNotificationType.ERROR,\r\n\t\t\t\t\t\t\t\t\t'Error procesando la confirmación del pago. Si el pago fue exitoso, aparecerá en tus órdenes.'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\thandleError(error as Error, \"Error procesando la confirmación del pago. Por favor, verifica tus órdenes.\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonPaymentError={(error) => {\r\n\t\t\t\t\t\t\tconsole.error('❌ DeUna payment error:', error);\r\n\t\t\t\t\t\t\thandleError(new Error(error), \"Error en el pago con DeUna. Por favor, intenta de nuevo.\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"lg:w-1/3\">\r\n\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-lg p-6 sticky top-24\">\r\n\t\t\t\t\t\t<OrderSummaryComponent />\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={processCheckout}\r\n\t\t\t\t\t\t\tdisabled={isLoading || checkoutCalculations.stockIssues.length > 0}\r\n\t\t\t\t\t\t\tclassName=\"mt-6 w-full bg-primary-600 hover:bg-primary-700 text-white font-medium py-3 px-4 rounded-md transition-colors disabled:opacity-50 flex items-center justify-center\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<circle\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"opacity-25\"\r\n\t\t\t\t\t\t\t\t\t\t\tcx=\"12\"\r\n\t\t\t\t\t\t\t\t\t\t\tcy=\"12\"\r\n\t\t\t\t\t\t\t\t\t\t\tr=\"10\"\r\n\t\t\t\t\t\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\t\t\t\t\t\tstrokeWidth=\"4\"\r\n\t\t\t\t\t\t\t\t\t\t></circle>\r\n\t\t\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"opacity-75\"\r\n\t\t\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\t\t\t\t\t\t\t\td=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n\t\t\t\t\t\t\t\t\t\t></path>\r\n\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\tProcesando...\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : checkoutCalculations.stockIssues.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\"Resuelve problemas de stock\"\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t`Finalizar compra - ${formatCurrency(checkoutCalculations.totals.total)}`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t{checkoutCalculations.stockIssues.length > 0 && (\r\n\t\t\t\t\t\t\t<div className=\"mt-3 text-xs text-center text-red-600\">\r\n\t\t\t\t\t\t\t\t⚠️ Ajusta las cantidades en tu carrito antes de continuar\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<p className=\"mt-4 text-xs text-gray-500 text-center\">\r\n\t\t\t\t\t\t\tAl hacer clic en \"Finalizar compra\", aceptas nuestros{\" \"}\r\n\t\t\t\t\t\t\t<a href=\"/terms\" className=\"text-primary-600 hover:underline\">\r\n\t\t\t\t\t\t\t\tTérminos y condiciones\r\n\t\t\t\t\t\t\t</a>{\" \"}\r\n\t\t\t\t\t\t\ty{\" \"}\r\n\t\t\t\t\t\t\t<a href=\"/privacy\" className=\"text-primary-600 hover:underline\">\r\n\t\t\t\t\t\t\t\tPolítica de privacidad\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CheckoutPage;"],"names":["CartService","response","ApiClient","API_ENDPOINTS","error","request","apiRequest","itemId","quantity","code","NotificationType","CartContext","createContext","storageService","LocalStorageService","cartService","CACHE_KEYS","CACHE_TIMES","CartProvider","children","cart","setCart","useState","loading","setLoading","setError","itemCount","setItemCount","totalAmount","setTotalAmount","notification","setNotification","appliedDiscount","setAppliedDiscount","isAuthenticated","useContext","AuthContext","isInitialized","useRef","lastCartString","isAuthenticatedRef","notificationTimeoutRef","fetchCartTimeoutRef","isFetchingRef","cartUpdateTimeoutRef","useEffect","showNotification","useCallback","type","message","hideNotification","invalidateCartCache","CacheService","calculateTotalItems","cartItems","total","item","fetchCartFromAPI","cacheKey","cachedCart","cartData","product","totalQuantities","itemCountValue","localCart","appConfig","parsedCart","totalItems","e","fetchCart","cartString","addToCartLocal","existingItemIndex","updatedCart","updatedItems","newTotal","sum","newItem","newItems","err","addToCart","result","removeFromCartLocal","removeFromCart","updateCartItemLocal","data","updateCartItem","clearCartLocal","emptyCart","clearCart","validateDiscountCode","applyDiscountCode","removeDiscountCode","jsxs","jsx","useCart","context","ErrorHandlingService","translations","lowerMessage","shouldRetry","availableStock","requestedQuantity","validationErrors","errors","useErrorHandler","handleError","customMessage","errorInfo","notificationType","handleSuccess","handleStockError","configManager","ConfigurationManager","DEFAULT_VOLUME_DISCOUNTS","calculateVolumeDiscount","basePrice","customTiers","tiers","applicableTier","tier","discountedPrice","savings","savingsTotal","calculateVolumeDiscountAsync","configResult","sortedTiers","a","b","calculateCartItemDiscounts","cartItem","originalPrice","sellerDiscountPercentage","sellerDiscountAmount","priceAfterSellerDiscount","volumeDiscount","finalPricePerUnit","totalSellerSavings","totalVolumeSavings","totalSavings","hasVolumeDiscount","displayDiscountPercentage","calculateCartItemDiscountsAsync","EcommerceCalculator","items","appliedDiscountCode","forceRefresh","config","step1_originalSubtotal","step2_afterSellerDiscount","sellerDiscounts","step3_afterVolumeDiscount","volumeDiscounts","step4_afterCoupon","couponDiscount","shipping","step5_withShipping","step6_tax","step7_finalTotal","totalDiscounts","volumeDiscountsApplied","freeShipping","itemSubtotal","_originalSubtotal","totalDiscount","subtotalAfterDiscount","discountPercentage","discountPerUnit","priceAfterDiscount","itemDiscount","_currentSubtotal","volumeDiscountPercentage","sellerDiscountedPrice","volumeDiscountPerUnit","priceAfterVolumeDiscount","itemVolumeDiscount","subtotal","discountCode","discount","discountData","percentage","shippingConfig","value","totals","priceAfterSeller","CheckoutItemsService","index","checkoutItems","calculatedItems","checkoutItem","calculatedItem","getNumericEnvVar","key","defaultValue","__vite_import_meta_env__","CALCULATION_CONFIG","isNumberEqual","tolerance","difference","isEqual","validateTotalsEquality","frontendTotal","backendTotal","customTolerance","isValid","CheckoutService","firstItem","checkoutData","userEmail","paymentMethod","methodMapping","validation","nameParts","backendData","i","dataObj","errorMessage","extractErrorMessage","cartTotal","checkoutTotal","CreditCardForm","content","DeunaService","paymentData","paymentId","orderId","reason","amount","filters","params","options","maxAttempts","interval","onStatusChange","abortController","resolve","reject","attempts","lastStatus","timeoutId","cleanup","onAbort","statusResponse","currentStatus","resolveTimeout","rejectTimeout","checkAbort","qrCode","currency","method","status","React","FileText","Clock","CheckCircle","XCircle","Ban","DollarSign","HelpCircle","customerEmail","QRPaymentForm","totalProp","onPaymentSuccess","onPaymentError","user","useAuth","isGenerating","setIsGenerating","setPaymentData","isPolling","setIsPolling","setCurrentStatus","timeRemaining","setTimeRemaining","copySuccess","setCopySuccess","isSimulating","setIsSimulating","pollingRef","timerRef","cleanupRefs","generateOrderId","copyToClipboard","text","prev","resetPayment","formatTime","seconds","minutes","remainingSeconds","handleStatusChange","statusDisplay","errorMsg","generateQRPayment","paymentRequest","productId","mappedItem","polling","handleCancelPayment","handleNewQR","handleSimulatePayment","StatusIndicator","RefreshCw","formatCurrency","Smartphone","Copy","ExternalLink","Fragment","Zap","AddressForm","title","address","onAddressChange","formId","TestCheckoutButton","navigate","useNavigate","checkoutService","isLoading","setIsLoading","handleTestCheckout","itemsByProductId","acc","itemData","sellerId","price","testData","orderData","DatafastService","verifyData","checkoutId","transactionId","calculatedTotal","mockResourcePath","requestData","resourcePath","url","DatafastPaymentButton","onSuccess","onError","showWidget","setShowWidget","setCheckoutData","showForm","setShowForm","widgetLoaded","setWidgetLoaded","calculatedTotals","setCalculatedTotals","formData","setFormData","datafastService","script","handleInputChange","field","validateFormData","requiredFields","handleStartPayment","loadDatafastWidget","existingScript","additionalScript","handleCompleteTestCheckout","testCheckoutData","simulationResponse","simulationError","handleSimulatePaymentResult","verifyResponse","checkoutRequestData","checkoutResponse","handleRealPayment","CheckoutPage","initialAddress","setPaymentMethod","shippingAddress","setShippingAddress","billingAddress","setBillingAddress","useSameAddress","setUseSameAddress","paymentInfo","setPaymentInfo","formErrors","setFormErrors","orderComplete","setOrderComplete","orderDetails","setOrderDetails","countdown","setCountdown","checkoutCalculations","setCheckoutCalculations","itemsWithDiscounts","hasStockIssue","stockIssues","getAvailableStock","validateCartStock","userAddress","handleDatafastSuccess","handleDatafastError","stockValidation","countdownTimer","handlePaymentMethodChange","handleShippingChange","newAddress","handleBillingChange","handlePaymentChange","newErrors","validateForm","validateAddress","prefix","processCheckout","successMessage","OrderSummaryComponent","AlertTriangle","issue","Gift","TrendingDown","attemptError","fallbackOrderData"],"mappings":"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"}