{"version":3,"file":"AdminLayout-vn0n87DI.js","sources":["../../src/presentation/layouts/groups/adminGroups.tsx","../../src/presentation/hooks/useAdminNotifications.ts","../../src/presentation/layouts/AdminLayout.tsx"],"sourcesContent":["import {\r\n\tUsers,\r\n\tPackage,\r\n\tShoppingBag,\r\n\tTag,\r\n\tFileText,\r\n\tStar,\r\n\tSettings,\r\n\tBarChart2,\r\n\tDollarSign,\r\n\tMessageSquare,\r\n\tAlertTriangle,\r\n\tTruck,\r\n\tBriefcase,\r\n\tClipboardList,\r\n} from \"lucide-react\";\r\n\r\ninterface adminGroups {\r\n\tgroups: {\r\n\t\ttitle: string;\r\n\t\tlinks: {\r\n\t\t\tpath: string;\r\n\t\t\tlabel: string;\r\n\t\t\ticon?: React.ReactNode;\r\n\t\t\tisNotificated?: boolean;\r\n\t\t\tnotificationCount?: number;\r\n\t\t}[];\r\n    }[];\r\n    title: {\r\n        title: string;\r\n        icon: React.ReactNode;\r\n    }\r\n}\r\n\r\nconst adminGroups = [\r\n\t{\r\n\t\ttitle: \"Principal\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/dashboard\",\r\n\t\t\t\tlabel: \"Dashboard\",\r\n\t\t\t\ticon: <BarChart2 className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttitle: \"Gestión de Usuario\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/users\",\r\n\t\t\t\tlabel: \"Usuarios\",\r\n\t\t\t\ticon: <Users className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/sellers\",\r\n\t\t\t\tlabel: \"Vendedores\",\r\n\t\t\t\ticon: <Briefcase className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t\tisNotificated: false,\r\n\t\t\t\tnotificationCount: 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/solicitudes\",\r\n\t\t\t\tlabel: \"Solicitudes\",\r\n\t\t\t\ticon: <ClipboardList className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t\tisNotificated: false,\r\n\t\t\t\tnotificationCount: 0,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttitle: \"Productos\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/products\",\r\n\t\t\t\tlabel: \"Productos\",\r\n\t\t\t\ticon: <Package className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/categories\",\r\n\t\t\t\tlabel: \"Categorías\",\r\n\t\t\t\ticon: <Tag className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttitle: \"Pedidos\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/orders\",\r\n\t\t\t\tlabel: \"Pedidos\",\r\n\t\t\t\ticon: <ShoppingBag className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/shipping\",\r\n\t\t\t\tlabel: \"Envíos\",\r\n\t\t\t\ticon: <Truck className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttitle: \"Contenido\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/ratings\",\r\n\t\t\t\tlabel: \"Valoraciones y Reseñas\",\r\n\t\t\t\ticon: <Star className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t\tisNotificated: false,\r\n\t\t\t\tnotificationCount: 10,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/feedback\",\r\n\t\t\t\tlabel: \"Feedback y Comentarios\",\r\n\t\t\t\ticon: <MessageSquare className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t\tisNotificated: true,\r\n\t\t\t\tnotificationCount: 5,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/discounts\",\r\n\t\t\t\tlabel: \"Descuentos\",\r\n\t\t\t\ticon: <DollarSign className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttitle: \"Finanzas\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/invoices\",\r\n\t\t\t\tlabel: \"Facturas\",\r\n\t\t\t\ticon: <FileText className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/accounting\",\r\n\t\t\t\tlabel: \"Contabilidad\",\r\n\t\t\t\ticon: <DollarSign className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttitle: \"Sistema\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/settings\",\r\n\t\t\t\tlabel: \"Configuración\",\r\n\t\t\t\ticon: <Settings className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"/admin/logs\",\r\n\t\t\t\tlabel: \"Registros de Errores\",\r\n\t\t\t\ticon: <AlertTriangle className=\"w-5 h-5 mr-3\" />,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n\r\nexport default adminGroups;","import { useEffect, useCallback, useMemo, useRef } from \"react\";\nimport { useAuth } from \"./useAuth\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNotifications } from \"./useNotifications\";\n\ninterface AdminNotificationCounts {\n  users: number;\n  sellers: number;\n  solicitudes: number;  // Solicitudes de vendedor\n  orders: number;\n  shipping: number;\n  ratings: number;\n  feedback: number;\n  logs: number;\n  invoices: number;\n}\n\ninterface UseAdminNotificationsReturn {\n  counts: AdminNotificationCounts;\n  loading: boolean;\n  error: string | null;\n  refetch: () => Promise<void>;\n  markSectionAsRead: (section: keyof AdminNotificationCounts) => Promise<void>;\n}\n\nconst SECTION_PATHS = {\n  users: '/admin/users',\n  sellers: '/admin/sellers',\n  solicitudes: '/admin/solicitudes',\n  orders: '/admin/orders',\n  shipping: '/admin/shipping',\n  ratings: '/admin/ratings',\n  feedback: '/admin/feedback',\n  logs: '/admin/logs',\n  invoices: '/admin/invoices'\n};\n\n// Mapeo de tipos de notificación de admin a secciones\nconst NOTIFICATION_TYPE_TO_SECTION: Record<string, keyof AdminNotificationCounts> = {\n  // Usuarios y vendedores\n  'user_registered': 'users',\n  'user_blocked': 'users',\n  'user_reported': 'users',\n  'seller_application': 'solicitudes',\n  'seller_approved': 'sellers',\n  'seller_suspended': 'sellers',\n  'seller_issue': 'sellers',\n  \n  // Pedidos y envíos\n  'order_created': 'orders',\n  'order_cancelled': 'orders',\n  'order_refund': 'orders',\n  'payment_issue': 'orders',\n  'shipping_problem': 'shipping',\n  'delivery_issue': 'shipping',\n  \n  // Contenido y moderación\n  'rating_reported': 'ratings',\n  'rating_flagged': 'ratings',\n  'content_violation': 'ratings',\n  'feedback_submitted': 'feedback',\n  'complaint_received': 'feedback',\n  'feedback_flagged': 'feedback',\n  \n  // Sistema\n  'system_error': 'logs',\n  'critical_error': 'logs',\n  'security_alert': 'logs',\n  'payment_failed': 'invoices',\n  'invoice_overdue': 'invoices',\n};\n\nexport const useAdminNotifications = (): UseAdminNotificationsReturn => {\n  const { isAuthenticated, roleInfo } = useAuth();\n  const location = useLocation();\n  \n  // Usar el hook de notificaciones existente\n  const {\n    notifications,\n    loading,\n    error,\n    fetchNotifications,\n    markAsRead,\n  } = useNotifications();\n\n  // Calcular contadores basados en notificaciones no leídas\n  const counts = useMemo(() => {\n    if (!isAuthenticated || !roleInfo.isAdmin || !notifications.length) {\n      return { \n        users: 0, \n        sellers: 0, \n        solicitudes: 0, \n        orders: 0, \n        shipping: 0, \n        ratings: 0, \n        feedback: 0, \n        logs: 0, \n        invoices: 0 \n      };\n    }\n\n    const sectionCounts = {\n      users: 0,\n      sellers: 0,\n      solicitudes: 0,\n      orders: 0,\n      shipping: 0,\n      ratings: 0,\n      feedback: 0,\n      logs: 0,\n      invoices: 0,\n    };\n\n    // Contar notificaciones no leídas por sección\n    notifications\n      .filter(notification => !notification.read) // Solo las no leídas\n      .forEach(notification => {\n        const section = NOTIFICATION_TYPE_TO_SECTION[notification.type];\n        if (section) {\n          sectionCounts[section]++;\n        }\n      });\n\n    return sectionCounts;\n  }, [notifications, isAuthenticated, roleInfo.isAdmin]);\n\n  // Marcar notificaciones de una sección como leídas\n  const markSectionAsRead = useCallback(async (section: keyof AdminNotificationCounts) => {\n    if (!isAuthenticated || !roleInfo.isAdmin) return;\n\n    try {\n      // Encontrar todas las notificaciones no leídas de esta sección\n      const sectionNotifications = notifications\n        .filter(notification => \n          !notification.read && \n          NOTIFICATION_TYPE_TO_SECTION[notification.type] === section\n        );\n      \n      // Marcar cada una como leída\n      for (const notification of sectionNotifications) {\n        await markAsRead(notification.id!);\n      }\n      \n    } catch (err: any) {\n      console.error(`Error marking ${section} notifications as read:`, err);\n    }\n  }, [isAuthenticated, roleInfo.isAdmin, notifications, markAsRead]);\n\n  // Refs para evitar bucles infinitos\n  const countsRef = useRef(counts);\n  const markSectionAsReadRef = useRef(markSectionAsRead);\n\n  // Actualizar refs\n  countsRef.current = counts;\n  markSectionAsReadRef.current = markSectionAsRead;\n\n  // Detectar cambios de ruta y marcar como leídas automáticamente\n  useEffect(() => {\n    const currentPath = location.pathname;\n    \n    // Verificar si estamos en alguna de las secciones de admin\n    for (const [section, path] of Object.entries(SECTION_PATHS)) {\n      if (currentPath.startsWith(path)) {\n        const sectionKey = section as keyof AdminNotificationCounts;\n        // Solo marcar si hay notificaciones no leídas en esa sección\n        if (countsRef.current[sectionKey] > 0) {\n          markSectionAsReadRef.current(sectionKey);\n        }\n        break;\n      }\n    }\n  }, [location.pathname]);\n\n  // Cargar notificaciones al montar el componente\n  useEffect(() => {\n    if (isAuthenticated && roleInfo.isAdmin) {\n      fetchNotifications(1, false); // Cargar todas las notificaciones\n    }\n  }, [isAuthenticated, roleInfo.isAdmin, fetchNotifications]);\n\n  const refetch = useCallback(async () => {\n    if (isAuthenticated && roleInfo.isAdmin) {\n      await fetchNotifications(1, false);\n    }\n  }, [isAuthenticated, roleInfo.isAdmin, fetchNotifications]);\n\n  return {\n    counts,\n    loading,\n    error,\n    refetch,\n    markSectionAsRead,\n  };\n};","import React, { useMemo } from \"react\";\nimport type { ReactNode } from \"react\";\nimport { Shield, AlertTriangle } from \"lucide-react\";\nimport { DashboardProvider } from \"../components/dashboard/DashboardContext\";\nimport BaseDashboardLayout from \"../components/dashboard/BaseDashboardLayout\";\nimport adminGroups from \"./groups/adminGroups\";\nimport { useAdminNotifications } from \"../hooks/useAdminNotifications\";\n\n/**\n * Componente de Layout para el Panel de Administración\n */\nconst AdminLayout: React.FC = () => {\n\t// Hook para obtener contadores de notificaciones automáticas\n\tconst { counts } = useAdminNotifications();\n\n\t// Títulos dinámicos basados en rutas\n\tconst pageTitles: {[key: string]: string} = {\n\t\t\"/admin/dashboard\": \"Dashboard\",\n\t\t\"/admin/users\": \"Gestión de Usuarios\",\n\t\t\"/admin/sellers\": \"Gestión de Vendedores\",\n\t\t\"/admin/solicitudes\": \"Solicitudes de Vendedor\",\n\t\t\"/admin/products\": \"Gestión de Productos\",\n\t\t\"/admin/categories\": \"Gestión de Categorías\",\n\t\t\"/admin/orders\": \"Gestión de Pedidos\",\n\t\t\"/admin/ratings\": \"Moderación de Valoraciones y Reseñas\",\n\t\t\"/admin/feedback\": \"Gestión de Comentarios\",\n\t\t\"/admin/discounts\": \"Códigos de Descuento\",\n\t\t\"/admin/invoices\": \"Facturas\",\n\t\t\"/admin/accounting\": \"Contabilidad\",\n\t\t\"/admin/settings\": \"Configuración del Sistema\",\n\t\t\"/admin/logs\": \"Registro de Errores\",\n\t};\n\n\t// Título del sidebar\n\tconst sidebarTitle = {\n\t\ttitle: \"Panel de Administración (Admin)\",\n\t\ticon: <Shield className=\"w-7 h-7 text-primary-400\" />,\n\t};\n\n\t// Grupos del sidebar con contadores dinámicos\n\tconst dynamicAdminGroups = useMemo(() => {\n\t\treturn adminGroups.map(group => ({\n\t\t\t...group,\n\t\t\tlinks: group.links.map(link => {\n\t\t\t\tlet notificationCount = 0;\n\t\t\t\t\n\t\t\t\t// Asignar contadores según la ruta\n\t\t\t\tswitch (link.path) {\n\t\t\t\t\tcase \"/admin/users\":\n\t\t\t\t\t\tnotificationCount = counts.users;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"/admin/sellers\":\n\t\t\t\t\t\tnotificationCount = counts.sellers;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"/admin/solicitudes\":\n\t\t\t\t\t\tnotificationCount = counts.solicitudes;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"/admin/orders\":\n\t\t\t\t\t\tnotificationCount = counts.orders;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"/admin/shipping\":\n\t\t\t\t\t\tnotificationCount = counts.shipping;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"/admin/ratings\":\n\t\t\t\t\t\tnotificationCount = counts.ratings;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"/admin/feedback\":\n\t\t\t\t\t\tnotificationCount = counts.feedback;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"/admin/logs\":\n\t\t\t\t\t\tnotificationCount = counts.logs;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"/admin/invoices\":\n\t\t\t\t\t\tnotificationCount = counts.invoices;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tnotificationCount = (link as any).notificationCount || 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn {\n\t\t\t\t\t...link,\n\t\t\t\t\tnotificationCount,\n\t\t\t\t\tisNotificated: notificationCount > 0\n\t\t\t\t};\n\t\t\t})\n\t\t}));\n\t}, [counts]);\n\n\t// Componente de alertas del sistema para mostrar en el header\n\tconst SystemAlertsHeader = (): ReactNode => {\n\t\t// Calcular total de notificaciones críticas\n\t\tconst totalCritical = counts.logs + counts.feedback + counts.solicitudes;\n\t\tconst totalModerate = counts.ratings + counts.orders + counts.invoices;\n\t\tconst totalNotifications = Object.values(counts).reduce((sum, count) => sum + count, 0);\n\n\t\tif (totalNotifications === 0) return null;\n\n\t\t// Determinar nivel de alerta\n\t\tconst isHighPriority = totalCritical > 0;\n\t\tconst alertClass = isHighPriority \n\t\t\t? \"bg-red-50 border-b border-red-200\" \n\t\t\t: \"bg-amber-50 border-b border-amber-200\";\n\t\tconst iconClass = isHighPriority ? \"text-red-500\" : \"text-amber-500\";\n\t\tconst textClass = isHighPriority ? \"text-red-800\" : \"text-amber-800\";\n\n\t\treturn (\n\t\t\t<div className={alertClass + \" px-4 py-2\"}>\n\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t<AlertTriangle className={`h-5 w-5 ${iconClass} mr-2`} />\n\t\t\t\t\t<span className={`text-sm ${textClass}`}>\n\t\t\t\t\t\t{isHighPriority ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<strong>¡Atención!</strong> Tienes {totalCritical} notificación{totalCritical !== 1 ? 'es' : ''} crítica{totalCritical !== 1 ? 's' : ''} \n\t\t\t\t\t\t\t\t{totalModerate > 0 && ` y ${totalModerate} adicionales`} pendientes.\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\tTienes <strong>{totalNotifications}</strong> notificación{totalNotifications !== 1 ? 'es' : ''} \n\t\t\t\t\t\t\t\tpendiente{totalNotifications !== 1 ? 's' : ''} en el panel de administración.\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<DashboardProvider initialType=\"admin\" initialPageTitles={pageTitles}>\n\t\t\t<BaseDashboardLayout\n\t\t\t\tsidebarGroups={dynamicAdminGroups}\n\t\t\t\tsidebarTitle={sidebarTitle}\n\t\t\t\theaderExtras={<SystemAlertsHeader />}\n\t\t\t/>\n\t\t</DashboardProvider>\n\t);\n};\n\nexport default AdminLayout;\n"],"names":["adminGroups","jsx","BarChart2","Users","Briefcase","ClipboardList","Package","Tag","ShoppingBag","Truck","Star","MessageSquare","DollarSign","FileText","Settings","AlertTriangle","SECTION_PATHS","NOTIFICATION_TYPE_TO_SECTION","useAdminNotifications","isAuthenticated","roleInfo","useAuth","location","useLocation","notifications","loading","error","fetchNotifications","markAsRead","useNotifications","counts","useMemo","sectionCounts","notification","section","markSectionAsRead","useCallback","sectionNotifications","err","countsRef","useRef","markSectionAsReadRef","useEffect","currentPath","path","sectionKey","refetch","AdminLayout","pageTitles","sidebarTitle","Shield","dynamicAdminGroups","group","link","notificationCount","SystemAlertsHeader","totalCritical","totalModerate","totalNotifications","sum","count","isHighPriority","alertClass","iconClass","textClass","jsxs","Fragment","DashboardProvider","BaseDashboardLayout"],"mappings":"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"}