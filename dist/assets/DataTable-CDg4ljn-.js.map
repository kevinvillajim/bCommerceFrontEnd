{"version":3,"file":"DataTable-CDg4ljn-.js","sources":["../../src/presentation/components/dashboard/PendingCard.tsx","../../src/presentation/components/dashboard/PendingCardList.tsx","../../src/presentation/components/dashboard/dataTable/EmptyState.tsx","../../src/presentation/components/dashboard/dataTable/TableHeader.tsx","../../src/presentation/components/dashboard/dataTable/StandardTable.tsx","../../src/presentation/components/dashboard/dataTable/CompactTable.tsx","../../src/presentation/components/dashboard/dataTable/DataTable.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { ChevronRight } from \"lucide-react\";\r\nimport type { FC } from \"react\";\r\n\r\ninterface CardPendingProps {\r\n  icon: React.ElementType;\r\n  iconBgColor: string;\r\n  iconColor: string;\r\n  title: string;\r\n  color?: boolean;\r\n  description: string;\r\n  linkText: string;\r\n  linkTo: string;\r\n}\r\n\r\nconst PendingCard: FC<CardPendingProps> = ({\r\n  icon: Icon,\r\n  iconBgColor,\r\n  iconColor,\r\n  title,\r\n  color = false,\r\n  description,\r\n  linkText,\r\n  linkTo,\r\n}) => {\r\n  return (\r\n\t\t<div\r\n\t\t\tclassName={`${color ? \"bg-white\" : \"bg-gray-50\"} p-4 rounded-lg flex items-start`}\r\n\t\t>\r\n\t\t\t<div className={`p-2 rounded-lg mr-3 ${iconBgColor}`}>\r\n\t\t\t\t<Icon className={`w-5 h-5 ${iconColor}`} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h3 className=\"font-medium text-gray-900\">{title}</h3>\r\n\t\t\t\t<p className=\"text-sm text-gray-500 mb-2\">\r\n\t\t\t\t\t{description}\r\n\t\t\t\t</p>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={linkTo}\r\n\t\t\t\t\tclassName=\"text-primary-600 text-sm font-medium hover:underline inline-flex items-center\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{linkText} <ChevronRight size={16} />\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PendingCard;\r\n","import type { FC } from \"react\";\r\nimport CardPending from \"./PendingCard\";\r\n\r\ninterface CardPendingItem {\r\n  icon: React.ElementType;\r\n  iconBgColor: string;\r\n  iconColor: string;\r\n  title: string;\r\n  color?: boolean;\r\n  description: string;\r\n  linkText: string;\r\n  linkTo: string;\r\n}\r\n\r\ninterface CardPendingListProps {\r\n  items: CardPendingItem[];\r\n  color?: boolean\r\n}\r\n\r\nconst PendingCardList: FC<CardPendingListProps> = ({ items, color }) => {\r\n  return (\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        {items.map((item, index) => (\r\n          <CardPending key={index} {...item} color={color} />\r\n        ))}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default PendingCardList;\r\n","import React from 'react';\r\nimport type { TableHeaderProps } from '../../../types/dashboard/dataTable/DataTableTypes';\r\n\r\ninterface EmptyStateProps extends TableHeaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst EmptyState: React.FC<EmptyStateProps> = ({\r\n  title,\r\n  className = \"\"\r\n}) => {\r\n  return (\r\n    <div className={`bg-white rounded-lg shadow-sm ${className}`}>\r\n      <div className=\"px-6 py-4 border-b border-gray-200\">\r\n        <h2 className=\"text-lg font-medium text-gray-900\">{title}</h2>\r\n      </div>\r\n      <div className=\"p-6 text-center text-gray-500\">\r\n        No hay datos disponibles\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyState;","// components/TableHeader.tsx\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ChevronRight } from 'lucide-react';\r\nimport type { TableHeaderProps } from '../../../types/dashboard/dataTable/DataTableTypes';\r\n\r\nconst TableHeader: React.FC<TableHeaderProps> = ({\r\n  title,\r\n  viewAllLink,\r\n  viewAllText = \"Ver todo\"\r\n}) => {\r\n  return (\r\n    <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n      <h2 className=\"text-lg font-medium text-gray-900\">\r\n        {title}\r\n      </h2>\r\n      {viewAllLink && (\r\n        <Link\r\n          to={viewAllLink}\r\n          className=\"text-primary-600 text-sm font-medium hover:underline flex items-center\"\r\n        >\r\n          {viewAllText} <ChevronRight size={16} />\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableHeader;","// components/StandardTable.tsx\r\nimport React from 'react';\r\nimport TableHeader from './TableHeader';\r\nimport type { Column, TableProps } from '../../../types/dashboard/dataTable/DataTableTypes';\r\n\r\nfunction StandardTable<T extends Record<string, any>>({\r\n  data,\r\n  columns,\r\n  title,\r\n  viewAllLink,\r\n  viewAllText,\r\n  className = \"\",\r\n  onRowClick\r\n}: TableProps<T>): React.ReactElement {\r\n  // Helper function to render cell content based on column configuration\r\n  const renderCellContent = (row: T, column: Column<T>) => {\r\n    const value = row[column.key];\r\n    \r\n    // Use custom render function if provided\r\n    if (column.render) {\r\n      return column.render(value, row);\r\n    }\r\n    \r\n    // Default rendering based on value type\r\n    if (typeof value === 'undefined' || value === null) {\r\n      return '-';\r\n    }\r\n    \r\n    return value;\r\n  };\r\n\r\n  return (\r\n    <div className={`bg-white rounded-lg shadow-sm ${className}`}>\r\n      <TableHeader \r\n        title={title} \r\n        viewAllLink={viewAllLink} \r\n        viewAllText={viewAllText} \r\n      />\r\n      \r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              {columns.map((column, index) => (\r\n                <th \r\n                  key={index} \r\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                >\r\n                  {column.header}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {data.map((row, rowIndex) => (\r\n              <tr\r\n                key={rowIndex}\r\n                className={`hover:bg-gray-50 ${onRowClick ? 'cursor-pointer' : ''}`}\r\n                onClick={onRowClick ? () => onRowClick(row) : undefined}\r\n              >\r\n                {columns.map((column, colIndex) => (\r\n                  <td \r\n                    key={colIndex} \r\n                    className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\"\r\n                  >\r\n                    {renderCellContent(row, column)}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StandardTable;","// components/CompactTable.tsx\r\nimport React from 'react';\r\nimport TableHeader from './TableHeader';\r\nimport type { Column, TableProps } from '../../../types/dashboard/dataTable/DataTableTypes';\r\n\r\nfunction CompactTable<T extends Record<string, any>>({\r\n  data,\r\n  columns,\r\n  title,\r\n  viewAllLink,\r\n  viewAllText,\r\n  className = \"\",\r\n  onRowClick\r\n}: TableProps<T>): React.ReactElement {\r\n  // Helper function to render cell content based on column configuration\r\n  const renderCellContent = (row: T, column: Column<T>) => {\r\n    const value = row[column.key];\r\n    \r\n    // Use custom render function if provided\r\n    if (column.render) {\r\n      return column.render(value, row);\r\n    }\r\n    \r\n    // Default rendering based on value type\r\n    if (typeof value === 'undefined' || value === null) {\r\n      return '-';\r\n    }\r\n    \r\n    return value;\r\n  };\r\n\r\n  return (\r\n    <div className={`bg-white rounded-lg shadow-sm ${className}`}>\r\n      <TableHeader \r\n        title={title} \r\n        viewAllLink={viewAllLink} \r\n        viewAllText={viewAllText} \r\n      />\r\n      \r\n      {/* Compact list */}\r\n      <div className=\"divide-y divide-gray-200\">\r\n        {data.map((row, rowIndex) => (\r\n          <div \r\n            key={rowIndex}\r\n            className={`px-6 py-3 flex flex-wrap items-center gap-3 hover:bg-gray-50 ${onRowClick ? 'cursor-pointer' : ''}`}\r\n            onClick={onRowClick ? () => onRowClick(row) : undefined}\r\n          >\r\n            {columns.map((column, colIndex) => (\r\n              <div key={colIndex} className=\"flex items-center\">\r\n                {column.showLabelInCompact && (\r\n                  <span className=\"text-xs text-gray-500 mr-1\">\r\n                    {column.header}:\r\n                  </span>\r\n                )}\r\n                <span className=\"text-sm\">\r\n                  {renderCellContent(row, column)}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompactTable;","import React from 'react';\r\nimport EmptyState from './EmptyState';\r\nimport StandardTable from './StandardTable';\r\nimport CompactTable from './CompactTable';\r\nimport type { TableProps } from '../../../types/dashboard/dataTable/DataTableTypes';\r\n\r\n// This is a factory component that decides which type of table to render\r\nfunction DataTable<T extends Record<string, any>>(props: TableProps<T>): React.ReactElement {\r\n  const { data, compact = false } = props;\r\n\r\n  // Show empty state if no data\r\n  if (!data || data.length === 0) {\r\n    return <EmptyState title={props.title} className={props.className} />;\r\n  }\r\n\r\n  // Return the appropriate table based on the compact flag\r\n  return compact \r\n    ? <CompactTable<T> {...props} />\r\n    : <StandardTable<T> {...props} />;\r\n}\r\n\r\nexport default DataTable;"],"names":["PendingCard","Icon","iconBgColor","iconColor","title","color","description","linkText","linkTo","jsxs","jsx","Link","ChevronRight","PendingCardList","items","item","index","CardPending","EmptyState","className","TableHeader","viewAllLink","viewAllText","StandardTable","data","columns","onRowClick","renderCellContent","row","column","value","rowIndex","colIndex","CompactTable","DataTable","props","compact"],"mappings":"sDAeA,MAAMA,EAAoC,CAAC,CACzC,KAAMC,EACN,YAAAC,EACA,UAAAC,EACA,MAAAC,EACA,MAAAC,EAAQ,GACR,YAAAC,EACA,SAAAC,EACA,OAAAC,CACF,IAEEC,EAAA,KAAC,MAAA,CACA,UAAW,GAAGJ,EAAQ,WAAa,YAAY,mCAE/C,SAAA,CAACK,EAAA,IAAA,MAAA,CAAI,UAAW,uBAAuBR,CAAW,GACjD,SAACQ,EAAA,IAAAT,EAAA,CAAK,UAAW,WAAWE,CAAS,EAAI,CAAA,EAC1C,SACC,MACA,CAAA,SAAA,CAACO,EAAA,IAAA,KAAA,CAAG,UAAU,4BAA6B,SAAMN,EAAA,EAChDM,EAAA,IAAA,IAAA,CAAE,UAAU,6BACX,SACFJ,EAAA,EACAG,EAAA,KAACE,EAAA,CACA,GAAIH,EACJ,UAAU,gFAET,SAAA,CAAAD,EAAS,IAACG,EAAAA,IAACE,EAAa,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CAAA,CACpC,CACD,CAAA,CAAA,CAAA,CACD,ECzBIC,EAA4C,CAAC,CAAE,MAAAC,EAAO,MAAAT,WAErD,MAAI,CAAA,UAAU,wCACZ,SAAAS,EAAM,IAAI,CAACC,EAAMC,IAChBN,EAAA,IAACO,GAAyB,GAAGF,EAAM,MAAAV,GAAjBW,CAA+B,CAClD,EACH,EClBAE,EAAwC,CAAC,CAC7C,MAAAd,EACA,UAAAe,EAAY,EACd,IAEKV,EAAA,KAAA,MAAA,CAAI,UAAW,iCAAiCU,CAAS,GACxD,SAAA,CAACT,EAAAA,IAAA,MAAA,CAAI,UAAU,qCACb,SAAAA,EAAA,IAAC,MAAG,UAAU,oCAAqC,WAAM,CAC3D,CAAA,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAE/C,0BAAA,CAAA,CAAA,EACF,ECbEU,EAA0C,CAAC,CAC/C,MAAAhB,EACA,YAAAiB,EACA,YAAAC,EAAc,UAChB,IAEIb,EAAA,KAAC,MAAI,CAAA,UAAU,uEACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,oCACX,SACHN,EAAA,EACCiB,GACCZ,EAAA,KAACE,EAAA,CACC,GAAIU,EACJ,UAAU,yEAET,SAAA,CAAAC,EAAY,IAACZ,EAAAA,IAACE,EAAa,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CAAA,CACxC,EAEJ,ECnBJ,SAASW,EAA6C,CACpD,KAAAC,EACA,QAAAC,EACA,MAAArB,EACA,YAAAiB,EACA,YAAAC,EACA,UAAAH,EAAY,GACZ,WAAAO,CACF,EAAsC,CAE9B,MAAAC,EAAoB,CAACC,EAAQC,IAAsB,CACjD,MAAAC,EAAQF,EAAIC,EAAO,GAAG,EAG5B,OAAIA,EAAO,OACFA,EAAO,OAAOC,EAAOF,CAAG,EAI7B,OAAOE,EAAU,KAAeA,IAAU,KACrC,IAGFA,CACT,EAEA,OACGrB,EAAA,KAAA,MAAA,CAAI,UAAW,iCAAiCU,CAAS,GACxD,SAAA,CAAAT,EAAA,IAACU,EAAA,CACC,MAAAhB,EACA,YAAAiB,EACA,YAAAC,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,kBACb,SAACb,EAAA,KAAA,QAAA,CAAM,UAAU,aACf,SAAA,CAACC,EAAAA,IAAA,QAAA,CAAM,UAAU,aACf,SAAAA,EAAA,IAAC,MACE,SAAQe,EAAA,IAAI,CAACI,EAAQb,IACpBN,EAAA,IAAC,KAAA,CAEC,UAAU,iFAET,SAAOmB,EAAA,MAAA,EAHHb,CAAA,CAKR,EACH,CACF,CAAA,EACAN,EAAAA,IAAC,SAAM,UAAU,oCACd,WAAK,IAAI,CAACkB,EAAKG,IACdrB,EAAA,IAAC,KAAA,CAEC,UAAW,oBAAoBgB,EAAa,iBAAmB,EAAE,GACjE,QAASA,EAAa,IAAMA,EAAWE,CAAG,EAAI,OAE7C,SAAQH,EAAA,IAAI,CAACI,EAAQG,IACpBtB,EAAA,IAAC,KAAA,CAEC,UAAU,oDAET,SAAAiB,EAAkBC,EAAKC,CAAM,CAAA,EAHzBG,CAKR,CAAA,CAAA,EAXID,CAAA,CAaR,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ,CCtEA,SAASE,EAA4C,CACnD,KAAAT,EACA,QAAAC,EACA,MAAArB,EACA,YAAAiB,EACA,YAAAC,EACA,UAAAH,EAAY,GACZ,WAAAO,CACF,EAAsC,CAE9B,MAAAC,EAAoB,CAACC,EAAQC,IAAsB,CACjD,MAAAC,EAAQF,EAAIC,EAAO,GAAG,EAG5B,OAAIA,EAAO,OACFA,EAAO,OAAOC,EAAOF,CAAG,EAI7B,OAAOE,EAAU,KAAeA,IAAU,KACrC,IAGFA,CACT,EAEA,OACGrB,EAAA,KAAA,MAAA,CAAI,UAAW,iCAAiCU,CAAS,GACxD,SAAA,CAAAT,EAAA,IAACU,EAAA,CACC,MAAAhB,EACA,YAAAiB,EACA,YAAAC,CAAA,CACF,EAGAZ,EAAAA,IAAC,OAAI,UAAU,2BACZ,WAAK,IAAI,CAACkB,EAAKG,IACdrB,EAAA,IAAC,MAAA,CAEC,UAAW,gEAAgEgB,EAAa,iBAAmB,EAAE,GAC7G,QAASA,EAAa,IAAMA,EAAWE,CAAG,EAAI,OAE7C,SAAAH,EAAQ,IAAI,CAACI,EAAQG,IACnBvB,EAAA,KAAA,MAAA,CAAmB,UAAU,oBAC3B,SAAA,CAAAoB,EAAO,oBACNpB,OAAC,OAAK,CAAA,UAAU,6BACb,SAAA,CAAOoB,EAAA,OAAO,GAAA,EACjB,QAED,OAAK,CAAA,UAAU,UACb,SAAkBF,EAAAC,EAAKC,CAAM,CAChC,CAAA,CAAA,CAAA,EARQG,CASV,CACD,CAAA,EAfID,CAAA,CAiBR,CACH,CAAA,CAAA,EACF,CAEJ,CCzDA,SAASG,EAAyCC,EAA0C,CAC1F,KAAM,CAAE,KAAAX,EAAM,QAAAY,EAAU,EAAU,EAAAD,EAGlC,MAAI,CAACX,GAAQA,EAAK,SAAW,QACnBN,EAAW,CAAA,MAAOiB,EAAM,MAAO,UAAWA,EAAM,UAAW,EAI9DC,QACFH,EAAiB,CAAA,GAAGE,EAAO,EAC5BzB,MAACa,EAAkB,CAAA,GAAGY,CAAO,CAAA,CACnC"}