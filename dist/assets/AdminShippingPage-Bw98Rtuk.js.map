{"version":3,"file":"AdminShippingPage-Bw98Rtuk.js","sources":["../../src/core/services/AdminShippingService.ts","../../src/presentation/hooks/useAdminShipping.ts","../../src/presentation/pages/admin/AdminShippingPage.tsx"],"sourcesContent":["import ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\nimport type {\r\n\tAdminShippingModel,\r\n\tAdminTrackingEvent,\r\n} from \"../adapters/AdminShippingAdapter\";\r\n\r\nexport interface ShippingFilters {\r\n\tstatus?: string;\r\n\tcarrier?: string;\r\n\tdateFrom?: string;\r\n\tdateTo?: string;\r\n\tpage?: number;\r\n\tlimit?: number;\r\n\tsearch?: string;\r\n}\r\n\r\n/**\r\n * Servicio para administrar envíos desde el panel de administración\r\n */\r\nexport class AdminShippingService {\r\n\t/**\r\n\t * Obtiene la lista de envíos con filtros opcionales\r\n\t */\r\n\tasync getShippings(filters: ShippingFilters = {}) {\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"AdminShippingService: Obteniendo envíos con filtros:\",\r\n\t\t\t\tfilters\r\n\t\t\t);\r\n\r\n\t\t\t// Usar el endpoint específico de envíos\r\n\t\t\tconst response = await ApiClient.get<any>(\r\n\t\t\t\tAPI_ENDPOINTS.ADMIN.SHIPPING_LIST,\r\n\t\t\t\tfilters\r\n\t\t\t);\r\n\r\n\t\t\tif (!response || !response.data) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tshippings: [],\r\n\t\t\t\t\tpagination: {\r\n\t\t\t\t\t\tcurrentPage: 1,\r\n\t\t\t\t\t\ttotalPages: 1,\r\n\t\t\t\t\t\ttotalItems: 0,\r\n\t\t\t\t\t\titemsPerPage: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// Convertir respuesta a formato de envíos\r\n            const shippingsList: AdminShippingModel[] = Array.isArray(response.data)\r\n                ? response.data.map((shipping: any) => this.mapShippingToModel(shipping))\r\n                : [];\r\n\r\n\t\t\t// Obtener información de paginación\r\n\t\t\tconst pagination = response.pagination || {\r\n\t\t\t\tcurrentPage: 1,\r\n\t\t\t\ttotalPages: 1,\r\n\t\t\t\ttotalItems: shippingsList.length,\r\n\t\t\t\titemsPerPage: 10,\r\n\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\tshippings: shippingsList,\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tcurrentPage: Number(pagination.currentPage) || 1,\r\n\t\t\t\t\ttotalPages: Number(pagination.totalPages) || 1,\r\n\t\t\t\t\ttotalItems: Number(pagination.totalItems) || shippingsList.length,\r\n\t\t\t\t\titemsPerPage: Number(pagination.itemsPerPage) || 10,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"AdminShippingService: Error al obtener envíos:\", error);\r\n\t\t\treturn {\r\n\t\t\t\tshippings: [],\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tcurrentPage: 1,\r\n\t\t\t\t\ttotalPages: 1,\r\n\t\t\t\t\ttotalItems: 0,\r\n\t\t\t\t\titemsPerPage: 10,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene los detalles de un envío específico\r\n\t */\r\n\tasync getShippingDetail(id: number): Promise<AdminShippingModel | null> {\r\n\t\ttry {\r\n\t\t\tconsole.log(`AdminShippingService: Obteniendo detalles de orden ${id}`);\r\n\r\n\t\t\t// Usar la ruta de detalles de orden de administrador\r\n\t\t\tconst response = await ApiClient.get<any>(\r\n\t\t\t\tAPI_ENDPOINTS.ADMIN.ORDER_DETAIL(id)\r\n\t\t\t);\r\n\r\n\t\t\tif (!response || !response.data) {\r\n\t\t\t\tthrow new Error(\"No se pudo obtener los detalles de la orden\");\r\n\t\t\t}\r\n\r\n\t\t\t// Convertir la orden en un objeto de envío\r\n\t\t\treturn this.mapOrderToShipping(response.data);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`AdminShippingService: Error al obtener detalles de orden ${id}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene el historial de un envío\r\n\t */\r\n\tasync getShippingHistory(\r\n\t\ttrackingNumber: string\r\n\t): Promise<AdminTrackingEvent[]> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`AdminShippingService: Obteniendo historial de envío ${trackingNumber}`\r\n\t\t\t);\r\n\r\n\t\t\tconst response = await ApiClient.get<any>(\r\n\t\t\t\tAPI_ENDPOINTS.SHIPPING.HISTORY(trackingNumber)\r\n\t\t\t);\r\n\r\n\t\t\tif (!response || !response.data) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\r\n\t\t\t// Mapear los eventos del historial\r\n\t\t\tconst events = Array.isArray(response.data)\r\n\t\t\t\t? response.data.map((item: any, index: number) => ({\r\n\t\t\t\t\t\tid: item.id || index + 1,\r\n\t\t\t\t\t\tstatus: item.status || \"\",\r\n\t\t\t\t\t\tlocation:\r\n\t\t\t\t\t\t\ttypeof item.location === \"object\"\r\n\t\t\t\t\t\t\t\t? item.location.address || \"\"\r\n\t\t\t\t\t\t\t\t: item.location || \"\",\r\n\t\t\t\t\t\ttimestamp: item.timestamp || \"\",\r\n\t\t\t\t\t\tdescription: item.details || item.description || \"\",\r\n\t\t\t\t\t}))\r\n\t\t\t\t: [];\r\n\r\n\t\t\treturn events;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`AdminShippingService: Error al obtener historial de envío ${trackingNumber}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Actualiza el estado de un envío\r\n\t */\r\n\tasync updateShippingStatus(\r\n\t\torderId: number,\r\n\t\tstatus: string\r\n\t): Promise<boolean> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`AdminShippingService: Actualizando estado de orden ${orderId} a ${status}`\r\n\t\t\t);\r\n\r\n\t\t\t// Usar el endpoint de administrador para actualizar estado\r\n\t\t\tconst response = await ApiClient.put<any>(\r\n\t\t\t\tAPI_ENDPOINTS.ADMIN.UPDATE_ORDER_STATUS(orderId),\r\n\t\t\t\t{status}\r\n\t\t\t);\r\n\r\n\t\t\treturn !!(\r\n\t\t\t\tresponse &&\r\n\t\t\t\t(response.success === true || response.status === \"success\")\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`AdminShippingService: Error al actualizar estado de orden ${orderId}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Avanza al siguiente estado de un envío\r\n\t */\r\n\tasync advanceShippingStatus(\r\n\t\torderId: number,\r\n\t\tcurrentStatus: string\r\n\t): Promise<boolean> {\r\n\t\ttry {\r\n\t\t\tconsole.log(`AdminShippingService: Avanzando estado de orden ${orderId}`);\r\n\r\n\t\t\t// Determinar el siguiente estado basado en el actual\r\n\t\t\tconst nextStatus = this.getNextStatus(currentStatus);\r\n\r\n\t\t\t// Actualizar el estado de la orden usando el endpoint de administrador\r\n\t\t\tconst response = await ApiClient.put<any>(\r\n\t\t\t\tAPI_ENDPOINTS.ADMIN.UPDATE_ORDER_STATUS(orderId),\r\n\t\t\t\t{status: nextStatus}\r\n\t\t\t);\r\n\r\n\t\t\treturn !!(\r\n\t\t\t\tresponse &&\r\n\t\t\t\t(response.success === true || response.status === \"success\")\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`AdminShippingService: Error al avanzar estado de orden ${orderId}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Envía una notificación de seguimiento al cliente\r\n\t * Este método podría mantenerse usando un endpoint más genérico\r\n\t */\r\n\tasync sendTrackingNotification(orderId: number): Promise<boolean> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`AdminShippingService: Enviando notificación para orden ${orderId}`\r\n\t\t\t);\r\n\r\n\t\t\t// Aquí podríamos usar el endpoint general de notificaciones si existe\r\n\t\t\t// Por ahora simulamos una respuesta exitosa\r\n\t\t\treturn true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`AdminShippingService: Error al enviar notificación ${orderId}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convierte una orden en un modelo de envío\r\n\t */\r\n\tprivate mapOrderToShipping(order: any): AdminShippingModel {\r\n\t\t// Extraer información de envío desde shipping_data\r\n\t\tconst shippingData = order.shipping_data || {};\r\n\r\n\t\t// Determinar el estado de envío basado en el estado de la orden\r\n\t\tlet shippingStatus = \"pending\";\r\n\t\tif (order.status === \"shipped\" || order.status === \"in_transit\") {\r\n\t\t\tshippingStatus = \"in_transit\";\r\n\t\t} else if (order.status === \"delivered\") {\r\n\t\t\tshippingStatus = \"delivered\";\r\n\t\t} else if (order.status === \"cancelled\") {\r\n\t\t\tshippingStatus = \"cancelled\";\r\n\t\t} else if (order.status === \"completed\") {\r\n\t\t\tshippingStatus = \"delivered\";\r\n\t\t}\r\n\r\n\t\t// Crear un objeto de envío a partir de los datos de la orden\r\n\t\treturn {\r\n\t\t\tid: order.id || 0,\r\n\t\t\ttrackingNumber: shippingData.tracking_number || `ORD-${order.id || 0}`,\r\n\t\t\torderId: order.id || 0,\r\n\t\t\torderNumber: order.order_number || `ORD-${order.id || 0}`,\r\n\t\t\tuserId: order.user_id || 0,\r\n\t\t\tcustomerName: order.user_name || \"Cliente\",\r\n\t\t\tstatus: shippingStatus,\r\n\t\t\tcarrier: shippingData.shipping_company || \"Transportista por defecto\",\r\n\t\t\testimatedDeliveryDate: shippingData.estimated_delivery,\r\n\t\t\tshippedDate: order.status === \"shipped\" ? order.updated_at : undefined,\r\n\t\t\tdeliveredDate:\r\n\t\t\t\torder.status === \"delivered\" ? order.updated_at : undefined,\r\n\t\t\taddress: {\r\n\t\t\t\tstreet: shippingData.address || \"\",\r\n\t\t\t\tcity: shippingData.city || \"\",\r\n\t\t\t\tstate: shippingData.state || \"\",\r\n\t\t\t\tcountry: shippingData.country || \"\",\r\n\t\t\t\tpostalCode: shippingData.postal_code || \"\",\r\n\t\t\t\tphone: shippingData.phone || \"\",\r\n\t\t\t},\r\n\t\t\tweight: shippingData.weight || 0,\r\n\t\t\tdimensions: shippingData.dimensions || \"\",\r\n\t\t\ttrackingHistory: [], // Se llena después si es necesario\r\n\t\t\tcreatedAt: order.created_at || new Date().toISOString(),\r\n\t\t\tupdatedAt: order.updated_at || new Date().toISOString(),\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Determina el siguiente estado basado en el estado actual\r\n\t */\r\n\tprivate getNextStatus(currentStatus: string): string {\r\n\t\tconst statusFlow: Record<string, string> = {\r\n\t\t\tpending: \"processing\",\r\n\t\t\tprocessing: \"shipped\",\r\n\t\t\tshipped: \"in_transit\",\r\n\t\t\tin_transit: \"delivered\",\r\n\t\t\tdelivered: \"completed\",\r\n\t\t};\r\n\r\n\t\treturn statusFlow[currentStatus] || \"processing\";\r\n\t}\r\n\tprivate mapShippingToModel(shipping: any): AdminShippingModel {\r\n\t\treturn {\r\n\t\t\tid: shipping.id || 0,\r\n\t\t\ttrackingNumber: shipping.tracking_number || \"\",\r\n\t\t\torderId: shipping.order_id || 0,\r\n\t\t\torderNumber:\r\n\t\t\t\tshipping.order?.order_number || `ORD-${shipping.order_id || 0}`,\r\n\t\t\tuserId: shipping.user_id || 0,\r\n\t\t\tcustomerName: shipping.user_name || \"Cliente\",\r\n\t\t\tstatus: shipping.status || \"pending\",\r\n\t\t\tcarrier: shipping.carrier_name || \"Transportista por defecto\",\r\n\t\t\testimatedDeliveryDate: shipping.estimated_delivery,\r\n\t\t\tshippedDate: shipping.shipped_date,\r\n\t\t\tdeliveredDate: shipping.delivered_at,\r\n\t\t\taddress: this.extractAddressFromShipping(shipping),\r\n\t\t\tweight: shipping.weight || 0,\r\n\t\t\tdimensions: shipping.dimensions || \"\",\r\n\t\t\ttrackingHistory: shipping.history || [],\r\n\t\t\tcreatedAt: shipping.created_at || new Date().toISOString(),\r\n\t\t\tupdatedAt: shipping.updated_at || new Date().toISOString(),\r\n\t\t};\r\n\t}\r\n\tprivate extractAddressFromShipping(shipping: any): any {\r\n\t\tconst address = {\r\n\t\t\tstreet: \"\",\r\n\t\t\tcity: \"\",\r\n\t\t\tstate: \"\",\r\n\t\t\tcountry: \"\",\r\n\t\t\tpostalCode: \"\",\r\n\t\t\tphone: \"\",\r\n\t\t};\r\n\r\n\t\t// Extraer dirección de current_location si existe\r\n\t\tif (shipping.current_location) {\r\n\t\t\tconst location =\r\n\t\t\t\ttypeof shipping.current_location === \"string\"\r\n\t\t\t\t\t? JSON.parse(shipping.current_location)\r\n\t\t\t\t\t: shipping.current_location;\r\n\r\n\t\t\tif (location.address) {\r\n\t\t\t\taddress.street = location.address;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Extraer datos adicionales de shipping_data de la orden si existe\r\n\t\tif (shipping.order && shipping.order.shipping_data) {\r\n\t\t\tconst shippingData =\r\n\t\t\t\ttypeof shipping.order.shipping_data === \"string\"\r\n\t\t\t\t\t? JSON.parse(shipping.order.shipping_data)\r\n\t\t\t\t\t: shipping.order.shipping_data;\r\n\r\n\t\t\tif (shippingData) {\r\n\t\t\t\taddress.city = shippingData.city || \"\";\r\n\t\t\t\taddress.state = shippingData.state || \"\";\r\n\t\t\t\taddress.country = shippingData.country || \"\";\r\n\t\t\t\taddress.postalCode = shippingData.postal_code || \"\";\r\n\t\t\t\taddress.phone = shippingData.phone || \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn address;\r\n\t}\r\n}\r\n\r\nexport default AdminShippingService;\r\n","// src/presentation/hooks/useAdminShipping.ts\r\nimport {useState, useEffect, useCallback, useRef} from \"react\";\r\nimport type {ShippingFilters} from \"../../core/services/AdminShippingService\";\r\nimport AdminShippingService from \"../../core/services/AdminShippingService\";\r\nimport type {AdminShippingModel} from \"../../core/adapters/AdminShippingAdapter\";\r\n\r\n/**\r\n * Hook personalizado para la administración de envíos\r\n */\r\nconst useAdminShipping = () => {\r\n\t// Instanciar el servicio (usando useRef para mantener la misma instancia)\r\n\tconst serviceRef = useRef(new AdminShippingService());\r\n\tconst adminShippingService = serviceRef.current;\r\n\r\n\t// Estados\r\n\tconst [adminShippings, setAdminShippings] = useState<AdminShippingModel[]>(\r\n\t\t[]\r\n\t);\r\n\tconst [selectedAdminShipping, setSelectedAdminShipping] =\r\n\t\tuseState<AdminShippingModel | null>(null);\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\tconst [showTrackingModal, setShowTrackingModal] = useState<boolean>(false);\r\n\r\n\t// Filtros\r\n\tconst [statusFilter, setStatusFilter] = useState<string>(\"all\");\r\n\tconst [carrierFilter, setCarrierFilter] = useState<string>(\"all\");\r\n\tconst [dateRangeFilter, setDateRangeFilter] = useState<{\r\n\t\tfrom: string;\r\n\t\tto: string;\r\n\t}>({from: \"\", to: \"\"});\r\n\tconst [searchTerm, setSearchTerm] = useState<string>(\"\");\r\n\r\n\t// Paginación\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tcurrentPage: 1,\r\n\t\ttotalPages: 1,\r\n\t\ttotalItems: 0,\r\n\t\titemsPerPage: 10,\r\n\t});\r\n\r\n\t// Flag para controlar si ya se ha cargado inicialmente\r\n    const initialLoadDoneRef = useRef(false);\r\n    const isLoadingRef = useRef(false);\r\n\r\n\t/**\r\n\t * Obtiene la lista de envíos desde el backend\r\n\t */\r\n\tconst fetchAdminShippings = useCallback(async () => {\r\n\t\t// Evitar carga si ya está en proceso\r\n\t\tif (isLoadingRef.current) return;\r\n\r\n        setLoading(true);\r\n        isLoadingRef.current = true;\r\n\t\tsetError(null);\r\n\r\n\t\ttry {\r\n\t\t\t// Preparar filtros para la API\r\n\t\t\tconst filters: ShippingFilters = {\r\n\t\t\t\tpage: pagination.currentPage,\r\n\t\t\t\tlimit: pagination.itemsPerPage,\r\n\t\t\t};\r\n\r\n\t\t\t// Añadir filtros adicionales si están definidos\r\n\t\t\tif (statusFilter !== \"all\") filters.status = statusFilter;\r\n\t\t\tif (carrierFilter !== \"all\") filters.carrier = carrierFilter;\r\n\t\t\tif (dateRangeFilter.from) filters.dateFrom = dateRangeFilter.from;\r\n\t\t\tif (dateRangeFilter.to) filters.dateTo = dateRangeFilter.to;\r\n\t\t\tif (searchTerm) filters.search = searchTerm;\r\n\r\n\t\t\t// Llamar al servicio\r\n\t\t\tconst result = await adminShippingService.getShippings(filters);\r\n\r\n\t\t\t// Actualizar estados\r\n\t\t\tsetAdminShippings(result.shippings);\r\n\t\t\tsetPagination(result.pagination);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error al obtener envíos:\", err);\r\n\t\t\tsetError(err instanceof Error ? err.message : \"Error al cargar envíos\");\r\n\t\t} finally {\r\n            setLoading(false);\r\n            isLoadingRef.current = false;\r\n\t\t}\r\n\t}, [\r\n\t\tadminShippingService,\r\n\t\tpagination.currentPage,\r\n\t\tpagination.itemsPerPage,\r\n\t\tstatusFilter,\r\n\t\tcarrierFilter,\r\n\t\tdateRangeFilter.from,\r\n\t\tdateRangeFilter.to,\r\n\t\tsearchTerm,\r\n\t]);\r\n\r\n\t/**\r\n\t * Obtiene los detalles de un envío específico\r\n\t */\r\n\tconst fetchAdminShippingDetail = useCallback(\r\n\t\tasync (shipping: AdminShippingModel) => {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Si ya tenemos el historial completo, usamos ese\r\n\t\t\t\tif (shipping.trackingHistory && shipping.trackingHistory.length > 0) {\r\n\t\t\t\t\tsetSelectedAdminShipping(shipping);\r\n\t\t\t\t\tsetShowTrackingModal(true);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Obtener detalles completos y historial\r\n\t\t\t\tconst details = await adminShippingService.getShippingDetail(\r\n\t\t\t\t\tshipping.id\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (details) {\r\n\t\t\t\t\t// Intentar obtener el historial si hay un número de seguimiento\r\n                    let history: AdminShippingModel['trackingHistory'] = [];\r\n\t\t\t\t\tif (details.trackingNumber) {\r\n\t\t\t\t\t\thistory = await adminShippingService.getShippingHistory(\r\n\t\t\t\t\t\t\tdetails.trackingNumber\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Crear una copia del envío con el historial actualizado\r\n\t\t\t\t\tconst shippingWithHistory = {\r\n\t\t\t\t\t\t...details,\r\n\t\t\t\t\t\ttrackingHistory: history,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tsetSelectedAdminShipping(shippingWithHistory);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Si no hay detalles, usar los datos básicos\r\n\t\t\t\t\tsetSelectedAdminShipping(shipping);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetShowTrackingModal(true);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t`Error al obtener detalles del envío ${shipping.id}:`,\r\n\t\t\t\t\terr\r\n\t\t\t\t);\r\n\t\t\t\tsetError(\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al cargar detalles del envío\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Aún así mostramos el modal con los datos que tenemos\r\n\t\t\t\tsetSelectedAdminShipping(shipping);\r\n\t\t\t\tsetShowTrackingModal(true);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[adminShippingService]\r\n\t);\r\n\r\n\t/**\r\n\t * Actualiza el estado de un envío\r\n\t */\r\n\tconst updateAdminShippingStatus = useCallback(\r\n\t\tasync (orderId: number, status: string) => {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst success = await adminShippingService.updateShippingStatus(\r\n\t\t\t\t\torderId,\r\n\t\t\t\t\tstatus\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\t// Refrescar la lista después de actualizar\r\n\t\t\t\t\tawait fetchAdminShippings();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(`Error al actualizar estado del envío ${orderId}:`, err);\r\n\t\t\t\tsetError(\r\n\t\t\t\t\terr instanceof Error ? err.message : \"Error al actualizar estado\"\r\n\t\t\t\t);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[adminShippingService, fetchAdminShippings]\r\n\t);\r\n\r\n\t/**\r\n\t * Avanza el estado de un envío al siguiente estado lógico\r\n\t */\r\n\tconst advanceAdminShippingStatus = useCallback(\r\n\t\tasync (id: number, currentStatus: string) => {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst success = await adminShippingService.advanceShippingStatus(\r\n\t\t\t\t\tid,\r\n\t\t\t\t\tcurrentStatus\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\t// Refrescar la lista después de actualizar\r\n\t\t\t\t\tawait fetchAdminShippings();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(`Error al avanzar estado del envío ${id}:`, err);\r\n\t\t\t\tsetError(\r\n\t\t\t\t\terr instanceof Error ? err.message : \"Error al avanzar estado\"\r\n\t\t\t\t);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[adminShippingService, fetchAdminShippings]\r\n\t);\r\n\r\n\t/**\r\n\t * Envía una notificación de seguimiento al cliente\r\n\t */\r\n\tconst sendAdminTrackingNotification = useCallback(\r\n\t\tasync (orderId: number) => {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst success =\r\n\t\t\t\t\tawait adminShippingService.sendTrackingNotification(orderId);\r\n\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\talert(\"Notificación enviada correctamente\");\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(`Error al enviar notificación para ${orderId}:`, err);\r\n\t\t\t\tsetError(\r\n\t\t\t\t\terr instanceof Error ? err.message : \"Error al enviar notificación\"\r\n\t\t\t\t);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[adminShippingService]\r\n\t);\r\n\r\n\t/**\r\n\t * Maneja el cambio de página en la paginación\r\n\t */\r\n\tconst handleAdminPageChange = useCallback((page: number) => {\r\n\t\tsetPagination((prev) => ({...prev, currentPage: page}));\r\n\t}, []);\r\n\r\n\t/**\r\n\t * Refresca los datos de la lista de envíos\r\n\t */\r\n\tconst refreshAdminData = useCallback(() => {\r\n\t\tfetchAdminShippings();\r\n\t}, [fetchAdminShippings]);\r\n\r\n\t// Efecto para manejar cambios en los filtros principales\r\n\tuseEffect(() => {\r\n\t\t// Evitar la primera carga ya que se hará en el efecto de carga inicial\r\n\t\tif (!initialLoadDoneRef.current) return;\r\n\r\n\t\tconst timer = setTimeout(() => {\r\n\t\t\tfetchAdminShippings();\r\n\t\t}, 300); // Pequeño retraso para evitar múltiples llamadas\r\n\r\n\t\t// Limpieza para evitar múltiples ejecuciones\r\n\t\treturn () => clearTimeout(timer);\r\n\t}, [\r\n\t\tfetchAdminShippings,\r\n\t\tpagination.currentPage,\r\n\t\tstatusFilter,\r\n\t\tcarrierFilter,\r\n\t]);\r\n\r\n\t// Efecto para la carga inicial que se ejecuta solo una vez\r\n\tuseEffect(() => {\r\n\t\tif (!initialLoadDoneRef.current) {\r\n\t\t\tfetchAdminShippings();\r\n\t\t\tinitialLoadDoneRef.current = true;\r\n\t\t}\r\n\t}, [fetchAdminShippings]);\r\n\r\n\treturn {\r\n\t\tadminShippings,\r\n\t\tselectedAdminShipping,\r\n\t\tloading,\r\n\t\terror,\r\n\t\tshowTrackingModal,\r\n\t\tstatusFilter,\r\n\t\tcarrierFilter,\r\n\t\tdateRangeFilter,\r\n\t\tsearchTerm,\r\n\t\tpagination,\r\n\t\tsetStatusFilter,\r\n\t\tsetCarrierFilter,\r\n\t\tsetDateRangeFilter,\r\n\t\tsetSearchTerm,\r\n\t\tsetShowTrackingModal,\r\n\t\tfetchAdminShippings,\r\n\t\tfetchAdminShippingDetail,\r\n\t\tupdateAdminShippingStatus,\r\n\t\tadvanceAdminShippingStatus,\r\n\t\tsendAdminTrackingNotification,\r\n\t\thandleAdminPageChange,\r\n\t\trefreshAdminData,\r\n\t};\r\n};\r\n\r\nexport default useAdminShipping;\r\n","// src/presentation/pages/admin/AdminShippingPage.tsx\r\nimport React from \"react\";\r\nimport Table from \"../../components/dashboard/Table\";\r\nimport {\r\n  Truck,\r\n  Package,\r\n  MapPin,\r\n  User,\r\n  ShoppingBag,\r\n  Calendar,\r\n  Eye,\r\n  RefreshCw,\r\n  Filter,\r\n  Clock,\r\n  CheckCircle,\r\n  XCircle,\r\n  AlertTriangle,\r\n  ArrowRight,\r\n  Share2,\r\n} from \"lucide-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { formatCurrency } from \"../../../utils/formatters/formatCurrency\";\r\nimport useAdminShipping from \"../../hooks/useAdminShipping\";\r\n\r\n// Mapeo de estado para los envíos\r\nconst shippingStatusMap: Record<\r\n\tstring,\r\n\t{\r\n\t\tlabel: string;\r\n\t\tcolor: string;\r\n\t\ticon: React.ReactNode;\r\n\t}\r\n> = {\r\n\tpending: {\r\n\t\tlabel: \"Pendiente\",\r\n\t\tcolor:\r\n\t\t\t\"bg-yellow-100 text-yellow-800\",\r\n\t\ticon: <Clock className=\"w-3 h-3 mr-1\" />,\r\n\t},\r\n\tprocessing: {\r\n\t\tlabel: \"En preparación\",\r\n\t\tcolor: \"bg-blue-100 text-blue-800\",\r\n\t\ticon: <Package className=\"w-3 h-3 mr-1\" />,\r\n\t},\r\n\tready_to_ship: {\r\n\t\tlabel: \"Listo para enviar\",\r\n\t\tcolor:\r\n\t\t\t\"bg-purple-100 text-purple-800\",\r\n\t\ticon: <Package className=\"w-3 h-3 mr-1\" />,\r\n\t},\r\n\tshipped: {\r\n\t\tlabel: \"Enviado\",\r\n\t\tcolor:\r\n\t\t\t\"bg-indigo-100 text-indigo-800\",\r\n\t\ticon: <Truck className=\"w-3 h-3 mr-1\" />,\r\n\t},\r\n\tin_transit: {\r\n\t\tlabel: \"En tránsito\",\r\n\t\tcolor:\r\n\t\t\t\"bg-indigo-100 text-indigo-800\",\r\n\t\ticon: <Truck className=\"w-3 h-3 mr-1\" />,\r\n\t},\r\n\tout_for_delivery: {\r\n\t\tlabel: \"En reparto\",\r\n\t\tcolor: \"bg-green-100 text-green-800\",\r\n\t\ticon: <Truck className=\"w-3 h-3 mr-1\" />,\r\n\t},\r\n\tdelivered: {\r\n\t\tlabel: \"Entregado\",\r\n\t\tcolor:\r\n\t\t\t\"bg-emerald-100 text-emerald-800\",\r\n\t\ticon: <CheckCircle className=\"w-3 h-3 mr-1\" />,\r\n\t},\r\n\tfailed_delivery: {\r\n\t\tlabel: \"Entrega fallida\",\r\n\t\tcolor: \"bg-red-100 text-red-800\",\r\n\t\ticon: <AlertTriangle className=\"w-3 h-3 mr-1\" />,\r\n\t},\r\n\treturned: {\r\n\t\tlabel: \"Devuelto\",\r\n\t\tcolor:\r\n\t\t\t\"bg-orange-100 text-orange-800\",\r\n\t\ticon: <ArrowRight className=\"w-3 h-3 mr-1 transform rotate-180\" />,\r\n\t},\r\n\tcancelled: {\r\n\t\tlabel: \"Cancelado\",\r\n\t\tcolor: \"bg-gray-100 text-gray-800\",\r\n\t\ticon: <XCircle className=\"w-3 h-3 mr-1\" />,\r\n\t},\r\n};\r\n\r\n// Carriers disponibles\r\nconst carriers = [\r\n  {id: \"MRW\", name: \"MRW\"},\r\n  {id: \"SEUR\", name: \"SEUR\"},\r\n  {id: \"Correos Express\", name: \"Correos Express\"},\r\n  {id: \"DHL\", name: \"DHL\"},\r\n  {id: \"FedEx\", name: \"FedEx\"},\r\n  {id: \"UPS\", name: \"UPS\"},\r\n  {id: \"GLS\", name: \"GLS\"},\r\n];\r\n\r\nconst AdminShippingPage: React.FC = () => {\r\n  const {\r\n    adminShippings,\r\n    selectedAdminShipping,\r\n    loading,\r\n    error,\r\n    showTrackingModal,\r\n    statusFilter,\r\n    carrierFilter,\r\n    dateRangeFilter,\r\n    pagination,\r\n    setStatusFilter,\r\n    setCarrierFilter,\r\n    setDateRangeFilter,\r\n    setShowTrackingModal,\r\n    fetchAdminShippingDetail,\r\n    advanceAdminShippingStatus,\r\n    sendAdminTrackingNotification,\r\n    handleAdminPageChange,\r\n    refreshAdminData,\r\n  } = useAdminShipping();\r\n\r\n  // Formatear fecha\r\n  const formatDate = (dateString: string | undefined) => {\r\n    if (!dateString) return \"N/A\";\r\n\r\n    const date = new Date(dateString);\r\n    return new Intl.DateTimeFormat(\"es-ES\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    }).format(date);\r\n  };\r\n\r\n  // Abrir modal de seguimiento\r\n  const openTrackingModal = (shipping: any) => {\r\n    fetchAdminShippingDetail(shipping);\r\n  };\r\n\r\n  // Cerrar modal de seguimiento\r\n  const closeTrackingModal = () => {\r\n    setShowTrackingModal(false);\r\n  };\r\n\r\n  // Obtener siguiente estado del envío\r\n  const getNextStatus = (currentStatus: string): string => {\r\n    const statusFlow: Record<string, string> = {\r\n      pending: \"processing\",\r\n      processing: \"ready_to_ship\",\r\n      ready_to_ship: \"shipped\",\r\n      shipped: \"in_transit\",\r\n      in_transit: \"out_for_delivery\",\r\n      out_for_delivery: \"delivered\",\r\n      delivered: \"delivered\", // Final state\r\n      failed_delivery: \"out_for_delivery\", // Retry delivery\r\n      returned: \"returned\", // Final state\r\n      cancelled: \"cancelled\", // Final state\r\n    };\r\n\r\n    return statusFlow[currentStatus] || currentStatus;\r\n  };\r\n\r\n  // Definir columnas de la tabla\r\n  const columns = [\r\n    {\r\n      key: \"tracking\",\r\n      header: \"Seguimiento\",\r\n      sortable: true,\r\n      render: (shipping: any) => (\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex-shrink-0 h-10 w-10 rounded-lg bg-indigo-100 flex items-center justify-center\">\r\n            <Truck className=\"h-6 w-6 text-indigo-600\" />\r\n          </div>\r\n          <div className=\"ml-4\">\r\n            <div className=\"text-sm font-medium text-gray-900\">\r\n              {shipping.trackingNumber}\r\n            </div>\r\n            <div className=\"text-xs text-gray-500 flex items-center\">\r\n              <Calendar className=\"w-3 h-3 mr-1\" />\r\n              {formatDate(shipping.createdAt)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"order\",\r\n      header: \"Pedido\",\r\n      sortable: true,\r\n      render: (shipping: any) => (\r\n        <div className=\"flex items-center\">\r\n          <ShoppingBag className=\"h-4 w-4 text-gray-500 mr-1\" />\r\n          <Link\r\n            to={`/admin/orders/${shipping.orderId}`}\r\n            className=\"text-primary-600 hover:text-primary-800\"\r\n          >\r\n            {shipping.orderNumber}\r\n          </Link>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"customer\",\r\n      header: \"Cliente\",\r\n      sortable: true,\r\n      render: (shipping: any) => (\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex-shrink-0 h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center\">\r\n            <User className=\"h-4 w-4 text-gray-500\" />\r\n          </div>\r\n          <div className=\"ml-3\">\r\n            <div className=\"text-sm font-medium text-gray-900\">\r\n              {shipping.customerName}\r\n            </div>\r\n            <div className=\"text-xs text-gray-500\">\r\n              ID: {shipping.userId}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"address\",\r\n      header: \"Dirección\",\r\n      render: (shipping: any) => (\r\n        <div className=\"flex items-start\">\r\n          <MapPin className=\"h-4 w-4 text-gray-500 mr-1 mt-0.5 flex-shrink-0\" />\r\n          <div className=\"text-xs text-gray-600\">\r\n            <div>{shipping.address.street}</div>\r\n            <div>\r\n              {shipping.address.city}, {shipping.address.state}\r\n            </div>\r\n            <div>\r\n              {shipping.address.postalCode}, {shipping.address.country}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"carrier\",\r\n      header: \"Transportista\",\r\n      sortable: true,\r\n      render: (shipping: any) => (\r\n        <div className=\"text-sm font-medium\">{shipping.carrier}</div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"status\",\r\n      header: \"Estado\",\r\n      sortable: true,\r\n      render: (shipping: any) => {\r\n        const status = shippingStatusMap[shipping.status] || {\r\n          label: shipping.status,\r\n          color:\r\n            \"bg-gray-100 text-gray-800\",\r\n          icon: <AlertTriangle className=\"w-3 h-3 mr-1\" />,\r\n        };\r\n\r\n        return (\r\n          <span\r\n            className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${status.color}`}\r\n          >\r\n            {status.icon}\r\n            {status.label}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      key: \"dates\",\r\n      header: \"Fechas clave\",\r\n      render: (shipping: any) => (\r\n        <div className=\"text-xs text-gray-600\">\r\n          {shipping.shippedDate && (\r\n            <div className=\"mb-1\">\r\n              <span className=\"font-medium\">Envío:</span>{\" \"}\r\n              {formatDate(shipping.shippedDate)}\r\n            </div>\r\n          )}\r\n          {shipping.estimatedDeliveryDate && (\r\n            <div className=\"mb-1\">\r\n              <span className=\"font-medium\">Est. entrega:</span>{\" \"}\r\n              {formatDate(shipping.estimatedDeliveryDate)}\r\n            </div>\r\n          )}\r\n          {shipping.deliveredDate && (\r\n            <div>\r\n              <span className=\"font-medium\">Entregado:</span>{\" \"}\r\n              {formatDate(shipping.deliveredDate)}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"actions\",\r\n      header: \"Acciones\",\r\n      render: (shipping: any) => {\r\n        const canAdvance = [\r\n          \"pending\",\r\n          \"processing\",\r\n          \"ready_to_ship\",\r\n          \"shipped\",\r\n          \"in_transit\",\r\n          \"out_for_delivery\",\r\n          \"failed_delivery\",\r\n        ].includes(shipping.status);\r\n\r\n        return (\r\n          <div className=\"flex justify-end space-x-2\">\r\n            {/* Ver detalles */}\r\n            <button\r\n              onClick={() => openTrackingModal(shipping)}\r\n              className=\"p-1 text-blue-600 hover:bg-blue-100 rounded-md\"\r\n              title=\"Ver seguimiento\"\r\n            >\r\n              <Eye size={18} />\r\n            </button>\r\n\r\n            {/* Ver pedido */}\r\n            <Link\r\n              to={`/admin/orders/${shipping.orderId}`}\r\n              className=\"p-1 text-purple-600 hover:bg-purple-100 rounded-md\"\r\n              title=\"Ver pedido\"\r\n            >\r\n              <ShoppingBag size={18} />\r\n            </Link>\r\n\r\n            {/* Enviar notificación */}\r\n            <button\r\n              onClick={() => sendAdminTrackingNotification(shipping.id)}\r\n              className=\"p-1 text-indigo-600 hover:bg-indigo-100 rounded-md\"\r\n              title=\"Enviar notificación\"\r\n            >\r\n              <Share2 size={18} />\r\n            </button>\r\n\r\n            {/* Avanzar estado */}\r\n            {canAdvance && (\r\n              <button\r\n                onClick={() =>\r\n                  advanceAdminShippingStatus(shipping.id, shipping.status)\r\n                }\r\n                className=\"p-1 text-green-600 hover:bg-green-100 rounded-md\"\r\n                title={`Avanzar a ${shippingStatusMap[getNextStatus(shipping.status)]?.label || \"siguiente estado\"}`}\r\n              >\r\n                <ArrowRight size={18} />\r\n              </button>\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">\r\n          Gestión de Envíos\r\n        </h1>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={refreshAdminData}\r\n            className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n          >\r\n            <RefreshCw size={18} className=\"inline mr-2\" />\r\n            Actualizar\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mostrar mensaje de error si existe */}\r\n      {error && (\r\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Filtros */}\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n          {/* Filtro de Estado */}\r\n          <div className=\"flex flex-col space-y-1\">\r\n            <label className=\"text-sm text-gray-600\">\r\n              Estado del envío\r\n            </label>\r\n            <div className=\"flex items-center\">\r\n              <Filter className=\"h-5 w-5 text-gray-500 mr-2\" />\r\n              <select\r\n                className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                value={statusFilter}\r\n                onChange={(e) => setStatusFilter(e.target.value)}\r\n              >\r\n                <option value=\"all\">Todos los Estados</option>\r\n                {Object.entries(shippingStatusMap).map(([key, {label}]) => (\r\n                  <option key={key} value={key}>\r\n                    {label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filtro de Transportista */}\r\n          <div className=\"flex flex-col space-y-1\">\r\n            <label className=\"text-sm text-gray-600\">\r\n              Transportista\r\n            </label>\r\n            <select\r\n              className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              value={carrierFilter}\r\n              onChange={(e) => setCarrierFilter(e.target.value)}\r\n            >\r\n              <option value=\"all\">Todos los Transportistas</option>\r\n              {carriers.map((carrier) => (\r\n                <option key={carrier.id} value={carrier.id}>\r\n                  {carrier.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Filtro de Rango de Fechas */}\r\n          <div className=\"flex flex-col space-y-1 lg:col-span-2\">\r\n            <label className=\"text-sm text-gray-600\">\r\n              Rango de fechas\r\n            </label>\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              <input\r\n                type=\"date\"\r\n                className=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                value={dateRangeFilter.from}\r\n                onChange={(e) =>\r\n                  setDateRangeFilter((prev) => ({\r\n                    ...prev,\r\n                    from: e.target.value,\r\n                  }))\r\n                }\r\n                placeholder=\"Desde\"\r\n              />\r\n              <input\r\n                type=\"date\"\r\n                className=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                value={dateRangeFilter.to}\r\n                onChange={(e) =>\r\n                  setDateRangeFilter((prev) => ({...prev, to: e.target.value}))\r\n                }\r\n                placeholder=\"Hasta\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabla de Envíos */}\r\n      <Table\r\n        data={adminShippings}\r\n        columns={columns}\r\n        searchFields={[\"trackingNumber\", \"orderNumber\", \"customerName\"]}\r\n        loading={loading}\r\n        emptyMessage=\"No se encontraron envíos\"\r\n        pagination={{\r\n          currentPage: pagination.currentPage,\r\n          totalPages: pagination.totalPages,\r\n          totalItems: pagination.totalItems,\r\n          itemsPerPage: pagination.itemsPerPage,\r\n          onPageChange: handleAdminPageChange,\r\n        }}\r\n      />\r\n\r\n      {/* Modal de Seguimiento */}\r\n      {showTrackingModal && selectedAdminShipping && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"p-6\">\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h2 className=\"text-xl font-bold text-gray-900\">\r\n                  Seguimiento de Envío: {selectedAdminShipping.trackingNumber}\r\n                </h2>\r\n                <button\r\n                  onClick={closeTrackingModal}\r\n                  className=\"text-gray-500 hover:text-gray-700\"\r\n                >\r\n                  <XCircle size={24} />\r\n                </button>\r\n              </div>\r\n\r\n              {/* Información adicional del pedido */}\r\n              {(selectedAdminShipping as any).orderTotal && (\r\n                <div className=\"mb-6\">\r\n                  <div className=\"bg-blue-50 rounded-lg p-4\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-blue-900\">Valor del pedido</h4>\r\n                        <p className=\"text-lg font-bold text-blue-900\">\r\n                          {formatCurrency((selectedAdminShipping as any).orderTotal)}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <p className=\"text-sm text-blue-700\">\r\n                          {(selectedAdminShipping as any).itemCount || 1} producto(s)\r\n                        </p>\r\n                        <Link\r\n                          to={`/admin/orders/${selectedAdminShipping.orderId}`}\r\n                          className=\"text-sm text-blue-600 hover:text-blue-800 underline\"\r\n                        >\r\n                          Ver pedido completo\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n                {/* Información del envío */}\r\n                <div>\r\n                  <h3 className=\"text-lg font-medium mb-2 text-gray-900\">\r\n                    Información del envío\r\n                  </h3>\r\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-500\">\r\n                          Pedido\r\n                        </p>\r\n                        <p className=\"text-gray-900 text-sm font-medium\">\r\n                          {selectedAdminShipping.orderNumber}\r\n                        </p>\r\n                      </div>\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-500\">\r\n                          Transportista\r\n                        </p>\r\n                        <p className=\"text-gray-900 text-sm font-medium\">\r\n                          {selectedAdminShipping.carrier}\r\n                        </p>\r\n                      </div>\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-500\">\r\n                          Estado\r\n                        </p>\r\n                        <span\r\n                          className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${shippingStatusMap[selectedAdminShipping.status]?.color}`}\r\n                        >\r\n                          {shippingStatusMap[selectedAdminShipping.status]?.icon}\r\n                          {shippingStatusMap[selectedAdminShipping.status]?.label ||\r\n                            selectedAdminShipping.status}\r\n                        </span>\r\n                      </div>\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-500\">\r\n                          Fecha de creación\r\n                        </p>\r\n                        <p className=\"text-gray-900 text-sm font-medium\">\r\n                          {formatDate(selectedAdminShipping.createdAt)}\r\n                        </p>\r\n                      </div>\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-500\">\r\n                          Peso\r\n                        </p>\r\n                        <p className=\"text-gray-900 text-sm font-medium\">\r\n                          {selectedAdminShipping.weight || \"N/A\"} kg\r\n                        </p>\r\n                      </div>\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-500\">\r\n                          Dimensiones\r\n                        </p>\r\n                        <p className=\"text-gray-900 text-sm font-medium\">\r\n                          {selectedAdminShipping.dimensions || \"N/A\"}\r\n                        </p>\r\n                      </div>\r\n                      {(selectedAdminShipping as any).shippingCost && (\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-gray-500\">\r\n                            Costo de envío\r\n                          </p>\r\n                          <p className=\"text-gray-900 text-sm font-medium\">\r\n                            {formatCurrency((selectedAdminShipping as any).shippingCost)}\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                      {selectedAdminShipping.estimatedDeliveryDate && (\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-gray-500\">\r\n                            Entrega estimada\r\n                          </p>\r\n                          <p className=\"text-gray-900 text-sm font-medium\">\r\n                            {formatDate(selectedAdminShipping.estimatedDeliveryDate)}\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                      {selectedAdminShipping.deliveredDate && (\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-gray-500\">\r\n                            Fecha de entrega\r\n                          </p>\r\n                          <p className=\"text-gray-900 text-sm font-medium\">\r\n                            {formatDate(selectedAdminShipping.deliveredDate)}\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                      {(selectedAdminShipping as any).notes && (\r\n                        <div className=\"col-span-2\">\r\n                          <p className=\"text-sm font-medium text-gray-500\">\r\n                            Notas especiales\r\n                          </p>\r\n                          <p className=\"text-gray-900 text-sm\">\r\n                            {(selectedAdminShipping as any).notes}\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Dirección de entrega */}\r\n                <div>\r\n                  <h3 className=\"text-lg font-medium mb-2 text-gray-900\">\r\n                    Dirección de entrega\r\n                  </h3>\r\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                    <p className=\"text-gray-900 text-sm font-medium mb-1\">\r\n                      {selectedAdminShipping.customerName}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-600 mb-1\">\r\n                      {selectedAdminShipping.address.street}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-600 mb-1\">\r\n                      {selectedAdminShipping.address.city},{\" \"}\r\n                      {selectedAdminShipping.address.state}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-600 mb-1\">\r\n                      {selectedAdminShipping.address.postalCode},{\" \"}\r\n                      {selectedAdminShipping.address.country}\r\n                    </p>\r\n                    {selectedAdminShipping.address.phone && (\r\n                      <p className=\"text-sm text-gray-600\">\r\n                        Teléfono: {selectedAdminShipping.address.phone}\r\n                      </p>\r\n                    )}\r\n                    {(selectedAdminShipping.address as any).email && (\r\n                      <p className=\"text-sm text-gray-600\">\r\n                        Email: {(selectedAdminShipping.address as any).email}\r\n                      </p>\r\n                    )}\r\n                    {(selectedAdminShipping as any).customerEmail && (\r\n                      <p className=\"text-sm text-gray-600\">\r\n                        Email: {(selectedAdminShipping as any).customerEmail}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Historial de seguimiento */}\r\n              <div>\r\n                <h3 className=\"text-lg font-medium mb-4 text-gray-900\">\r\n                  Historial de seguimiento\r\n                </h3>\r\n                <div className=\"relative\">\r\n                  <div className=\"absolute left-5 top-0 bottom-0 w-0.5 bg-gray-300\"></div>\r\n                  <ul className=\"space-y-4\">\r\n                    {selectedAdminShipping.trackingHistory && selectedAdminShipping.trackingHistory.length > 0 ? (\r\n                      [...selectedAdminShipping.trackingHistory]\r\n                        .reverse()\r\n                        .map((event, index) => {\r\n                          const isLatest = index === 0;\r\n                          return (\r\n                            <li key={event.id || index} className=\"relative pl-12\">\r\n                              <div className={`absolute left-4 w-2 h-2 rounded-full ring-4 ring-white z-10 ${\r\n                                isLatest ? 'bg-green-600' : 'bg-primary-600'\r\n                              }`}></div>\r\n                              <div className={`rounded-lg p-4 ${\r\n                                isLatest ? 'bg-green-50 border border-green-200' : 'bg-gray-50'\r\n                              }`}>\r\n                                <div className=\"flex justify-between items-start mb-2\">\r\n                                  <p className={`text-sm font-medium ${\r\n                                    isLatest ? 'text-green-900' : 'text-gray-900'\r\n                                  }`}>\r\n                                    {/* Iconos por estado */}\r\n                                    {(event.status === \"shipped\" || event.status === \"in_transit\") && (\r\n                                      <Truck className=\"inline w-4 h-4 mr-2 text-blue-600\" />\r\n                                    )}\r\n                                    {event.status === \"delivered\" && (\r\n                                      <CheckCircle className=\"inline w-4 h-4 mr-2 text-green-600\" />\r\n                                    )}\r\n                                    {event.status === \"failed_delivery\" && (\r\n                                      <AlertTriangle className=\"inline w-4 h-4 mr-2 text-red-600\" />\r\n                                    )}\r\n                                    {event.status === \"pending\" && (\r\n                                      <Clock className=\"inline w-4 h-4 mr-2 text-yellow-600\" />\r\n                                    )}\r\n                                    {event.status === \"processing\" && (\r\n                                      <Package className=\"inline w-4 h-4 mr-2 text-blue-600\" />\r\n                                    )}\r\n                                    {event.description || shippingStatusMap[event.status]?.label || event.status}\r\n                                  </p>\r\n                                  <div className=\"text-right\">\r\n                                    <p className=\"text-xs text-gray-500\">\r\n                                      {formatDate(event.timestamp || (event as any).createdAt)}\r\n                                    </p>\r\n                                    {isLatest && (\r\n                                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 mt-1\">\r\n                                        Última actualización\r\n                                      </span>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                {event.location && (\r\n                                  <p className=\"text-sm text-gray-600 flex items-center\">\r\n                                    <MapPin className=\"w-3 h-3 mr-1 text-gray-400\" />\r\n                                    Ubicación: {event.location}\r\n                                  </p>\r\n                                )}\r\n                                {(event as any).notes && (\r\n                                  <p className=\"text-sm text-gray-600 mt-1 italic\">\r\n                                    Nota: {(event as any).notes}\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </li>\r\n                          );\r\n                        })\r\n                    ) : (\r\n                      <li className=\"text-center py-8\">\r\n                        <div className=\"text-gray-400 mb-2\">\r\n                          <Package className=\"w-12 h-12 mx-auto\" />\r\n                        </div>\r\n                        <p className=\"text-gray-500 text-sm\">\r\n                          No hay historial de seguimiento disponible aún.\r\n                        </p>\r\n                        <p className=\"text-gray-400 text-xs mt-1\">\r\n                          El historial se actualizará cuando el envío comience su tránsito.\r\n                        </p>\r\n                      </li>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Botones de acción */}\r\n              <div className=\"mt-6 flex justify-between items-center\">\r\n                <div className=\"flex space-x-2\">\r\n                  {/* Botón para avanzar estado si es posible */}\r\n                  {[\r\n                    \"pending\",\r\n                    \"processing\",\r\n                    \"ready_to_ship\",\r\n                    \"shipped\",\r\n                    \"in_transit\",\r\n                    \"out_for_delivery\",\r\n                    \"failed_delivery\",\r\n                  ].includes(selectedAdminShipping.status) && (\r\n                    <button\r\n                      onClick={() =>\r\n                        advanceAdminShippingStatus(\r\n                          selectedAdminShipping.id,\r\n                          selectedAdminShipping.status\r\n                        )\r\n                      }\r\n                      className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n                    >\r\n                      <ArrowRight size={18} className=\"inline mr-2\" />\r\n                      Avanzar a {shippingStatusMap[getNextStatus(selectedAdminShipping.status)]?.label}\r\n                    </button>\r\n                  )}\r\n                  <Link\r\n                    to={`/admin/orders/${selectedAdminShipping.orderId}`}\r\n                    className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\"\r\n                  >\r\n                    <ShoppingBag size={18} className=\"inline mr-2\" />\r\n                    Ver pedido completo\r\n                  </Link>\r\n                </div>\r\n                <div className=\"flex space-x-2\">\r\n                  <button\r\n                    onClick={() =>\r\n                      sendAdminTrackingNotification(selectedAdminShipping.id)\r\n                    }\r\n                    className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors\"\r\n                  >\r\n                    <Share2 size={18} className=\"inline mr-2\" />\r\n                    Notificar cliente\r\n                  </button>\r\n                  <button\r\n                    onClick={closeTrackingModal}\r\n                    className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors\"\r\n                  >\r\n                    Cerrar\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminShippingPage;"],"names":["AdminShippingService","filters","response","ApiClient","API_ENDPOINTS","shippingsList","shipping","pagination","error","id","trackingNumber","item","index","orderId","status","currentStatus","nextStatus","order","shippingData","shippingStatus","address","location","useAdminShipping","adminShippingService","useRef","adminShippings","setAdminShippings","useState","selectedAdminShipping","setSelectedAdminShipping","loading","setLoading","setError","showTrackingModal","setShowTrackingModal","statusFilter","setStatusFilter","carrierFilter","setCarrierFilter","dateRangeFilter","setDateRangeFilter","searchTerm","setSearchTerm","setPagination","initialLoadDoneRef","isLoadingRef","fetchAdminShippings","useCallback","result","err","fetchAdminShippingDetail","details","history","shippingWithHistory","updateAdminShippingStatus","advanceAdminShippingStatus","sendAdminTrackingNotification","handleAdminPageChange","page","prev","refreshAdminData","useEffect","timer","shippingStatusMap","jsx","Clock","Package","Truck","CheckCircle","AlertTriangle","ArrowRight","XCircle","carriers","AdminShippingPage","formatDate","dateString","date","openTrackingModal","closeTrackingModal","getNextStatus","columns","jsxs","Calendar","ShoppingBag","Link","User","MapPin","canAdvance","Eye","Share2","RefreshCw","Filter","e","key","label","carrier","Table","formatCurrency","event","isLatest"],"mappings":"gRAoBO,MAAMA,EAAqB,CAIjC,MAAM,aAAaC,EAA2B,GAAI,CAC7C,GAAA,CACK,QAAA,IACP,uDACAA,CACD,EAGM,MAAAC,EAAW,MAAMC,EAAU,IAChCC,EAAc,MAAM,cACpBH,CACD,EAEA,GAAI,CAACC,GAAY,CAACA,EAAS,KACnB,MAAA,CACN,UAAW,CAAC,EACZ,WAAY,CACX,YAAa,EACb,WAAY,EACZ,WAAY,EACZ,aAAc,EAAA,CAEhB,EAIQ,MAAMG,EAAsC,MAAM,QAAQH,EAAS,IAAI,EACjEA,EAAS,KAAK,IAAKI,GAAkB,KAAK,mBAAmBA,CAAQ,CAAC,EACtE,CAAC,EAGVC,EAAaL,EAAS,YAAc,CACzC,YAAa,EACb,WAAY,EACZ,WAAYG,EAAc,OAC1B,aAAc,EACf,EAEO,MAAA,CACN,UAAWA,EACX,WAAY,CACX,YAAa,OAAOE,EAAW,WAAW,GAAK,EAC/C,WAAY,OAAOA,EAAW,UAAU,GAAK,EAC7C,WAAY,OAAOA,EAAW,UAAU,GAAKF,EAAc,OAC3D,aAAc,OAAOE,EAAW,YAAY,GAAK,EAAA,CAEnD,QACQC,EAAO,CACP,eAAA,MAAM,iDAAkDA,CAAK,EAC9D,CACN,UAAW,CAAC,EACZ,WAAY,CACX,YAAa,EACb,WAAY,EACZ,WAAY,EACZ,aAAc,EAAA,CAEhB,CAAA,CACD,CAMD,MAAM,kBAAkBC,EAAgD,CACnE,GAAA,CACK,QAAA,IAAI,sDAAsDA,CAAE,EAAE,EAGhE,MAAAP,EAAW,MAAMC,EAAU,IAChCC,EAAc,MAAM,aAAaK,CAAE,CACpC,EAEA,GAAI,CAACP,GAAY,CAACA,EAAS,KACpB,MAAA,IAAI,MAAM,6CAA6C,EAIvD,OAAA,KAAK,mBAAmBA,EAAS,IAAI,QACpCM,EAAO,CACP,eAAA,MACP,4DAA4DC,CAAE,IAC9DD,CACD,EACO,IAAA,CACR,CAMD,MAAM,mBACLE,EACgC,CAC5B,GAAA,CACK,QAAA,IACP,uDAAuDA,CAAc,EACtE,EAEM,MAAAR,EAAW,MAAMC,EAAU,IAChCC,EAAc,SAAS,QAAQM,CAAc,CAC9C,EAEA,MAAI,CAACR,GAAY,CAACA,EAAS,KACnB,CAAC,EAIM,MAAM,QAAQA,EAAS,IAAI,EACvCA,EAAS,KAAK,IAAI,CAACS,EAAWC,KAAmB,CACjD,GAAID,EAAK,IAAMC,EAAQ,EACvB,OAAQD,EAAK,QAAU,GACvB,SACC,OAAOA,EAAK,UAAa,SACtBA,EAAK,SAAS,SAAW,GACzBA,EAAK,UAAY,GACrB,UAAWA,EAAK,WAAa,GAC7B,YAAaA,EAAK,SAAWA,EAAK,aAAe,EAClD,EAAE,EACD,CAAC,QAGIH,EAAO,CACP,eAAA,MACP,6DAA6DE,CAAc,IAC3EF,CACD,EACO,CAAC,CAAA,CACT,CAMD,MAAM,qBACLK,EACAC,EACmB,CACf,GAAA,CACK,QAAA,IACP,sDAAsDD,CAAO,MAAMC,CAAM,EAC1E,EAGM,MAAAZ,EAAW,MAAMC,EAAU,IAChCC,EAAc,MAAM,oBAAoBS,CAAO,EAC/C,CAAC,OAAAC,CAAM,CACR,EAEA,MAAO,CAAC,EACPZ,IACCA,EAAS,UAAY,IAAQA,EAAS,SAAW,kBAE3CM,EAAO,CACP,eAAA,MACP,6DAA6DK,CAAO,IACpEL,CACD,EACO,EAAA,CACR,CAMD,MAAM,sBACLK,EACAE,EACmB,CACf,GAAA,CACK,QAAA,IAAI,mDAAmDF,CAAO,EAAE,EAGlE,MAAAG,EAAa,KAAK,cAAcD,CAAa,EAG7Cb,EAAW,MAAMC,EAAU,IAChCC,EAAc,MAAM,oBAAoBS,CAAO,EAC/C,CAAC,OAAQG,CAAU,CACpB,EAEA,MAAO,CAAC,EACPd,IACCA,EAAS,UAAY,IAAQA,EAAS,SAAW,kBAE3CM,EAAO,CACP,eAAA,MACP,0DAA0DK,CAAO,IACjEL,CACD,EACO,EAAA,CACR,CAOD,MAAM,yBAAyBK,EAAmC,CAC7D,GAAA,CACK,eAAA,IACP,0DAA0DA,CAAO,EAClE,EAIO,SACCL,EAAO,CACP,eAAA,MACP,sDAAsDK,CAAO,IAC7DL,CACD,EACO,EAAA,CACR,CAMO,mBAAmBS,EAAgC,CAEpD,MAAAC,EAAeD,EAAM,eAAiB,CAAC,EAG7C,IAAIE,EAAiB,UACrB,OAAIF,EAAM,SAAW,WAAaA,EAAM,SAAW,aACjCE,EAAA,aACPF,EAAM,SAAW,YACVE,EAAA,YACPF,EAAM,SAAW,YACVE,EAAA,YACPF,EAAM,SAAW,cACVE,EAAA,aAIX,CACN,GAAIF,EAAM,IAAM,EAChB,eAAgBC,EAAa,iBAAmB,OAAOD,EAAM,IAAM,CAAC,GACpE,QAASA,EAAM,IAAM,EACrB,YAAaA,EAAM,cAAgB,OAAOA,EAAM,IAAM,CAAC,GACvD,OAAQA,EAAM,SAAW,EACzB,aAAcA,EAAM,WAAa,UACjC,OAAQE,EACR,QAASD,EAAa,kBAAoB,4BAC1C,sBAAuBA,EAAa,mBACpC,YAAaD,EAAM,SAAW,UAAYA,EAAM,WAAa,OAC7D,cACCA,EAAM,SAAW,YAAcA,EAAM,WAAa,OACnD,QAAS,CACR,OAAQC,EAAa,SAAW,GAChC,KAAMA,EAAa,MAAQ,GAC3B,MAAOA,EAAa,OAAS,GAC7B,QAASA,EAAa,SAAW,GACjC,WAAYA,EAAa,aAAe,GACxC,MAAOA,EAAa,OAAS,EAC9B,EACA,OAAQA,EAAa,QAAU,EAC/B,WAAYA,EAAa,YAAc,GACvC,gBAAiB,CAAC,EAClB,UAAWD,EAAM,YAAkB,IAAA,KAAA,EAAO,YAAY,EACtD,UAAWA,EAAM,YAAkB,IAAA,OAAO,YAAY,CACvD,CAAA,CAMO,cAAcF,EAA+B,CAS7C,MARoC,CAC1C,QAAS,aACT,WAAY,UACZ,QAAS,aACT,WAAY,YACZ,UAAW,WACZ,EAEkBA,CAAa,GAAK,YAAA,CAE7B,mBAAmBT,EAAmC,CACtD,MAAA,CACN,GAAIA,EAAS,IAAM,EACnB,eAAgBA,EAAS,iBAAmB,GAC5C,QAASA,EAAS,UAAY,EAC9B,YACCA,EAAS,OAAO,cAAgB,OAAOA,EAAS,UAAY,CAAC,GAC9D,OAAQA,EAAS,SAAW,EAC5B,aAAcA,EAAS,WAAa,UACpC,OAAQA,EAAS,QAAU,UAC3B,QAASA,EAAS,cAAgB,4BAClC,sBAAuBA,EAAS,mBAChC,YAAaA,EAAS,aACtB,cAAeA,EAAS,aACxB,QAAS,KAAK,2BAA2BA,CAAQ,EACjD,OAAQA,EAAS,QAAU,EAC3B,WAAYA,EAAS,YAAc,GACnC,gBAAiBA,EAAS,SAAW,CAAC,EACtC,UAAWA,EAAS,YAAkB,IAAA,KAAA,EAAO,YAAY,EACzD,UAAWA,EAAS,YAAkB,IAAA,OAAO,YAAY,CAC1D,CAAA,CAEO,2BAA2BA,EAAoB,CACtD,MAAMc,EAAU,CACf,OAAQ,GACR,KAAM,GACN,MAAO,GACP,QAAS,GACT,WAAY,GACZ,MAAO,EACR,EAGA,GAAId,EAAS,iBAAkB,CACxB,MAAAe,EACL,OAAOf,EAAS,kBAAqB,SAClC,KAAK,MAAMA,EAAS,gBAAgB,EACpCA,EAAS,iBAETe,EAAS,UACZD,EAAQ,OAASC,EAAS,QAC3B,CAID,GAAIf,EAAS,OAASA,EAAS,MAAM,cAAe,CACnD,MAAMY,EACL,OAAOZ,EAAS,MAAM,eAAkB,SACrC,KAAK,MAAMA,EAAS,MAAM,aAAa,EACvCA,EAAS,MAAM,cAEfY,IACKE,EAAA,KAAOF,EAAa,MAAQ,GAC5BE,EAAA,MAAQF,EAAa,OAAS,GAC9BE,EAAA,QAAUF,EAAa,SAAW,GAClCE,EAAA,WAAaF,EAAa,aAAe,GACzCE,EAAA,MAAQF,EAAa,OAAS,GACvC,CAGM,OAAAE,CAAA,CAET,CCpWA,MAAME,GAAmB,IAAM,CAG9B,MAAMC,EADaC,EAAAA,OAAO,IAAIxB,EAAsB,EACZ,QAGlC,CAACyB,EAAgBC,CAAiB,EAAIC,EAAA,SAC3C,CAAA,CACD,EACM,CAACC,EAAuBC,CAAwB,EACrDF,EAAAA,SAAoC,IAAI,EACnC,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAkB,EAAK,EAC/C,CAACnB,EAAOwB,CAAQ,EAAIL,EAAAA,SAAwB,IAAI,EAChD,CAACM,EAAmBC,CAAoB,EAAIP,EAAAA,SAAkB,EAAK,EAGnE,CAACQ,EAAcC,CAAe,EAAIT,EAAAA,SAAiB,KAAK,EACxD,CAACU,EAAeC,CAAgB,EAAIX,EAAAA,SAAiB,KAAK,EAC1D,CAACY,EAAiBC,CAAkB,EAAIb,EAAA,SAG3C,CAAC,KAAM,GAAI,GAAI,GAAG,EACf,CAACc,EAAYC,CAAa,EAAIf,EAAAA,SAAiB,EAAE,EAGjD,CAACpB,EAAYoC,CAAa,EAAIhB,WAAS,CAC5C,YAAa,EACb,WAAY,EACZ,WAAY,EACZ,aAAc,EAAA,CACd,EAGQiB,EAAqBpB,SAAO,EAAK,EACjCqB,EAAerB,SAAO,EAAK,EAK9BsB,EAAsBC,EAAAA,YAAY,SAAY,CAEnD,GAAI,CAAAF,EAAa,QAEX,CAAAd,EAAW,EAAI,EACfc,EAAa,QAAU,GAC7Bb,EAAS,IAAI,EAET,GAAA,CAEH,MAAM/B,EAA2B,CAChC,KAAMM,EAAW,YACjB,MAAOA,EAAW,YACnB,EAGI4B,IAAiB,QAAOlC,EAAQ,OAASkC,GACzCE,IAAkB,QAAOpC,EAAQ,QAAUoC,GAC3CE,EAAgB,OAActC,EAAA,SAAWsC,EAAgB,MACzDA,EAAgB,KAAYtC,EAAA,OAASsC,EAAgB,IACrDE,MAAoB,OAASA,GAGjC,MAAMO,EAAS,MAAMzB,EAAqB,aAAatB,CAAO,EAG9DyB,EAAkBsB,EAAO,SAAS,EAClCL,EAAcK,EAAO,UAAU,QACvBC,EAAK,CACL,QAAA,MAAM,2BAA4BA,CAAG,EAC7CjB,EAASiB,aAAe,MAAQA,EAAI,QAAU,wBAAwB,CAAA,QACrE,CACQlB,EAAW,EAAK,EAChBc,EAAa,QAAU,EAAA,EACjC,EACE,CACFtB,EACAhB,EAAW,YACXA,EAAW,aACX4B,EACAE,EACAE,EAAgB,KAChBA,EAAgB,GAChBE,CAAA,CACA,EAKKS,EAA2BH,EAAA,YAChC,MAAOzC,GAAiC,CACvCyB,EAAW,EAAI,EAEX,GAAA,CAEH,GAAIzB,EAAS,iBAAmBA,EAAS,gBAAgB,OAAS,EAAG,CACpEuB,EAAyBvB,CAAQ,EACjC4B,EAAqB,EAAI,EACzBH,EAAW,EAAK,EAChB,MAAA,CAIK,MAAAoB,EAAU,MAAM5B,EAAqB,kBAC1CjB,EAAS,EACV,EAEA,GAAI6C,EAAS,CAEG,IAAIC,EAAiD,CAAC,EACjED,EAAQ,iBACXC,EAAU,MAAM7B,EAAqB,mBACpC4B,EAAQ,cACT,GAID,MAAME,EAAsB,CAC3B,GAAGF,EACH,gBAAiBC,CAClB,EAEAvB,EAAyBwB,CAAmB,CAAA,MAG5CxB,EAAyBvB,CAAQ,EAGlC4B,EAAqB,EAAI,QACjBe,EAAK,CACL,QAAA,MACP,uCAAuC3C,EAAS,EAAE,IAClD2C,CACD,EACAjB,EACCiB,aAAe,MACZA,EAAI,QACJ,oCACJ,EAGApB,EAAyBvB,CAAQ,EACjC4B,EAAqB,EAAI,CAAA,QACxB,CACDH,EAAW,EAAK,CAAA,CAElB,EACA,CAACR,CAAoB,CACtB,EAKM+B,EAA4BP,EAAA,YACjC,MAAOlC,EAAiBC,IAAmB,CAC1CiB,EAAW,EAAI,EAEX,GAAA,CAMH,OALgB,MAAMR,EAAqB,qBAC1CV,EACAC,CACD,GAIC,MAAMgC,EAAoB,EACnB,IAGD,SACCG,EAAK,CACb,eAAQ,MAAM,wCAAwCpC,CAAO,IAAKoC,CAAG,EACrEjB,EACCiB,aAAe,MAAQA,EAAI,QAAU,4BACtC,EACO,EAAA,QACN,CACDlB,EAAW,EAAK,CAAA,CAElB,EACA,CAACR,EAAsBuB,CAAmB,CAC3C,EAKMS,EAA6BR,EAAA,YAClC,MAAOtC,EAAYM,IAA0B,CAC5CgB,EAAW,EAAI,EAEX,GAAA,CAMH,OALgB,MAAMR,EAAqB,sBAC1Cd,EACAM,CACD,GAIC,MAAM+B,EAAoB,EACnB,IAGD,SACCG,EAAK,CACb,eAAQ,MAAM,qCAAqCxC,CAAE,IAAKwC,CAAG,EAC7DjB,EACCiB,aAAe,MAAQA,EAAI,QAAU,yBACtC,EACO,EAAA,QACN,CACDlB,EAAW,EAAK,CAAA,CAElB,EACA,CAACR,EAAsBuB,CAAmB,CAC3C,EAKMU,EAAgCT,EAAA,YACrC,MAAOlC,GAAoB,CAC1BkB,EAAW,EAAI,EAEX,GAAA,CAIH,OAFC,MAAMR,EAAqB,yBAAyBV,CAAO,GAG3D,MAAM,oCAAoC,EACnC,IAGD,SACCoC,EAAK,CACb,eAAQ,MAAM,qCAAqCpC,CAAO,IAAKoC,CAAG,EAClEjB,EACCiB,aAAe,MAAQA,EAAI,QAAU,8BACtC,EACO,EAAA,QACN,CACDlB,EAAW,EAAK,CAAA,CAElB,EACA,CAACR,CAAoB,CACtB,EAKMkC,EAAwBV,cAAaW,GAAiB,CAC3Df,EAAegB,IAAU,CAAC,GAAGA,EAAM,YAAaD,GAAM,CACvD,EAAG,EAAE,EAKCE,EAAmBb,EAAAA,YAAY,IAAM,CACtBD,EAAA,CAAA,EAClB,CAACA,CAAmB,CAAC,EAGxBe,OAAAA,EAAAA,UAAU,IAAM,CAEX,GAAA,CAACjB,EAAmB,QAAS,OAE3B,MAAAkB,EAAQ,WAAW,IAAM,CACVhB,EAAA,GAClB,GAAG,EAGC,MAAA,IAAM,aAAagB,CAAK,CAAA,EAC7B,CACFhB,EACAvC,EAAW,YACX4B,EACAE,CAAA,CACA,EAGDwB,EAAAA,UAAU,IAAM,CACVjB,EAAmB,UACHE,EAAA,EACpBF,EAAmB,QAAU,GAC9B,EACE,CAACE,CAAmB,CAAC,EAEjB,CACN,eAAArB,EACA,sBAAAG,EACA,QAAAE,EACA,MAAAtB,EACA,kBAAAyB,EACA,aAAAE,EACA,cAAAE,EACA,gBAAAE,EACA,WAAAE,EACA,WAAAlC,EACA,gBAAA6B,EACA,iBAAAE,EACA,mBAAAE,EACA,cAAAE,EACA,qBAAAR,EACA,oBAAAY,EACA,yBAAAI,EACA,0BAAAI,EACA,2BAAAC,EACA,8BAAAC,EACA,sBAAAC,EACA,iBAAAG,CACD,CACD,ECrSMG,EAOF,CACH,QAAS,CACR,MAAO,YACP,MACC,gCACD,KAAMC,EAAAA,IAACC,EAAM,CAAA,UAAU,cAAe,CAAA,CACvC,EACA,WAAY,CACX,MAAO,iBACP,MAAO,4BACP,KAAMD,EAAAA,IAACE,EAAQ,CAAA,UAAU,cAAe,CAAA,CACzC,EACA,cAAe,CACd,MAAO,oBACP,MACC,gCACD,KAAMF,EAAAA,IAACE,EAAQ,CAAA,UAAU,cAAe,CAAA,CACzC,EACA,QAAS,CACR,MAAO,UACP,MACC,gCACD,KAAMF,EAAAA,IAACG,EAAM,CAAA,UAAU,cAAe,CAAA,CACvC,EACA,WAAY,CACX,MAAO,cACP,MACC,gCACD,KAAMH,EAAAA,IAACG,EAAM,CAAA,UAAU,cAAe,CAAA,CACvC,EACA,iBAAkB,CACjB,MAAO,aACP,MAAO,8BACP,KAAMH,EAAAA,IAACG,EAAM,CAAA,UAAU,cAAe,CAAA,CACvC,EACA,UAAW,CACV,MAAO,YACP,MACC,kCACD,KAAMH,EAAAA,IAACI,EAAY,CAAA,UAAU,cAAe,CAAA,CAC7C,EACA,gBAAiB,CAChB,MAAO,kBACP,MAAO,0BACP,KAAMJ,EAAAA,IAACK,EAAc,CAAA,UAAU,cAAe,CAAA,CAC/C,EACA,SAAU,CACT,MAAO,WACP,MACC,gCACD,KAAML,EAAAA,IAACM,EAAW,CAAA,UAAU,mCAAoC,CAAA,CACjE,EACA,UAAW,CACV,MAAO,YACP,MAAO,4BACP,KAAMN,EAAAA,IAACO,EAAQ,CAAA,UAAU,cAAe,CAAA,CAAA,CAE1C,EAGMC,GAAW,CACf,CAAC,GAAI,MAAO,KAAM,KAAK,EACvB,CAAC,GAAI,OAAQ,KAAM,MAAM,EACzB,CAAC,GAAI,kBAAmB,KAAM,iBAAiB,EAC/C,CAAC,GAAI,MAAO,KAAM,KAAK,EACvB,CAAC,GAAI,QAAS,KAAM,OAAO,EAC3B,CAAC,GAAI,MAAO,KAAM,KAAK,EACvB,CAAC,GAAI,MAAO,KAAM,KAAK,CACzB,EAEMC,GAA8B,IAAM,CAClC,KAAA,CACJ,eAAAhD,EACA,sBAAAG,EACA,QAAAE,EACA,MAAAtB,EACA,kBAAAyB,EACA,aAAAE,EACA,cAAAE,EACA,gBAAAE,EACA,WAAAhC,EACA,gBAAA6B,EACA,iBAAAE,EACA,mBAAAE,EACA,qBAAAN,EACA,yBAAAgB,EACA,2BAAAK,EACA,8BAAAC,EACA,sBAAAC,EACA,iBAAAG,GACEtC,GAAiB,EAGfoD,EAAcC,GAAmC,CACjD,GAAA,CAACA,EAAmB,MAAA,MAElB,MAAAC,EAAO,IAAI,KAAKD,CAAU,EACzB,OAAA,IAAI,KAAK,eAAe,QAAS,CACtC,IAAK,UACL,MAAO,UACP,KAAM,UACN,KAAM,UACN,OAAQ,SAAA,CACT,EAAE,OAAOC,CAAI,CAChB,EAGMC,EAAqBvE,GAAkB,CAC3C4C,EAAyB5C,CAAQ,CACnC,EAGMwE,EAAqB,IAAM,CAC/B5C,EAAqB,EAAK,CAC5B,EAGM6C,EAAiBhE,IACsB,CACzC,QAAS,aACT,WAAY,gBACZ,cAAe,UACf,QAAS,aACT,WAAY,mBACZ,iBAAkB,YAClB,UAAW,YACX,gBAAiB,mBACjB,SAAU,WACV,UAAW,WACb,GAEkBA,CAAa,GAAKA,EAIhCiE,EAAU,CACd,CACE,IAAK,WACL,OAAQ,cACR,SAAU,GACV,OAAS1E,GACN2E,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAjB,EAAAA,IAAC,OAAI,UAAU,oFACb,eAACG,EAAM,CAAA,UAAU,0BAA0B,CAC7C,CAAA,EACAc,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAjB,EAAA,IAAC,MAAI,CAAA,UAAU,oCACZ,SAAA1D,EAAS,eACZ,EACA2E,EAAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAACjB,EAAAA,IAAAkB,GAAA,CAAS,UAAU,cAAe,CAAA,EAClCR,EAAWpE,EAAS,SAAS,CAAA,CAChC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAEJ,EACA,CACE,IAAK,QACL,OAAQ,SACR,SAAU,GACV,OAASA,GACN2E,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACjB,EAAAA,IAAAmB,EAAA,CAAY,UAAU,4BAA6B,CAAA,EACpDnB,EAAA,IAACoB,EAAA,CACC,GAAI,iBAAiB9E,EAAS,OAAO,GACrC,UAAU,0CAET,SAASA,EAAA,WAAA,CAAA,CACZ,CACF,CAAA,CAEJ,EACA,CACE,IAAK,WACL,OAAQ,UACR,SAAU,GACV,OAASA,GACN2E,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAjB,EAAAA,IAAC,OAAI,UAAU,kFACb,eAACqB,GAAK,CAAA,UAAU,wBAAwB,CAC1C,CAAA,EACAJ,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAjB,EAAA,IAAC,MAAI,CAAA,UAAU,oCACZ,SAAA1D,EAAS,aACZ,EACA2E,EAAAA,KAAC,MAAI,CAAA,UAAU,wBAAwB,SAAA,CAAA,OAChC3E,EAAS,MAAA,CAChB,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAEJ,EACA,CACE,IAAK,UACL,OAAQ,YACR,OAASA,GACN2E,EAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACjB,EAAAA,IAAAsB,EAAA,CAAO,UAAU,iDAAkD,CAAA,EACpEL,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACjB,EAAA,IAAA,MAAA,CAAK,SAAS1D,EAAA,QAAQ,OAAO,SAC7B,MACE,CAAA,SAAA,CAAAA,EAAS,QAAQ,KAAK,KAAGA,EAAS,QAAQ,KAAA,EAC7C,SACC,MACE,CAAA,SAAA,CAAAA,EAAS,QAAQ,WAAW,KAAGA,EAAS,QAAQ,OAAA,CACnD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAEJ,EACA,CACE,IAAK,UACL,OAAQ,gBACR,SAAU,GACV,OAASA,GACP0D,EAAAA,IAAC,OAAI,UAAU,sBAAuB,WAAS,OAAQ,CAAA,CAE3D,EACA,CACE,IAAK,SACL,OAAQ,SACR,SAAU,GACV,OAAS1D,GAAkB,CACzB,MAAMQ,EAASiD,EAAkBzD,EAAS,MAAM,GAAK,CACnD,MAAOA,EAAS,OAChB,MACE,4BACF,KAAM0D,EAAAA,IAACK,EAAc,CAAA,UAAU,cAAe,CAAA,CAChD,EAGE,OAAAY,EAAA,KAAC,OAAA,CACC,UAAW,2EAA2EnE,EAAO,KAAK,GAEjG,SAAA,CAAOA,EAAA,KACPA,EAAO,KAAA,CAAA,CACV,CAAA,CAGN,EACA,CACE,IAAK,QACL,OAAQ,eACR,OAASR,GACN2E,EAAA,KAAA,MAAA,CAAI,UAAU,wBACZ,SAAA,CAAA3E,EAAS,aACR2E,OAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACjB,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAM,SAAA,EAAQ,IAC3CU,EAAWpE,EAAS,WAAW,CAAA,EAClC,EAEDA,EAAS,uBACP2E,OAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACjB,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAa,gBAAA,EAAQ,IAClDU,EAAWpE,EAAS,qBAAqB,CAAA,EAC5C,EAEDA,EAAS,eACR2E,EAAAA,KAAC,MACC,CAAA,SAAA,CAACjB,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAU,aAAA,EAAQ,IAC/CU,EAAWpE,EAAS,aAAa,CAAA,CACpC,CAAA,CAAA,CAEJ,CAAA,CAEJ,EACA,CACE,IAAK,UACL,OAAQ,WACR,OAASA,GAAkB,CACzB,MAAMiF,EAAa,CACjB,UACA,aACA,gBACA,UACA,aACA,mBACA,iBAAA,EACA,SAASjF,EAAS,MAAM,EAGxB,OAAA2E,EAAA,KAAC,MAAI,CAAA,UAAU,6BAEb,SAAA,CAAAjB,EAAA,IAAC,SAAA,CACC,QAAS,IAAMa,EAAkBvE,CAAQ,EACzC,UAAU,iDACV,MAAM,kBAEN,SAAA0D,EAAAA,IAACwB,GAAI,CAAA,KAAM,EAAI,CAAA,CAAA,CACjB,EAGAxB,EAAA,IAACoB,EAAA,CACC,GAAI,iBAAiB9E,EAAS,OAAO,GACrC,UAAU,qDACV,MAAM,aAEN,SAAA0D,EAAAA,IAACmB,EAAY,CAAA,KAAM,EAAI,CAAA,CAAA,CACzB,EAGAnB,EAAA,IAAC,SAAA,CACC,QAAS,IAAMR,EAA8BlD,EAAS,EAAE,EACxD,UAAU,qDACV,MAAM,sBAEN,SAAA0D,EAAAA,IAACyB,EAAO,CAAA,KAAM,EAAI,CAAA,CAAA,CACpB,EAGCF,GACCvB,EAAA,IAAC,SAAA,CACC,QAAS,IACPT,EAA2BjD,EAAS,GAAIA,EAAS,MAAM,EAEzD,UAAU,mDACV,MAAO,aAAayD,EAAkBgB,EAAczE,EAAS,MAAM,CAAC,GAAG,OAAS,kBAAkB,GAElG,SAAA0D,EAAAA,IAACM,EAAW,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACxB,EAEJ,CAAA,CAEJ,CAEJ,EAGE,OAAAW,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACjB,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAEjD,oBAAA,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,iBACb,SAAAiB,EAAA,KAAC,SAAA,CACC,QAASrB,EACT,UAAU,wFAEV,SAAA,CAAAI,EAAA,IAAC0B,EAAU,CAAA,KAAM,GAAI,UAAU,cAAc,EAAE,YAAA,CAAA,CAAA,CAGnD,CAAA,CAAA,EACF,EAGClF,SACE,MAAI,CAAA,UAAU,kEACb,SAACwD,EAAA,IAAA,IAAA,CAAG,WAAM,CACZ,CAAA,QAID,MAAI,CAAA,UAAU,oCACb,SAACiB,EAAA,KAAA,MAAA,CAAI,UAAU,uDAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACjB,EAAA,IAAA,QAAA,CAAM,UAAU,wBAAwB,SAEzC,mBAAA,EACAiB,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACjB,EAAAA,IAAA2B,EAAA,CAAO,UAAU,4BAA6B,CAAA,EAC/CV,EAAA,KAAC,SAAA,CACC,UAAU,4GACV,MAAO9C,EACP,SAAWyD,GAAMxD,EAAgBwD,EAAE,OAAO,KAAK,EAE/C,SAAA,CAAC5B,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAiB,oBAAA,EACpC,OAAO,QAAQD,CAAiB,EAAE,IAAI,CAAC,CAAC8B,EAAK,CAAC,MAAAC,CAAK,CAAC,IAClD9B,EAAA,IAAA,SAAA,CAAiB,MAAO6B,EACtB,SAAAC,CAAA,EADUD,CAEb,CACD,CAAA,CAAA,CAAA,CACH,CACF,CAAA,CAAA,EACF,EAGAZ,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACjB,EAAA,IAAA,QAAA,CAAM,UAAU,wBAAwB,SAEzC,gBAAA,EACAiB,EAAA,KAAC,SAAA,CACC,UAAU,4GACV,MAAO5C,EACP,SAAWuD,GAAMtD,EAAiBsD,EAAE,OAAO,KAAK,EAEhD,SAAA,CAAC5B,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAwB,2BAAA,EAC3CQ,GAAS,IAAKuB,GACZ/B,EAAAA,IAAA,SAAA,CAAwB,MAAO+B,EAAQ,GACrC,SAAAA,EAAQ,IADE,EAAAA,EAAQ,EAErB,CACD,CAAA,CAAA,CAAA,CACH,EACF,EAGAd,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACjB,EAAA,IAAA,QAAA,CAAM,UAAU,wBAAwB,SAEzC,kBAAA,EACAiB,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAjB,EAAA,IAAC,QAAA,CACC,KAAK,OACL,UAAU,qGACV,MAAOzB,EAAgB,KACvB,SAAWqD,GACTpD,EAAoBmB,IAAU,CAC5B,GAAGA,EACH,KAAMiC,EAAE,OAAO,KAAA,EACf,EAEJ,YAAY,OAAA,CACd,EACA5B,EAAA,IAAC,QAAA,CACC,KAAK,OACL,UAAU,qGACV,MAAOzB,EAAgB,GACvB,SAAWqD,GACTpD,EAAoBmB,IAAU,CAAC,GAAGA,EAAM,GAAIiC,EAAE,OAAO,KAAO,EAAA,EAE9D,YAAY,OAAA,CAAA,CACd,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGA5B,EAAA,IAACgC,GAAA,CACC,KAAMvE,EACN,QAAAuD,EACA,aAAc,CAAC,iBAAkB,cAAe,cAAc,EAC9D,QAAAlD,EACA,aAAa,2BACb,WAAY,CACV,YAAavB,EAAW,YACxB,WAAYA,EAAW,WACvB,WAAYA,EAAW,WACvB,aAAcA,EAAW,aACzB,aAAckD,CAAA,CAChB,CACF,EAGCxB,GAAqBL,GACnBoC,EAAAA,IAAA,MAAA,CAAI,UAAU,iFACb,SAACA,MAAA,MAAA,CAAI,UAAU,8EACb,SAACiB,EAAA,KAAA,MAAA,CAAI,UAAU,MACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,kCAAkC,SAAA,CAAA,yBACvBrD,EAAsB,cAAA,EAC/C,EACAoC,EAAA,IAAC,SAAA,CACC,QAASc,EACT,UAAU,oCAEV,SAAAd,EAAAA,IAACO,EAAQ,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACrB,EACF,EAGE3C,EAA8B,YAC7BoC,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAACA,MAAA,MAAA,CAAI,UAAU,4BACb,SAACiB,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACjB,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAgB,mBAAA,QACjE,IAAE,CAAA,UAAU,kCACV,SAAgBiC,EAAArE,EAA8B,UAAU,CAC3D,CAAA,CAAA,EACF,EACAqD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,wBACT,SAAA,CAAArD,EAA8B,WAAa,EAAE,cAAA,EACjD,EACAoC,EAAA,IAACoB,EAAA,CACC,GAAI,iBAAiBxD,EAAsB,OAAO,GAClD,UAAU,sDACX,SAAA,qBAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAGFqD,EAAAA,KAAC,MAAI,CAAA,UAAU,6CAEb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACjB,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAEvD,wBAAA,QACC,MAAI,CAAA,UAAU,4BACb,SAACiB,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACjB,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,SAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,oCACV,WAAsB,WACzB,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,gBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,oCACV,WAAsB,OACzB,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,SAAA,EACAiB,EAAA,KAAC,OAAA,CACC,UAAW,2EAA2ElB,EAAkBnC,EAAsB,MAAM,GAAG,KAAK,GAE3I,SAAA,CAAkBmC,EAAAnC,EAAsB,MAAM,GAAG,KACjDmC,EAAkBnC,EAAsB,MAAM,GAAG,OAChDA,EAAsB,MAAA,CAAA,CAAA,CAC1B,EACF,SACC,MACC,CAAA,SAAA,CAACoC,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,oBAAA,QACC,IAAE,CAAA,UAAU,oCACV,SAAWU,EAAA9C,EAAsB,SAAS,CAC7C,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACoC,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,OAAA,EACAiB,EAAAA,KAAC,IAAE,CAAA,UAAU,oCACV,SAAA,CAAArD,EAAsB,QAAU,MAAM,KAAA,CACzC,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACoC,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,cAAA,QACC,IAAE,CAAA,UAAU,oCACV,SAAApC,EAAsB,YAAc,KACvC,CAAA,CAAA,EACF,EACEA,EAA8B,cAC9BqD,EAAAA,KAAC,MACC,CAAA,SAAA,CAACjB,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,iBAAA,QACC,IAAE,CAAA,UAAU,oCACV,SAAgBiC,EAAArE,EAA8B,YAAY,CAC7D,CAAA,CAAA,EACF,EAEDA,EAAsB,uBACrBqD,EAAAA,KAAC,MACC,CAAA,SAAA,CAACjB,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,mBAAA,QACC,IAAE,CAAA,UAAU,oCACV,SAAWU,EAAA9C,EAAsB,qBAAqB,CACzD,CAAA,CAAA,EACF,EAEDA,EAAsB,eACrBqD,EAAAA,KAAC,MACC,CAAA,SAAA,CAACjB,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,mBAAA,QACC,IAAE,CAAA,UAAU,oCACV,SAAWU,EAAA9C,EAAsB,aAAa,CACjD,CAAA,CAAA,EACF,EAEAA,EAA8B,OAC7BqD,OAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAACjB,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,mBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,wBACT,WAA8B,KAClC,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAEvD,uBAAA,EACAiB,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAjB,EAAA,IAAC,IAAE,CAAA,UAAU,yCACV,SAAApC,EAAsB,aACzB,QACC,IAAE,CAAA,UAAU,6BACV,SAAAA,EAAsB,QAAQ,OACjC,EACAqD,EAAAA,KAAC,IAAE,CAAA,UAAU,6BACV,SAAA,CAAArD,EAAsB,QAAQ,KAAK,IAAE,IACrCA,EAAsB,QAAQ,KAAA,EACjC,EACAqD,EAAAA,KAAC,IAAE,CAAA,UAAU,6BACV,SAAA,CAAArD,EAAsB,QAAQ,WAAW,IAAE,IAC3CA,EAAsB,QAAQ,OAAA,EACjC,EACCA,EAAsB,QAAQ,OAC5BqD,EAAA,KAAA,IAAA,CAAE,UAAU,wBAAwB,SAAA,CAAA,aACxBrD,EAAsB,QAAQ,KAAA,EAC3C,EAEAA,EAAsB,QAAgB,OACrCqD,EAAA,KAAA,IAAA,CAAE,UAAU,wBAAwB,SAAA,CAAA,UAC1BrD,EAAsB,QAAgB,KAAA,EACjD,EAEAA,EAA8B,eAC7BqD,OAAA,IAAA,CAAE,UAAU,wBAAwB,SAAA,CAAA,UAC1BrD,EAA8B,aAAA,CACzC,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAACoC,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAEvD,2BAAA,EACAiB,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACjB,EAAAA,IAAA,MAAA,CAAI,UAAU,kDAAmD,CAAA,EAClEA,MAAC,MAAG,UAAU,YACX,WAAsB,iBAAmBpC,EAAsB,gBAAgB,OAAS,EACvF,CAAC,GAAGA,EAAsB,eAAe,EACtC,QAAA,EACA,IAAI,CAACsE,EAAOtF,IAAU,CACrB,MAAMuF,EAAWvF,IAAU,EAEzB,OAAAqE,EAAA,KAAC,KAA2B,CAAA,UAAU,iBACpC,SAAA,CAAAjB,MAAC,OAAI,UAAW,+DACdmC,EAAW,eAAiB,gBAC9B,GAAI,SACH,MAAI,CAAA,UAAW,kBACdA,EAAW,sCAAwC,YACrD,GACE,SAAA,CAAClB,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,KAAE,UAAW,uBACZkB,EAAW,iBAAmB,eAChC,GAEI,SAAA,EAAMD,EAAA,SAAW,WAAaA,EAAM,SAAW,eAC9ClC,EAAAA,IAAAG,EAAA,CAAM,UAAU,mCAAoC,CAAA,EAEtD+B,EAAM,SAAW,aACflC,EAAAA,IAAAI,EAAA,CAAY,UAAU,qCAAqC,EAE7D8B,EAAM,SAAW,mBACflC,EAAAA,IAAAK,EAAA,CAAc,UAAU,mCAAmC,EAE7D6B,EAAM,SAAW,WACflC,EAAAA,IAAAC,EAAA,CAAM,UAAU,sCAAsC,EAExDiC,EAAM,SAAW,cACflC,EAAAA,IAAAE,EAAA,CAAQ,UAAU,oCAAoC,EAExDgC,EAAM,aAAenC,EAAkBmC,EAAM,MAAM,GAAG,OAASA,EAAM,MAAA,EACxE,EACAjB,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACjB,EAAAA,IAAA,IAAA,CAAE,UAAU,wBACV,SAAAU,EAAWwB,EAAM,WAAcA,EAAc,SAAS,CACzD,CAAA,EACCC,GACCnC,EAAA,IAAC,OAAK,CAAA,UAAU,uGAAuG,SAEvH,sBAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EACCkC,EAAM,UACJjB,OAAA,IAAA,CAAE,UAAU,0CACX,SAAA,CAACjB,EAAAA,IAAAsB,EAAA,CAAO,UAAU,4BAA6B,CAAA,EAAE,cACrCY,EAAM,QAAA,EACpB,EAEAA,EAAc,OACbjB,OAAA,IAAA,CAAE,UAAU,oCAAoC,SAAA,CAAA,SACvCiB,EAAc,KAAA,CACxB,CAAA,CAAA,CAEJ,CAAA,CAAA,GAnDOA,EAAM,IAAMtF,CAoDrB,CAAA,CAEH,EAEFqE,EAAA,KAAA,KAAA,CAAG,UAAU,mBACZ,SAAA,CAAAjB,EAAAA,IAAC,OAAI,UAAU,qBACb,eAACE,EAAQ,CAAA,UAAU,oBAAoB,CACzC,CAAA,EACCF,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,kDAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,mEAAA,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGAiB,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBAEZ,SAAA,CAAA,CACC,UACA,aACA,gBACA,UACA,aACA,mBACA,iBACA,EAAA,SAASrD,EAAsB,MAAM,GACrCqD,EAAA,KAAC,SAAA,CACC,QAAS,IACP1B,EACE3B,EAAsB,GACtBA,EAAsB,MACxB,EAEF,UAAU,oFAEV,SAAA,CAAAoC,EAAA,IAACM,EAAW,CAAA,KAAM,GAAI,UAAU,cAAc,EAAE,aACrCP,EAAkBgB,EAAcnD,EAAsB,MAAM,CAAC,GAAG,KAAA,CAAA,CAC7E,EAEFqD,EAAA,KAACG,EAAA,CACC,GAAI,iBAAiBxD,EAAsB,OAAO,GAClD,UAAU,sFAEV,SAAA,CAAAoC,EAAA,IAACmB,EAAY,CAAA,KAAM,GAAI,UAAU,cAAc,EAAE,qBAAA,CAAA,CAAA,CAEnD,EACF,EACAF,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,QAAS,IACPzB,EAA8B5B,EAAsB,EAAE,EAExD,UAAU,sFAEV,SAAA,CAAAoC,EAAA,IAACyB,EAAO,CAAA,KAAM,GAAI,UAAU,cAAc,EAAE,mBAAA,CAAA,CAE9C,EACAzB,EAAA,IAAC,SAAA,CACC,QAASc,EACT,UAAU,qFACX,SAAA,QAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAAA,EAEJ,CAEJ"}