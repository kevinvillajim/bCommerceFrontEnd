{"version":3,"file":"AdminOrdersPage-Bac6Qzn1.js","sources":["../../src/presentation/pages/admin/AdminOrdersPage.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Table from \"../../components/dashboard/Table\";\r\nimport {\r\n\tShoppingBag,\r\n\tUser,\r\n\tCalendar,\r\n\tTruck,\r\n\tFileText,\r\n\tEye,\r\n\tRefreshCw,\r\n\tFilter,\r\n\tClock,\r\n\tCheckCircle,\r\n\tXCircle,\r\n\tRotateCcw,\r\n\tPackage,\r\n\tAlertTriangle,\r\n} from \"lucide-react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport type {\r\n\tAdminOrderUI,\r\n} from \"../../../core/adapters/AdminOrderServiceAdapter\";\r\nimport AdminOrderServiceAdapter from \"../../../core/adapters/AdminOrderServiceAdapter\";\r\n\r\n// Estado para filtros\r\ninterface OrderFilters {\r\n\tstatus: string;\r\n\tpaymentStatus: string;\r\n\tsellerId: number | null;\r\n\tdateFrom?: string;\r\n\tdateTo?: string;\r\n\tsearch?: string;\r\n}\r\n\r\nconst AdminOrdersPage: React.FC = () => {\r\n\tconst [orders, setOrders] = useState<AdminOrderUI[]>([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [filters, setFilters] = useState<OrderFilters>({\r\n\t\tstatus: \"all\",\r\n\t\tpaymentStatus: \"all\",\r\n\t\tsellerId: null,\r\n\t});\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tcurrentPage: 1,\r\n\t\ttotalPages: 1,\r\n\t\ttotalItems: 0,\r\n\t\titemsPerPage: 10,\r\n\t});\r\n\r\n\t// Crear instancia del adaptador\r\n\tconst orderAdapter = new AdminOrderServiceAdapter();\r\n\r\n\t// Cargar datos de pedidos\r\n\tuseEffect(() => {\r\n\t\tfetchOrders();\r\n\t}, [filters, pagination.currentPage]);\r\n\r\n\t// Función para obtener órdenes\r\n\tconst fetchOrders = async () => {\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\t// Preparar filtros para la API\r\n\t\t\tconst apiFilters = {\r\n\t\t\t\tstatus: filters.status !== \"all\" ? filters.status : undefined,\r\n\t\t\t\tpaymentStatus:\r\n\t\t\t\t\tfilters.paymentStatus !== \"all\" ? filters.paymentStatus : undefined,\r\n\t\t\t\tsellerId: filters.sellerId,\r\n\t\t\t\tdateFrom: filters.dateFrom,\r\n\t\t\t\tdateTo: filters.dateTo,\r\n\t\t\t\tsearch: filters.search,\r\n\t\t\t\tpage: pagination.currentPage,\r\n\t\t\t\tlimit: pagination.itemsPerPage,\r\n\t\t\t};\r\n\r\n\t\t\t// Llamar al servicio a través del adaptador\r\n\t\t\tconst result = await orderAdapter.getAdminOrders(apiFilters);\r\n\r\n\t\t\tsetOrders(result.orders);\r\n\t\t\tsetPagination({\r\n\t\t\t\tcurrentPage: result.pagination.currentPage,\r\n\t\t\t\ttotalPages: result.pagination.totalPages,\r\n\t\t\t\ttotalItems: result.pagination.totalItems,\r\n\t\t\t\titemsPerPage: result.pagination.itemsPerPage,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al cargar órdenes:\", error);\r\n\t\t\t// Mostrar mensaje de error o usar datos de fallback si es necesario\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// Mapeo de estado para los pedidos\r\n\tconst orderStatusMap: Record<\r\n\t\tstring,\r\n\t\t{label: string; color: string; icon: React.ReactNode}\r\n\t> = {\r\n\t\tpending: {\r\n\t\t\tlabel: \"Pendiente\",\r\n\t\t\tcolor:\r\n\t\t\t\t\"bg-yellow-100 text-yellow-800\",\r\n\t\t\ticon: <Clock className=\"w-3 h-3 mr-1\" />,\r\n\t\t},\r\n\t\tprocessing: {\r\n\t\t\tlabel: \"En proceso\",\r\n\t\t\tcolor: \"bg-blue-100 text-blue-800\",\r\n\t\t\ticon: <RefreshCw className=\"w-3 h-3 mr-1\" />,\r\n\t\t},\r\n\t\tpaid: {\r\n\t\t\tlabel: \"Pagado\",\r\n\t\t\tcolor: \"bg-teal-100 text-teal-800\",\r\n\t\t\ticon: <CheckCircle className=\"w-3 h-3 mr-1\" />,\r\n\t\t},\r\n\t\tshipped: {\r\n\t\t\tlabel: \"Enviado\",\r\n\t\t\tcolor:\r\n\t\t\t\t\"bg-indigo-100 text-indigo-800\",\r\n\t\t\ticon: <Truck className=\"w-3 h-3 mr-1\" />,\r\n\t\t},\r\n\t\tdelivered: {\r\n\t\t\tlabel: \"Entregado\",\r\n\t\t\tcolor:\r\n\t\t\t\t\"bg-purple-100 text-purple-800\",\r\n\t\t\ticon: <Package className=\"w-3 h-3 mr-1\" />,\r\n\t\t},\r\n\t\tcompleted: {\r\n\t\t\tlabel: \"Completado\",\r\n\t\t\tcolor:\r\n\t\t\t\t\"bg-emerald-100 text-emerald-800\",\r\n\t\t\ticon: <CheckCircle className=\"w-3 h-3 mr-1\" />,\r\n\t\t},\r\n\t\tcancelled: {\r\n\t\t\tlabel: \"Cancelado\",\r\n\t\t\tcolor: \"bg-red-100 text-red-800\",\r\n\t\t\ticon: <XCircle className=\"w-3 h-3 mr-1\" />,\r\n\t\t},\r\n\t\treturned: {\r\n\t\t\tlabel: \"Devuelto\",\r\n\t\t\tcolor:\r\n\t\t\t\t\"bg-orange-100 text-orange-800\",\r\n\t\t\ticon: <RotateCcw className=\"w-3 h-3 mr-1\" />,\r\n\t\t},\r\n\t\tready_for_pickup: {\r\n\t\t\tlabel: \"Listo para recoger\",\r\n\t\t\tcolor:\r\n\t\t\t\t\"bg-purple-100 text-purple-800\",\r\n\t\t\ticon: <ShoppingBag className=\"w-3 h-3 mr-1\" />,\r\n\t\t},\r\n\t};\r\n\r\n\t// Mapeo de estado de pago\r\n\tconst paymentStatusMap: Record<string, {label: string; color: string}> = {\r\n\t\tpaid: {\r\n\t\t\tlabel: \"Pagado\",\r\n\t\t\tcolor:\r\n\t\t\t\t\"bg-green-100 text-green-800\",\r\n\t\t},\r\n\t\tcompleted: {\r\n\t\t\tlabel: \"Completado\",\r\n\t\t\tcolor:\r\n\t\t\t\t\"bg-green-100 text-green-800\",\r\n\t\t},\r\n\t\tpending: {\r\n\t\t\tlabel: \"Pendiente\",\r\n\t\t\tcolor:\r\n\t\t\t\t\"bg-yellow-100 text-yellow-800\",\r\n\t\t},\r\n\t\trefunded: {\r\n\t\t\tlabel: \"Reembolsado\",\r\n\t\t\tcolor: \"bg-red-100 text-red-800\",\r\n\t\t},\r\n\t\tfailed: {\r\n\t\t\tlabel: \"Fallido\",\r\n\t\t\tcolor: \"bg-gray-100 text-gray-800\",\r\n\t\t},\r\n\t};\r\n\r\n\t// Mapeo de métodos de pago\r\n\tconst paymentMethodMap: Record<string, string> = {\r\n\t\tcredit_card: \"Tarjeta de crédito\",\r\n\t\tpaypal: \"PayPal\",\r\n\t\tbank_transfer: \"Transferencia bancaria\",\r\n\t\tcash_on_delivery: \"Contra reembolso\",\r\n\t};\r\n\r\n\t// Obtener siguiente estado del pedido\r\n\tconst getNextStatus = (currentStatus: string): string => {\r\n\t\tconst statusFlow: Record<string, string> = {\r\n\t\t\tpending: \"processing\",\r\n\t\t\tprocessing: \"shipped\",\r\n\t\t\tshipped: \"delivered\",\r\n\t\t\tdelivered: \"completed\",\r\n\t\t};\r\n\r\n\t\treturn statusFlow[currentStatus] || currentStatus;\r\n\t};\r\n\r\n\t// Actualizar estado del pedido\r\n\tconst updateOrderStatus = async (orderId: number, newStatus: string) => {\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst success = await orderAdapter.updateOrderStatus(\r\n\t\t\t\torderId,\r\n\t\t\t\tnewStatus as AdminOrderUI[\"status\"] // Cast explícito\r\n\t\t\t);\r\n\r\n\t\t\tif (success) {\r\n\t\t\t\tsetOrders((prevOrders) =>\r\n\t\t\t\t\tprevOrders.map((order) => {\r\n\t\t\t\t\t\tif (order.id === orderId) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...order,\r\n\t\t\t\t\t\t\t\tstatus: newStatus as AdminOrderUI[\"status\"], // Cast explícito\r\n\t\t\t\t\t\t\t\tupdatedAt: new Date().toISOString(),\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn order;\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\talert(\"Error al actualizar el estado de la orden\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al actualizar estado:\", error);\r\n\t\t\talert(\"Error al actualizar el estado de la orden\");\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// Avanzar al siguiente estado\r\n\tconst advanceOrderStatus = (orderId: number, currentStatus: string) => {\r\n\t\tconst nextStatus = getNextStatus(currentStatus);\r\n\t\tif (nextStatus !== currentStatus) {\r\n\t\t\tupdateOrderStatus(orderId, nextStatus);\r\n\t\t}\r\n\t};\r\n\r\n\t// Cancelar pedido\r\n\tconst cancelOrder = async (orderId: number) => {\r\n\t\tif (window.confirm(\"¿Estás seguro de que deseas cancelar este pedido?\")) {\r\n\t\t\tsetLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tconst success = await orderAdapter.cancelOrder(orderId);\r\n\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\t// Actualizar el estado localmente o recargar los datos\r\n\t\t\t\t\tsetOrders((prevOrders) =>\r\n\t\t\t\t\t\tprevOrders.map((order) => {\r\n\t\t\t\t\t\t\tif (order.id === orderId) {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...order,\r\n\t\t\t\t\t\t\t\t\tstatus: \"cancelled\",\r\n\t\t\t\t\t\t\t\t\tupdatedAt: new Date().toISOString(),\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn order;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Mostrar mensaje de error\r\n\t\t\t\t\talert(\"Error al cancelar la orden\");\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error al cancelar orden:\", error);\r\n\t\t\t\talert(\"Error al cancelar la orden\");\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Formatear moneda\r\n\tconst formatCurrency = (amount: number) => {\r\n\t\treturn new Intl.NumberFormat(\"es-ES\", {\r\n\t\t\tstyle: \"currency\",\r\n\t\t\tcurrency: \"EUR\",\r\n\t\t\tminimumFractionDigits: 2,\r\n\t\t}).format(amount);\r\n\t};\r\n\r\n\t// Formatear fecha\r\n\tconst formatDate = (dateString: string | undefined) => {\r\n\t\tif (!dateString) return \"N/A\";\r\n\r\n\t\tconst date = new Date(dateString);\r\n\t\treturn new Intl.DateTimeFormat(\"es-ES\", {\r\n\t\t\tday: \"2-digit\",\r\n\t\t\tmonth: \"2-digit\",\r\n\t\t\tyear: \"numeric\",\r\n\t\t\thour: \"2-digit\",\r\n\t\t\tminute: \"2-digit\",\r\n\t\t}).format(date);\r\n\t};\r\n\r\n\t// Manejar cambio de página\r\n\tconst handlePageChange = (page: number) => {\r\n\t\tsetPagination((prev) => ({...prev, currentPage: page}));\r\n\t};\r\n\r\n\t// Refrescar datos\r\n\tconst refreshData = () => {\r\n\t\tfetchOrders();\r\n\t};\r\n\r\n\t// Manejar cambios en filtros\r\n\tconst handleFilterChange = (\r\n\t\tfilterName: string,\r\n\t\tvalue: string | number | null\r\n\t) => {\r\n\t\tsetFilters((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\t[filterName]: value,\r\n\t\t}));\r\n\r\n\t\t// Resetear a la primera página al cambiar filtros\r\n\t\tsetPagination((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tcurrentPage: 1,\r\n\t\t}));\r\n\t};\r\n\r\n\t// Limpiar filtros\r\n\tconst clearFilters = () => {\r\n\t\tsetFilters({\r\n\t\t\tstatus: \"all\",\r\n\t\t\tpaymentStatus: \"all\",\r\n\t\t\tsellerId: null,\r\n\t\t\tdateFrom: undefined,\r\n\t\t\tdateTo: undefined,\r\n\t\t\tsearch: undefined,\r\n\t\t});\r\n\t};\r\n\r\n\t// Definir columnas de la tabla\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tkey: \"orderNumber\",\r\n\t\t\theader: \"Pedido\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (order: AdminOrderUI) => (\r\n\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t<div className=\"flex-shrink-0 h-10 w-10 rounded-lg bg-primary-100 flex items-center justify-center\">\r\n\t\t\t\t\t\t<ShoppingBag className=\"h-6 w-6 text-primary-600\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"ml-4\">\r\n\t\t\t\t\t\t<div className=\"text-sm font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t{order.orderNumber}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-xs text-gray-500 flex items-center\">\r\n\t\t\t\t\t\t\t<Calendar className=\"w-3 h-3 mr-1\" />\r\n\t\t\t\t\t\t\t{formatDate(order.date)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"customer\",\r\n\t\t\theader: \"Cliente\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (order: AdminOrderUI) => {\r\n\t\t\t\tconst customerName =\r\n\t\t\t\t\torder.customer.name || `Usuario ${order.customer.id}`;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t<div className=\"flex-shrink-0 h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center\">\r\n\t\t\t\t\t\t\t<User className=\"h-4 w-4 text-gray-500\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"ml-3\">\r\n\t\t\t\t\t\t\t<div className=\"text-sm font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t\t{customerName}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"text-xs text-gray-500\">\r\n\t\t\t\t\t\t\t\tID: {order.customer.id}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"items\",\r\n\t\t\theader: \"Productos\",\r\n\t\t\trender: (order: AdminOrderUI) => (\r\n\t\t\t\t<div className=\"text-sm\">\r\n\t\t\t\t\t<span className=\"font-medium\">{order.items.length}</span> producto(s)\r\n\t\t\t\t\t{order.items.length > 0 && (\r\n\t\t\t\t\t\t<div className=\"text-xs text-gray-500 mt-1\">\r\n\t\t\t\t\t\t\t{order.items.slice(0, 2).map((item) => (\r\n\t\t\t\t\t\t\t\t<div key={item.id}>\r\n\t\t\t\t\t\t\t\t\t{item.quantity}x {item.name || `Producto ${item.productId}`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t{order.items.length > 2 && (\r\n\t\t\t\t\t\t\t\t<div>+ {order.items.length - 2} más...</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"total\",\r\n\t\t\theader: \"Total\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (order: AdminOrderUI) => (\r\n\t\t\t\t<div className=\"font-medium text-gray-900\">\r\n\t\t\t\t\t{formatCurrency(order.total)}\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"status\",\r\n\t\t\theader: \"Estado\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (order: AdminOrderUI) => {\r\n\t\t\t\tconst status = orderStatusMap[order.status] || {\r\n\t\t\t\t\tlabel: order.status,\r\n\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\"bg-gray-100 text-gray-800\",\r\n\t\t\t\t\ticon: <AlertTriangle className=\"w-3 h-3 mr-1\" />,\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${status.color}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{status.icon}\r\n\t\t\t\t\t\t{status.label}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"payment\",\r\n\t\t\theader: \"Pago\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (order: AdminOrderUI) => {\r\n\t\t\t\tconst paymentMethod =\r\n\t\t\t\t\tpaymentMethodMap[order.paymentMethod || \"\"] || order.paymentMethod;\r\n\t\t\t\tconst paymentStatus = paymentStatusMap[\r\n\t\t\t\t\torder.paymentStatus || \"pending\"\r\n\t\t\t\t] || {\r\n\t\t\t\t\tlabel: order.paymentStatus,\r\n\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\"bg-gray-100 text-gray-800\",\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"text-sm text-gray-500\">\r\n\t\t\t\t\t\t\t{paymentMethod}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName={`inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium ${paymentStatus.color}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{paymentStatus.label}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"actions\",\r\n\t\t\theader: \"Acciones\",\r\n\t\t\trender: (order: AdminOrderUI) => {\r\n\t\t\t\tconst canAdvance = [\r\n\t\t\t\t\t\"pending\",\r\n\t\t\t\t\t\"processing\",\r\n\t\t\t\t\t\"shipped\",\r\n\t\t\t\t\t\"delivered\",\r\n\t\t\t\t].includes(order.status);\r\n\t\t\t\tconst canCancel = [\"pending\", \"processing\"].includes(order.status);\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"flex justify-end space-x-2\">\r\n\t\t\t\t\t\t{/* Ver detalles */}\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={`/admin/orders/${order.id}`}\r\n\t\t\t\t\t\t\tclassName=\"p-1 text-blue-600 hover:bg-blue-100 rounded-md\"\r\n\t\t\t\t\t\t\ttitle=\"Ver detalles del pedido\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Eye size={18} />\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t{/* Ver factura si está completado */}\r\n\t\t\t\t\t\t{[\"completed\", \"delivered\"].includes(order.status) && (\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto={`/admin/invoices?orderId=${order.id}`}\r\n\t\t\t\t\t\t\t\tclassName=\"p-1 text-indigo-600 hover:bg-indigo-100 rounded-md\"\r\n\t\t\t\t\t\t\t\ttitle=\"Ver factura\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<FileText size={18} />\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{/* Avanzar estado */}\r\n\t\t\t\t\t\t{canAdvance && (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => advanceOrderStatus(order.id, order.status)}\r\n\t\t\t\t\t\t\t\tclassName=\"p-1 text-green-600 hover:bg-green-100 rounded-md\"\r\n\t\t\t\t\t\t\t\ttitle={`Avanzar a ${orderStatusMap[getNextStatus(order.status)]?.label || \"siguiente estado\"}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CheckCircle size={18} />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{/* Cancelar pedido */}\r\n\t\t\t\t\t\t{canCancel && (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => cancelOrder(order.id)}\r\n\t\t\t\t\t\t\t\tclassName=\"p-1 text-red-600 hover:bg-red-100 rounded-md\"\r\n\t\t\t\t\t\t\t\ttitle=\"Cancelar pedido\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<XCircle size={18} />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className=\"space-y-6\">\r\n\t\t\t<div className=\"flex justify-between items-center\">\r\n\t\t\t\t<h1 className=\"text-2xl font-bold text-gray-900\">\r\n\t\t\t\t\tGestión de Pedidos\r\n\t\t\t\t</h1>\r\n\t\t\t\t<div className=\"flex space-x-2\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={refreshData}\r\n\t\t\t\t\t\tclassName=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RefreshCw size={18} className=\"inline mr-2\" />\r\n\t\t\t\t\t\tActualizar\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Filtros */}\r\n\t\t\t<div className=\"bg-white rounded-lg shadow-sm p-4\">\r\n\t\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n\t\t\t\t\t{/* Filtro de Estado */}\r\n\t\t\t\t\t<div className=\"flex flex-col space-y-1\">\r\n\t\t\t\t\t\t<label className=\"text-sm text-gray-600\">\r\n\t\t\t\t\t\t\tEstado del pedido\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<Filter className=\"h-5 w-5 text-gray-500 mr-2\" />\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tclassName=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\t\tvalue={filters.status}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleFilterChange(\"status\", e.target.value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"all\">Todos los Estados</option>\r\n\t\t\t\t\t\t\t\t{Object.entries(orderStatusMap).map(([key, {label}]) => (\r\n\t\t\t\t\t\t\t\t\t<option key={key} value={key}>\r\n\t\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Filtro de Estado de Pago */}\r\n\t\t\t\t\t<div className=\"flex flex-col space-y-1\">\r\n\t\t\t\t\t\t<label className=\"text-sm text-gray-600\">\r\n\t\t\t\t\t\t\tEstado de pago\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\tvalue={filters.paymentStatus}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\thandleFilterChange(\"paymentStatus\", e.target.value)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"all\">Todos los Estados</option>\r\n\t\t\t\t\t\t\t{Object.entries(paymentStatusMap).map(([key, {label}]) => (\r\n\t\t\t\t\t\t\t\t<option key={key} value={key}>\r\n\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Filtro de Vendedor */}\r\n\t\t\t\t\t<div className=\"flex flex-col space-y-1\">\r\n\t\t\t\t\t\t<label className=\"text-sm text-gray-600\">\r\n\t\t\t\t\t\t\tVendedor\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\tvalue={filters.sellerId === null ? \"null\" : filters.sellerId}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\thandleFilterChange(\r\n\t\t\t\t\t\t\t\t\t\"sellerId\",\r\n\t\t\t\t\t\t\t\t\te.target.value === \"null\" ? null : Number(e.target.value)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"null\">Todos los Vendedores</option>\r\n\t\t\t\t\t\t\t{/* Aquí deberíamos obtener la lista de vendedores de la API */}\r\n\t\t\t\t\t\t\t{/* Por ahora usamos los que venían en los datos de ejemplo */}\r\n\t\t\t\t\t\t\t{[1, 2, 3, 4, 5].map((sellerId) => (\r\n\t\t\t\t\t\t\t\t<option key={sellerId} value={sellerId}>\r\n\t\t\t\t\t\t\t\t\tVendedor {sellerId}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Filtro de Rango de Fechas */}\r\n\t\t\t\t\t<div className=\"flex flex-col space-y-1\">\r\n\t\t\t\t\t\t<label className=\"text-sm text-gray-600\">\r\n\t\t\t\t\t\t\tRango de fechas\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<div className=\"grid grid-cols-2 gap-2\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tclassName=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\t\tvalue={filters.dateFrom || \"\"}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleFilterChange(\"dateFrom\", e.target.value)}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Desde\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tclassName=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\t\tvalue={filters.dateTo || \"\"}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleFilterChange(\"dateTo\", e.target.value)}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Hasta\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mt-4 flex justify-end\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={clearFilters}\r\n\t\t\t\t\t\tclassName=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLimpiar filtros\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Tabla de Pedidos */}\r\n\t\t\t<Table\r\n\t\t\t\tdata={orders}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tsearchFields={[\"orderNumber\", \"customer\"]}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\temptyMessage=\"No se encontraron pedidos\"\r\n\t\t\t\tpagination={{\r\n\t\t\t\t\tcurrentPage: pagination.currentPage,\r\n\t\t\t\t\ttotalPages: pagination.totalPages,\r\n\t\t\t\t\ttotalItems: pagination.totalItems,\r\n\t\t\t\t\titemsPerPage: pagination.itemsPerPage,\r\n\t\t\t\t\tonPageChange: handlePageChange,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AdminOrdersPage;\r\n"],"names":["AdminOrdersPage","orders","setOrders","useState","loading","setLoading","filters","setFilters","pagination","setPagination","orderAdapter","AdminOrderServiceAdapter","useEffect","fetchOrders","apiFilters","result","error","orderStatusMap","jsx","Clock","RefreshCw","CheckCircle","Truck","Package","XCircle","RotateCcw","ShoppingBag","paymentStatusMap","paymentMethodMap","getNextStatus","currentStatus","updateOrderStatus","orderId","newStatus","prevOrders","order","advanceOrderStatus","nextStatus","cancelOrder","formatCurrency","amount","formatDate","dateString","date","handlePageChange","page","prev","refreshData","handleFilterChange","filterName","value","clearFilters","columns","jsxs","Calendar","customerName","User","item","status","AlertTriangle","paymentMethod","paymentStatus","canAdvance","canCancel","Link","Eye","FileText","Filter","key","label","sellerId","Table"],"mappings":"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"}