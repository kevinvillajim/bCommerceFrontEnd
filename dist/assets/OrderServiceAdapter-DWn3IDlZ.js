import{l as c,t as d}from"./index-DmNDOrWy.js";import{i as S}from"./Order-YtLC4nUV.js";class m{async getSellerOrders(e){try{console.log("OrderService: Obteniendo órdenes del vendedor con filtros:",e);const r=await c.get(d.ORDERS.SELLER_ORDERS,e);console.log("OrderService: Respuesta de órdenes:",r);const t=r?.data||[],a=r?.pagination||{currentPage:1,totalPages:1,totalItems:0,itemsPerPage:10};return{data:t,meta:{total:a.totalItems,per_page:a.itemsPerPage,current_page:a.currentPage,last_page:a.totalPages}}}catch(r){return console.error("OrderService: Error al obtener órdenes:",r),{data:[],meta:{total:0,per_page:10,current_page:1,last_page:1}}}}async getOrderDetails(e){try{console.log(`OrderService: Obteniendo detalle de orden ${e}`);const r=await c.get(d.USER.ORDER_DETAILS(e));if(console.log(`OrderService: Respuesta para orden ${e}:`,r),!r||!r.data)throw new Error("Respuesta vacía al obtener detalle de orden");let t=r.data;if(t.items&&Array.isArray(t.items)){const a=t.items.reduce((u,s)=>u+s.price*s.quantity,0),n=a*.15,l=a+n;Math.abs(t.total-l)>.01&&(t.total=l)}return t}catch(r){throw console.error(`OrderService: Error al obtener detalle de orden ${e}:`,r),r}}async updateOrderStatus(e,r){try{console.log(`OrderService: Actualizando estado de orden ${e} a ${r.status}`);const t=await c.patch(d.ORDERS.UPDATE_STATUS(e),r);if(console.log(`OrderService: Respuesta de actualización para orden ${e}:`,t),!t||!t.data)throw new Error("Respuesta vacía al actualizar estado de orden");return t.data}catch(t){throw console.error(`OrderService: Error al actualizar estado de orden ${e}:`,t),t}}async completeOrder(e){try{console.log(`OrderService: Completando orden ${e}`);const r=await c.post(d.ORDERS.COMPLETE(e));return console.log(`OrderService: Respuesta de completar orden ${e}:`,r),r?.success||!1}catch(r){return console.error(`OrderService: Error al completar orden ${e}:`,r),!1}}async cancelOrder(e,r=""){try{console.log(`OrderService: Cancelando orden ${e}`);const t=await c.post(d.ORDERS.CANCEL(e),{reason:r});return console.log(`OrderService: Respuesta de cancelar orden ${e}:`,t),t?.success||!1}catch(t){return console.error(`OrderService: Error al cancelar orden ${e}:`,t),!1}}async updateShippingInfo(e,r){try{console.log(`OrderService: Actualizando información de envío para orden ${e}`);const t=await c.patch(d.ORDERS.UPDATE_SHIPPING(e),r);return console.log(`OrderService: Respuesta de actualización de envío para ${e}:`,t),t?.success||!1}catch(t){return console.error(`OrderService: Error al actualizar envío de orden ${e}:`,t),!1}}async getOrderStats(){try{console.log("OrderService: Obteniendo estadísticas de órdenes");const e=await c.get(d.ORDERS.STATS);if(console.log("OrderService: Respuesta de estadísticas:",e),!e||!e.data)throw new Error("Respuesta vacía al obtener estadísticas");return e.data}catch(e){return console.error("OrderService: Error al obtener estadísticas:",e),{totalOrders:0,pendingOrders:0,processingOrders:0,shippedOrders:0,deliveredOrders:0,cancelledOrders:0,totalSales:0}}}async getOrdersAwaitingShipment(e=10,r=0){try{console.log("OrderService: Obteniendo órdenes pendientes de envío");const t=await c.get(d.ORDERS.AWAITING_SHIPMENT,{limit:e,offset:r});return console.log("OrderService: Respuesta de órdenes pendientes de envío:",t),!t||!t.data?[]:Array.isArray(t.data)?t.data:[]}catch(t){return console.error("OrderService: Error al obtener órdenes pendientes de envío:",t),[]}}async getSellerCustomers(e=10,r=0){try{console.log("OrderService: Obteniendo clientes del vendedor");const t=await c.get(d.ORDERS.CUSTOMERS,{limit:e,offset:r});return console.log("OrderService: Respuesta de clientes:",t),!t||!t.data?[]:Array.isArray(t.data)?t.data:[]}catch(t){return console.error("OrderService: Error al obtener clientes:",t),[]}}async getOrdersWithProduct(e,r=10,t=0){try{console.log(`OrderService: Obteniendo órdenes con producto ${e}`);const a=await c.get(d.ORDERS.WITH_PRODUCT(e),{limit:r,offset:t});return console.log(`OrderService: Respuesta de órdenes con producto ${e}:`,a),!a||!a.data?[]:Array.isArray(a.data)?a.data:[]}catch(a){return console.error(`OrderService: Error al obtener órdenes con producto ${e}:`,a),[]}}async getUserOrders(e){try{console.log("OrderService: Obteniendo órdenes del cliente con filtros:",e);const r=await c.get(d.USER.ORDERS,e);console.log("OrderService: Respuesta de órdenes de cliente:",r);const t=r?.data||[],a=r?.pagination||{currentPage:1,totalPages:1,totalItems:0,itemsPerPage:10};return{data:t.map(n=>{if(n.items&&Array.isArray(n.items)){const l=n.items.reduce((g,O)=>g+O.price*O.quantity,0),s=l*.15,o=l+s;Math.abs(n.total-o)>.01&&(n.total=o)}return n}),meta:{total:a.totalItems,per_page:a.itemsPerPage,current_page:a.currentPage,last_page:a.totalPages}}}catch(r){return console.error("OrderService: Error al obtener órdenes del cliente:",r),{data:[],meta:{total:0,per_page:10,current_page:1,last_page:1}}}}}class h{orderService;constructor(e){this.orderService=e}async execute(e){try{const r=this.validateFilters(e||{});return await this.orderService.getSellerOrders(r)}catch(r){throw console.error("Error en GetSellerOrdersUseCase:",r),r}}validateFilters(e){const r={};return e.status&&["pending","processing","paid","shipped","delivered","completed","cancelled"].includes(e.status)&&(r.status=e.status),e.paymentStatus&&["pending","completed","failed"].includes(e.paymentStatus)&&(r.paymentStatus=e.paymentStatus),e.dateFrom&&this.isValidDate(e.dateFrom)&&(r.dateFrom=e.dateFrom),e.dateTo&&this.isValidDate(e.dateTo)&&(r.dateTo=e.dateTo),e.search&&typeof e.search=="string"&&(r.search=e.search.trim()),e.page&&Number.isInteger(Number(e.page))&&Number(e.page)>0&&(r.page=Number(e.page)),e.limit&&Number.isInteger(Number(e.limit))&&Number(e.limit)>0&&(r.limit=Number(e.limit)),r}isValidDate(e){const r=new Date(e);return!isNaN(r.getTime())}}class v{orderService;constructor(e){this.orderService=e}async execute(){try{const e=await this.orderService.getOrderStats();return{totalOrders:e.totalOrders||0,pendingOrders:e.pendingOrders||0,processingOrders:e.processingOrders||0,shippedOrders:e.shippedOrders||0,deliveredOrders:e.deliveredOrders||0,completedOrders:e.completedOrders||0,cancelledOrders:e.cancelledOrders||0,totalSales:e.totalSales||0}}catch(e){return console.error("Error en GetOrderStatsUseCase:",e),{totalOrders:0,pendingOrders:0,processingOrders:0,shippedOrders:0,deliveredOrders:0,completedOrders:0,cancelledOrders:0,totalSales:0}}}}class y{orderService;constructor(e){this.orderService=e}async execute(e,r){try{if(!e||e<=0)throw new Error("ID de orden inválido");if(!S(r))throw new Error(`Estado de orden '${r}' no válido`);return await this.orderService.updateOrderStatus(e,{status:r})}catch(t){throw console.error(`Error en UpdateOrderStatusUseCase para orden ${e}:`,t),t}}}class E{orderService;constructor(e){this.orderService=e}async execute(e){try{if(!e||e<=0)throw new Error("ID de orden inválido");return await this.orderService.getOrderDetails(e)}catch(r){throw console.error(`Error en GetOrderDetailUseCase para orden ${e}:`,r),r}}}class w{orderService;constructor(e){this.orderService=e}async execute(e){try{return await this.orderService.getUserOrders(e)}catch(r){throw console.error("Error en GetUserOrdersUseCase:",r),r}}}class P{orderService;sellerOrdersUseCase;userOrdersUseCase;orderStatsUseCase;updateOrderStatusUseCase;getOrderDetailUseCase;constructor(){this.orderService=new m,this.sellerOrdersUseCase=new h(this.orderService),this.userOrdersUseCase=new w(this.orderService),this.orderStatsUseCase=new v(this.orderService),this.updateOrderStatusUseCase=new y(this.orderService),this.getOrderDetailUseCase=new E(this.orderService)}async getSellerOrders(e){try{const r=await this.sellerOrdersUseCase.execute(e),t=r.data.map(i=>this.adaptOrderToUI(i)),a={currentPage:r.meta.current_page,totalPages:r.meta.last_page,totalItems:r.meta.total,itemsPerPage:r.meta.per_page};return{orders:t,pagination:a}}catch(r){return console.error("Error en OrderServiceAdapter.getSellerOrders:",r),{orders:[],pagination:{currentPage:1,totalPages:1,totalItems:0,itemsPerPage:10}}}}async getUserOrders(e){try{const r=await this.userOrdersUseCase.execute(e),t=r.data.map(i=>this.adaptOrderToUI(i)),a={currentPage:Number(r.meta.current_page)||1,totalPages:Math.ceil(r.meta.total/Number(r.meta.last_page||10)),totalItems:Number(r.meta.total)||0,itemsPerPage:Number(r.meta.per_page)||10};return{orders:t,pagination:a}}catch(r){return console.error("Error en OrderServiceAdapter.getUserOrders:",r),{orders:[],pagination:{currentPage:1,totalPages:1,totalItems:0,itemsPerPage:10}}}}async getOrderStats(){try{const e=await this.orderStatsUseCase.execute();return[{label:"Total Pedidos",value:e.totalOrders,color:"blue",isCurrency:!1},{label:"Pendientes",value:e.pendingOrders,color:"yellow",isCurrency:!1},{label:"En Proceso",value:e.processingOrders,color:"blue",isCurrency:!1},{label:"Enviados",value:e.shippedOrders,color:"indigo",isCurrency:!1},{label:"Total Ventas",value:e.totalSales,color:"green",isCurrency:!0}]}catch(e){return console.error("Error en OrderServiceAdapter.getOrderStats:",e),[]}}async updateOrderStatus(e,r){try{const t=typeof e=="string"?parseInt(e):e;return!!await this.updateOrderStatusUseCase.execute(t,r)}catch(t){return console.error(`Error en OrderServiceAdapter.updateOrderStatus para orden ${e}:`,t),!1}}async getOrderDetails(e){try{const r=typeof e=="string"?parseInt(e):e,t=await this.getOrderDetailUseCase.execute(r);if(t){const a={...t,userId:t.userId,sellerId:t.sellerId,paymentId:t.paymentId,paymentMethod:t.paymentMethod,paymentStatus:t.paymentStatus,createdAt:t.createdAt,updatedAt:t.updatedAt,orderNumber:t.orderNumber,shippingData:t.shippingData,items:t.items?.map(s=>({...s,productId:s.productId,product:{name:s.product?.name||s.product_name||"Unknown Product",image:s.product?.image||s.product_image,slug:s.product?.slug,sku:s.product?.sku||s.product_sku},product_name:s.product_name,product_sku:s.product_sku,product_image:s.product_image}))||[]};console.log("Orden adaptada para UI:",a);const i=a.items?.reduce((s,o)=>s+o.price*o.quantity,0)||0,l=i*.15,u=i+l;return Math.abs(a.total-u)>.01&&(a.total=u),a}return t}catch(r){throw console.error(`Error en OrderServiceAdapter.getOrderDetails para orden ${e}:`,r),r}}adaptOrderToUI(e){const r=e.items?.reduce((o,g)=>o+g.price*g.quantity,0)||0,a=r*.15,i=r>0?r+a:e.total||0,n=e.items?.length||e.itemCount||void 0,l=e.items?.map(o=>({id:o.id||0,productId:o.productId,name:o.product?.name||o.product_name||"Producto",quantity:o.quantity,price:o.price,subtotal:o.price*o.quantity,image:o.product?.image||o.product_image}))||[],u=e.shippingData?`${e.shippingData.address}, ${e.shippingData.city}, ${e.shippingData.state}, ${e.shippingData.country}`:void 0,s=e.paymentStatus;return{id:String(e.id),orderNumber:e.orderNumber,date:e.date||e.createdAt||new Date().toISOString(),customer:{id:e.userId,name:e.user_name||"Cliente",email:e.user_email||"email@example.com"},subtotal:r,taxAmount:a,total:i,items:l,status:e.status||"pending",paymentStatus:s,shippingAddress:u,notes:e.shippingData?.notes,itemCount:n}}}export{P as O};
//# sourceMappingURL=OrderServiceAdapter-DWn3IDlZ.js.map
