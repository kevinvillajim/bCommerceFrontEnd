{"version":3,"file":"usePasswordValidation-MAhqQx1N.js","sources":["../../src/presentation/hooks/usePasswordValidation.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { AuthService } from '../../core/services/AuthService';\r\n\r\ninterface PasswordValidationRules {\r\n  minLength: number;\r\n  requireSpecial: boolean;\r\n  requireUppercase: boolean;\r\n  requireNumbers: boolean;\r\n  validationMessage: string;\r\n  requirements: string[];\r\n}\r\n\r\n// Helper function to generate default rules\r\nconst generateDefaultRules = (minLength = 8, requireUppercase = true, requireNumbers = true, requireSpecial = true): PasswordValidationRules => {\r\n  const requirements: string[] = [];\r\n  let message = `La contraseña debe tener al menos ${minLength} caracteres`;\r\n  \r\n  if (requireUppercase) {\r\n    requirements.push('al menos una letra mayúscula');\r\n  }\r\n  if (requireNumbers) {\r\n    requirements.push('al menos un número');\r\n  }\r\n  if (requireSpecial) {\r\n    requirements.push('al menos un carácter especial (!@#$%^&*)');\r\n  }\r\n  \r\n  if (requirements.length > 0) {\r\n    message += ' y debe incluir ' + requirements.join(', ');\r\n  }\r\n  message += '.';\r\n  \r\n  return {\r\n    minLength,\r\n    requireSpecial,\r\n    requireUppercase,\r\n    requireNumbers,\r\n    validationMessage: message,\r\n    requirements\r\n  };\r\n};\r\n\r\nexport const usePasswordValidation = () => {\r\n  const [rules, setRules] = useState<PasswordValidationRules>(generateDefaultRules());\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadValidationRules = async () => {\r\n      try {\r\n        const authService = new AuthService();\r\n        const validationRules = await authService.getPasswordValidationRules();\r\n        setRules(validationRules);\r\n      } catch (error) {\r\n        console.error('Error loading password validation rules:', error);\r\n        // Mantener reglas por defecto\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadValidationRules();\r\n  }, []);\r\n\r\n  const validatePassword = (password: string): { isValid: boolean; errors: string[] } => {\r\n    const errors: string[] = [];\r\n\r\n    // Validar longitud mínima\r\n    if (password.length < rules.minLength) {\r\n      errors.push(`La contraseña debe tener al menos ${rules.minLength} caracteres`);\r\n    }\r\n\r\n    // Validar mayúsculas\r\n    if (rules.requireUppercase && !/[A-Z]/.test(password)) {\r\n      errors.push('La contraseña debe contener al menos una letra mayúscula');\r\n    }\r\n\r\n    // Validar números\r\n    if (rules.requireNumbers && !/[0-9]/.test(password)) {\r\n      errors.push('La contraseña debe contener al menos un número');\r\n    }\r\n\r\n    // Validar caracteres especiales\r\n    if (rules.requireSpecial && !/[!@#$%^&*]/.test(password)) {\r\n      errors.push('La contraseña debe contener al menos un carácter especial (!@#$%^&*)');\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  };\r\n\r\n  return {\r\n    rules,\r\n    loading,\r\n    validatePassword\r\n  };\r\n};"],"names":["generateDefaultRules","minLength","requireUppercase","requireNumbers","requireSpecial","requirements","message","usePasswordValidation","rules","setRules","useState","loading","setLoading","useEffect","validationRules","AuthService","error","password","errors"],"mappings":"4FAaA,MAAMA,EAAuB,CAACC,EAAY,EAAGC,EAAmB,GAAMC,EAAiB,GAAMC,EAAiB,KAAkC,CAC9I,MAAMC,EAAyB,CAAC,EAC5B,IAAAC,EAAU,qCAAqCL,CAAS,cAE5D,OAAIC,GACFG,EAAa,KAAK,8BAA8B,EAE9CF,GACFE,EAAa,KAAK,oBAAoB,EAEpCD,GACFC,EAAa,KAAK,0CAA0C,EAG1DA,EAAa,OAAS,IACbC,GAAA,mBAAqBD,EAAa,KAAK,IAAI,GAE7CC,GAAA,IAEJ,CACL,UAAAL,EACA,eAAAG,EACA,iBAAAF,EACA,eAAAC,EACA,kBAAmBG,EACnB,aAAAD,CACF,CACF,EAEaE,EAAwB,IAAM,CACzC,KAAM,CAACC,EAAOC,CAAQ,EAAIC,EAAA,SAAkCV,GAAsB,EAC5E,CAACW,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EAE3CG,OAAAA,EAAAA,UAAU,IAAM,EACc,SAAY,CAClC,GAAA,CAEI,MAAAC,EAAkB,MADJ,IAAIC,EAAY,EACM,2BAA2B,EACrEN,EAASK,CAAe,QACjBE,EAAO,CACN,QAAA,MAAM,2CAA4CA,CAAK,CAAA,QAE/D,CACAJ,EAAW,EAAK,CAAA,CAEpB,GAEoB,CACtB,EAAG,EAAE,EA+BE,CACL,MAAAJ,EACA,QAAAG,EACA,iBAhCwBM,GAA6D,CACrF,MAAMC,EAAmB,CAAC,EAGtB,OAAAD,EAAS,OAAST,EAAM,WAC1BU,EAAO,KAAK,qCAAqCV,EAAM,SAAS,aAAa,EAI3EA,EAAM,kBAAoB,CAAC,QAAQ,KAAKS,CAAQ,GAClDC,EAAO,KAAK,0DAA0D,EAIpEV,EAAM,gBAAkB,CAAC,QAAQ,KAAKS,CAAQ,GAChDC,EAAO,KAAK,gDAAgD,EAI1DV,EAAM,gBAAkB,CAAC,aAAa,KAAKS,CAAQ,GACrDC,EAAO,KAAK,sEAAsE,EAG7E,CACL,QAASA,EAAO,SAAW,EAC3B,OAAAA,CACF,CACF,CAMA,CACF"}