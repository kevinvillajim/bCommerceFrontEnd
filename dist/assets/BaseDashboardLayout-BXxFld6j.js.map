{"version":3,"file":"BaseDashboardLayout-BXxFld6j.js","sources":["../../src/presentation/components/dashboard/DashboardContext.tsx","../../src/presentation/components/dashboard/SideBar.tsx","../../src/presentation/components/dashboard/NotificationModal.tsx","../../src/presentation/components/dashboard/DashboardHeader.tsx","../../src/presentation/components/dashboard/DashboardFooter.tsx","../../src/presentation/components/dashboard/BaseDashboardLayout.tsx"],"sourcesContent":["import React, {\n\tcreateContext,\n\tuseState,\n\tuseContext,\n\tuseEffect,\n} from \"react\";\nimport type { ReactNode } from \"react\";\nimport {useLocation} from \"react-router-dom\";\nimport type {Notification, PendingActions, DashboardType} from \"./index\";\n\ninterface DashboardContextProps {\n\t// Estado del sidebar\n\tisSidebarOpen: boolean;\n\ttoggleSidebar: () => void;\n\n\t// Estado de notificaciones\n\tnotifications: Notification[];\n\tunreadNotificationsCount: number;\n\taddNotification: (notification: Omit<Notification, \"id\">) => void;\n\tmarkAllNotificationsAsRead: () => void;\n\tmarkNotificationAsRead: (id: string) => void;\n\n\t// Acciones pendientes\n\tpendingActions: PendingActions;\n\tsetPendingAction: (key: string, value: number) => void;\n\tincrementPendingAction: (key: string) => void;\n\tdecrementPendingAction: (key: string) => void;\n\n\t// Tipo de dashboard actual\n\tdashboardType: DashboardType;\n\n\t// Título dinámico de la página actual\n\tcurrentPageTitle: string;\n\tsetPageTitle: (path: string, title: string) => void;\n}\n\n// Crear el contexto\nconst DashboardContext = createContext<DashboardContextProps | undefined>(\n\tundefined\n);\n\n// Props para el proveedor\ninterface DashboardProviderProps {\n\tchildren: ReactNode;\n\tinitialType: DashboardType;\n\tinitialPageTitles?: Record<string, string>;\n}\n\n// Generador de ID único para notificaciones\nconst generateId = (): string => {\n\treturn Date.now().toString(36) + Math.random().toString(36).substr(2);\n};\n\n/**\n * Proveedor del contexto del Dashboard\n */\nexport const DashboardProvider: React.FC<DashboardProviderProps> = ({\n\tchildren,\n\tinitialType,\n\tinitialPageTitles = {},\n}) => {\n\t// Estado del sidebar\n\tconst [isSidebarOpen, setIsSidebarOpen] = useState(true);\n\n\t// Tipo de dashboard\n\tconst [dashboardType] = useState<DashboardType>(initialType);\n\n\t// Estado de notificaciones\n\tconst [notifications, setNotifications] = useState<Notification[]>([]);\n\tconst [unreadNotificationsCount, setUnreadNotificationsCount] = useState(0);\n\n\t// Acciones pendientes\n\tconst [pendingActions, setPendingActions] = useState<PendingActions>({});\n\n\t// Títulos de página\n\tconst [pageTitles, setPageTitles] =\n\t\tuseState<Record<string, string>>(initialPageTitles);\n\n\t// Current pathname para determinar el título actual\n\tconst location = useLocation();\n\n\t// Calcular el título actual basado en la ruta\n\tconst getCurrentPageTitle = (): string => {\n\t\tconst {pathname} = location;\n\n\t\t// Buscar coincidencias exactas primero\n\t\tif (pageTitles[pathname]) {\n\t\t\treturn pageTitles[pathname];\n\t\t}\n\n\t\t// Buscar coincidencias parciales\n\t\tfor (const [path, title] of Object.entries(pageTitles)) {\n\t\t\tif (pathname.includes(path)) {\n\t\t\t\treturn title;\n\t\t\t}\n\t\t}\n\n\t\t// Título por defecto según el tipo de dashboard\n\t\tswitch (dashboardType) {\n\t\t\tcase \"admin\":\n\t\t\t\treturn \"Panel de Administración\";\n\t\t\tcase \"seller\":\n\t\t\t\treturn \"Portal del Vendedor\";\n\t\t\tcase \"customer\":\n\t\t\t\treturn \"Mi Cuenta\";\n\t\t\tdefault:\n\t\t\t\treturn \"Dashboard\";\n\t\t}\n\t};\n\n\t// Actualizar el contador de notificaciones no leídas\n\tuseEffect(() => {\n\t\tconst count = notifications.filter(\n\t\t\t(notification) => !notification.read\n\t\t).length;\n\t\tsetUnreadNotificationsCount(count);\n\t}, [notifications]);\n\n\t// Utilidades y funciones para modificar estados\n\tconst toggleSidebar = () => setIsSidebarOpen((prev) => !prev);\n\n\tconst addNotification = (notification: Omit<Notification, \"id\">) => {\n\t\tconst newNotification: Notification = {\n\t\t\t...notification,\n\t\t\tid: generateId(),\n\t\t};\n\t\tsetNotifications((prev) => [newNotification, ...prev]);\n\t};\n\n\tconst markAllNotificationsAsRead = () => {\n\t\tsetNotifications((prev) =>\n\t\t\tprev.map((notification) => ({...notification, read: true}))\n\t\t);\n\t};\n\n\tconst markNotificationAsRead = (id: string) => {\n\t\tsetNotifications((prev) =>\n\t\t\tprev.map((notification) =>\n\t\t\t\tnotification.id === id ? {...notification, read: true} : notification\n\t\t\t)\n\t\t);\n\t};\n\n\tconst setPendingAction = (key: string, value: number) => {\n\t\tsetPendingActions((prev) => ({...prev, [key]: value}));\n\t};\n\n\tconst incrementPendingAction = (key: string) => {\n\t\tsetPendingActions((prev) => ({\n\t\t\t...prev,\n\t\t\t[key]: (prev[key] || 0) + 1,\n\t\t}));\n\t};\n\n\tconst decrementPendingAction = (key: string) => {\n\t\tsetPendingActions((prev) => ({\n\t\t\t...prev,\n\t\t\t[key]: Math.max(0, (prev[key] || 0) - 1),\n\t\t}));\n\t};\n\n\tconst setPageTitle = (path: string, title: string) => {\n\t\tsetPageTitles((prev) => ({...prev, [path]: title}));\n\t};\n\n\t// Valor del contexto\n\tconst value: DashboardContextProps = {\n\t\tisSidebarOpen,\n\t\ttoggleSidebar,\n\t\tnotifications,\n\t\tunreadNotificationsCount,\n\t\taddNotification,\n\t\tmarkAllNotificationsAsRead,\n\t\tmarkNotificationAsRead,\n\t\tpendingActions,\n\t\tsetPendingAction,\n\t\tincrementPendingAction,\n\t\tdecrementPendingAction,\n\t\tdashboardType,\n\t\tcurrentPageTitle: getCurrentPageTitle(),\n\t\tsetPageTitle,\n\t};\n\n\treturn (\n\t\t<DashboardContext.Provider value={value}>\n\t\t\t{children}\n\t\t</DashboardContext.Provider>\n\t);\n};\n\n/**\n * Hook para usar el contexto del Dashboard\n */\nexport const useDashboard = () => {\n\tconst context = useContext(DashboardContext);\n\n\tif (context === undefined) {\n\t\tthrow new Error(\n\t\t\t\"useDashboard debe ser usado dentro de un DashboardProvider\"\n\t\t);\n\t}\n\n\treturn context;\n};\n\nexport default DashboardContext;\n","import React from \"react\";\nimport type { ReactNode } from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {X} from \"lucide-react\";\n\ninterface SidebarLinkProps {\n\tpath: string;\n\tlabel: string;\n\ticon?: ReactNode;\n\tisNotificated?: boolean;\n\tnotificationCount?: number;\n}\n\ninterface SidebarGroupProps {\n\ttitle: string;\n\tlinks: SidebarLinkProps[];\n}\n\ninterface SidebarTitleProps {\n\ttitle: string;\n\ticon: ReactNode;\n}\n\ninterface SidebarProps {\n\t/**\n\t * Grupos de enlaces para el sidebar\n\t */\n\tgroups: SidebarGroupProps[];\n\n\t/**\n\t * Título e icono del sidebar\n\t */\n\ttitle: SidebarTitleProps;\n\n\t/**\n\t * Estado de apertura del sidebar (para móvil)\n\t */\n\tisOpen?: boolean;\n\n\t/**\n\t * Función para cambiar el estado de apertura del sidebar\n\t */\n\ttoggleSidebar?: () => void;\n}\n\n/**\n * Componente de enlace individual para el sidebar\n */\nconst SidebarLink: React.FC<SidebarLinkProps> = ({\n\tpath,\n\tlabel,\n\ticon,\n\tisNotificated,\n\tnotificationCount,\n}) => {\n\tconsole.log(\"SidebarLink →\", { label, notificationCount });\n\treturn (\n\t\t<NavLink\n\t\t\tto={path}\n\t\t\tend={true}\n\t\t\tclassName={({isActive}) =>\n\t\t\t\t`flex items-center px-4 py-2 mt-2 text-sm transition-colors duration-200 rounded-lg ${\n\t\t\t\t\tisActive\n\t\t\t\t\t\t? \"bg-primary-100 text-primary-700\"\n\t\t\t\t\t\t: \"text-gray-600 hover:bg-gray-200\"\n\t\t\t\t}`\n\t\t\t}\n\t\t>\n\t\t\t{icon}\n\t\t\t<span className=\"mx-1\">{label}</span>\n\t\t\t{isNotificated && notificationCount && notificationCount > 0 && (\n\t\t\t\t<span className=\"ml-auto inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-red-100 bg-red-500 rounded-full\">\n{(() => {\n  const count = Number(notificationCount);\n  if (count > 99) return \"99+\";\n  if (count > 0) return count;\n  return \"\";\n})()}\t\t\t\t</span>\n\t\t\t)}\n\t\t</NavLink>\n\t);\n};\n\n/**\n * Componente de barra lateral para dashboards\n */\nconst Sidebar: React.FC<SidebarProps> = ({\n\tgroups,\n\ttitle,\n\tisOpen = true,\n\ttoggleSidebar = () => {},\n}) => {\n\n\treturn (\n\t\t<aside\n\t\t\tclassName={`bg-white fixed md:static inset-y-0 left-0 z-30 w-64 transition-transform duration-300 transform ${\n\t\t\t\tisOpen ? \"translate-x-0\" : \"-translate-x-full\"\n\t\t\t} md:translate-x-0 overflow-y-auto`}\n\t\t>\n\t\t\t{/* Header del Sidebar */}\n\t\t\t<div className=\"flex items-center justify-between px-4 py-3 border-b border-gray-200\">\n\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t{title.icon}\n\t\t\t\t\t<h2 className=\"text-lg font-semibold text-gray-900 ml-2\">\n\t\t\t\t\t\t{title.title}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tonClick={toggleSidebar}\n\t\t\t\t\tclassName=\"p-1 rounded-md text-gray-500 md:hidden hover:text-gray-900 hover:bg-gray-100\"\n\t\t\t\t>\n\t\t\t\t\t<X size={20} />\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t{/* Contenido del Sidebar */}\n\t\t\t<div className=\"p-4\">\n\t\t\t\t{groups.map((group, index) => (\n\t\t\t\t\t<div key={index} className=\"mb-6\">\n\t\t\t\t\t\t<h3 className=\"px-4 text-xs font-semibold text-gray-500 uppercase tracking-wider\">\n\t\t\t\t\t\t\t{group.title}\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t\t{group.links.map((link, linkIndex) => (\n\t\t\t\t\t\t\t\t<SidebarLink key={linkIndex} {...link} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</aside>\n\t);\n};\n\nexport default Sidebar;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Bell,\n  Check,\n  CheckCheck,\n  Trash2,\n  Package,\n  ShoppingCart,\n  MessageCircle,\n  Star,\n  TrendingUp,\n  AlertTriangle,\n  Gift,\n  Truck,\n  FileText,\n  MoreVertical,\n  Shield,\n  Ban,\n  X,\n} from \"lucide-react\";\nimport { useNotifications } from \"../../hooks/useNotifications\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useInvalidateCounters } from \"../../hooks/useHeaderCounters\";\nimport type { Notification } from \"../../../core/domain/entities/Notification\";\nimport { formatRelativeTime } from \"../../../utils/dateUtils\";\n\ninterface NotificationModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  isAdmin?: boolean;\n}\n\n// Función para obtener el icono según el tipo de notificación\nconst getNotificationIcon = (type: string) => {\n  switch (type) {\n    case \"new_message\":\n      return <MessageCircle className=\"text-blue-500\" size={16} />;\n    case \"order_status\":\n      return <Package className=\"text-green-500\" size={16} />;\n    case \"shipping_update\":\n      return <Truck className=\"text-purple-500\" size={16} />;\n    case \"product_update\":\n      return <TrendingUp className=\"text-orange-500\" size={16} />;\n    case \"rating_received\":\n    case \"seller_rated\":\n      return <Star className=\"text-yellow-500\" size={16} />;\n    case \"new_order\":\n      return <ShoppingCart className=\"text-green-600\" size={16} />;\n    case \"low_stock\":\n      return <AlertTriangle className=\"text-red-500\" size={16} />;\n    case \"feedback_response\":\n      return <FileText className=\"text-indigo-500\" size={16} />;\n    case \"promotion\":\n    case \"discount\":\n      return <Gift className=\"text-pink-500\" size={16} />;\n    case \"seller_strike\":\n      return <Shield className=\"text-orange-500\" size={16} />;\n    case \"account_blocked\":\n      return <Ban className=\"text-red-500\" size={16} />;\n    case \"seller_suspended\":\n      return <AlertTriangle className=\"text-yellow-600\" size={16} />;\n    case \"seller_inactive\":\n      return <Ban className=\"text-red-600\" size={16} />;\n    default:\n      return <Bell className=\"text-gray-500\" size={16} />;\n  }\n};\n\n// Función para obtener URL de notificación según el rol\nconst getNotificationUrl = (notification: Notification, isSeller: boolean): string | null => {\n  const { type, data } = notification;\n\n  switch (type) {\n    case \"new_message\":\n      if (data.chat_id) {\n        return isSeller ? `/seller/messages/${data.chat_id}` : `/chats/${data.chat_id}`;\n      }\n      return isSeller ? \"/seller/messages\" : \"/chats\";\n\n    case \"order_status\":\n      if (data.order_id) {\n        return isSeller ? `/seller/orders/${data.order_id}` : `/orders/${data.order_id}`;\n      }\n      return isSeller ? \"/seller/orders\" : \"/orders\";\n\n    case \"shipping_update\":\n      if (data.tracking_number) {\n        return `/tracking/${data.tracking_number}`;\n      } else if (data.order_id) {\n        return isSeller ? `/seller/orders/${data.order_id}` : `/orders/${data.order_id}`;\n      }\n      return null;\n\n    case \"rating_received\":\n    case \"seller_rated\":\n      if (data.rating_id) {\n        return `/ratings/${data.rating_id}`;\n      }\n      return isSeller ? \"/seller/ratings\" : \"/profile\";\n\n    case \"new_order\":\n      if (data.order_id) {\n        return isSeller ? `/seller/orders/${data.order_id}` : null;\n      }\n      return isSeller ? \"/seller/orders\" : null;\n\n    case \"seller_suspended\":\n    case \"seller_inactive\":\n      return isSeller ? \"/seller/dashboard\" : null;\n\n    default:\n      return null;\n  }\n};\n\nconst NotificationModal: React.FC<NotificationModalProps> = ({\n  isOpen,\n  onClose,\n  isAdmin = false,\n}) => {\n  const [activeMenu, setActiveMenu] = useState<number | null>(null);\n  const { roleInfo } = useAuth();\n  \n  // Hook para actualizar contadores del header en tiempo real\n  const { optimisticNotificationRead, forceRefresh } = useInvalidateCounters();\n\n  const {\n    notifications,\n    loading,\n    error,\n    unreadCount,\n    fetchNotifications,\n    markAsRead,\n    markAllAsRead,\n    deleteNotification,\n  } = useNotifications();\n\n  // Fetch notificaciones cuando se abre el modal\n  useEffect(() => {\n    if (isOpen) {\n      fetchNotifications(1, false); // Cargar primera página, todas las notificaciones\n    }\n  }, [isOpen, fetchNotifications]);\n\n  // Manejar click en notificación\n  const handleNotificationClick = useCallback(\n    async (notification: Notification) => {\n      setActiveMenu(null);\n\n      // Marcar como leída si no lo está\n      if (!notification.read) {\n        const success = await markAsRead(notification.id!);\n        if (success) {\n          // 🔥 TIEMPO REAL: Actualizar contador del header inmediatamente\n          optimisticNotificationRead();\n          console.log(\"🔔 Contador del header actualizado por clic en notificación\");\n        }\n      }\n\n      // Cerrar modal\n      onClose();\n\n      // Obtener URL de destino y navegar\n      const url = getNotificationUrl(notification, roleInfo.isSeller);\n      if (url) {\n        window.location.href = url;\n      }\n    },\n    [markAsRead, onClose, roleInfo.isSeller, optimisticNotificationRead]\n  );\n\n  // Manejar marcar todas como leídas\n  const handleMarkAllAsRead = useCallback(async () => {\n    const success = await markAllAsRead();\n    if (success) {\n      // 🔥 TIEMPO REAL: Refrescar contadores del header (pondrá en 0)\n      await forceRefresh();\n      console.log(\"🔔 Contadores del header actualizados - marcar todas como leídas\");\n    }\n  }, [markAllAsRead, forceRefresh]);\n\n  // Manejar eliminación\n  const handleDelete = useCallback(\n    async (id: number) => {\n      await deleteNotification(id);\n      setActiveMenu(null);\n    },\n    [deleteNotification]\n  );\n\n  // Manejar marcar como leída individual\n  const handleMarkAsRead = useCallback(\n    async (id: number) => {\n      const success = await markAsRead(id);\n      if (success) {\n        // 🔥 TIEMPO REAL: Actualizar contador del header inmediatamente\n        optimisticNotificationRead();\n        console.log(\"🔔 Contador del header actualizado por marcar como leída individual\");\n      }\n      setActiveMenu(null);\n    },\n    [markAsRead, optimisticNotificationRead]\n  );\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-hidden\">\n      {/* Backdrop */}\n      <div\n        className=\"absolute inset-0 bg-black bg-opacity-50 transition-opacity\"\n        onClick={onClose}\n      />\n\n      {/* Modal */}\n      <div className=\"relative flex items-start justify-center min-h-screen px-4 pt-16 pb-20\">\n        <div className=\"relative bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[80vh] flex flex-col\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900\">Notificaciones</h2>\n              {unreadCount > 0 && (\n                <p className=\"text-sm text-gray-600 mt-1\">\n                  {unreadCount} sin leer\n                </p>\n              )}\n            </div>\n            \n            <div className=\"flex items-center space-x-3\">\n              {/* 🔧 MEJORADO: Botón marcar todas como leídas más visible */}\n              {unreadCount > 0 && (\n                <button\n                  onClick={handleMarkAllAsRead}\n                  disabled={loading}\n                  className=\"px-4 py-2 bg-primary-100 text-primary-700 hover:bg-primary-200 disabled:opacity-50 flex items-center rounded-lg transition-all duration-200 text-sm font-medium border border-primary-200 hover:border-primary-300\"\n                  title={`Marcar ${unreadCount} notificación${unreadCount > 1 ? 'es' : ''} como leída${unreadCount > 1 ? 's' : ''}`}\n                >\n                  <CheckCheck size={16} className=\"mr-2\" />\n                  Marcar todas ({unreadCount})\n                </button>\n              )}\n              \n              {/* Cerrar */}\n              <button\n                onClick={onClose}\n                className=\"p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                title=\"Cerrar notificaciones\"\n              >\n                <X size={20} className=\"text-gray-500\" />\n              </button>\n            </div>\n          </div>\n\n          {/* Content */}\n          <div className=\"flex-1 overflow-y-auto\">\n            {loading && notifications.length === 0 ? (\n              <div className=\"flex justify-center items-center h-32\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-primary-600\"></div>\n              </div>\n            ) : error ? (\n              <div className=\"p-6 text-center text-red-600\">\n                <p>{error}</p>\n                <button\n                  onClick={() => fetchNotifications(1, false)}\n                  className=\"mt-2 text-sm underline\"\n                >\n                  Reintentar\n                </button>\n              </div>\n            ) : notifications.length === 0 ? (\n              <div className=\"p-8 text-center\">\n                <Bell className=\"mx-auto h-12 w-12 text-gray-300 mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-700 mb-2\">\n                  No tienes notificaciones\n                </h3>\n                <p className=\"text-gray-500\">\n                  Cuando tengas actualizaciones importantes, aparecerán aquí.\n                </p>\n              </div>\n            ) : (\n              <div className=\"divide-y divide-gray-100\">\n                {notifications.slice(0, 10).map((notification) => (\n                  <div\n                    key={notification.id}\n                    onClick={() => handleNotificationClick(notification)}\n                    className={`p-4 hover:bg-gray-50 cursor-pointer transition-colors ${\n                      !notification.read ? \"bg-primary-50\" : \"bg-white\"\n                    }`}\n                  >\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex items-start space-x-3 flex-1\">\n                        {/* Icono */}\n                        <div className=\"flex-shrink-0 mt-1\">\n                          {getNotificationIcon(notification.type)}\n                        </div>\n\n                        {/* Contenido */}\n                        <div className=\"flex-1 min-w-0\">\n                          <div className=\"flex items-center space-x-2 mb-1\">\n                            <h4 className={`text-sm font-medium ${\n                              !notification.read ? \"text-gray-900\" : \"text-gray-700\"\n                            }`}>\n                              {notification.title}\n                            </h4>\n                            {!notification.read && (\n                              <div className=\"w-1.5 h-1.5 bg-primary-500 rounded-full\"></div>\n                            )}\n                          </div>\n\n                          <p className=\"text-sm text-gray-600 mb-1\">\n                            {notification.message}\n                          </p>\n\n                          <p className=\"text-xs text-gray-400\">\n                            {formatRelativeTime(notification.createdAt)}\n                          </p>\n                        </div>\n                      </div>\n\n                      {/* Menú de acciones */}\n                      <div className=\"relative\">\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            setActiveMenu(\n                              activeMenu === notification.id ? null : notification.id!\n                            );\n                          }}\n                          className=\"p-1 rounded-full hover:bg-gray-200 transition-colors\"\n                        >\n                          <MoreVertical size={14} className=\"text-gray-500\" />\n                        </button>\n\n                        {activeMenu === notification.id && (\n                          <div className=\"absolute right-0 top-8 bg-white rounded-lg shadow-lg border border-gray-200 z-10 min-w-[140px]\">\n                            {!notification.read && (\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleMarkAsRead(notification.id!);\n                                }}\n                                className=\"w-full px-3 py-2 text-left text-sm text-gray-700 hover:bg-gray-50 flex items-center\"\n                              >\n                                <Check size={12} className=\"mr-2\" />\n                                Marcar como leída\n                              </button>\n                            )}\n                            <button\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                handleDelete(notification.id!);\n                              }}\n                              className=\"w-full px-3 py-2 text-left text-sm text-red-600 hover:bg-red-50 flex items-center\"\n                            >\n                              <Trash2 size={12} className=\"mr-2\" />\n                              Eliminar\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Footer */}\n          <div className=\"p-4 border-t border-gray-200 bg-gray-50\">\n            <Link\n              to={isAdmin ? \"/admin/notifications\" : \"/seller/notifications\"}\n              onClick={onClose}\n              className=\"block w-full text-center py-2 px-4 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors text-sm font-medium\"\n            >\n              Ver todas las notificaciones\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      {/* Click outside para cerrar menús */}\n      {activeMenu !== null && (\n        <div\n          className=\"fixed inset-0 z-0\"\n          onClick={() => setActiveMenu(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NotificationModal;\n","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {\n\tUser,\n\tSettings,\n\tBell,\n\tMenu,\n\tChevronDown,\n\tLogOut,\n\tAlertTriangle,\n} from \"lucide-react\";\nimport {AuthContext} from \"../../contexts/AuthContext\";\nimport {useHeaderCounters, useInvalidateCounters} from \"../../hooks/useHeaderCounters\";\nimport ThemeToggle from \"../common/ThemeToggle\";\nimport {useDashboard} from \"./DashboardContext\";\nimport NotificationModal from \"./NotificationModal\";\nimport {useNotifications} from \"../../hooks/useNotifications\";\n\n/**\n * Tipos de notificaciones para mostrar en el panel\n */\nexport interface Notification {\n\tid: string;\n\ttitle: string;\n\tdescription: string;\n\ttime: string;\n\tread: boolean;\n\ttype?: \"default\" | \"warning\" | \"error\" | \"success\";\n}\n\n/**\n * Tipos de acciones pendientes para mostrar en la parte superior\n */\nexport interface PendingActions {\n\t[key: string]: number;\n}\n\ninterface DashboardHeaderProps {\n\ttoggleSidebar: () => void;\n\tisAdmin?: boolean;\n\tunreadNotifications?: number;\n\tnotifications?: Notification[];\n\tpendingActions?: PendingActions;\n\tonReadAllNotifications?: () => void;\n\tvisibleInMobile?: boolean;\n}\n\n/**\n * Componente Header reutilizable para dashboards OPTIMIZADO\n */\nconst DashboardHeader: React.FC<DashboardHeaderProps> = ({\n\ttoggleSidebar,\n\tisAdmin = false,\n\tunreadNotifications: _unreadNotifications,\n\tnotifications: _notifications = [],\n\tpendingActions = {},\n\tonReadAllNotifications = () => {},\n\tvisibleInMobile = true,\n}) => {\n\tconst [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);\n\tconst [isNotificationModalOpen, setIsNotificationModalOpen] = useState(false);\n\tconst {user, logout} = useContext(AuthContext);\n\tconst {currentPageTitle} = useDashboard();\n\n\t// ✅ USAR EL HOOK UNIFICADO OPTIMIZADO - CORRECCIÓN PRINCIPAL\n\tconst {counters, loading: countersLoading} = useHeaderCounters();\n\tconst {forceRefresh} = useInvalidateCounters();\n\tconst {markAllAsRead} = useNotifications();\n\n\t// ✅ USAR EL CONTADOR DE NOTIFICACIONES DEL HOOK OPTIMIZADO\n\t// Ya no usar props, solo del hook que se conecta al backend\n\tconst finalUnreadNotifications = counters.notificationCount;\n\n\tconsole.log(\"DashboardHeader: Contadores optimizados\", {\n\t\tfinalUnreadNotifications,\n\t\thookUnread: counters.notificationCount,\n\t\tisAdmin,\n\t\tloading: countersLoading,\n\t});\n\n\t// Calcular total de acciones pendientes\n\tconst totalPendingActions = Object.values(pendingActions).reduce(\n\t\t(total, value) => total + (value || 0),\n\t\t0\n\t);\n\n\tconst toggleProfileMenu = () => {\n\t\tsetIsProfileMenuOpen(!isProfileMenuOpen);\n\t};\n\n\tconst toggleNotificationModal = () => {\n\t\tsetIsNotificationModalOpen(!isNotificationModalOpen);\n\t};\n\n\t// Función mejorada para marcar todas las notificaciones como leídas\n\tconst handleMarkAllAsRead = async () => {\n\t\tconst success = await markAllAsRead();\n\t\tif (success) {\n\t\t\t// 🔥 TIEMPO REAL: Refrescar contadores del header\n\t\t\tawait forceRefresh();\n\t\t\tconsole.log(\"🔔 Header - Contadores actualizados después de marcar todas\");\n\t\t}\n\t\t// También ejecutar callback del prop si existe\n\t\tonReadAllNotifications();\n\t};\n\n\t// Obtener la inicial del nombre del usuario para el avatar\n\tconst getInitial = () => {\n\t\treturn user?.name?.charAt(0).toUpperCase() || (isAdmin ? \"A\" : \"U\");\n\t};\n\n\t// Cerrar menús al hacer clic fuera\n\tuseEffect(() => {\n\t\tconst handleClickOutside = (event: MouseEvent) => {\n\t\t\tconst target = event.target as Element;\n\n\t\t\tif (\n\t\t\t\t!target.closest(\".profile-menu\") &&\n\t\t\t\t!target.closest(\".profile-button\")\n\t\t\t) {\n\t\t\t\tsetIsProfileMenuOpen(false);\n\t\t\t}\n\t\t};\n\n\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t};\n\t}, []);\n\n\t// Obtener el color del avatar basado en el rol\n\tconst getAvatarColor = () => {\n\t\treturn isAdmin\n\t\t\t? \"bg-red-100 text-red-600\"\n\t\t\t: \"bg-primary-100 text-primary-600\";\n\t};\n\n\treturn (\n\t\t<header className=\"bg-white shadow-sm z-20\">\n\t\t\t<div className=\"flex items-center justify-between px-4 py-3\">\n\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t{visibleInMobile && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"md:hidden text-gray-600 focus:outline-none mr-3\"\n\t\t\t\t\t\t\tonClick={toggleSidebar}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Menu size={24} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{/* Indicador de acciones pendientes */}\n\t\t\t\t\t{totalPendingActions > 0 && (\n\t\t\t\t\t\t<div className=\"flex items-center mr-4\">\n\t\t\t\t\t\t\t<span className=\"bg-red-500 text-white text-sm font-medium rounded-md px-2 py-1 flex items-center\">\n\t\t\t\t\t\t\t\t<AlertTriangle size={16} className=\"mr-1\" />\n\t\t\t\t\t\t\t\t{totalPendingActions} acción\n\t\t\t\t\t\t\t\t{totalPendingActions === 1 ? \"\" : \"es\"} pendiente\n\t\t\t\t\t\t\t\t{totalPendingActions === 1 ? \"\" : \"s\"}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<h1 className=\"text-lg font-medium text-gray-800 items-center\">\n\t\t\t\t\t\t{currentPageTitle}\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"flex items-center space-x-4\">\n\t\t\t\t\t{/* Theme toggle */}\n\t\t\t\t\t<ThemeToggle />\n\n\t\t\t\t\t{/* Visit store / Ir a Tienda - Para administradores y sellers */}\n\t\t\t\t\t{(isAdmin || user?.role === 'seller') && (\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t\t\ttarget=\"\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\tclassName=\"text-gray-600 hover:text-gray-900\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"text-sm\">{isAdmin ? 'Visitar Tienda' : 'Ir a Tienda'}</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{/* 🎆 NOTIFICACIONES CON MODAL Y BOTÓN DIRECTO */}\n\t\t\t\t\t<div className=\"flex items-center space-x-2\">\n\t\t\t\t\t\t{/* Botón directo marcar todas como leídas */}\n\t\t\t\t\t\t{finalUnreadNotifications > 0 && (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={handleMarkAllAsRead}\n\t\t\t\t\t\t\t\tclassName=\"text-xs text-primary-600 hover:text-primary-700 px-2 py-1 rounded-md hover:bg-primary-50 transition-colors\"\n\t\t\t\t\t\t\t\ttitle=\"Marcar todas como leídas\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tMarcar todas\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/* Botón de notificaciones */}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"text-gray-600 hover:text-gray-900 p-1 rounded-full relative transition-colors\"\n\t\t\t\t\t\t\tonClick={toggleNotificationModal}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Bell size={20} />\n\t\t\t\t\t\t\t{finalUnreadNotifications > 0 && (\n\t\t\t\t\t\t\t\t<span className=\"absolute top-0 right-0 transform translate-x-1/2 -translate-y-1/2 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\n\t\t\t\t\t\t\t\t\t{finalUnreadNotifications > 9\n\t\t\t\t\t\t\t\t\t\t? \"9+\"\n\t\t\t\t\t\t\t\t\t\t: finalUnreadNotifications}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{/* Indicador de loading para contadores */}\n\t\t\t\t\t\t\t{countersLoading && (\n\t\t\t\t\t\t\t\t<span className=\"absolute top-0 right-0 transform translate-x-1/2 -translate-y-1/2 bg-blue-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\n\t\t\t\t\t\t\t\t\t<div className=\"w-2 h-2 bg-white rounded-full animate-pulse\"></div>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* User Profile */}\n\t\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"profile-button flex items-center space-x-2 text-gray-800 focus:outline-none\"\n\t\t\t\t\t\t\tonClick={toggleProfileMenu}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={`h-8 w-8 rounded-full ${getAvatarColor()} flex items-center justify-center font-medium`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{getInitial()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span className=\"hidden md:block font-medium\">\n\t\t\t\t\t\t\t\t{user?.name || (isAdmin ? \"Admin\" : \"Usuario\")}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<ChevronDown size={18} className=\"hidden md:block\" />\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t{/* User Dropdown Menu */}\n\t\t\t\t\t\t{isProfileMenuOpen && (\n\t\t\t\t\t\t\t<div className=\"profile-menu absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-30 border border-gray-200\">\n\t\t\t\t\t\t\t\t<div className=\"px-4 py-3 border-b border-gray-200\">\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-gray-800\">\n\t\t\t\t\t\t\t\t\t\t{user?.name || (isAdmin ? \"Admin\" : \"Usuario\")}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p className=\"text-xs text-gray-500 truncate\">\n\t\t\t\t\t\t\t\t\t\t{user?.email ||\n\t\t\t\t\t\t\t\t\t\t\t(isAdmin ? \"admin@ejemplo.com\" : \"usuario@ejemplo.com\")}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={isAdmin ? \"/admin/profile\" : \"/seller/profile\"}\n\t\t\t\t\t\t\t\t\tclassName=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n\t\t\t\t\t\t\t\t\tonClick={() => setIsProfileMenuOpen(false)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t\t<User size={16} className=\"mr-2\" />\n\t\t\t\t\t\t\t\t\t\tMi Perfil\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={isAdmin ? \"/admin/settings\" : \"/seller/settings\"}\n\t\t\t\t\t\t\t\t\tclassName=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n\t\t\t\t\t\t\t\t\tonClick={() => setIsProfileMenuOpen(false)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t\t<Settings size={16} className=\"mr-2\" />\n\t\t\t\t\t\t\t\t\t\tConfiguración\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonClick={logout}\n\t\t\t\t\t\t\t\t\tclassName=\"block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-gray-100\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t\t<LogOut size={16} className=\"mr-2\" />\n\t\t\t\t\t\t\t\t\t\tCerrar Sesión\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* ✅ MODAL DE NOTIFICACIONES */}\n\t\t\t<NotificationModal\n\t\t\t\tisOpen={isNotificationModalOpen}\n\t\t\t\tonClose={() => setIsNotificationModalOpen(false)}\n\t\t\t\tisAdmin={isAdmin}\n\t\t\t/>\n\t\t</header>\n\t);\n};\n\nexport default DashboardHeader;\n","import React from \"react\";\r\n\r\ninterface DashboardFooterProps {\r\n\t/**\r\n\t * Tipo de dashboard para mostrar texto apropiado\r\n\t */\r\n\ttype: \"admin\" | \"seller\" | \"customer\";\r\n\r\n\t/**\r\n\t * Año actual (por defecto usa el año actual)\r\n\t */\r\n\tyear?: number;\r\n\r\n\t/**\r\n\t * Texto adicional opcional\r\n\t */\r\n\tadditionalText?: string;\r\n}\r\n\r\n/**\r\n * Componente Footer reutilizable para todos los dashboards\r\n */\r\nconst DashboardFooter: React.FC<DashboardFooterProps> = ({\r\n\ttype = \"admin\",\r\n\tyear = new Date().getFullYear(),\r\n\tadditionalText,\r\n}) => {\r\n\t// Determinar el texto según el tipo de dashboard\r\n\tconst getFooterText = () => {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"admin\":\r\n\t\t\t\treturn \"Panel de Administración Comersia\";\r\n\t\t\tcase \"seller\":\r\n\t\t\t\treturn \"Portal de Vendedor Comersia\";\r\n\t\t\tcase \"customer\":\r\n\t\t\t\treturn \"Comersia\";\r\n\t\t\tdefault:\r\n\t\t\t\treturn \"Comersia\";\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<footer className=\"bg-white py-3 px-4 text-center text-sm text-gray-500 border-t border-gray-200\">\r\n\t\t\t<p>\r\n\t\t\t\t&copy; {year} {getFooterText()}.\r\n\t\t\t\t{additionalText\r\n\t\t\t\t\t? ` ${additionalText}`\r\n\t\t\t\t\t: \" Todos los derechos reservados.\"}\r\n\t\t\t</p>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default DashboardFooter;\r\n","import type { ReactNode } from \"react\";\nimport {Outlet} from \"react-router-dom\";\nimport Sidebar from \"../dashboard/SideBar\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport DashboardFooter from \"./DashboardFooter\";\nimport {useDashboard} from \"./DashboardContext\";\n\ninterface GroupItem {\n\ttitle: string;\n\tlinks: {\n\t\tpath: string;\n\t\tlabel: string;\n\t\ticon?: React.ReactNode;\n\t\tisNotificated?: boolean;\n\t\tnotificationCount?: number;\n\t}[];\n}\n\ninterface Title {\n\ttitle: string;\n\ticon: React.ReactNode;\n}\n\ninterface BaseDashboardLayoutProps {\n\t/**\n\t * Grupos de menú para el sidebar\n\t */\n\tsidebarGroups: GroupItem[];\n\n\t/**\n\t * Título del sidebar\n\t */\n\tsidebarTitle: Title;\n\n\t/**\n\t * Componentes adicionales para insertar después del header\n\t */\n\theaderExtras?: ReactNode;\n\n\t/**\n\t * Componentes adicionales para insertar antes del footer\n\t */\n\tfooterExtras?: ReactNode;\n}\n\n/**\n * Layout base para implementar en AdminLayout, SellerLayout y otros layouts de dashboard\n */\nconst BaseDashboardLayout: React.FC<BaseDashboardLayoutProps> = ({\n\tsidebarGroups,\n\tsidebarTitle,\n\theaderExtras,\n\tfooterExtras,\n}) => {\n\tconst {\n\t\tisSidebarOpen,\n\t\ttoggleSidebar,\n\t\tmarkAllNotificationsAsRead,\n\t\tpendingActions,\n\t\tdashboardType,\n\t} = useDashboard();\n\n\n\treturn (\n\t\t<div className=\"flex h-screen bg-gray-100\">\n\t\t\t{/* Sidebar */}\n\t\t\t<Sidebar\n\t\t\t\tgroups={sidebarGroups}\n\t\t\t\ttitle={sidebarTitle}\n\t\t\t\tisOpen={isSidebarOpen}\n\t\t\t\ttoggleSidebar={toggleSidebar}\n\t\t\t/>\n\n\t\t\t{/* Main Content */}\n\t\t\t<div className=\"flex-1 flex flex-col overflow-hidden\">\n\t\t\t\t{/* Header */}\n\t\t\t\t<DashboardHeader\n\t\t\t\t\ttoggleSidebar={toggleSidebar}\n\t\t\t\t\tisAdmin={dashboardType === \"admin\"}\n\t\t\t\t\tpendingActions={pendingActions}\n\t\t\t\t\tonReadAllNotifications={markAllNotificationsAsRead}\n\t\t\t\t/>\n\n\t\t\t\t{/* Header extras - componentes adicionales que pueden ser inyectados */}\n\t\t\t\t{headerExtras && headerExtras}\n\n\t\t\t\t{/* Main Content */}\n\t\t\t\t<main className=\"flex-1 overflow-y-auto bg-gray-50 p-4 md:p-6\">\n\t\t\t\t\t<Outlet />\n\t\t\t\t</main>\n\n\t\t\t\t{/* Footer extras - componentes adicionales que pueden ser inyectados */}\n\t\t\t\t{footerExtras && footerExtras}\n\n\t\t\t\t{/* Footer */}\n\t\t\t\t<DashboardFooter type={dashboardType} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BaseDashboardLayout;\n"],"names":["DashboardContext","createContext","generateId","DashboardProvider","children","initialType","initialPageTitles","isSidebarOpen","setIsSidebarOpen","useState","dashboardType","notifications","setNotifications","unreadNotificationsCount","setUnreadNotificationsCount","pendingActions","setPendingActions","pageTitles","setPageTitles","location","useLocation","getCurrentPageTitle","pathname","path","title","useEffect","count","notification","toggleSidebar","prev","addNotification","newNotification","markAllNotificationsAsRead","markNotificationAsRead","id","setPendingAction","key","value","incrementPendingAction","decrementPendingAction","setPageTitle","jsx","useDashboard","context","useContext","SidebarLink","label","icon","isNotificated","notificationCount","jsxs","NavLink","isActive","Sidebar","groups","isOpen","X","group","index","link","linkIndex","getNotificationIcon","type","MessageCircle","Package","Truck","TrendingUp","Star","ShoppingCart","AlertTriangle","FileText","Gift","Shield","Ban","Bell","getNotificationUrl","isSeller","data","NotificationModal","onClose","isAdmin","activeMenu","setActiveMenu","roleInfo","useAuth","optimisticNotificationRead","forceRefresh","useInvalidateCounters","loading","error","unreadCount","fetchNotifications","markAsRead","markAllAsRead","deleteNotification","useNotifications","handleNotificationClick","useCallback","url","handleMarkAllAsRead","handleDelete","handleMarkAsRead","CheckCheck","formatRelativeTime","e","MoreVertical","Check","Trash2","Link","DashboardHeader","_unreadNotifications","_notifications","onReadAllNotifications","visibleInMobile","isProfileMenuOpen","setIsProfileMenuOpen","isNotificationModalOpen","setIsNotificationModalOpen","user","logout","AuthContext","currentPageTitle","counters","countersLoading","useHeaderCounters","finalUnreadNotifications","totalPendingActions","total","toggleProfileMenu","toggleNotificationModal","getInitial","handleClickOutside","event","target","getAvatarColor","Menu","ThemeToggle","ChevronDown","User","Settings","LogOut","DashboardFooter","year","additionalText","getFooterText","BaseDashboardLayout","sidebarGroups","sidebarTitle","headerExtras","footerExtras","Outlet"],"mappings":"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"}