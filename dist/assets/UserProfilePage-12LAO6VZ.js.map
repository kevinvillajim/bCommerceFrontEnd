{"version":3,"file":"UserProfilePage-12LAO6VZ.js","sources":["../../src/presentation/components/profile/ProfileSidebar.tsx","../../src/presentation/components/profile/UbicacionInput.tsx","../../src/presentation/components/profile/PersonalInfoTab.tsx","../../src/presentation/components/profile/SecurityTab.tsx","../../src/presentation/components/profile/SellerApplicationTab.tsx","../../src/presentation/components/profile/FeedbackTab.tsx","../../src/presentation/pages/UserProfilePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { User, Lock, LogOut, Store, MessageSquare } from 'lucide-react';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\ninterface ProfileSidebarProps {\r\n  activeTab: 'personal' | 'security' | 'orders' | 'seller-application' | 'feedback';\r\n  setActiveTab: (tab: 'personal' | 'security' | 'orders' | 'seller-application' | 'feedback') => void;\r\n  userCreatedAt?: string;\r\n  userName?: string;\r\n  userEmail?: string;\r\n}\r\n\r\n/**\r\n * Componente de barra lateral para el perfil de usuario\r\n */\r\nconst ProfileSidebar: React.FC<ProfileSidebarProps> = ({\r\n  activeTab,\r\n  setActiveTab,\r\n  userCreatedAt,\r\n  userName,\r\n  userEmail\r\n}) => {\r\n  const { logout, user, isSeller, isAdmin } = useAuth();\r\n  const [isUserSeller, setIsUserSeller] = useState(false);\r\n  const [isUserAdmin, setIsUserAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkUserRoles();\r\n  }, []);\r\n\r\n  const checkUserRoles = async () => {\r\n    try {\r\n      const [sellerStatus, adminStatus] = await Promise.all([\r\n        isSeller(),\r\n        isAdmin()\r\n      ]);\r\n      setIsUserSeller(sellerStatus);\r\n      setIsUserAdmin(adminStatus);\r\n    } catch (error) {\r\n      console.error('Error checking user roles:', error);\r\n    }\r\n  };\r\n  \r\n  // Obtener la inicial del usuario para el avatar\r\n  const getUserInitial = () => {\r\n    if (userName) {\r\n      return userName.charAt(0).toUpperCase();\r\n    } else if (user?.name) {\r\n      return user.name.charAt(0).toUpperCase();\r\n    }\r\n    return 'U';\r\n  };\r\n  \r\n  // Formatear fecha\r\n  const formatDate = (dateString?: string) => {\r\n    if (!dateString) return 'N/A';\r\n    \r\n    const date = new Date(dateString);\r\n    return new Intl.DateTimeFormat('es-ES', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    }).format(date);\r\n  };\r\n  \r\n  // Manejar cierre de sesión\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout();\r\n      // La redirección la maneja el hook useAuth\r\n    } catch (error) {\r\n      console.error('Error al cerrar sesión:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"lg:w-1/4\">\r\n      <div className=\"bg-white rounded-xl shadow-lg overflow-hidden\">\r\n        {/* Información de cabecera */}\r\n        <div className=\"bg-gradient-to-r from-primary-500 to-primary-600 p-6 text-white\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <div className=\"w-24 h-24 bg-white rounded-full flex items-center justify-center mb-4 border-4 border-white shadow-md\">\r\n              <span className=\"text-primary-600 text-3xl font-bold\">\r\n                {getUserInitial()}\r\n              </span>\r\n            </div>\r\n            <h2 className=\"text-xl font-semibold\">{userName || user?.name}</h2>\r\n            <p className=\"text-primary-100\">{userEmail || user?.email}</p>\r\n            \r\n            {userCreatedAt && (\r\n              <div className=\"mt-2 text-xs bg-primary-800 bg-opacity-20 rounded-full px-3 py-1\">\r\n                Cliente desde {formatDate(userCreatedAt)}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Menú de navegación */}\r\n        <nav className=\"p-4\">\r\n          <ul className=\"space-y-1\">\r\n            <li>\r\n              <button \r\n                onClick={() => setActiveTab('personal')}\r\n                className={`w-full flex items-center p-3 rounded-lg transition-colors ${\r\n                  activeTab === 'personal' \r\n                    ? 'bg-primary-50 text-primary-600 font-medium' \r\n                    : 'text-gray-700 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                <User size={18} className=\"mr-3\" />\r\n                Información Personal\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button \r\n                onClick={() => setActiveTab('security')}\r\n                className={`w-full flex items-center p-3 rounded-lg transition-colors ${\r\n                  activeTab === 'security' \r\n                    ? 'bg-primary-50 text-primary-600 font-medium' \r\n                    : 'text-gray-700 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                <Lock size={18} className=\"mr-3\" />\r\n                Seguridad\r\n              </button>\r\n            </li>\r\n            \r\n            <li>\r\n              <button \r\n                onClick={() => setActiveTab('feedback')}\r\n                className={`w-full flex items-center p-3 rounded-lg transition-colors ${\r\n                  activeTab === 'feedback' \r\n                    ? 'bg-primary-50 text-primary-600 font-medium' \r\n                    : 'text-gray-700 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                <MessageSquare size={18} className=\"mr-3\" />\r\n                Feedback y Sugerencias\r\n              </button>\r\n            </li>\r\n\r\n            {/* Mostrar solicitud de vendedor solo para usuarios normales (no vendedores ni admins) */}\r\n            {!isUserSeller && !isUserAdmin && (\r\n              <li>\r\n                <button \r\n                  onClick={() => setActiveTab('seller-application')}\r\n                  className={`w-full flex items-center p-3 rounded-lg transition-colors ${\r\n                    activeTab === 'seller-application' \r\n                      ? 'bg-primary-50 text-primary-600 font-medium' \r\n                      : 'text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  <Store size={18} className=\"mr-3\" />\r\n                  Solicitud de Vendedor\r\n                </button>\r\n              </li>\r\n            )}\r\n            <li className=\"pt-4 border-t border-gray-200 mt-4\">\r\n              <button \r\n                className=\"w-full flex items-center p-3 rounded-lg text-red-600 hover:bg-red-50 transition-colors\"\r\n                onClick={handleLogout}\r\n              >\r\n                <LogOut size={18} className=\"mr-3\" />\r\n                Cerrar Sesión\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileSidebar;","// components/UbicacionInput.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MapPin, ChevronDown } from 'lucide-react';\r\n\r\ninterface UbicacionInputProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  className?: string;\r\n}\r\n\r\n// Solo países de América Latina principales\r\nconst PAISES = [\r\n  'Ecuador', 'Colombia', 'Perú', 'Brasil', 'Argentina', \r\n  'Chile', 'Venezuela', 'Bolivia', 'Paraguay', 'Uruguay'\r\n];\r\n\r\n// Estados de Ecuador\r\nconst ESTADOS_ECUADOR = [\r\n  'Azuay', 'Bolívar', 'Cañar', 'Carchi', 'Chimborazo', 'Cotopaxi',\r\n  'El Oro', 'Esmeraldas', 'Galápagos', 'Guayas', 'Imbabura',\r\n  'Loja', 'Los Ríos', 'Manabí', 'Morona Santiago', 'Napo',\r\n  'Orellana', 'Pastaza', 'Pichincha', 'Santa Elena', 'Santo Domingo',\r\n  'Sucumbíos', 'Tungurahua', 'Zamora Chinchipe'\r\n];\r\n\r\nconst UbicacionInput: React.FC<UbicacionInputProps> = ({ value, onChange, className = '' }) => {\r\n  // Parsear ubicación existente\r\n  const parseUbicacion = (locationString: string) => {\r\n    if (!locationString) return { pais: 'Ecuador', estado: '', ciudad: '' };\r\n    \r\n    const parts = locationString.split(',').map(p => p.trim());\r\n    if (parts.length >= 3) {\r\n      return {\r\n        ciudad: parts[0] || '',\r\n        estado: parts[1] || '',\r\n        pais: parts[2] || 'Ecuador'\r\n      };\r\n    }\r\n    if (parts.length === 2) {\r\n      return {\r\n        ciudad: parts[0] || '',\r\n        estado: parts[1] || '',\r\n        pais: 'Ecuador'\r\n      };\r\n    }\r\n    return {\r\n      ciudad: locationString,\r\n      estado: '',\r\n      pais: 'Ecuador'\r\n    };\r\n  };\r\n\r\n  const [ubicacion, setUbicacion] = useState(() => parseUbicacion(value));\r\n\r\n  // Convertir a string para backend\r\n  const buildLocationString = (ub: typeof ubicacion) => {\r\n    const parts = [ub.ciudad, ub.estado, ub.pais].filter(Boolean);\r\n    return parts.join(', ');\r\n  };\r\n\r\n  // Actualizar cuando cambie el valor externo\r\n  useEffect(() => {\r\n    if (value !== buildLocationString(ubicacion)) {\r\n      setUbicacion(parseUbicacion(value));\r\n    }\r\n  }, [value]);\r\n\r\n  const handleChange = (campo: keyof typeof ubicacion, valor: string) => {\r\n    const nuevaUbicacion = { ...ubicacion, [campo]: valor };\r\n    \r\n    // Si cambia país, resetear estado\r\n    if (campo === 'pais' && valor !== 'Ecuador') {\r\n      nuevaUbicacion.estado = '';\r\n    }\r\n    \r\n    setUbicacion(nuevaUbicacion);\r\n    onChange(buildLocationString(nuevaUbicacion));\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n        <MapPin className=\"inline mr-1\" size={16} />\r\n        Ubicación\r\n      </label>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n        {/* País */}\r\n        <div className=\"relative\">\r\n          <select\r\n            value={ubicacion.pais}\r\n            onChange={(e) => handleChange('pais', e.target.value)}\r\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 appearance-none\"\r\n          >\r\n            {PAISES.map(pais => (\r\n              <option key={pais} value={pais}>{pais}</option>\r\n            ))}\r\n          </select>\r\n          <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n        </div>\r\n\r\n        {/* Estado/Provincia - Solo para Ecuador */}\r\n        {ubicacion.pais === 'Ecuador' ? (\r\n          <div className=\"relative\">\r\n            <select\r\n              value={ubicacion.estado}\r\n              onChange={(e) => handleChange('estado', e.target.value)}\r\n              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 appearance-none\"\r\n            >\r\n              <option value=\"\">Provincia...</option>\r\n              {ESTADOS_ECUADOR.map(estado => (\r\n                <option key={estado} value={estado}>{estado}</option>\r\n              ))}\r\n            </select>\r\n            <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n          </div>\r\n        ) : (\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Estado/Provincia\"\r\n            value={ubicacion.estado}\r\n            onChange={(e) => handleChange('estado', e.target.value)}\r\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n          />\r\n        )}\r\n\r\n        {/* Ciudad */}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ciudad\"\r\n          value={ubicacion.ciudad}\r\n          onChange={(e) => handleChange('ciudad', e.target.value)}\r\n          className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n        />\r\n      </div>\r\n      \r\n      {/* Vista previa */}\r\n      <div className=\"mt-2 text-sm text-gray-600\">\r\n        {buildLocationString(ubicacion) || 'Ingresa tu ubicación'}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UbicacionInput;","// PersonalInfoTab.tsx - ACTUALIZADO SIMPLE\r\nimport React, { useState, useEffect } from 'react';\r\nimport { User, Mail, MapPin, Calendar, Settings } from 'lucide-react';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport UbicacionInput from './UbicacionInput';\r\nimport type { UserProfileUpdateData } from '../../../core/domain/entities/User';\r\nimport ApiClient from '../../../infrastructure/api/apiClient';\r\n\r\n// Mantener la interfaz existente - NO CAMBIAR\r\ninterface UserProfile {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  emailVerifiedAt: string | null;\r\n  age: number | null;\r\n  gender: string | null;\r\n  location: string | null;  // Seguir usando string\r\n  created_at: string;\r\n}\r\n\r\ninterface PersonalInfoTabProps {\r\n  userProfile: UserProfile | null;\r\n  onProfileUpdate?: (updatedProfile: UserProfile) => void;\r\n}\r\n\r\n/**\r\n * Componente actualizado con mejor UX para ubicación\r\n * MANTIENE total compatibilidad con backend actual\r\n */\r\nconst PersonalInfoTab: React.FC<PersonalInfoTabProps> = ({\r\n  userProfile,\r\n  onProfileUpdate\r\n}) => {\r\n  const { updateProfile } = useAuth();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [profileError, setProfileError] = useState<string | null>(null);\r\n  const [profileSuccess, setProfileSuccess] = useState<string | null>(null);\r\n  \r\n  // Estado para formulario - IGUAL que antes\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    age: '',\r\n    gender: '',\r\n    location: ''  // Seguir usando string\r\n  });\r\n  \r\n  // Inicializar formulario con datos del usuario\r\n  useEffect(() => {\r\n    if (userProfile) {\r\n      setFormData({\r\n        name: userProfile.name || '',\r\n        email: userProfile.email || '',\r\n        age: userProfile.age?.toString() || '',\r\n        gender: userProfile.gender || '',\r\n        location: userProfile.location || ''\r\n      });\r\n    }\r\n  }, [userProfile]);\r\n\r\n  // Manejar cambios en campos simples\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Manejar cambio de ubicación (desde el componente)\r\n  const handleLocationChange = (newLocation: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      location: newLocation\r\n    }));\r\n  };\r\n\r\n  // Envío del formulario - EXACTAMENTE igual que antes\r\n  const handlePersonalInfoSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setProfileError(null);\r\n    setProfileSuccess(null);\r\n    setIsUpdating(true);\r\n    \r\n    try {\r\n      // Mismos datos que antes - NO CAMBIOS en API\r\n      const profileData: UserProfileUpdateData = {\r\n        name: formData.name,\r\n        age: formData.age ? parseInt(formData.age) : null,\r\n        gender: formData.gender || null,\r\n        location: formData.location || null  // String simple como siempre\r\n      };\r\n      \r\n      try {\r\n        // Usar ApiClient exactamente igual\r\n        const updatedUser = await ApiClient.put<any>('/profile', profileData);\r\n        \r\n        if (updatedUser && onProfileUpdate && userProfile) {\r\n          const updatedProfile: UserProfile = {\r\n            ...userProfile,\r\n            name: updatedUser.name || userProfile.name,\r\n            age: updatedUser.age ?? userProfile.age,\r\n            gender: updatedUser.gender ?? userProfile.gender,\r\n            location: updatedUser.location ?? userProfile.location\r\n          };\r\n          \r\n          // ✅ ACTUALIZAR TAMBIÉN EL CONTEXTO DE AUTH PARA REFRESCAR HEADER\r\n          updateProfile(profileData);\r\n          \r\n          onProfileUpdate(updatedProfile);\r\n          setProfileSuccess('Perfil actualizado correctamente');\r\n          setIsEditing(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error con ApiClient:\", error);\r\n        \r\n        // Fallback con hook de auth (ya actualiza automáticamente el contexto)\r\n        const updatedUser = await updateProfile(profileData);\r\n        \r\n        if (updatedUser && onProfileUpdate && userProfile) {\r\n          const updatedProfile: UserProfile = {\r\n            ...userProfile,\r\n            name: updatedUser.name || userProfile.name,\r\n            age: updatedUser.age ?? userProfile.age,\r\n            gender: updatedUser.gender ?? userProfile.gender,\r\n            location: updatedUser.location ?? userProfile.location\r\n          };\r\n          \r\n          onProfileUpdate(updatedProfile);\r\n          setProfileSuccess('Perfil actualizado correctamente');\r\n          setIsEditing(false);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al actualizar perfil:', error);\r\n      if (error instanceof Error) {\r\n        setProfileError(error.message);\r\n      } else {\r\n        setProfileError('No se pudo actualizar el perfil. Inténtelo de nuevo.');\r\n      }\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  // Cancelar edición\r\n  const handleCancelEdit = () => {\r\n    setIsEditing(false);\r\n    if (userProfile) {\r\n      setFormData({\r\n        name: userProfile.name || '',\r\n        email: userProfile.email || '',\r\n        age: userProfile.age?.toString() || '',\r\n        gender: userProfile.gender || '',\r\n        location: userProfile.location || ''\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h3 className=\"text-xl font-semibold\">Información Personal</h3>\r\n        \r\n        {!isEditing && (\r\n          <button \r\n            onClick={() => setIsEditing(true)}\r\n            className=\"flex items-center text-primary-600 hover:text-primary-700\"\r\n          >\r\n            <Settings size={18} className=\"mr-1\" />\r\n            Editar\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Mensajes de éxito/error */}\r\n      {profileSuccess && (\r\n        <div className=\"bg-green-50 border-l-4 border-green-400 p-4 mb-4 text-sm text-green-700\">\r\n          {profileSuccess}\r\n        </div>\r\n      )}\r\n      \r\n      {profileError && (\r\n        <div className=\"bg-red-50 border-l-4 border-red-400 p-4 mb-4 text-sm text-red-700\">\r\n          {profileError}\r\n        </div>\r\n      )}\r\n      \r\n      {isEditing ? (\r\n        <form onSubmit={handlePersonalInfoSubmit} className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Nombre */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Nombre completo *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n              />\r\n            </div>\r\n            \r\n            {/* Email (solo lectura) */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Correo electrónico\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                value={formData.email}\r\n                disabled\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg bg-gray-100 text-gray-500\"\r\n              />\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                El correo no se puede cambiar por seguridad\r\n              </p>\r\n            </div>\r\n            \r\n            {/* Edad */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Edad\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"age\"\r\n                value={formData.age}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"150\"\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n              />\r\n            </div>\r\n            \r\n            {/* Género */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Género\r\n              </label>\r\n              <select\r\n                name=\"gender\"\r\n                value={formData.gender}\r\n                onChange={handleChange}\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n              >\r\n                <option value=\"\">Seleccionar...</option>\r\n                <option value=\"Masculino\">Masculino</option>\r\n                <option value=\"Femenino\">Femenino</option>\r\n                <option value=\"No binario\">No binario</option>\r\n                <option value=\"Prefiero no decirlo\">Prefiero no decir</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* NUEVO componente de ubicación - SIMPLE pero útil */}\r\n          <UbicacionInput\r\n            value={formData.location}\r\n            onChange={handleLocationChange}\r\n          />\r\n          \r\n          {/* Botones */}\r\n          <div className=\"flex gap-4 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCancelEdit}\r\n              className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isUpdating}\r\n              className=\"px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:opacity-50\"\r\n            >\r\n              {isUpdating ? 'Guardando...' : 'Guardar Cambios'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <div className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <div className=\"text-sm text-gray-500 mb-1\">Nombre completo</div>\r\n              <div className=\"flex items-center text-gray-800\">\r\n                <User size={18} className=\"text-primary-500 mr-2\" />\r\n                {userProfile?.name || 'No especificado'}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <div className=\"text-sm text-gray-500 mb-1\">Correo electrónico</div>\r\n              <div className=\"flex items-center text-gray-800\">\r\n                <Mail size={18} className=\"text-primary-500 mr-2\" />\r\n                {userProfile?.email || 'No especificado'}\r\n                {userProfile?.emailVerifiedAt && (\r\n                  <span className=\"ml-2 bg-green-100 text-green-800 text-xs px-2 py-0.5 rounded-full\">\r\n                    Verificado\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <div className=\"text-sm text-gray-500 mb-1\">Edad</div>\r\n              <div className=\"flex items-center text-gray-800\">\r\n                <Calendar size={18} className=\"text-primary-500 mr-2\" />\r\n                {userProfile?.age || 'No especificada'}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <div className=\"text-sm text-gray-500 mb-1\">Género</div>\r\n              <div className=\"flex items-center text-gray-800\">\r\n                <User size={18} className=\"text-primary-500 mr-2\" />\r\n                {userProfile?.gender || 'No especificado'}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"bg-gray-50 p-4 rounded-lg md:col-span-2\">\r\n              <div className=\"text-sm text-gray-500 mb-1\">Ubicación</div>\r\n              <div className=\"flex items-center text-gray-800\">\r\n                <MapPin size={18} className=\"text-primary-500 mr-2\" />\r\n                {userProfile?.location || 'No especificada'}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-blue-50 border-l-4 border-primary-400 p-4 text-sm text-primary-700\">\r\n            <p>\r\n              <strong>Nota:</strong> Tu información de ubicación se utiliza para calcular costos de envío y mejorar tu experiencia de compra.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalInfoTab;","import React, { useState } from 'react';\r\nimport { Eye, EyeOff } from 'lucide-react';\r\nimport { API_ENDPOINTS } from '../../../constants/apiEndpoints';\r\nimport ApiClient from '../../../infrastructure/api/apiClient';\r\nimport { usePasswordValidation } from '../../hooks/usePasswordValidation';\r\n\r\n/**\r\n * Componente de pestaña de seguridad\r\n */\r\nconst SecurityTab: React.FC = () => {\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [passwordError, setPasswordError] = useState<string | null>(null);\r\n  const [passwordSuccess, setPasswordSuccess] = useState<string | null>(null);\r\n  \r\n  // Hook para validación dinámica de contraseñas\r\n  const { rules: passwordRules, validatePassword } = usePasswordValidation();\r\n  \r\n  // Estado de formulario para contraseñas\r\n  const [formData, setFormData] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n  \r\n  // Estado para mostrar/ocultar contraseñas\r\n  const [showPassword, setShowPassword] = useState({\r\n    current: false,\r\n    new: false,\r\n    confirm: false\r\n  });\r\n\r\n  // Manejar cambios en el formulario\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Manejar envío del formulario de cambio de contraseña\r\n  const handlePasswordSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setPasswordError(null);\r\n    setPasswordSuccess(null);\r\n    setIsUpdating(true);\r\n    \r\n    // Validación dinámica\r\n    if (formData.newPassword !== formData.confirmPassword) {\r\n      setPasswordError('Las contraseñas no coinciden');\r\n      setIsUpdating(false);\r\n      return;\r\n    }\r\n    \r\n    // Usar validación dinámica basada en configuración del admin\r\n    const passwordValidation = validatePassword(formData.newPassword);\r\n    if (!passwordValidation.isValid) {\r\n      setPasswordError(passwordValidation.errors[0]); // Mostrar el primer error\r\n      setIsUpdating(false);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Llamar al endpoint para actualizar contraseña\r\n      await ApiClient.post(API_ENDPOINTS.AUTH.UPDATE_PASSWORD, {\r\n        current_password: formData.currentPassword,\r\n        password: formData.newPassword,\r\n        password_confirmation: formData.confirmPassword\r\n      });\r\n      \r\n      // Limpiar campos de contraseña\r\n      setFormData({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      });\r\n      \r\n      setPasswordSuccess('Contraseña actualizada correctamente');\r\n    } catch (error: any) {\r\n      console.error('Error al cambiar contraseña:', error);\r\n      \r\n      if (error.response?.data?.errors) {\r\n        // Mostrar el primer error de validación\r\n        const errorMessages = Object.values(error.response.data.errors).flat();\r\n        setPasswordError(errorMessages[0] as string);\r\n      } else if (error.response?.data?.message) {\r\n        setPasswordError(error.response.data.message);\r\n      } else {\r\n        setPasswordError('Error al actualizar la contraseña. Inténtelo de nuevo.');\r\n      }\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  // Función para cambiar visualización de contraseña\r\n  const togglePasswordVisibility = (field: 'current' | 'new' | 'confirm') => {\r\n    setShowPassword(prev => ({\r\n      ...prev,\r\n      [field]: !prev[field]\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h3 className=\"text-xl font-semibold mb-6\">Configuración de Seguridad</h3>\r\n      \r\n      {/* Mensajes de éxito/error */}\r\n      {passwordSuccess && (\r\n        <div className=\"bg-green-50 border-l-4 border-green-400 p-4 mb-4 text-sm text-green-700\">\r\n          {passwordSuccess}\r\n        </div>\r\n      )}\r\n      \r\n      {passwordError && (\r\n        <div className=\"bg-red-50 border-l-4 border-red-400 p-4 mb-4 text-sm text-red-700\">\r\n          {passwordError}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"mb-8\">\r\n        <h4 className=\"font-medium text-gray-800 mb-4\">Cambiar Contraseña</h4>\r\n        <form onSubmit={handlePasswordSubmit}>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"currentPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Contraseña actual\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  type={showPassword.current ? 'text' : 'password'}\r\n                  id=\"currentPassword\"\r\n                  name=\"currentPassword\"\r\n                  value={formData.currentPassword}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-3 pr-10 border border-gray-300 rounded-lg focus:ring-primary-500 focus:border-primary-500\"\r\n                  required\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-500 hover:text-gray-700\"\r\n                  onClick={() => togglePasswordVisibility('current')}\r\n                >\r\n                  {showPassword.current ? <EyeOff size={18} /> : <Eye size={18} />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Nueva contraseña\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  type={showPassword.new ? 'text' : 'password'}\r\n                  id=\"newPassword\"\r\n                  name=\"newPassword\"\r\n                  value={formData.newPassword}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-3 pr-10 border border-gray-300 rounded-lg focus:ring-primary-500 focus:border-primary-500\"\r\n                  required\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-500 hover:text-gray-700\"\r\n                  onClick={() => togglePasswordVisibility('new')}\r\n                >\r\n                  {showPassword.new ? <EyeOff size={18} /> : <Eye size={18} />}\r\n                </button>\r\n              </div>\r\n              <p className=\"mt-1 text-xs text-gray-500\">\r\n                {passwordRules.validationMessage}\r\n              </p>\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Confirmar nueva contraseña\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  type={showPassword.confirm ? 'text' : 'password'}\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  value={formData.confirmPassword}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-3 pr-10 border border-gray-300 rounded-lg focus:ring-primary-500 focus:border-primary-500\"\r\n                  required\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-500 hover:text-gray-700\"\r\n                  onClick={() => togglePasswordVisibility('confirm')}\r\n                >\r\n                  {showPassword.confirm ? <EyeOff size={18} /> : <Eye size={18} />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mt-6\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700\"\r\n              disabled={isUpdating}\r\n            >\r\n              {isUpdating ? 'Actualizando...' : 'Actualizar Contraseña'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SecurityTab;","import React, { useState, useEffect } from 'react';\r\nimport { Store, CheckCircle, XCircle, Clock, AlertCircle, Send } from 'lucide-react';\r\nimport ApiClient from '../../../infrastructure/api/apiClient';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\ninterface SellerApplication {\r\n  id: number;\r\n  store_name: string;\r\n  business_activity: string;\r\n  products_to_sell: string;\r\n  ruc: string;\r\n  contact_email: string;\r\n  phone: string;\r\n  physical_address: string;\r\n  business_description?: string;\r\n  experience?: string;\r\n  additional_info?: string;\r\n  status: 'pending' | 'approved' | 'rejected';\r\n  rejection_reason?: string;\r\n  reviewed_at?: string;\r\n  created_at: string;\r\n}\r\n\r\ninterface ApplicationFormData {\r\n  store_name: string;\r\n  business_activity: string;\r\n  products_to_sell: string;\r\n  ruc: string;\r\n  contact_email: string;\r\n  phone: string;\r\n  physical_address: string;\r\n  business_description: string;\r\n  experience: string;\r\n  additional_info: string;\r\n}\r\n\r\nconst SellerApplicationTab: React.FC = () => {\r\n  const { user, isSeller } = useAuth();\r\n  const [application, setApplication] = useState<SellerApplication | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  const [isUserSeller, setIsUserSeller] = useState(false);\r\n\r\n  const [formData, setFormData] = useState<ApplicationFormData>({\r\n    store_name: '',\r\n    business_activity: '',\r\n    products_to_sell: '',\r\n    ruc: '',\r\n    contact_email: user?.email || '',\r\n    phone: '',\r\n    physical_address: '',\r\n    business_description: '',\r\n    experience: '',\r\n    additional_info: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    checkSellerStatus();\r\n    fetchApplication();\r\n  }, []);\r\n\r\n  const checkSellerStatus = async () => {\r\n    try {\r\n      const sellerStatus = await isSeller();\r\n      setIsUserSeller(sellerStatus);\r\n    } catch (error) {\r\n      console.error('Error checking seller status:', error);\r\n    }\r\n  };\r\n\r\n  const fetchApplication = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await ApiClient.get('/seller-applications/my-application') as { status: string; data: SellerApplication | null };\r\n      if (response?.status === 'success' && response.data) {\r\n        setApplication(response.data);\r\n      } else if (response?.status === 'success' && !response.data) {\r\n        // No application found\r\n        setApplication(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching application:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n\r\n    try {\r\n      const response = await ApiClient.post('/seller-applications', formData) as { status: string };\r\n      if (response?.status === 'success') {\r\n        setSuccess('Solicitud enviada exitosamente. Te contactaremos pronto.');\r\n        setShowForm(false);\r\n        await fetchApplication();\r\n        // Reset form\r\n        setFormData({\r\n          store_name: '',\r\n          business_activity: '',\r\n          products_to_sell: '',\r\n          ruc: '',\r\n          contact_email: user?.email || '',\r\n          phone: '',\r\n          physical_address: '',\r\n          business_description: '',\r\n          experience: '',\r\n          additional_info: ''\r\n        });\r\n      }\r\n    } catch (error: any) {\r\n      setError(error.response?.data?.message || 'Error al enviar la solicitud');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return <Clock className=\"h-5 w-5 text-yellow-500\" />;\r\n      case 'approved':\r\n        return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\r\n      case 'rejected':\r\n        return <XCircle className=\"h-5 w-5 text-red-500\" />;\r\n      default:\r\n        return <AlertCircle className=\"h-5 w-5 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return 'Pendiente de revisión';\r\n      case 'approved':\r\n        return 'Aprobada';\r\n      case 'rejected':\r\n        return 'Rechazada';\r\n      default:\r\n        return 'Desconocido';\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'approved':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'rejected':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const handleNewApplication = () => {\r\n    if (application && application.status === 'rejected') {\r\n      // Pre-fill form with previous data\r\n      setFormData({\r\n        store_name: application.store_name,\r\n        business_activity: application.business_activity,\r\n        products_to_sell: application.products_to_sell,\r\n        ruc: application.ruc,\r\n        contact_email: application.contact_email,\r\n        phone: application.phone,\r\n        physical_address: application.physical_address,\r\n        business_description: application.business_description || '',\r\n        experience: application.experience || '',\r\n        additional_info: application.additional_info || ''\r\n      });\r\n    }\r\n    setShowForm(true);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If user is already a seller\r\n  if (isUserSeller) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <div className=\"text-center\">\r\n          <Store className=\"h-16 w-16 text-green-500 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n            ¡Ya eres un vendedor!\r\n          </h3>\r\n          <p className=\"text-gray-600\">\r\n            Ya tienes una cuenta de vendedor activa en Comersia.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"flex items-center mb-6\">\r\n        <Store className=\"h-6 w-6 mr-2 text-primary-600\" />\r\n        <h2 className=\"text-2xl font-bold text-gray-900\">Solicitud de Vendedor</h2>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mb-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {success && (\r\n        <div className=\"mb-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded\">\r\n          {success}\r\n        </div>\r\n      )}\r\n\r\n      {/* Show form if requested */}\r\n      {showForm ? (\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Nombre de la tienda *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"store_name\"\r\n                value={formData.store_name}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                RUC *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"ruc\"\r\n                value={formData.ruc}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Email de contacto *\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"contact_email\"\r\n                value={formData.contact_email}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Teléfono *\r\n              </label>\r\n              <input\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                value={formData.phone}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Actividad comercial *\r\n            </label>\r\n            <textarea\r\n              name=\"business_activity\"\r\n              value={formData.business_activity}\r\n              onChange={handleInputChange}\r\n              required\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Describe tu actividad comercial principal\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Productos que deseas vender *\r\n            </label>\r\n            <textarea\r\n              name=\"products_to_sell\"\r\n              value={formData.products_to_sell}\r\n              onChange={handleInputChange}\r\n              required\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Describe los tipos de productos que planeas vender\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Dirección física *\r\n            </label>\r\n            <textarea\r\n              name=\"physical_address\"\r\n              value={formData.physical_address}\r\n              onChange={handleInputChange}\r\n              required\r\n              rows={2}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Dirección completa de tu negocio\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Descripción del negocio\r\n            </label>\r\n            <textarea\r\n              name=\"business_description\"\r\n              value={formData.business_description}\r\n              onChange={handleInputChange}\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Cuéntanos más sobre tu negocio\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Experiencia en ventas\r\n            </label>\r\n            <textarea\r\n              name=\"experience\"\r\n              value={formData.experience}\r\n              onChange={handleInputChange}\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Describe tu experiencia previa en ventas (opcional)\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Información adicional\r\n            </label>\r\n            <textarea\r\n              name=\"additional_info\"\r\n              value={formData.additional_info}\r\n              onChange={handleInputChange}\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Cualquier información adicional que consideres relevante\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowForm(false)}\r\n              className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"px-6 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center\"\r\n            >\r\n              {isSubmitting ? (\r\n                <>\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent mr-2\"></div>\r\n                  Enviando...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Send className=\"h-4 w-4 mr-2\" />\r\n                  Enviar solicitud\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        // Show existing application status or first-time form\r\n        <div>\r\n          {application ? (\r\n            // Show existing application status\r\n            <div className=\"bg-gray-50 rounded-lg p-6 mb-6\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h3 className=\"text-lg font-semibold\">Estado de tu solicitud</h3>\r\n                <div className={`flex items-center px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(application.status)}`}>\r\n                  {getStatusIcon(application.status)}\r\n                  <span className=\"ml-2\">{getStatusText(application.status)}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                <div>\r\n                  <span className=\"font-medium text-gray-700\">Nombre de tienda:</span>\r\n                  <p className=\"text-gray-900\">{application.store_name}</p>\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-medium text-gray-700\">RUC:</span>\r\n                  <p className=\"text-gray-900\">{application.ruc}</p>\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-medium text-gray-700\">Fecha de solicitud:</span>\r\n                  <p className=\"text-gray-900\">\r\n                    {new Date(application.created_at).toLocaleDateString('es-ES')}\r\n                  </p>\r\n                </div>\r\n                {application.reviewed_at && (\r\n                  <div>\r\n                    <span className=\"font-medium text-gray-700\">Fecha de revisión:</span>\r\n                    <p className=\"text-gray-900\">\r\n                      {new Date(application.reviewed_at).toLocaleDateString('es-ES')}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {application.status === 'rejected' && application.rejection_reason && (\r\n                <div className=\"mt-4 p-4 bg-red-50 rounded-lg\">\r\n                  <h4 className=\"font-medium text-red-800 mb-2\">Motivo del rechazo:</h4>\r\n                  <p className=\"text-red-700\">{application.rejection_reason}</p>\r\n                </div>\r\n              )}\r\n\r\n              {application.status === 'approved' && (\r\n                <div className=\"mt-4 p-4 bg-green-50 rounded-lg\">\r\n                  <h4 className=\"font-medium text-green-800 mb-2\">¡Felicitaciones!</h4>\r\n                  <p className=\"text-green-700 mb-3\">\r\n                    Tu solicitud ha sido aprobada. Ya puedes acceder a tu panel de vendedor.\r\n                  </p>\r\n                  <a \r\n                    href=\"/seller\" \r\n                    className=\"inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors text-sm\"\r\n                  >\r\n                    Ir al Panel de Vendedor\r\n                  </a>\r\n                </div>\r\n              )}\r\n\r\n              {application.status === 'rejected' && (\r\n                <div className=\"mt-4 p-4 bg-primary-50 rounded-lg\">\r\n                  <h4 className=\"font-medium text-primary-800 mb-2\">¿Quieres intentar de nuevo?</h4>\r\n                  <p className=\"text-primary-700 mb-3\">\r\n                    Si has solucionado los problemas mencionados en el motivo del rechazo, puedes enviar una nueva solicitud.\r\n                  </p>\r\n                  <button\r\n                    onClick={handleNewApplication}\r\n                    className=\"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors text-sm\"\r\n                  >\r\n                    <Send className=\"h-4 w-4 mr-2\" />\r\n                    Enviar Nueva Solicitud\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            // Show first-time application form\r\n            <div className=\"text-center\">\r\n              <div className=\"bg-primary-50 rounded-lg p-8 mb-6\">\r\n                <Store className=\"h-16 w-16 text-primary-600 mx-auto mb-4\" />\r\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n                  ¿Quieres ser vendedor en Comersia?\r\n                </h3>\r\n                <p className=\"text-gray-600 mb-6\">\r\n                  Para ser vendedor en nuestra plataforma, debes completar una solicitud.\r\n                  Nuestro equipo la revisará y te contactaremos pronto.\r\n                </p>\r\n                <button\r\n                  onClick={() => setShowForm(true)}\r\n                  className=\"bg-primary-600 text-white px-6 py-3 rounded-lg hover:bg-primary-700 transition-colors flex items-center mx-auto\"\r\n                >\r\n                  <Send className=\"h-5 w-5 mr-2\" />\r\n                  Solicitar ser vendedor\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellerApplicationTab;","import React, { useState, useEffect } from 'react';\r\nimport { Send, MessageSquare, Clock, CheckCircle, XCircle, Gift, AlertCircle, Copy } from 'lucide-react';\r\nimport ApiClient from '../../../infrastructure/api/apiClient';\r\nimport { API_ENDPOINTS } from '../../../constants/apiEndpoints';\r\n\r\ninterface Feedback {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  type: 'bug' | 'improvement' | 'other';\r\n  status: 'pending' | 'approved' | 'rejected';\r\n  admin_notes?: string;\r\n  created_at: string;\r\n  discount_code?: {\r\n    code: string;\r\n    discount_percentage: number;\r\n    expires_at: string;\r\n    is_used: boolean;\r\n    used_at?: string;\r\n    is_expired: boolean;\r\n    days_left: number;\r\n  };\r\n}\r\n\r\nconst FeedbackTab: React.FC = () => {\r\n  const [feedbacks, setFeedbacks] = useState<Feedback[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [copiedCode, setCopiedCode] = useState<string | null>(null);\r\n  \r\n  // Form state\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    type: 'improvement' as Feedback['type']\r\n  });\r\n\r\n  // Validation errors state\r\n  const [validationErrors, setValidationErrors] = useState<{[key: string]: string[]}>({});\r\n\r\n  useEffect(() => {\r\n    fetchFeedbacks();\r\n  }, []);\r\n\r\n  const fetchFeedbacks = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await ApiClient.get(`${API_ENDPOINTS.FEEDBACK.LIST}?limit=50`) as { data: Feedback[] };\r\n      setFeedbacks(response.data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching feedbacks:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = async (code: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(code);\r\n      setCopiedCode(code);\r\n      setTimeout(() => setCopiedCode(null), 2000);\r\n    } catch (err) {\r\n      console.error('Failed to copy code:', err);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // Clear previous validation errors\r\n    setValidationErrors({});\r\n    \r\n    // Basic client-side validation\r\n    if (!formData.title.trim()) {\r\n      setValidationErrors({ title: ['El título es obligatorio'] });\r\n      return;\r\n    }\r\n    \r\n    if (formData.title.length < 5) {\r\n      setValidationErrors({ title: ['El título debe tener al menos 5 caracteres'] });\r\n      return;\r\n    }\r\n    \r\n    if (!formData.description.trim()) {\r\n      setValidationErrors({ description: ['La descripción es obligatoria'] });\r\n      return;\r\n    }\r\n    \r\n    if (formData.description.length < 20) {\r\n      setValidationErrors({ description: ['La descripción debe tener al menos 20 caracteres'] });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n      await ApiClient.post(API_ENDPOINTS.FEEDBACK.CREATE, formData);\r\n      \r\n      // Reset form and refresh list\r\n      setFormData({ title: '', description: '', type: 'improvement' });\r\n      setValidationErrors({});\r\n      setShowForm(false);\r\n      await fetchFeedbacks();\r\n    } catch (error: any) {\r\n      console.error('Error submitting feedback:', error);\r\n      \r\n      // Handle validation errors from backend\r\n      if (error.response?.status === 422) {\r\n        // Laravel validation errors - try multiple possible locations\r\n        const errorData = error.response.data;\r\n        let validationErrors = {};\r\n        \r\n        if (errorData?.errors) {\r\n          validationErrors = errorData.errors;\r\n        } else if (errorData?.data) {\r\n          validationErrors = errorData.data;\r\n        } else if (errorData && typeof errorData === 'object' && !errorData.message) {\r\n          // If errorData is directly the errors object (like {description: [...], type: [...]})\r\n          validationErrors = errorData;\r\n        }\r\n        \r\n        console.log('Validation errors received:', validationErrors);\r\n        setValidationErrors(validationErrors);\r\n      } else {\r\n        // Handle other types of errors\r\n        const errorMessage = error.response?.data?.message || error.message || 'Error al enviar feedback';\r\n        setValidationErrors({ general: [errorMessage] });\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: Feedback['status']) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return <Clock className=\"w-5 h-5 text-yellow-500\" />;\r\n      case 'approved':\r\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\r\n      case 'rejected':\r\n        return <XCircle className=\"w-5 h-5 text-red-500\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: Feedback['status']) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return 'Pendiente';\r\n      case 'approved':\r\n        return 'Aprobado';\r\n      case 'rejected':\r\n        return 'Rechazado';\r\n    }\r\n  };\r\n\r\n  const getTypeText = (type: Feedback['type']) => {\r\n    switch (type) {\r\n      case 'bug':\r\n        return 'Error/Bug';\r\n      case 'improvement':\r\n        return 'Mejora';\r\n      case 'other':\r\n        return 'Otro';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('es-ES', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\nfunction DiasAHorasYMinutos(decimalDias: number): string {\r\n  const dias = Math.floor(decimalDias);\r\n  const horasDecimales = (decimalDias - dias) * 24;\r\n  const horas = Math.floor(horasDecimales);\r\n  const minutos = Math.floor((horasDecimales - horas) * 60);\r\n\r\n  return `Te quedan ${dias} días, ${horas} horas y ${minutos} minutos para utilizar este cupón.`;\r\n}\r\n\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Feedback y Sugerencias</h2>\r\n          <p className=\"text-gray-600 mt-1\">\r\n            Comparte tus opiniones, reporta errores o sugiere mejoras. ¡Si tu feedback es aprobado, recibirás un cupón de descuento especial!\r\n          </p>\r\n        </div>\r\n        <button\r\n          onClick={() => setShowForm(!showForm)}\r\n          className=\"bg-primary-600 text-white px-4 py-2 rounded-lg hover:bg-primary-700 transition-colors flex items-center gap-2\"\r\n        >\r\n          <MessageSquare className=\"w-4 h-4\" />\r\n          Nuevo Feedback\r\n        </button>\r\n      </div>\r\n\r\n      {/* Información sobre el sistema de recompensas */}\r\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\">\r\n        <div className=\"flex items-start gap-3\">\r\n          <AlertCircle className=\"w-5 h-5 text-blue-600 mt-0.5\" />\r\n          <div>\r\n            <h3 className=\"font-semibold text-blue-900\">¿Cómo funciona el sistema de recompensas?</h3>\r\n            <p className=\"text-blue-700 text-sm mt-1\">\r\n              Cuando envías feedback valioso (reportes de bugs, sugerencias útiles, o ideas de mejora), \r\n              nuestro equipo lo revisa. Si es aprobado, recibirás un cupón de descuento que podrás usar en cualquier compra.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {/* Formulario para nuevo feedback */}\r\n      {showForm && (\r\n        <div className=\"bg-gray-50 rounded-lg p-6 mb-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Enviar Nuevo Feedback</h3>\r\n          \r\n          {/* Errores generales */}\r\n          {validationErrors.general && (\r\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <AlertCircle className=\"w-5 h-5 text-red-600\" />\r\n                <div>\r\n                  {validationErrors.general.map((error, index) => (\r\n                    <p key={index} className=\"text-red-700 text-sm\">{error}</p>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Tipo de Feedback\r\n              </label>\r\n              <select\r\n                value={formData.type}\r\n                onChange={(e) => setFormData({ ...formData, type: e.target.value as Feedback['type'] })}\r\n                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent ${\r\n                  validationErrors.type ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n                }`}\r\n              >\r\n                <option value=\"improvement\">Mejora</option>\r\n                <option value=\"bug\">Error/Bug</option>\r\n                <option value=\"other\">Otro</option>\r\n              </select>\r\n              {validationErrors.type && (\r\n                <div className=\"mt-2\">\r\n                  {validationErrors.type.map((error, index) => (\r\n                    <p key={index} className=\"text-red-600 text-sm\">{error}</p>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Título <span className=\"text-gray-500\">(mínimo 5 caracteres)</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={formData.title}\r\n                onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n                placeholder=\"Describe brevemente tu feedback\"\r\n                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent ${\r\n                  validationErrors.title ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n                }`}\r\n                required\r\n              />\r\n              <div className=\"mt-1 text-sm text-gray-500\">\r\n                {formData.title.length}/100 caracteres\r\n              </div>\r\n              {validationErrors.title && (\r\n                <div className=\"mt-2\">\r\n                  {validationErrors.title.map((error, index) => (\r\n                    <p key={index} className=\"text-red-600 text-sm\">{error}</p>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Descripción <span className=\"text-gray-500\">(mínimo 20 caracteres)</span>\r\n              </label>\r\n              <textarea\r\n                value={formData.description}\r\n                onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                placeholder=\"Describe detalladamente tu feedback, sugerencia o el error encontrado\"\r\n                rows={4}\r\n                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent ${\r\n                  validationErrors.description ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n                }`}\r\n                required\r\n              />\r\n              <div className=\"mt-1 text-sm text-gray-500\">\r\n                {formData.description.length}/1000 caracteres\r\n              </div>\r\n              {validationErrors.description && (\r\n                <div className=\"mt-2\">\r\n                  {validationErrors.description.map((error, index) => (\r\n                    <p key={index} className=\"text-red-600 text-sm\">{error}</p>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"flex gap-3\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className=\"bg-primary-600 text-white px-6 py-2 rounded-lg hover:bg-primary-700 transition-colors flex items-center gap-2 disabled:opacity-50\"\r\n              >\r\n                <Send className=\"w-4 h-4\" />\r\n                {isSubmitting ? 'Enviando...' : 'Enviar Feedback'}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowForm(false)}\r\n                className=\"bg-gray-600 text-white px-6 py-2 rounded-lg hover:bg-gray-400 transition-colors\"\r\n              >\r\n                Cancelar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      {/* Lista de feedback */}\r\n      <div className=\"space-y-4\">\r\n        {feedbacks.length === 0 ? (\r\n          <div className=\"text-center py-12\">\r\n            <MessageSquare className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No tienes feedback enviado</h3>\r\n            <p className=\"text-gray-500\">\r\n              ¡Comparte tus ideas y sugerencias para mejorar la plataforma!\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          feedbacks.map((feedback) => (\r\n            <div\r\n              key={feedback.id}\r\n              className=\"bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow\"\r\n            >\r\n              <div className=\"flex items-start justify-between mb-3\">\r\n                <div>\r\n                  <h3 className=\"font-semibold text-gray-900\">{feedback.title}</h3>\r\n                  <div className=\"flex items-center gap-2 mt-1\">\r\n                    <span className=\"text-sm text-gray-500\">{getTypeText(feedback.type)}</span>\r\n                    <span className=\"text-gray-300\">•</span>\r\n                    <span className=\"text-sm text-gray-500\">{formatDate(feedback.created_at)}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  {getStatusIcon(feedback.status)}\r\n                  <span className={`text-sm font-medium ${\r\n                    feedback.status === 'approved' ? 'text-green-600' :\r\n                    feedback.status === 'rejected' ? 'text-red-600' :\r\n                    'text-yellow-600'\r\n                  }`}>\r\n                    {getStatusText(feedback.status)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <p className=\"text-gray-700 mb-4\">{feedback.description}</p>\r\n\r\n              {feedback.admin_notes && (\r\n                <div className=\"bg-gray-50 rounded-lg p-3 mb-4\">\r\n                  <h4 className=\"font-medium text-gray-900 mb-1\">Respuesta del equipo:</h4>\r\n                  <p className=\"text-gray-700 text-sm\">{feedback.admin_notes}</p>\r\n                </div>\r\n              )}\r\n\r\n              {feedback.discount_code && (\r\n                <div className={`border rounded-lg p-4 ${\r\n                  feedback.discount_code.is_used || feedback.discount_code.is_expired \r\n                    ? 'bg-red-50 border-red-200' \r\n                    : 'bg-green-50 border-green-200'\r\n                }`}>\r\n                  <div className=\"flex items-center justify-between mb-3\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Gift className={`w-5 h-5 ${\r\n                        feedback.discount_code.is_used || feedback.discount_code.is_expired \r\n                          ? 'text-red-600' \r\n                          : 'text-green-600'\r\n                      }`} />\r\n                      <h4 className={`font-medium ${\r\n                        feedback.discount_code.is_used || feedback.discount_code.is_expired \r\n                          ? 'text-red-900' \r\n                          : 'text-green-900'\r\n                      }`}>\r\n                        {feedback.discount_code.is_used ? '¡Cupón ya utilizado!' : \r\n                         feedback.discount_code.is_expired ? '¡Cupón expirado!' :\r\n                         '¡Cupón de descuento disponible!'}\r\n                      </h4>\r\n                    </div>\r\n                    {!feedback.discount_code.is_used && !feedback.discount_code.is_expired && (\r\n                      <button\r\n                        onClick={() => copyToClipboard(feedback.discount_code!.code)}\r\n                        className=\"flex items-center gap-1 px-3 py-1 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors text-sm\"\r\n                      >\r\n                        <Copy className=\"w-3 h-3\" />\r\n                        {copiedCode === feedback.discount_code.code ? '¡Copiado!' : 'Copiar'}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 text-sm\">\r\n                    <div>\r\n                      <span className={`font-medium ${feedback.discount_code.is_used || feedback.discount_code.is_expired ? 'text-red-700' : 'text-green-700'}`}>Código:</span>\r\n                      <p className={`font-mono font-bold ${\r\n                        feedback.discount_code.is_used || feedback.discount_code.is_expired \r\n                          ? 'text-red-900 line-through' \r\n                          : 'text-green-900'\r\n                      }`}>\r\n                        {feedback.discount_code.code}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <span className={`font-medium ${feedback.discount_code.is_used || feedback.discount_code.is_expired ? 'text-red-700' : 'text-green-700'}`}>Descuento:</span>\r\n                      <p className={`font-bold ${\r\n                        feedback.discount_code.is_used || feedback.discount_code.is_expired \r\n                          ? 'text-red-900' \r\n                          : 'text-green-900'\r\n                      }`}>\r\n                        {feedback.discount_code.discount_percentage}% OFF\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <span className={`font-medium ${feedback.discount_code.is_used || feedback.discount_code.is_expired ? 'text-red-700' : 'text-green-700'}`}>\r\n                        {feedback.discount_code.is_used ? 'Usado:' : 'Válido hasta:'}\r\n                      </span>\r\n                      <p className={feedback.discount_code.is_used || feedback.discount_code.is_expired ? 'text-red-900' : 'text-green-900'}>\r\n                        {feedback.discount_code.is_used && feedback.discount_code.used_at \r\n                          ? formatDate(feedback.discount_code.used_at)\r\n                          : formatDate(feedback.discount_code.expires_at)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Estado y días restantes */}\r\n                  <div className=\"mt-3 pt-2 border-t border-gray-200\">\r\n                    {feedback.discount_code.is_used ? (\r\n                      <p className=\"text-red-600 text-sm font-medium\">✗ Cupón ya utilizado</p>\r\n                    ) : feedback.discount_code.is_expired ? (\r\n                      <p className=\"text-red-600 text-sm font-medium\"> Cupón expirado</p>\r\n                    ) : (\r\n                      <p className=\"text-green-600 text-sm font-medium\">\r\n                        {DiasAHorasYMinutos(feedback.discount_code.days_left)}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackTab;","import React, { useState, useEffect } from 'react';\r\nimport { API_ENDPOINTS } from '../../constants/apiEndpoints';\r\nimport ApiClient from '../../infrastructure/api/apiClient';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\n// Importar componentes modulares\r\nimport ProfileSidebar from '../components/profile/ProfileSidebar';\r\nimport PersonalInfoTab from '../components/profile/PersonalInfoTab';\r\nimport SecurityTab from '../components/profile/SecurityTab';\r\nimport SellerApplicationTab from '../components/profile/SellerApplicationTab';\r\nimport FeedbackTab from '../components/profile/FeedbackTab';\r\n\r\n// Definición de la interfaz para el perfil en la página principal\r\n// Esta debe coincidir con la interfaz en los componentes hijos\r\ninterface UserProfile {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  emailVerifiedAt: string | null;\r\n  age: number | null;\r\n  gender: string | null;\r\n  location: string | null;\r\n  created_at: string;\r\n}\r\n\r\n// Interfaz para la respuesta de la API\r\ninterface UserProfileResponse {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  email_verified_at: string | null;\r\n  age: number | null;\r\n  gender: string | null;\r\n  location: string | null;\r\n  created_at: string;\r\n  [key: string]: any; // Para cualquier otro campo que pueda venir en la respuesta\r\n}\r\n\r\n/**\r\n * Página de perfil de usuario\r\n * Este componente integra los diferentes módulos que componen el perfil\r\n */\r\nconst UserProfilePage: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<'personal' | 'security' | 'orders' | 'seller-application' | 'feedback'>('personal');\r\n\r\n  // Cargar datos del perfil al iniciar\r\n  useEffect(() => {\r\n    fetchUserProfile();\r\n  }, [user?.id]);\r\n\r\n  // Función para transformar la respuesta de la API al formato requerido\r\n  const transformUserProfile = (apiResponse: UserProfileResponse): UserProfile => {\r\n    return {\r\n      id: apiResponse.id,\r\n      name: apiResponse.name,\r\n      email: apiResponse.email,\r\n      emailVerifiedAt: apiResponse.email_verified_at,\r\n      age: apiResponse.age,\r\n      gender: apiResponse.gender,\r\n      location: apiResponse.location,\r\n      created_at: apiResponse.created_at\r\n    };\r\n  };\r\n\r\n  // Función para obtener el perfil del usuario\r\n  const fetchUserProfile = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Cambiamos la ruta a /profile en lugar de AUTH.ME\r\n      const response = await ApiClient.get<UserProfileResponse>(API_ENDPOINTS.PROFILE.LIST);\r\n      \r\n      if (response) {\r\n        // Transformar la respuesta para asegurar la compatibilidad de tipos\r\n        const profileData = transformUserProfile(response);\r\n        setUserProfile(profileData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al cargar el perfil del usuario:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Manejar actualización de perfil\r\n  const handleProfileUpdate = (updatedProfile: UserProfile) => {\r\n    setUserProfile(updatedProfile);\r\n  };\r\n\r\n  // Renderizar contenido según la pestaña activa\r\n  const renderActiveTab = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600\"></div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    switch (activeTab) {\r\n      case 'personal':\r\n        return <PersonalInfoTab userProfile={userProfile} onProfileUpdate={handleProfileUpdate} />;\r\n      case 'security':\r\n        return <SecurityTab />;\r\n      case 'feedback':\r\n        return <FeedbackTab />;\r\n      case 'seller-application':\r\n        return <SellerApplicationTab />;\r\n      default:\r\n        return <PersonalInfoTab userProfile={userProfile} onProfileUpdate={handleProfileUpdate} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 lg:px-20 py-10\">\r\n      <h1 className=\"text-3xl font-bold mb-8\">Mi Perfil</h1>\r\n      \r\n      <div className=\"flex flex-col lg:flex-row gap-8\">\r\n        {/* Panel lateral */}\r\n        <ProfileSidebar \r\n          activeTab={activeTab}\r\n          setActiveTab={setActiveTab}\r\n          userCreatedAt={userProfile?.created_at}\r\n          userName={userProfile?.name}\r\n          userEmail={userProfile?.email}\r\n        />\r\n        \r\n        {/* Contenido principal */}\r\n        <div className=\"lg:w-3/4\">\r\n          <div className=\"bg-white rounded-xl shadow-lg overflow-hidden\">\r\n            {renderActiveTab()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfilePage;"],"names":["ProfileSidebar","activeTab","setActiveTab","userCreatedAt","userName","userEmail","logout","user","isSeller","isAdmin","useAuth","isUserSeller","setIsUserSeller","useState","isUserAdmin","setIsUserAdmin","useEffect","checkUserRoles","sellerStatus","adminStatus","error","getUserInitial","formatDate","dateString","date","handleLogout","jsxs","jsx","User","Lock","MessageSquare","Store","LogOut","PAISES","ESTADOS_ECUADOR","UbicacionInput","value","onChange","className","parseUbicacion","locationString","parts","p","ubicacion","setUbicacion","buildLocationString","ub","handleChange","campo","valor","nuevaUbicacion","MapPin","e","pais","ChevronDown","estado","PersonalInfoTab","userProfile","onProfileUpdate","updateProfile","isEditing","setIsEditing","isUpdating","setIsUpdating","profileError","setProfileError","profileSuccess","setProfileSuccess","formData","setFormData","name","prev","handleLocationChange","newLocation","handlePersonalInfoSubmit","profileData","updatedUser","ApiClient","updatedProfile","handleCancelEdit","Settings","Mail","Calendar","SecurityTab","passwordError","setPasswordError","passwordSuccess","setPasswordSuccess","passwordRules","validatePassword","usePasswordValidation","showPassword","setShowPassword","handlePasswordSubmit","passwordValidation","API_ENDPOINTS","errorMessages","togglePasswordVisibility","field","EyeOff","Eye","SellerApplicationTab","application","setApplication","isLoading","setIsLoading","isSubmitting","setIsSubmitting","showForm","setShowForm","setError","success","setSuccess","checkSellerStatus","fetchApplication","response","handleInputChange","handleSubmit","getStatusIcon","status","Clock","CheckCircle","XCircle","AlertCircle","getStatusText","getStatusColor","handleNewApplication","Fragment","Send","FeedbackTab","feedbacks","setFeedbacks","copiedCode","setCopiedCode","validationErrors","setValidationErrors","fetchFeedbacks","copyToClipboard","code","err","errorData","errorMessage","getTypeText","type","DiasAHorasYMinutos","decimalDias","dias","horasDecimales","horas","minutos","index","feedback","Gift","Copy","UserProfilePage","setUserProfile","fetchUserProfile","transformUserProfile","apiResponse","handleProfileUpdate","renderActiveTab"],"mappings":"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"}