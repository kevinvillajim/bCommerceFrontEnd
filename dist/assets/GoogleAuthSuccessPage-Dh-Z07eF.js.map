{"version":3,"mappings":"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","names":["GoogleAuthSuccessPage","searchParams","useSearchParams","navigate","useNavigate","setUser","setIsAuthenticated","refreshRoleInfo","useAuth","state","setState","useState","useEffect","prev","token","userData","expiresIn","errorParam","decodedError","missingData","errorMessage","user","decodedUserData","decodeError","storageService","LocalStorageService","appConfig","redirectPath","roleData","__vitePreload","__vite_default__","n","roleError","error","jsxs","jsx"],"ignoreList":[],"sources":["../../src/presentation/pages/GoogleAuthSuccessPage.tsx"],"sourcesContent":["// src/presentation/pages/GoogleAuthSuccessPage.tsx - MEJORADO\r\n\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\r\nimport {useAuth} from \"../hooks/useAuth\";\r\nimport {LocalStorageService} from \"../../infrastructure/services/LocalStorageService\";\r\nimport appConfig from \"../../config/appConfig\";\r\n\r\ninterface ProcessingState {\r\n\tisProcessing: boolean;\r\n\tstatus: string;\r\n\terror: string | null;\r\n}\r\n\r\nconst GoogleAuthSuccessPage: React.FC = () => {\r\n\tconst [searchParams] = useSearchParams();\r\n\tconst navigate = useNavigate();\r\n\tconst {setUser, setIsAuthenticated, refreshRoleInfo} = useAuth();\r\n\tconst [state, setState] = useState<ProcessingState>({\r\n\t\tisProcessing: true,\r\n\t\tstatus: \"Procesando autenticación...\",\r\n\t\terror: null,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst processGoogleAuthSuccess = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(\"🔄 Procesando Google Auth Success...\");\r\n\t\t\t\tconsole.log(\"📊 URL completa:\", window.location.href);\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"📊 Parámetros:\",\r\n\t\t\t\t\tObject.fromEntries(searchParams.entries())\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsetState((prev) => ({\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tstatus: \"Obteniendo datos de autenticación...\",\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// Obtener parámetros de la URL\r\n\t\t\t\tconst token = searchParams.get(\"token\");\r\n\t\t\t\tconst userData = searchParams.get(\"user\");\r\n\t\t\t\tconst expiresIn = searchParams.get(\"expires_in\");\r\n\t\t\t\tconst errorParam = searchParams.get(\"error\");\r\n\r\n\t\t\t\tconsole.log(\"🔍 Parámetros obtenidos:\", {\r\n\t\t\t\t\thasToken: !!token,\r\n\t\t\t\t\thasUserData: !!userData,\r\n\t\t\t\t\ttokenLength: token?.length,\r\n\t\t\t\t\texpiresIn,\r\n\t\t\t\t\terror: errorParam,\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Verificar si hay error\r\n\t\t\t\tif (errorParam) {\r\n\t\t\t\t\tconst decodedError = decodeURIComponent(errorParam);\r\n\t\t\t\t\tconsole.error(\"❌ Error en autenticación:\", decodedError);\r\n\t\t\t\t\tsetState((prev) => ({\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tisProcessing: false,\r\n\t\t\t\t\t\terror: decodedError,\r\n\t\t\t\t\t}));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Verificar datos requeridos\r\n\t\t\t\tif (!token || !userData) {\r\n\t\t\t\t\tconst missingData = [];\r\n\t\t\t\t\tif (!token) missingData.push(\"token\");\r\n\t\t\t\t\tif (!userData) missingData.push(\"userData\");\r\n\r\n\t\t\t\t\tconst errorMessage = `Datos de autenticación incompletos: ${missingData.join(\", \")}`;\r\n\t\t\t\t\tconsole.error(\"❌\", errorMessage);\r\n\t\t\t\t\tsetState((prev) => ({\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tisProcessing: false,\r\n\t\t\t\t\t\terror: errorMessage,\r\n\t\t\t\t\t}));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetState((prev) => ({\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tstatus: \"Verificando token de acceso...\",\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// Decodificar datos del usuario\r\n\t\t\t\tlet user;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst decodedUserData = atob(userData);\r\n\t\t\t\t\tuser = JSON.parse(decodedUserData);\r\n\t\t\t\t\tconsole.log(\"✅ Datos del usuario decodificados:\", user);\r\n\t\t\t\t} catch (decodeError) {\r\n\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t\"❌ Error decodificando datos del usuario:\",\r\n\t\t\t\t\t\tdecodeError\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetState((prev) => ({\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tisProcessing: false,\r\n\t\t\t\t\t\terror: \"Error al procesar datos del usuario\",\r\n\t\t\t\t\t}));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetState((prev) => ({\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tstatus: \"Guardando información de sesión...\",\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// Guardar token y datos del usuario en localStorage\r\n\t\t\t\tconst storageService = new LocalStorageService();\r\n\t\t\t\tstorageService.setItem(appConfig.storage.authTokenKey, token);\r\n\t\t\t\tstorageService.setItem(appConfig.storage.userKey, user);\r\n\r\n\t\t\t\tconsole.log(\"✅ Token y datos guardados en localStorage\");\r\n\t\t\t\tconsole.log(\"🔑 Token guardado:\", token.substring(0, 50) + \"...\");\r\n\t\t\t\tconsole.log(\"👤 Usuario guardado:\", user);\r\n\r\n\t\t\t\t// Actualizar estado de autenticación INMEDIATAMENTE\r\n\t\t\t\tsetUser(user);\r\n\t\t\t\tsetIsAuthenticated(true);\r\n\r\n\t\t\t\tsetState((prev) => ({\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tstatus: \"Obteniendo información de roles...\",\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// Obtener información de rol del usuario\r\n\t\t\t\tlet redirectPath = \"/\";\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Usar refreshRoleInfo para obtener información de rol\r\n\t\t\t\t\tawait refreshRoleInfo();\r\n\r\n\t\t\t\t\t// Usar el servicio de roles para determinar la ruta\r\n\t\t\t\t\tconst RoleService = (\r\n\t\t\t\t\t\tawait import(\"../../infrastructure/services/RoleService\")\r\n\t\t\t\t\t).default;\r\n\t\t\t\t\tconst roleData = await RoleService.checkUserRole(true);\r\n\r\n\t\t\t\t\tconsole.log(\"🎯 Información de rol obtenida:\", roleData);\r\n\r\n\t\t\t\t\tif (roleData && roleData.success) {\r\n\t\t\t\t\t\tif (roleData.data.is_admin) {\r\n\t\t\t\t\t\t\tredirectPath = \"/admin/dashboard\";\r\n\t\t\t\t\t\t\tconsole.log(\"👑 Usuario es admin, redirigiendo a:\", redirectPath);\r\n\t\t\t\t\t\t} else if (roleData.data.is_seller) {\r\n\t\t\t\t\t\t\tredirectPath = \"/seller/dashboard\";\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"🏪 Usuario es seller, redirigiendo a:\",\r\n\t\t\t\t\t\t\t\tredirectPath\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else if (roleData.data.is_payment_user) {\r\n\t\t\t\t\t\t\tredirectPath = \"/payment/dashboard\";\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"💳 Usuario es payment, redirigiendo a:\",\r\n\t\t\t\t\t\t\t\tredirectPath\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tredirectPath = \"/\";\r\n\t\t\t\t\t\t\tconsole.log(\"👤 Usuario normal, redirigiendo a:\", redirectPath);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(\"🔄 Sin rol específico, redirigiendo a home\");\r\n\t\t\t\t\t\tredirectPath = \"/\";\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (roleError) {\r\n\t\t\t\t\tconsole.warn(\"⚠️ No se pudo obtener información de rol:\", roleError);\r\n\t\t\t\t\tredirectPath = \"/\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetState((prev) => ({...prev, status: \"Completando autenticación...\"}));\r\n\r\n\t\t\t\t// Limpiar URL de parámetros\r\n\t\t\t\twindow.history.replaceState(\r\n\t\t\t\t\t{},\r\n\t\t\t\t\tdocument.title,\r\n\t\t\t\t\twindow.location.pathname\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Mostrar mensaje de éxito\r\n\t\t\t\tsetState((prev) => ({\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tstatus: \"¡Autenticación exitosa! Redirigiendo...\",\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// Pequeño delay para mostrar el mensaje de éxito\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tconsole.log(\"🚀 Redirigiendo a:\", redirectPath);\r\n\t\t\t\t\tnavigate(redirectPath, {replace: true});\r\n\t\t\t\t}, 1500);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t\"❌ Error crítico procesando Google Auth Success:\",\r\n\t\t\t\t\terror\r\n\t\t\t\t);\r\n\t\t\t\tsetState((prev) => ({\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tisProcessing: false,\r\n\t\t\t\t\terror: \"Error al procesar la autenticación con Google\",\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tprocessGoogleAuthSuccess();\r\n\t}, [searchParams, navigate, setUser, setIsAuthenticated, refreshRoleInfo]);\r\n\r\n\t// Renderizar estado de error\r\n\tif (state.error) {\r\n\t\treturn (\r\n\t\t\t<div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n\t\t\t\t<div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-8 text-center\">\r\n\t\t\t\t\t<div className=\"text-red-500 text-6xl mb-4\">❌</div>\r\n\t\t\t\t\t<h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\r\n\t\t\t\t\t\tError en la autenticación\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<p className=\"text-gray-600 mb-6\">{state.error}</p>\r\n\t\t\t\t\t<div className=\"space-y-3\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => navigate(\"/login\")}\r\n\t\t\t\t\t\t\tclassName=\"w-full py-3 px-4 border border-transparent rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tVolver al inicio de sesión\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => navigate(\"/register\")}\r\n\t\t\t\t\t\t\tclassName=\"w-full py-3 px-4 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCrear cuenta nueva\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// Renderizar estado de procesamiento\r\n\treturn (\r\n\t\t<div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n\t\t\t<div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-8 text-center\">\r\n\t\t\t\t<div className=\"text-green-500 text-6xl mb-4\">\r\n\t\t\t\t\t{state.isProcessing ? \"...\" : \"🎉\"}\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\r\n\t\t\t\t\t{state.isProcessing ? \"Procesando autenticación...\" : \"¡Bienvenido!\"}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<p className=\"text-gray-600 mb-6\">{state.status}</p>\r\n\r\n\t\t\t\t{state.isProcessing && (\r\n\t\t\t\t\t<div className=\"flex justify-center\">\r\n\t\t\t\t\t\t<div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-primary-600\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* Información de debug en desarrollo */}\r\n\t\t\t\t{process.env.NODE_ENV === \"development\" && (\r\n\t\t\t\t\t<details className=\"mt-6 text-left\">\r\n\t\t\t\t\t\t<summary className=\"text-sm text-gray-500 cursor-pointer mb-2\">\r\n\t\t\t\t\t\t\t🔍 Información de debug\r\n\t\t\t\t\t\t</summary>\r\n\t\t\t\t\t\t<div className=\"bg-gray-100 p-3 rounded text-xs\">\r\n\t\t\t\t\t\t\t<div className=\"space-y-1\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<strong>URL:</strong> {window.location.href}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<strong>Parámetros:</strong>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<pre className=\"whitespace-pre-wrap text-xs\">\r\n\t\t\t\t\t\t\t\t\t{JSON.stringify(\r\n\t\t\t\t\t\t\t\t\t\tObject.fromEntries(searchParams.entries()),\r\n\t\t\t\t\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t\t\t\t\t2\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</pre>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GoogleAuthSuccessPage;\r\n"],"file":"assets/GoogleAuthSuccessPage-Dh-Z07eF.js"}