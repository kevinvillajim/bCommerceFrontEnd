{"version":3,"file":"PaymentPage-BeuQJhA9.js","sources":["../../src/presentation/components/external/DatafastExternalWidget.tsx","../../src/infrastructure/services/ExternalDeunaService.ts","../../src/presentation/components/external/ExternalDeunaPayment.tsx","../../src/presentation/pages/PublicPayment/PaymentPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { XCircle } from 'lucide-react';\r\nimport { useToast } from '../../components/UniversalToast';\r\nimport { NotificationType } from '../../types/NotificationTypes';\r\n\r\ninterface DatafastExternalWidgetProps {\r\n  widgetUrl: string;\r\n  amount: number;\r\n  customerName: string;\r\n  onSuccess?: (data: any) => void;\r\n  onError?: (error: string) => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nconst DatafastExternalWidget: React.FC<DatafastExternalWidgetProps> = ({\r\n  widgetUrl,\r\n  amount,\r\n  customerName,\r\n  onSuccess,\r\n  onError,\r\n  onCancel,\r\n}) => {\r\n  const { showToast } = useToast();\r\n  const [widgetLoaded, setWidgetLoaded] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Referencias para prevenir doble ejecución (StrictMode protection)\r\n  const verificationInProgress = useRef(false);\r\n  const verificationCompleted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    loadDatafastWidget();\r\n    return () => {\r\n      // Cleanup script when component unmounts\r\n      const script = document.getElementById('datafast-external-script');\r\n      if (script) {\r\n        script.remove();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const loadDatafastWidget = () => {\r\n    try {\r\n      console.log('🎯 Cargando widget externo de Datafast...');\r\n\r\n      // Remove existing script if any\r\n      const existingScript = document.getElementById('datafast-external-script');\r\n      if (existingScript) {\r\n        existingScript.remove();\r\n      }\r\n\r\n      // Configure global options for external widget\r\n      (window as any).wpwlOptions = {\r\n        onReady: function () {\r\n          console.log('✅ Widget externo Datafast listo!');\r\n          setWidgetLoaded(true);\r\n          showToast(NotificationType.SUCCESS, 'Formulario de pago cargado');\r\n        },\r\n        onBeforeSubmitCard: function (data: any) {\r\n          console.log('🔄 Procesando pago externo...', data);\r\n          setIsProcessing(true);\r\n          showToast(NotificationType.INFO, 'Procesando pago...');\r\n          return true;\r\n        },\r\n        onAfterSubmitCard: function (data: any) {\r\n          console.log('📤 Pago enviado, esperando respuesta...', data);\r\n        },\r\n        onBeforeRedirectToResult: function (data: any) {\r\n          console.log('🔄 Redirigiendo al resultado...', data);\r\n\r\n          // Extract resource path for verification\r\n          if (data && data.resourcePath) {\r\n            localStorage.setItem('external_datafast_resource_path', data.resourcePath);\r\n\r\n            // ✅ CRITICAL FIX: Guardar sessionId que espera el backend externo\r\n            const sessionId = data.sessionId || `external_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n            localStorage.setItem('external_datafast_session_id', sessionId);\r\n            console.log('   ✅ SessionId externo guardado para backend:', sessionId);\r\n\r\n            // Don't redirect - handle internally con protección doble ejecución\r\n            setTimeout(() => {\r\n              handlePaymentResult(data.resourcePath);\r\n            }, 1000);\r\n\r\n            // Prevent external redirect\r\n            return false;\r\n          }\r\n          return true;\r\n        },\r\n        onError: function (error: any) {\r\n          console.error('❌ Error en widget externo:', error);\r\n          const errorMessage = error.message || error.code || 'Error desconocido';\r\n          setError(errorMessage);\r\n          setIsProcessing(false);\r\n          showToast(NotificationType.ERROR, `Error: ${errorMessage}`);\r\n          onError?.(errorMessage);\r\n        },\r\n        style: 'card',\r\n        locale: 'es',\r\n        labels: {\r\n          cvv: 'CVV',\r\n          cardHolder: 'Nombre (igual que en la tarjeta)',\r\n        },\r\n      };\r\n\r\n      // Load widget script\r\n      const script = document.createElement('script');\r\n      script.id = 'datafast-external-script';\r\n      script.src = widgetUrl;\r\n      script.async = true;\r\n\r\n      script.onload = () => {\r\n        console.log('✅ Script de widget externo cargado exitosamente');\r\n      };\r\n\r\n      script.onerror = (error) => {\r\n        console.error('❌ Error cargando script de widget externo:', error);\r\n        setError('Error cargando formulario de pago');\r\n        showToast(NotificationType.ERROR, 'Error cargando formulario de pago');\r\n      };\r\n\r\n      document.head.appendChild(script);\r\n    } catch (error) {\r\n      console.error('Error configurando widget externo:', error);\r\n      setError('Error configurando formulario de pago');\r\n    }\r\n  };\r\n\r\n  const handlePaymentResult = async (resourcePath: string) => {\r\n    // ✅ PREVENCIÓN DOBLE EJECUCIÓN: Mismo patrón que DatafastResultPage\r\n    if (verificationInProgress.current) {\r\n      console.log('⚠️ Verificación ya en progreso, ignorando llamada duplicada');\r\n      return;\r\n    }\r\n\r\n    if (verificationCompleted.current) {\r\n      console.log('✅ Verificación ya completada previamente, ignorando llamada duplicada');\r\n      return;\r\n    }\r\n\r\n    verificationInProgress.current = true;\r\n\r\n    try {\r\n      console.log('🔍 Verificando resultado del pago externo...');\r\n      setIsProcessing(true);\r\n\r\n      // Call verification endpoint\r\n      const response = await fetch(`/api/pay/${getCheckoutId()}/verify/datafast`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          resource_path: resourcePath,\r\n          transaction_id: `ext_${Date.now()}`,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        console.log('✅ Pago externo verificado exitosamente');\r\n        verificationCompleted.current = true;\r\n        showToast(NotificationType.SUCCESS, 'Pago procesado exitosamente');\r\n        onSuccess?.(result.data);\r\n      } else {\r\n        // ✅ MANEJO ESPECÍFICO ERROR 200.300.404: Misma lógica que DatafastResultPage\r\n        const errorCode = result.validation_data?.result?.code;\r\n        if (errorCode === '200.300.404') {\r\n          console.log('⚠️ Error 200.300.404 detectado - sesión ya consumida, verificando pagos previos...');\r\n\r\n          // Verificar si el pago ya fue procesado exitosamente antes\r\n          const checkResult = await checkForPreviousSuccessfulPayment();\r\n          if (checkResult.wasSuccessful) {\r\n            console.log('✅ Pago ya fue procesado exitosamente anteriormente');\r\n            verificationCompleted.current = true;\r\n            showToast(NotificationType.SUCCESS, 'Pago procesado exitosamente');\r\n            onSuccess?.(checkResult.data);\r\n            return;\r\n          }\r\n        }\r\n\r\n        throw new Error(result.message || 'Error verificando pago');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error verificando pago externo:', error);\r\n\r\n      // Si es error de sesión consumida pero encontramos pago exitoso, no mostrar error\r\n      if (verificationCompleted.current) {\r\n        return;\r\n      }\r\n\r\n      const errorMessage = error instanceof Error ? error.message : 'Error verificando pago';\r\n      setError(errorMessage);\r\n      onError?.(errorMessage);\r\n    } finally {\r\n      verificationInProgress.current = false;\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const checkForPreviousSuccessfulPayment = async () => {\r\n    try {\r\n      console.log('🔍 Verificando si existe pago exitoso previo...');\r\n\r\n      // En pagos externos, verificamos usando el checkoutId\r\n      const checkoutId = getCheckoutId();\r\n      if (!checkoutId) {\r\n        return { wasSuccessful: false };\r\n      }\r\n\r\n      // Endpoint específico para verificar estado de checkout externo\r\n      const response = await fetch(`/api/external/checkout/${checkoutId}/status`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        if (result.success && result.data?.status === 'completed') {\r\n          console.log('✅ Encontrado pago exitoso previo en sistema externo');\r\n          return {\r\n            wasSuccessful: true,\r\n            data: result.data,\r\n          };\r\n        }\r\n      }\r\n\r\n      console.log('ℹ️ No se encontró pago exitoso previo');\r\n      return { wasSuccessful: false };\r\n    } catch (error) {\r\n      console.error('❌ Error verificando pago previo:', error);\r\n      return { wasSuccessful: false };\r\n    }\r\n  };\r\n\r\n  const getCheckoutId = () => {\r\n    // Extract checkout ID from widget URL\r\n    const url = new URL(widgetUrl);\r\n    return url.searchParams.get('checkoutId') || '';\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n        <div className=\"text-center\">\r\n          <XCircle className=\"h-16 w-16 text-red-500 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Error en el Pago</h3>\r\n          <p className=\"text-gray-600 mb-6\">{error}</p>\r\n          <div className=\"flex justify-center space-x-4\">\r\n            <button\r\n              onClick={() => {\r\n                setError(null);\r\n                loadDatafastWidget();\r\n              }}\r\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Reintentar\r\n            </button>\r\n            <button\r\n              onClick={onCancel}\r\n              className=\"bg-gray-300 text-gray-700 px-6 py-2 rounded-lg hover:bg-gray-400 transition-colors\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n      <div className=\"mb-6\">\r\n        <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Pagar con Datafast</h3>\r\n        <div className=\"bg-blue-50 rounded-lg p-4\">\r\n          <div className=\"flex justify-between text-sm text-blue-800\">\r\n            <span>Cliente: {customerName}</span>\r\n            <span>Monto: ${amount.toFixed(2)} USD</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"min-h-[400px] border border-gray-200 rounded-lg p-4 mb-6\">\r\n        {/* Widget container */}\r\n        <form\r\n          className=\"paymentWidgets\"\r\n          data-brands=\"VISA MASTER AMEX DINERS DISCOVER\"\r\n        >\r\n          {!widgetLoaded && !isProcessing && (\r\n            <div className=\"flex items-center justify-center h-64\">\r\n              <div className=\"text-center\">\r\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2\"></div>\r\n                <p className=\"text-gray-600\">Cargando formulario de pago...</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {isProcessing && (\r\n            <div className=\"flex items-center justify-center h-64\">\r\n              <div className=\"text-center\">\r\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600 mx-auto mb-2\"></div>\r\n                <p className=\"text-gray-600\">Procesando pago...</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n\r\n      {/* Test card info */}\r\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4\">\r\n        <h4 className=\"font-semibold text-yellow-800 mb-2\">Datos de prueba:</h4>\r\n        <div className=\"text-sm text-yellow-700 space-y-1\">\r\n          <p><strong>Tarjeta VISA:</strong> 4200 0000 0000 0000</p>\r\n          <p><strong>Fecha:</strong> 07/26 | <strong>CVV:</strong> 246</p>\r\n          <p><strong>Titular:</strong> {customerName}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Cancel button */}\r\n      <div className=\"text-center\">\r\n        <button\r\n          onClick={onCancel}\r\n          disabled={isProcessing}\r\n          className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors disabled:opacity-50\"\r\n        >\r\n          Cancelar Pago\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatafastExternalWidget;","// src/infrastructure/services/ExternalDeunaService.ts\r\nimport { ApiClient } from \"../api/apiClient\";\r\n\r\nexport interface ExternalDeunaResponse {\r\n  success: boolean;\r\n  data?: {\r\n    payment_id: string;\r\n    order_id: string;\r\n    status: string;\r\n    amount: number;\r\n    currency: string;\r\n    qr_code_base64?: string;\r\n    payment_url?: string;\r\n    numeric_code?: string;\r\n    created_at: string;\r\n    expires_at: string;\r\n  };\r\n  message?: string;\r\n}\r\n\r\nexport class ExternalDeunaService {\r\n  /**\r\n   * Crear pago externo con Deuna\r\n   */\r\n  static async createExternalPayment(\r\n    linkCode: string,\r\n    customerData: {\r\n      email: string;\r\n      phone: string;\r\n      address: string;\r\n      city: string;\r\n      postal_code: string;\r\n    }\r\n  ): Promise<ExternalDeunaResponse> {\r\n    try {\r\n      console.log('ExternalDeunaService: Creating external payment', { linkCode, customerData });\r\n\r\n      // Usar el endpoint específico para pagos externos\r\n      const response = await ApiClient.post<ExternalDeunaResponse>(\r\n        `/pay/${linkCode}/deuna`,\r\n        customerData\r\n      );\r\n\r\n      console.log('ExternalDeunaService: Payment created successfully', response);\r\n      return response;\r\n\r\n    } catch (error: any) {\r\n      console.error('ExternalDeunaService: Error creating payment', error);\r\n      throw new Error(\r\n        error.response?.data?.message ||\r\n        error.message ||\r\n        'Error creating external payment'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Simular webhook de pago exitoso (solo para testing)\r\n   */\r\n  static async simulateWebhook(linkCode: string, paymentId: string): Promise<{success: boolean}> {\r\n    try {\r\n      console.log('ExternalDeunaService: Simulating webhook', { linkCode, paymentId });\r\n\r\n      const response = await ApiClient.post(`/pay/${linkCode}/deuna/webhook`, {\r\n        status: 'SUCCESS',\r\n        idTransaction: paymentId,\r\n        transferNumber: `TXN_${Date.now()}`,\r\n        internalTransactionReference: paymentId,\r\n        amount: 0, // Will be filled by backend\r\n        timestamp: new Date().toISOString(),\r\n      });\r\n\r\n      console.log('ExternalDeunaService: Webhook simulated successfully', response);\r\n      return { success: true };\r\n\r\n    } catch (error: any) {\r\n      console.error('ExternalDeunaService: Error simulating webhook', error);\r\n      throw new Error(\r\n        error.response?.data?.message ||\r\n        error.message ||\r\n        'Error simulating webhook'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verificar estado de pago externo\r\n   */\r\n  static async checkPaymentStatus(linkCode: string): Promise<{\r\n    success: boolean;\r\n    status: string;\r\n    paid_at?: string;\r\n  }> {\r\n    try {\r\n      console.log('ExternalDeunaService: Checking payment status', { linkCode });\r\n\r\n      const response = await ApiClient.get(`/pay/${linkCode}`);\r\n\r\n      console.log('ExternalDeunaService: Status checked successfully', response);\r\n      const data = (response as any).data;\r\n      return {\r\n        success: true,\r\n        status: data?.status || 'pending',\r\n        paid_at: data?.paid_at,\r\n      };\r\n\r\n    } catch (error: any) {\r\n      console.error('ExternalDeunaService: Error checking status', error);\r\n      return {\r\n        success: false,\r\n        status: 'error',\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Polling simplificado para pagos externos\r\n   */\r\n  static pollExternalPaymentStatus(\r\n    linkCode: string,\r\n    options: {\r\n      maxAttempts?: number;\r\n      interval?: number;\r\n      onStatusChange?: (status: string) => void;\r\n    } = {}\r\n  ) {\r\n    const {\r\n      maxAttempts = 40,\r\n      interval = 15000,\r\n      onStatusChange\r\n    } = options;\r\n\r\n    let attempts = 0;\r\n    let cancelled = false;\r\n\r\n    const poll = async (): Promise<void> => {\r\n      if (cancelled || attempts >= maxAttempts) {\r\n        return;\r\n      }\r\n\r\n      attempts++;\r\n\r\n      try {\r\n        const result = await this.checkPaymentStatus(linkCode);\r\n\r\n        if (result.success && result.status === 'paid') {\r\n          onStatusChange?.('completed');\r\n          return;\r\n        }\r\n\r\n        if (result.status === 'cancelled' || result.status === 'expired') {\r\n          onStatusChange?.(result.status);\r\n          return;\r\n        }\r\n\r\n        // Continue polling\r\n        setTimeout(poll, interval);\r\n\r\n      } catch (error) {\r\n        console.error('Error polling external payment status:', error);\r\n        // Continue polling on error\r\n        setTimeout(poll, interval);\r\n      }\r\n    };\r\n\r\n    // Start polling\r\n    setTimeout(poll, interval);\r\n\r\n    return {\r\n      cancel: () => {\r\n        cancelled = true;\r\n      },\r\n      promise: new Promise<void>((resolve) => {\r\n        // This promise resolves when polling is done or cancelled\r\n        const checkCompletion = () => {\r\n          if (cancelled || attempts >= maxAttempts) {\r\n            resolve();\r\n          } else {\r\n            setTimeout(checkCompletion, 1000);\r\n          }\r\n        };\r\n        checkCompletion();\r\n      })\r\n    };\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { CheckCircle, XCircle, Clock, RefreshCw, Copy, Smartphone, Zap } from 'lucide-react';\r\nimport { useToast } from '../../components/UniversalToast';\r\nimport { NotificationType } from '../../types/NotificationTypes';\r\nimport { ExternalDeunaService } from '../../../infrastructure/services/ExternalDeunaService';\r\n\r\ninterface ExternalDeunaPaymentProps {\r\n  linkCode: string;\r\n  amount: number;\r\n  customerName: string;\r\n  customerData: {\r\n    email: string;\r\n    phone: string;\r\n    address: string;\r\n    city: string;\r\n    postal_code: string;\r\n  };\r\n  onSuccess?: (data: any) => void;\r\n  onError?: (error: string) => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nconst ExternalDeunaPayment: React.FC<ExternalDeunaPaymentProps> = ({\r\n  linkCode,\r\n  amount,\r\n  customerName,\r\n  customerData,\r\n  onSuccess,\r\n  onError,\r\n  onCancel,\r\n}) => {\r\n  const { showToast } = useToast();\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [paymentData, setPaymentData] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isPolling, setIsPolling] = useState(false);\r\n  const [currentStatus, setCurrentStatus] = useState<string>('pending');\r\n  const [timeRemaining, setTimeRemaining] = useState<number>(600); // 10 minutes\r\n  const [copySuccess, setCopySuccess] = useState<boolean>(false);\r\n\r\n  // Refs for cleanup\r\n  const pollingRef = React.useRef<any>(null);\r\n  const timerRef = React.useRef<NodeJS.Timeout | null>(null);\r\n\r\n  useEffect(() => {\r\n    generateQRPayment();\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      if (pollingRef.current) {\r\n        pollingRef.current.cancel();\r\n      }\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Timer countdown\r\n  useEffect(() => {\r\n    if (paymentData && isPolling && timeRemaining > 0) {\r\n      const interval = setInterval(() => {\r\n        setTimeRemaining(prev => {\r\n          if (prev <= 1) {\r\n            setIsPolling(false);\r\n            setError(\"El tiempo de pago ha expirado. El pago ha sido cancelado automáticamente.\");\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n\r\n      timerRef.current = interval;\r\n    }\r\n\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [paymentData, isPolling, timeRemaining]);\r\n\r\n  const generateQRPayment = async () => {\r\n    setIsGenerating(true);\r\n    setError(null);\r\n\r\n    try {\r\n      console.log('🔄 Generando QR externo para Deuna...');\r\n\r\n      const response = await ExternalDeunaService.createExternalPayment(linkCode, customerData);\r\n\r\n      if (response.success && response.data) {\r\n        console.log('✅ QR externo generado exitosamente');\r\n        setPaymentData(response.data);\r\n        setIsPolling(true);\r\n        startPollingPaymentStatus();\r\n        showToast(NotificationType.SUCCESS, 'Código QR generado');\r\n      } else {\r\n        throw new Error(response.message || 'Error generando código QR');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error generando QR externo:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Error generando código QR';\r\n      setError(errorMessage);\r\n      onError?.(errorMessage);\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  const startPollingPaymentStatus = () => {\r\n    const polling = ExternalDeunaService.pollExternalPaymentStatus(linkCode, {\r\n      maxAttempts: 40,\r\n      interval: 15000,\r\n      onStatusChange: handleStatusChange\r\n    });\r\n\r\n    pollingRef.current = polling;\r\n\r\n    polling.promise.catch(err => {\r\n      console.error('Error en polling:', err);\r\n      if (isPolling) {\r\n        setError('Error monitoreando el estado del pago');\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleStatusChange = (status: string) => {\r\n    console.log('📊 Estado del pago cambió:', status);\r\n    setCurrentStatus(status);\r\n\r\n    switch (status) {\r\n      case 'completed':\r\n        setIsPolling(false);\r\n        showToast(NotificationType.SUCCESS, '¡Pago completado exitosamente!');\r\n        onSuccess?.(paymentData);\r\n        break;\r\n      case 'failed':\r\n      case 'cancelled':\r\n        setIsPolling(false);\r\n        const errorMsg = `Pago ${status === 'failed' ? 'fallido' : 'cancelado'}`;\r\n        setError(errorMsg);\r\n        onError?.(errorMsg);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const cancelPayment = async (reason = 'Usuario canceló') => {\r\n    try {\r\n      console.log('🚫 Cancelando pago externo:', reason);\r\n      setIsPolling(false);\r\n\r\n      if (pollingRef.current) {\r\n        pollingRef.current.cancel();\r\n      }\r\n\r\n      showToast(NotificationType.INFO, 'Pago cancelado');\r\n      onCancel?.();\r\n    } catch (error) {\r\n      console.error('Error cancelando pago:', error);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = async (text: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      setCopySuccess(true);\r\n      showToast(NotificationType.SUCCESS, 'Enlace copiado');\r\n      setTimeout(() => setCopySuccess(false), 2000);\r\n    } catch (err) {\r\n      console.error('Error copiando al portapapeles:', err);\r\n      showToast(NotificationType.ERROR, 'Error copiando enlace');\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const simulatePayment = async () => {\r\n    if (!paymentData?.payment_id) return;\r\n\r\n    try {\r\n      console.log('🧪 Simulando pago exitoso...');\r\n      await ExternalDeunaService.simulateWebhook(linkCode, paymentData.payment_id);\r\n      showToast(NotificationType.INFO, 'Simulación de pago enviada');\r\n    } catch (error) {\r\n      console.error('Error simulando pago:', error);\r\n      showToast(NotificationType.ERROR, 'Error simulando pago');\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n        <div className=\"text-center\">\r\n          <XCircle className=\"h-16 w-16 text-red-500 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Error en el Pago</h3>\r\n          <p className=\"text-gray-600 mb-6\">{error}</p>\r\n          <div className=\"flex justify-center space-x-4\">\r\n            <button\r\n              onClick={() => {\r\n                setError(null);\r\n                generateQRPayment();\r\n              }}\r\n              className=\"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors\"\r\n            >\r\n              Reintentar\r\n            </button>\r\n            <button\r\n              onClick={onCancel}\r\n              className=\"bg-gray-300 text-gray-700 px-6 py-2 rounded-lg hover:bg-gray-400 transition-colors\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isGenerating) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-green-600 mx-auto mb-4\"></div>\r\n          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Generando Código QR</h3>\r\n          <p className=\"text-gray-600\">Preparando tu pago con Deuna...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (currentStatus === 'completed') {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n        <div className=\"text-center\">\r\n          <CheckCircle className=\"h-16 w-16 text-green-500 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">¡Pago Completado!</h3>\r\n          <p className=\"text-gray-600 mb-4\">Tu pago ha sido procesado exitosamente</p>\r\n          <div className=\"bg-green-50 rounded-lg p-4\">\r\n            <p className=\"text-green-800 font-semibold\">Monto: ${amount.toFixed(2)} USD</p>\r\n            <p className=\"text-green-700\">Cliente: {customerName}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n      {/* Header */}\r\n      <div className=\"text-center mb-6\">\r\n        <div className=\"flex items-center justify-center mb-4\">\r\n          <Zap className=\"h-8 w-8 text-green-600 mr-2\" />\r\n          <h3 className=\"text-xl font-bold text-gray-900\">Pagar con Deuna</h3>\r\n        </div>\r\n\r\n        <div className=\"bg-green-50 rounded-lg p-4 mb-4\">\r\n          <div className=\"flex justify-between text-sm text-green-800\">\r\n            <span>Cliente: {customerName}</span>\r\n            <span>Monto: ${amount.toFixed(2)} USD</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Timer */}\r\n        <div className=\"flex items-center justify-center text-orange-600 mb-4\">\r\n          <Clock className=\"h-5 w-5 mr-2\" />\r\n          <span className=\"font-mono text-lg font-bold\">\r\n            {formatTime(timeRemaining)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* QR Code */}\r\n      <div className=\"text-center mb-6\">\r\n        <div className=\"bg-white border-2 border-gray-200 rounded-lg p-4 inline-block mb-4\">\r\n          {paymentData?.qr_code_base64 ? (\r\n            <img\r\n              src={paymentData.qr_code_base64}\r\n              alt=\"Código QR de pago\"\r\n              className=\"w-48 h-48\"\r\n            />\r\n          ) : (\r\n            <div className=\"w-48 h-48 bg-gray-100 flex items-center justify-center\">\r\n              <span className=\"text-gray-500\">Generando QR...</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <p className=\"text-sm text-gray-600 mb-4\">\r\n          Escanea el código QR con tu aplicación bancaria móvil\r\n        </p>\r\n      </div>\r\n\r\n      {/* Action buttons */}\r\n      {paymentData?.payment_url && (\r\n        <div className=\"space-y-3 mb-6\">\r\n          <button\r\n            onClick={() => copyToClipboard(paymentData.payment_url)}\r\n            className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center\"\r\n          >\r\n            {copySuccess ? (\r\n              <>\r\n                <CheckCircle className=\"h-5 w-5 mr-2\" />\r\n                ¡Copiado!\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Copy className=\"h-5 w-5 mr-2\" />\r\n                Copiar Enlace de Pago\r\n              </>\r\n            )}\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => window.open(paymentData.payment_url, '_blank')}\r\n            className=\"w-full bg-green-600 text-white py-3 px-4 rounded-lg hover:bg-green-700 transition-colors flex items-center justify-center\"\r\n          >\r\n            <Smartphone className=\"h-5 w-5 mr-2\" />\r\n            Abrir en Móvil\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Status indicator */}\r\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4\">\r\n        <div className=\"flex items-center\">\r\n          {isPolling ? (\r\n            <>\r\n              <RefreshCw className=\"h-5 w-5 text-yellow-600 mr-3 animate-spin\" />\r\n              <div>\r\n                <p className=\"font-semibold text-yellow-800\">Esperando Pago</p>\r\n                <p className=\"text-yellow-700 text-sm\">Verifica tu app móvil para completar el pago</p>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Clock className=\"h-5 w-5 text-yellow-600 mr-3\" />\r\n              <p className=\"font-semibold text-yellow-800\">Pago Inactivo</p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Development simulation button */}\r\n      {process.env.NODE_ENV === 'development' && paymentData && isPolling && (\r\n        <div className=\"mb-4\">\r\n          <button\r\n            onClick={simulatePayment}\r\n            className=\"w-full bg-orange-500 text-white py-2 px-4 rounded-lg hover:bg-orange-600 transition-colors flex items-center justify-center\"\r\n          >\r\n            <Zap className=\"h-4 w-4 mr-2\" />\r\n            🧪 Simular Pago (Dev)\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Cancel button */}\r\n      <div className=\"text-center\">\r\n        <button\r\n          onClick={() => cancelPayment('Usuario canceló')}\r\n          className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\"\r\n        >\r\n          Cancelar Pago\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExternalDeunaPayment;","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { CreditCard, DollarSign, User, FileText, Calendar, AlertTriangle, XCircle, CheckCircle } from 'lucide-react';\r\nimport { ApiClient } from '../../../infrastructure/api/apiClient';\r\nimport { API_ENDPOINTS } from '../../../constants/apiEndpoints';\r\nimport { useToast } from '../../components/UniversalToast';\r\nimport { NotificationType } from '../../types/NotificationTypes';\r\nimport DatafastExternalWidget from '../../components/external/DatafastExternalWidget';\r\nimport ExternalDeunaPayment from '../../components/external/ExternalDeunaPayment';\r\n\r\ninterface PaymentLinkData {\r\n  link_code: string;\r\n  customer_name: string;\r\n  amount: number;\r\n  description: string | null;\r\n  expires_at: string;\r\n  status: string;\r\n}\r\n\r\ninterface CustomerData {\r\n  given_name: string;\r\n  surname: string;\r\n  identification: string;\r\n  middle_name?: string;\r\n  email: string;\r\n  phone: string;\r\n  address: string;\r\n  city: string;\r\n  postal_code: string;\r\n}\r\n\r\n/**\r\n * Página pública para realizar pagos\r\n * Accesible mediante URL: /pay/{link_code}\r\n */\r\nconst PaymentPage: React.FC = () => {\r\n  const { linkCode } = useParams<{ linkCode: string }>();\r\n  const navigate = useNavigate();\r\n  const { showToast } = useToast();\r\n\r\n  const [linkData, setLinkData] = useState<PaymentLinkData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [processingPayment, setProcessingPayment] = useState(false);\r\n  const [showDatafastWidget, setShowDatafastWidget] = useState(false);\r\n  const [showDeunaQR, setShowDeunaQR] = useState(false);\r\n  const [widgetUrl, setWidgetUrl] = useState<string | null>(null);\r\n  const [customerData, setCustomerData] = useState<CustomerData>({\r\n    given_name: '',\r\n    surname: '',\r\n    identification: '',\r\n    middle_name: '',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n    city: '',\r\n    postal_code: ''\r\n  });\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!linkCode) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    loadPaymentLink();\r\n  }, [linkCode]);\r\n\r\n  const loadPaymentLink = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await ApiClient.get<{\r\n        success: boolean;\r\n        message?: string;\r\n        data?: PaymentLinkData;\r\n        error_code?: string;\r\n      }>(API_ENDPOINTS.EXTERNAL_PAYMENT.PUBLIC.SHOW(linkCode!));\r\n\r\n      if (response.success && response.data) {\r\n        setLinkData(response.data);\r\n        setError(null);\r\n      } else {\r\n        setError(response.message || 'Link de pago no encontrado');\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Error loading payment link:', err);\r\n\r\n      if (err.response?.status === 404) {\r\n        setError('Link de pago no encontrado');\r\n      } else if (err.response?.data?.error_code === 'LINK_EXPIRED') {\r\n        setError('Este link de pago ha expirado');\r\n      } else if (err.response?.data?.error_code === 'LINK_NOT_AVAILABLE') {\r\n        setError('Este link de pago ya no está disponible');\r\n      } else {\r\n        setError(err.response?.data?.message || 'Error cargando información del pago');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const { given_name, surname, identification, email, phone, address, city } = customerData;\r\n    const isValid = given_name.trim() !== '' &&\r\n                   surname.trim() !== '' &&\r\n                   identification.trim() !== '' &&\r\n                   /^\\d{10}$/.test(identification) &&\r\n                   email.trim() !== '' &&\r\n                   phone.trim() !== '' &&\r\n                   address.trim() !== '' &&\r\n                   city.trim() !== '' &&\r\n                   /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n    setFormValid(isValid);\r\n    return isValid;\r\n  };\r\n\r\n  const handleCustomerDataChange = (field: keyof CustomerData, value: string) => {\r\n    const newData = { ...customerData, [field]: value };\r\n    setCustomerData(newData);\r\n    // Validar después de cada cambio\r\n    setTimeout(() => {\r\n      const { given_name, surname, identification, email, phone, address, city } = newData;\r\n      const isValid = given_name.trim() !== '' &&\r\n                     surname.trim() !== '' &&\r\n                     identification.trim() !== '' &&\r\n                     /^\\d{10}$/.test(identification) &&\r\n                     email.trim() !== '' &&\r\n                     phone.trim() !== '' &&\r\n                     address.trim() !== '' &&\r\n                     city.trim() !== '' &&\r\n                     /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n      setFormValid(isValid);\r\n    }, 100);\r\n  };\r\n\r\n  const initiatePayment = async (method: 'datafast' | 'deuna') => {\r\n    if (!linkData || !linkCode) return;\r\n\r\n    if (!validateForm()) {\r\n      showToast(NotificationType.ERROR, 'Por favor completa todos los campos obligatorios');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setProcessingPayment(true);\r\n\r\n      const endpoint = method === 'datafast'\r\n        ? API_ENDPOINTS.EXTERNAL_PAYMENT.PUBLIC.DATAFAST(linkCode)\r\n        : API_ENDPOINTS.EXTERNAL_PAYMENT.PUBLIC.DEUNA(linkCode);\r\n\r\n      const response = await ApiClient.post<{\r\n        success: boolean;\r\n        message?: string;\r\n        data?: {\r\n          checkout_id?: string;\r\n          redirect_url?: string;\r\n          widget_url?: string;\r\n          order_id?: string;\r\n          checkout_url?: string;\r\n          payment_method: string;\r\n        };\r\n      }>(endpoint, customerData);\r\n\r\n      if (response.success && response.data) {\r\n        // ✅ CRITICAL FIX: Guardar transaction_id interno para verificación posterior\r\n        const transactionId = response.data.checkout_id || response.data.order_id || `external_${linkCode}_${Date.now()}`;\r\n        localStorage.setItem('datafast_transaction_id', transactionId);\r\n        console.log('🔧 Transaction ID guardado para external payment:', transactionId);\r\n\r\n        if (method === 'datafast') {\r\n          // Show embedded Datafast widget\r\n          const widgetUrl = response.data.widget_url || response.data.redirect_url;\r\n          if (widgetUrl) {\r\n            setWidgetUrl(widgetUrl);\r\n            setShowDatafastWidget(true);\r\n          } else {\r\n            showToast(NotificationType.ERROR, 'Error: No se recibió URL del widget');\r\n          }\r\n        } else {\r\n          // Show embedded Deuna QR\r\n          setShowDeunaQR(true);\r\n        }\r\n      } else {\r\n        showToast(NotificationType.ERROR, response.message || 'Error iniciando el pago');\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Error initiating payment:', err);\r\n      showToast(\r\n        err.response?.data?.message || 'Error procesando el pago',\r\n        NotificationType.ERROR\r\n      );\r\n    } finally {\r\n      setProcessingPayment(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('es-ES', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const isExpired = (expiresAt: string) => {\r\n    return new Date(expiresAt) < new Date();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Cargando información del pago...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\r\n        <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-8 text-center\">\r\n          <XCircle className=\"h-16 w-16 text-red-500 mx-auto mb-4\" />\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Error</h1>\r\n          <p className=\"text-gray-600 mb-6\">{error}</p>\r\n          <div className=\"space-y-3\">\r\n            <button\r\n              onClick={loadPaymentLink}\r\n              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Reintentar\r\n            </button>\r\n            <button\r\n              onClick={() => navigate('/')}\r\n              className=\"w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-lg hover:bg-gray-300 transition-colors\"\r\n            >\r\n              Ir al inicio\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handlePaymentSuccess = (data: any) => {\r\n    console.log('✅ Pago completado:', data);\r\n    showToast(NotificationType.SUCCESS, '¡Pago procesado exitosamente!');\r\n    // Could redirect to success page or show success message\r\n  };\r\n\r\n  const handlePaymentError = (error: string) => {\r\n    console.error('❌ Error en pago:', error);\r\n    showToast(NotificationType.ERROR, `Error: ${error}`);\r\n    setShowDatafastWidget(false);\r\n    setShowDeunaQR(false);\r\n  };\r\n\r\n  const handlePaymentCancel = () => {\r\n    setShowDatafastWidget(false);\r\n    setShowDeunaQR(false);\r\n    showToast(NotificationType.INFO, 'Pago cancelado');\r\n  };\r\n\r\n  if (!linkData) return null;\r\n\r\n  const expired = isExpired(linkData.expires_at);\r\n\r\n  // Show embedded widgets\r\n  if (showDatafastWidget && widgetUrl) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 py-8 px-4\">\r\n        <div className=\"max-w-2xl mx-auto\">\r\n          <DatafastExternalWidget\r\n            widgetUrl={widgetUrl}\r\n            amount={linkData.amount}\r\n            customerName={linkData.customer_name}\r\n            onSuccess={handlePaymentSuccess}\r\n            onError={handlePaymentError}\r\n            onCancel={handlePaymentCancel}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (showDeunaQR) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 py-8 px-4\">\r\n        <div className=\"max-w-2xl mx-auto\">\r\n          <ExternalDeunaPayment\r\n            linkCode={linkCode!}\r\n            amount={linkData.amount}\r\n            customerName={linkData.customer_name}\r\n            customerData={customerData}\r\n            onSuccess={handlePaymentSuccess}\r\n            onError={handlePaymentError}\r\n            onCancel={handlePaymentCancel}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8 px-4\">\r\n      <div className=\"max-w-2xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"bg-white rounded-full p-4 w-20 h-20 mx-auto mb-4 shadow-sm\">\r\n            <CreditCard className=\"h-12 w-12 text-blue-600 mx-auto\" />\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Realizar Pago</h1>\r\n          <p className=\"text-gray-600\">Procesa tu pago de forma segura</p>\r\n        </div>\r\n\r\n        {/* Información del pago */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Detalles del Pago</h2>\r\n\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between py-3 border-b border-gray-100\">\r\n              <div className=\"flex items-center\">\r\n                <User className=\"h-5 w-5 text-gray-400 mr-3\" />\r\n                <span className=\"text-gray-600\">Para:</span>\r\n              </div>\r\n              <span className=\"font-medium text-gray-900\">{linkData.customer_name}</span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between py-3 border-b border-gray-100\">\r\n              <div className=\"flex items-center\">\r\n                <DollarSign className=\"h-5 w-5 text-gray-400 mr-3\" />\r\n                <span className=\"text-gray-600\">Monto:</span>\r\n              </div>\r\n              <span className=\"text-2xl font-bold text-green-600\">${linkData.amount.toFixed(2)} USD</span>\r\n            </div>\r\n\r\n            {linkData.description && (\r\n              <div className=\"flex items-start justify-between py-3 border-b border-gray-100\">\r\n                <div className=\"flex items-center\">\r\n                  <FileText className=\"h-5 w-5 text-gray-400 mr-3 mt-0.5\" />\r\n                  <span className=\"text-gray-600\">Concepto:</span>\r\n                </div>\r\n                <span className=\"font-medium text-gray-900 text-right max-w-xs\">{linkData.description}</span>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"flex items-center justify-between py-3\">\r\n              <div className=\"flex items-center\">\r\n                <Calendar className=\"h-5 w-5 text-gray-400 mr-3\" />\r\n                <span className=\"text-gray-600\">Válido hasta:</span>\r\n              </div>\r\n              <span className={`font-medium ${expired ? 'text-red-600' : 'text-gray-900'}`}>\r\n                {formatDate(linkData.expires_at)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Estado del pago */}\r\n        {expired ? (\r\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-6 mb-6\">\r\n            <div className=\"flex items-center\">\r\n              <AlertTriangle className=\"h-8 w-8 text-red-600 mr-3\" />\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-red-800\">Link Expirado</h3>\r\n                <p className=\"text-red-600\">Este link de pago ha expirado y ya no está disponible.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : linkData.status !== 'pending' ? (\r\n          <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-6 mb-6\">\r\n            <div className=\"flex items-center\">\r\n              <CheckCircle className=\"h-8 w-8 text-gray-600 mr-3\" />\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-800\">Pago No Disponible</h3>\r\n                <p className=\"text-gray-600\">Este link de pago ya no está disponible para procesar.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Formulario de datos del cliente */}\r\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Tus Datos</h3>\r\n              <p className=\"text-gray-600 mb-6\">Por favor completa los siguientes datos para procesar tu pago de forma segura.</p>\r\n\r\n              <div className=\"space-y-4\">\r\n                {/* Nombres */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label htmlFor=\"given_name\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Nombre *\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"given_name\"\r\n                      required\r\n                      value={customerData.given_name}\r\n                      onChange={(e) => handleCustomerDataChange('given_name', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"Juan\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"surname\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Apellido *\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"surname\"\r\n                      required\r\n                      value={customerData.surname}\r\n                      onChange={(e) => handleCustomerDataChange('surname', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"Pérez\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Segundo nombre (opcional) */}\r\n                <div>\r\n                  <label htmlFor=\"middle_name\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Segundo Nombre (opcional)\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"middle_name\"\r\n                    value={customerData.middle_name || ''}\r\n                    onChange={(e) => handleCustomerDataChange('middle_name', e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                    placeholder=\"Carlos\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Cédula */}\r\n                <div>\r\n                  <label htmlFor=\"identification\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Cédula * (10 dígitos)\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"identification\"\r\n                    required\r\n                    pattern=\"[0-9]{10}\"\r\n                    maxLength={10}\r\n                    value={customerData.identification}\r\n                    onChange={(e) => handleCustomerDataChange('identification', e.target.value.replace(/\\D/g, ''))}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                    placeholder=\"1234567890\"\r\n                  />\r\n                  <p className=\"text-xs text-gray-500 mt-1\">\r\n                    Ingresa tu número de cédula de 10 dígitos\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Email *\r\n                    </label>\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      required\r\n                      value={customerData.email}\r\n                      onChange={(e) => handleCustomerDataChange('email', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"tu@email.com\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Teléfono *\r\n                    </label>\r\n                    <input\r\n                      type=\"tel\"\r\n                      id=\"phone\"\r\n                      required\r\n                      pattern=\"[0-9+\\s()-]+\"\r\n                      value={customerData.phone}\r\n                      onChange={(e) => handleCustomerDataChange('phone', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"0987654321\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Dirección *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"address\"\r\n                    required\r\n                    value={customerData.address}\r\n                    onChange={(e) => handleCustomerDataChange('address', e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                    placeholder=\"Av. Principal 123, Sector Norte\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Ciudad *\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"city\"\r\n                      required\r\n                      value={customerData.city}\r\n                      onChange={(e) => handleCustomerDataChange('city', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"Quito\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"postal_code\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Código Postal (opcional)\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"postal_code\"\r\n                      pattern=\"[0-9A-Za-z\\-\\s]+\"\r\n                      value={customerData.postal_code}\r\n                      onChange={(e) => handleCustomerDataChange('postal_code', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"170135\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Métodos de pago */}\r\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Selecciona tu método de pago</h3>\r\n\r\n              {!formValid && (\r\n                <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4 mb-4\">\r\n                  <div className=\"flex items-center\">\r\n                    <AlertTriangle className=\"h-5 w-5 text-amber-600 mr-3\" />\r\n                    <p className=\"text-amber-800 text-sm\">\r\n                      Por favor completa todos los campos de datos personales para habilitar los métodos de pago.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"space-y-4\">\r\n                {/* Datafast */}\r\n                <button\r\n                  onClick={() => initiatePayment('datafast')}\r\n                  disabled={processingPayment || !formValid}\r\n                  className=\"w-full bg-blue-600 text-white p-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\r\n                >\r\n                  {processingPayment ? (\r\n                    <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-3\"></div>\r\n                  ) : (\r\n                    <CreditCard className=\"h-5 w-5 mr-3\" />\r\n                  )}\r\n                  <span className=\"font-medium\">Pagar con Datafast</span>\r\n                </button>\r\n\r\n                {/* Deuna */}\r\n                <button\r\n                  onClick={() => initiatePayment('deuna')}\r\n                  disabled={processingPayment || !formValid}\r\n                  className=\"w-full bg-green-600 text-white p-4 rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\r\n                >\r\n                  {processingPayment ? (\r\n                    <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-3\"></div>\r\n                  ) : (\r\n                    <CreditCard className=\"h-5 w-5 mr-3\" />\r\n                  )}\r\n                  <span className=\"font-medium\">Pagar con Deuna</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Información de seguridad */}\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n              <div className=\"flex items-start\">\r\n                <CheckCircle className=\"h-5 w-5 text-blue-600 mr-3 mt-0.5\" />\r\n                <div>\r\n                  <h4 className=\"text-sm font-medium text-blue-800\">Pago Seguro</h4>\r\n                  <p className=\"text-sm text-blue-600 mt-1\">\r\n                    Tus datos están protegidos con encriptación SSL. Nunca almacenamos información de tarjetas de crédito.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* Footer */}\r\n        <div className=\"text-center mt-8 text-sm text-gray-500\">\r\n          <p>¿Tienes problemas con tu pago? Contacta al emisor de este link</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;"],"names":["DatafastExternalWidget","widgetUrl","amount","customerName","onSuccess","onError","onCancel","showToast","useToast","widgetLoaded","setWidgetLoaded","useState","isProcessing","setIsProcessing","error","setError","verificationInProgress","useRef","verificationCompleted","useEffect","loadDatafastWidget","script","existingScript","NotificationType","data","sessionId","handlePaymentResult","errorMessage","resourcePath","result","getCheckoutId","checkResult","checkForPreviousSuccessfulPayment","checkoutId","response","jsxs","jsx","XCircle","ExternalDeunaService","linkCode","customerData","ApiClient","paymentId","options","maxAttempts","interval","onStatusChange","attempts","cancelled","poll","resolve","checkCompletion","ExternalDeunaPayment","isGenerating","setIsGenerating","paymentData","setPaymentData","isPolling","setIsPolling","currentStatus","setCurrentStatus","timeRemaining","setTimeRemaining","copySuccess","setCopySuccess","pollingRef","React","timerRef","generateQRPayment","prev","startPollingPaymentStatus","polling","handleStatusChange","err","status","errorMsg","cancelPayment","reason","copyToClipboard","text","formatTime","seconds","minutes","remainingSeconds","CheckCircle","Zap","Clock","Fragment","Copy","Smartphone","RefreshCw","PaymentPage","useParams","navigate","useNavigate","linkData","setLinkData","loading","setLoading","processingPayment","setProcessingPayment","showDatafastWidget","setShowDatafastWidget","showDeunaQR","setShowDeunaQR","setWidgetUrl","setCustomerData","formValid","setFormValid","loadPaymentLink","API_ENDPOINTS","validateForm","given_name","surname","identification","email","phone","address","city","isValid","handleCustomerDataChange","field","value","newData","initiatePayment","method","endpoint","transactionId","formatDate","dateString","isExpired","expiresAt","handlePaymentSuccess","handlePaymentError","handlePaymentCancel","expired","CreditCard","User","DollarSign","FileText","Calendar","AlertTriangle","e"],"mappings":"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"}