{"version":3,"file":"useProducts-BIQiyVMQ.js","sources":["../../src/presentation/hooks/useProducts.ts"],"sourcesContent":["// src/presentation/hooks/useProducts.ts - INTEGRACI√ìN CON CACHE DE IM√ÅGENES\r\nimport {useState, useCallback, useEffect} from \"react\";\r\nimport {ProductService} from \"../../core/services/ProductService\";\r\nimport {useCacheInvalidation} from \"./useReactiveCache\";\r\nimport CacheService from \"../../infrastructure/services/CacheService\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport type {\r\n\tProduct,\r\n\tProductDetail,\r\n\tProductListResponse,\r\n} from \"../../core/domain/entities/Product\";\r\nimport type {ExtendedProductFilterParams} from \"../types/ProductFilterParams\";\r\n\r\n// ‚úÖ IMPORTAR HOOK OPTIMIZADO DE IM√ÅGENES\r\nimport {useImageCache} from \"./useImageCache\";\r\n\r\n// Crear instancia del servicio de productos\r\nconst productService = new ProductService();\r\n\r\n// Crear una clave de cach√© basada en los par√°metros de filtro\r\nconst getCacheKey = (params?: ExtendedProductFilterParams): string => {\r\n\tif (!params) return \"products_default\";\r\n\r\n\t// Crear una copia para no modificar el original\r\n\tconst paramsForKey = {...params};\r\n\r\n\t// Asegurarse de que categoryIds se maneje correctamente\r\n\tif (paramsForKey.categoryIds) {\r\n\t\t// Ordenar para asegurar consistencia independientemente del orden\r\n\t\tparamsForKey.categoryIds = [...paramsForKey.categoryIds].sort(\r\n\t\t\t(a, b) => a - b\r\n\t\t);\r\n\t}\r\n\r\n\treturn `products_${JSON.stringify(paramsForKey)}`;\r\n};\r\n\r\n/**\r\n * Hook optimizado para operaciones de productos con cache reactivo e im√°genes optimizadas\r\n */\r\nexport const useProducts = () => {\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\tconst [products, setProducts] = useState<Product[]>([]);\r\n\tconst [product, setProduct] = useState<ProductDetail | null>(null);\r\n\tconst [meta, setMeta] = useState<{\r\n\t\ttotal: number;\r\n\t\tlimit: number;\r\n\t\toffset: number;\r\n\t} | null>(null);\r\n\tconst [isInitialized, setIsInitialized] = useState<boolean>(false);\r\n\r\n\t// Hook para invalidaci√≥n de cache\r\n\tconst {invalidate} = useCacheInvalidation();\r\n\r\n\t// ‚úÖ HOOK PARA CACHE DE IM√ÅGENES OPTIMIZADO\r\n\tconst {getMultipleImageUrls, preloadImages} = useImageCache();\r\n\r\n\t// ‚úÖ FUNCI√ìN OPTIMIZADA PARA ADAPTAR PRODUCTOS CON CACHE DE IM√ÅGENES\r\n\tconst adaptProduct = useCallback((apiProduct: any): Product => {\r\n\t\t// Verificar que sea un objeto para prevenir errores\r\n\t\tif (!apiProduct || typeof apiProduct !== \"object\") {\r\n\t\t\tconsole.error(\"Producto inv√°lido para adaptar:\", apiProduct);\r\n\t\t\treturn {} as Product;\r\n\t\t}\r\n\r\n\t\t// Procesar im√°genes de manera m√°s robusta - SIMPLIFICADO\r\n\t\tlet processedImages: string[] = [];\r\n\r\n\t\t// Prioridad 1: array images\r\n\t\tif (Array.isArray(apiProduct.images) && apiProduct.images.length > 0) {\r\n\t\t\tprocessedImages = apiProduct.images\r\n\t\t\t\t.map((img: any) => {\r\n\t\t\t\t\tif (typeof img === \"string\") {\r\n\t\t\t\t\t\treturn img;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof img === \"object\" && img !== null) {\r\n\t\t\t\t\t\t// Intentar extraer URL del objeto imagen\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\timg.original ||\r\n\t\t\t\t\t\t\timg.large ||\r\n\t\t\t\t\t\t\timg.medium ||\r\n\t\t\t\t\t\t\timg.thumbnail ||\r\n\t\t\t\t\t\t\timg.url ||\r\n\t\t\t\t\t\t\timg.path ||\r\n\t\t\t\t\t\t\timg.src ||\r\n\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn \"\";\r\n\t\t\t\t})\r\n\t\t\t\t.filter(Boolean); // Filtrar strings vac√≠os\r\n\t\t}\r\n\r\n\t\t// Prioridad 2: campo image (singular)\r\n\t\tif (processedImages.length === 0 && apiProduct.image) {\r\n\t\t\tprocessedImages = [apiProduct.image];\r\n\t\t}\r\n\r\n\t\t// Prioridad 3: campo main_image\r\n\t\tif (processedImages.length === 0 && apiProduct.main_image) {\r\n\t\t\tprocessedImages = [apiProduct.main_image];\r\n\t\t}\r\n\r\n\t\t// Prioridad 4: campo featured_image\r\n\t\tif (processedImages.length === 0 && apiProduct.featured_image) {\r\n\t\t\tprocessedImages = [apiProduct.featured_image];\r\n\t\t}\r\n\r\n\t\t// Prioridad 5: campo thumbnail\r\n\t\tif (processedImages.length === 0 && apiProduct.thumbnail) {\r\n\t\t\tprocessedImages = [apiProduct.thumbnail];\r\n\t\t}\r\n\r\n\t\t// Mapear propiedades para manejar tanto camelCase como snake_case\r\n\t\tconst adaptedProduct: Product = {\r\n\t\t\tid: apiProduct.id,\r\n\t\t\tuserId: apiProduct.userId || apiProduct.user_id,\r\n\t\t\tcategoryId: apiProduct.categoryId || apiProduct.category_id,\r\n\t\t\tname: apiProduct.name,\r\n\t\t\tslug: apiProduct.slug,\r\n\t\t\tdescription: apiProduct.description || \"\",\r\n\t\t\tprice: Number(apiProduct.price || 0),\r\n\t\t\tstock: Number(apiProduct.stock || 0),\r\n\t\t\tweight: apiProduct.weight,\r\n\t\t\twidth: apiProduct.width,\r\n\t\t\theight: apiProduct.height,\r\n\t\t\tdepth: apiProduct.depth,\r\n\t\t\tdimensions: apiProduct.dimensions,\r\n\t\t\tcolors: apiProduct.colors,\r\n\t\t\tsizes: apiProduct.sizes,\r\n\t\t\ttags: apiProduct.tags,\r\n\t\t\tsku: apiProduct.sku,\r\n\t\t\tattributes: apiProduct.attributes,\r\n\t\t\timages: processedImages,\r\n\t\t\tfeatured: Boolean(apiProduct.featured),\r\n\t\t\tpublished: Boolean(apiProduct.published),\r\n\t\t\tstatus: apiProduct.status || \"active\",\r\n\t\t\tviewCount: apiProduct.viewCount || apiProduct.view_count || 0,\r\n\t\t\tsalesCount: apiProduct.salesCount || apiProduct.sales_count || 0,\r\n\t\t\tdiscountPercentage: apiProduct.discountPercentage || apiProduct.discount_percentage || 0,\r\n\t\t\tfinalPrice: apiProduct.finalPrice || apiProduct.final_price,\r\n\t\t\tisInStock: apiProduct.isInStock || apiProduct.is_in_stock,\r\n\t\t\trating: apiProduct.rating || apiProduct.rating_avg,\r\n\t\t\tratingCount: apiProduct.rating_count || apiProduct.rating_avg_count,\r\n\t\t\tcreatedAt: apiProduct.createdAt || apiProduct.created_at,\r\n\t\t\tupdatedAt: apiProduct.updatedAt || apiProduct.updated_at,\r\n\t\t\tcreated_at: apiProduct.created_at || apiProduct.createdAt || new Date().toISOString(),\r\n\t\t\tcategory_name: apiProduct.category?.name || apiProduct.category_name || \"Sin categor√≠a\",\r\n\t\t\tisNew: undefined\r\n\t\t};\r\n\r\n\t\treturn adaptedProduct;\r\n\t}, []);\r\n\r\n\t// ‚úÖ FUNCI√ìN PARA PRECARGAR IM√ÅGENES DE PRODUCTOS\r\n\tconst preloadProductImages = useCallback(\r\n\t\tasync (products: Product[]): Promise<void> => {\r\n\t\t\ttry {\r\n\t\t\t\t// Extraer las primeras im√°genes de cada producto y convertir a strings\r\n\t\t\t\tconst productImageObjects = products.map((product) => {\r\n\t\t\t\t\t// Convertir ProductImage a string si es necesario - solo propiedades existentes\r\n\t\t\t\t\tconst getImageString = (img: any): string | undefined => {\r\n\t\t\t\t\t\tif (typeof img === \"string\") return img;\r\n\t\t\t\t\t\tif (img && typeof img === \"object\") {\r\n\t\t\t\t\t\t\t// Solo usar propiedades que existen en ProductImage\r\n\t\t\t\t\t\t\treturn img.url || img.original || img.medium || img.thumbnail;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tconst imageString = product.images?.[0]\r\n\t\t\t\t\t\t? getImageString(product.images[0])\r\n\t\t\t\t\t\t: undefined;\r\n\t\t\t\t\t// Filtrar undefined values del array\r\n\t\t\t\t\tconst imagesArray = product.images\r\n\t\t\t\t\t\t? product.images\r\n\t\t\t\t\t\t\t\t.map(getImageString)\r\n\t\t\t\t\t\t\t\t.filter((img): img is string => img !== undefined)\r\n\t\t\t\t\t\t: undefined;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\timage: imageString,\r\n\t\t\t\t\t\timages: imagesArray,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Obtener URLs optimizadas usando el hook de cache de im√°genes\r\n\t\t\t\tconst imageUrls = getMultipleImageUrls(productImageObjects, \"medium\");\r\n\r\n\t\t\t\t// Precargar las im√°genes de forma as√≠ncrona (no bloquear la UI)\r\n\t\t\t\tif (imageUrls.length > 0) {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tpreloadImages(imageUrls).catch((error) =>\r\n\t\t\t\t\t\t\tconsole.log(\"‚ö†Ô∏è Error precargando im√°genes (no cr√≠tico):\", error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}, 100);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"‚ö†Ô∏è Error configurando precarga de im√°genes:\", error);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getMultipleImageUrls, preloadImages]\r\n\t);\r\n\r\n\t// Inicializar el hook\r\n\tuseEffect(() => {\r\n\t\tif (!isInitialized) {\r\n\t\t\t// Verificar la cach√© para productos destacados\r\n\t\t\tconst cachedFeatured = CacheService.getItem(\"products_featured\");\r\n\t\t\tif (cachedFeatured) {\r\n\t\t\t\tsetProducts(cachedFeatured.data || []);\r\n\t\t\t\tsetMeta(cachedFeatured.meta || null);\r\n\r\n\t\t\t\t// ‚úÖ PRECARGAR IM√ÅGENES DE PRODUCTOS DESTACADOS\r\n\t\t\t\tif (cachedFeatured.data?.length > 0) {\r\n\t\t\t\t\tpreloadProductImages(cachedFeatured.data);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetIsInitialized(true);\r\n\t\t}\r\n\t}, [isInitialized, preloadProductImages]);\r\n\r\n\t/**\r\n\t * Recupera productos con filtros opcionales\r\n\t */\r\n\tconst fetchProducts = useCallback(\r\n\t\tasync (\r\n\t\t\tfilterParams?: ExtendedProductFilterParams\r\n\t\t): Promise<ProductListResponse | null> => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst cacheKey = getCacheKey(filterParams);\r\n\r\n\t\t\t\t// Intentar obtener datos de cach√© primero\r\n\t\t\t\tconst cachedData = CacheService.getItem(cacheKey);\r\n\t\t\t\tif (cachedData) {\r\n\t\t\t\t\tconsole.log(\"üíæ Usando datos en cach√©\");\r\n\t\t\t\t\tsetProducts(cachedData.data || []);\r\n\t\t\t\t\tsetMeta(cachedData.meta || null);\r\n\t\t\t\t\tsetLoading(false);\r\n\r\n\t\t\t\t\t// ‚úÖ PRECARGAR IM√ÅGENES DE PRODUCTOS DESDE CACHE\r\n\t\t\t\t\tif (cachedData.data?.length > 0) {\r\n\t\t\t\t\t\tpreloadProductImages(cachedData.data);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn cachedData;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(\"üåê Realizando petici√≥n a la API\");\r\n\t\t\t\tconst response = await productService.getProducts(filterParams);\r\n\r\n\t\t\t\tif (response) {\r\n\t\t\t\t\t// Adaptar los datos si es necesario\r\n\t\t\t\t\tlet adaptedData: Product[] = [];\r\n\r\n\t\t\t\t\tif (Array.isArray(response.data)) {\r\n\t\t\t\t\t\tadaptedData = response.data.map(adaptProduct);\r\n\t\t\t\t\t} else if (response.data && typeof response.data === \"object\") {\r\n\t\t\t\t\t\tadaptedData = [adaptProduct(response.data)];\r\n\t\t\t\t\t} else if (Array.isArray(response)) {\r\n\t\t\t\t\t\tadaptedData = response.map(adaptProduct);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst result: ProductListResponse = {\r\n\t\t\t\t\t\tdata: adaptedData,\r\n\t\t\t\t\t\tmeta: response.meta || {\r\n\t\t\t\t\t\t\ttotal: adaptedData.length,\r\n\t\t\t\t\t\t\tlimit: filterParams?.limit || 10,\r\n\t\t\t\t\t\t\toffset: filterParams?.offset || 0,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Guardar en cach√©\r\n\t\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\t\tcacheKey,\r\n\t\t\t\t\t\tresult,\r\n\t\t\t\t\t\tappConfig.cache.productCacheTime\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tsetProducts(adaptedData);\r\n\t\t\t\t\tsetMeta(result.meta);\r\n\r\n\t\t\t\t\t// ‚úÖ PRECARGAR IM√ÅGENES DE PRODUCTOS NUEVOS\r\n\t\t\t\t\tif (adaptedData.length > 0) {\r\n\t\t\t\t\t\tpreloadProductImages(adaptedData);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetProducts([]);\r\n\t\t\t\t\tsetMeta({total: 0, limit: 0, offset: 0});\r\n\t\t\t\t\treturn {data: [], meta: {total: 0, limit: 0, offset: 0}};\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error ? err.message : \"Error al obtener productos\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tsetProducts([]);\r\n\t\t\t\tsetMeta({total: 0, limit: 0, offset: 0});\r\n\t\t\t\treturn null;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[adaptProduct, preloadProductImages]\r\n\t);\r\n\r\n\t/**\r\n\t * Recupera detalles de un producto por ID\r\n\t */\r\n\tconst fetchProductById = useCallback(\r\n\t\tasync (id: number): Promise<ProductDetail | null> => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\tconst cacheKey = `product_${id}`;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Intentar obtener de cach√© primero\r\n\t\t\t\tconst cachedProduct = CacheService.getItem(cacheKey);\r\n\r\n\t\t\t\tif (cachedProduct) {\r\n\t\t\t\t\tconsole.log(`üíæ Usando producto en cach√© con ID ${id}`);\r\n\t\t\t\t\tsetProduct(cachedProduct);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\treturn cachedProduct;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(`üåê Obteniendo producto con ID ${id} desde API`);\r\n\t\t\t\tconst productDetailResponse = await productService.getProductById(id);\r\n\r\n\t\t\t\tif (productDetailResponse) {\r\n\t\t\t\t\t// Guardar en cach√©\r\n\t\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\t\tcacheKey,\r\n\t\t\t\t\t\tproductDetailResponse,\r\n\t\t\t\t\t\tappConfig.cache.productCacheTime\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tsetProduct(productDetailResponse);\r\n\r\n\t\t\t\t\t// ‚úÖ PRECARGAR IM√ÅGENES DEL PRODUCTO INDIVIDUAL\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tproductDetailResponse.images &&\r\n\t\t\t\t\t\tproductDetailResponse.images.length > 0\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// Convertir ProductImage[] a string[] - solo propiedades existentes\r\n\t\t\t\t\t\tconst imageStrings = productDetailResponse.images\r\n\t\t\t\t\t\t\t.map((img) => {\r\n\t\t\t\t\t\t\t\tif (typeof img === \"string\") return img;\r\n\t\t\t\t\t\t\t\tif (img && typeof img === \"object\") {\r\n\t\t\t\t\t\t\t\t\t// Solo usar propiedades que existen en ProductImage\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\timg.url || img.original || img.medium || img.thumbnail || \"\"\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn \"\";\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.filter(Boolean);\r\n\r\n\t\t\t\t\t\tconst imageUrls = getMultipleImageUrls(\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\timages: imageStrings,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\"original\"\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t// Precargar todas las im√°genes del producto para galer√≠a\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tpreloadImages(imageUrls).catch((error) =>\r\n\t\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\t\"‚ö†Ô∏è Error precargando im√°genes del producto:\",\r\n\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}, 50);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn productDetailResponse;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProduct(null);\r\n\t\t\t\treturn null;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"‚ùå Error obteniendo detalles de producto:\", err);\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al obtener detalles del producto\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tsetProduct(null);\r\n\t\t\t\treturn null;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getMultipleImageUrls, preloadImages]\r\n\t);\r\n\r\n\t/**\r\n\t * Recupera detalles de un producto por slug\r\n\t */\r\n\tconst fetchProductBySlug = useCallback(\r\n\t\tasync (slug: string): Promise<ProductDetail | null> => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\tconst cacheKey = `product_slug_${slug}`;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Intentar obtener de cach√© primero\r\n\t\t\t\tconst cachedProduct = CacheService.getItem(cacheKey);\r\n\r\n\t\t\t\tif (cachedProduct) {\r\n\t\t\t\t\tconsole.log(`üíæ Usando producto en cach√© con slug ${slug}`);\r\n\t\t\t\t\tsetProduct(cachedProduct);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\treturn cachedProduct;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(`üåê Obteniendo producto con slug ${slug} desde API`);\r\n\t\t\t\tconst productDetailResponse =\r\n\t\t\t\t\tawait productService.getProductBySlug(slug);\r\n\r\n\t\t\t\tif (productDetailResponse) {\r\n\t\t\t\t\t// Guardar en cach√©\r\n\t\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\t\tcacheKey,\r\n\t\t\t\t\t\tproductDetailResponse,\r\n\t\t\t\t\t\tappConfig.cache.productCacheTime\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tsetProduct(productDetailResponse);\r\n\r\n\t\t\t\t\t// ‚úÖ PRECARGAR IM√ÅGENES DEL PRODUCTO POR SLUG\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tproductDetailResponse.images &&\r\n\t\t\t\t\t\tproductDetailResponse.images.length > 0\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// Convertir ProductImage[] a string[] - solo propiedades existentes\r\n\t\t\t\t\t\tconst imageStrings = productDetailResponse.images\r\n\t\t\t\t\t\t\t.map((img) => {\r\n\t\t\t\t\t\t\t\tif (typeof img === \"string\") return img;\r\n\t\t\t\t\t\t\t\tif (img && typeof img === \"object\") {\r\n\t\t\t\t\t\t\t\t\t// Solo usar propiedades que existen en ProductImage\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\timg.url || img.original || img.medium || img.thumbnail || \"\"\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn \"\";\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.filter(Boolean);\r\n\r\n\t\t\t\t\t\tconst imageUrls = getMultipleImageUrls(\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\timages: imageStrings,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\"original\"\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tpreloadImages(imageUrls).catch((error) =>\r\n\t\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\t\"‚ö†Ô∏è Error precargando im√°genes del producto:\",\r\n\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}, 50);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn productDetailResponse;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProduct(null);\r\n\t\t\t\treturn null;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t\"‚ùå Error obteniendo detalles de producto por slug:\",\r\n\t\t\t\t\terr\r\n\t\t\t\t);\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al obtener detalles del producto\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tsetProduct(null);\r\n\t\t\t\treturn null;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getMultipleImageUrls, preloadImages]\r\n\t);\r\n\r\n\t/**\r\n\t * Recupera productos destacados\r\n\t */\r\n\tconst fetchFeaturedProducts = useCallback(\r\n\t\tasync (limit: number = 8): Promise<Product[]> => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\tconst cacheKey = `products_featured_${limit}`;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Intentar obtener de cach√© primero\r\n\t\t\t\tconst cachedProducts = CacheService.getItem(cacheKey);\r\n\r\n\t\t\t\tif (cachedProducts) {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t`üíæ Usando productos destacados en cach√© (l√≠mite: ${limit})`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetProducts(cachedProducts);\r\n\t\t\t\t\tsetLoading(false);\r\n\r\n\t\t\t\t\t// ‚úÖ PRECARGAR IM√ÅGENES DE PRODUCTOS DESTACADOS DESDE CACHE\r\n\t\t\t\t\tpreloadProductImages(cachedProducts);\r\n\r\n\t\t\t\t\treturn cachedProducts;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`üåê Obteniendo productos destacados desde API (l√≠mite: ${limit})`\r\n\t\t\t\t);\r\n\t\t\t\tconst featuredProducts =\r\n\t\t\t\t\tawait productService.getFeaturedProducts(limit);\r\n\r\n\t\t\t\tif (featuredProducts && featuredProducts.length > 0) {\r\n\t\t\t\t\t// Adaptar datos si es necesario\r\n\t\t\t\t\tconst adaptedProducts = featuredProducts.map(adaptProduct);\r\n\r\n\t\t\t\t\t// Guardar en cach√©\r\n\t\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\t\tcacheKey,\r\n\t\t\t\t\t\tadaptedProducts,\r\n\t\t\t\t\t\tappConfig.cache.productCacheTime\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tsetProducts(adaptedProducts);\r\n\r\n\t\t\t\t\t// ‚úÖ PRECARGAR IM√ÅGENES DE PRODUCTOS DESTACADOS NUEVOS\r\n\t\t\t\t\tpreloadProductImages(adaptedProducts);\r\n\r\n\t\t\t\t\treturn adaptedProducts;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProducts([]);\r\n\t\t\t\treturn [];\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"‚ùå Error obteniendo productos destacados:\", err);\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al obtener productos destacados\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tsetProducts([]);\r\n\t\t\t\treturn [];\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[adaptProduct, preloadProductImages]\r\n\t);\r\n\r\n\t/**\r\n\t * Recupera productos relacionados\r\n\t */\r\n\tconst fetchRelatedProducts = useCallback(\r\n\t\tasync (productId: number, limit: number = 4): Promise<Product[]> => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\tconst cacheKey = `products_related_${productId}_${limit}`;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Intentar obtener de cach√© primero\r\n\t\t\t\tconst cachedProducts = CacheService.getItem(cacheKey);\r\n\r\n\t\t\t\tif (cachedProducts) {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t`üíæ Usando productos relacionados en cach√© para producto ${productId}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetLoading(false);\r\n\r\n\t\t\t\t\t// ‚úÖ PRECARGAR IM√ÅGENES DE PRODUCTOS RELACIONADOS DESDE CACHE\r\n\t\t\t\t\tpreloadProductImages(cachedProducts);\r\n\r\n\t\t\t\t\treturn cachedProducts;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`üåê Obteniendo productos relacionados desde API para producto ${productId}`\r\n\t\t\t\t);\r\n\t\t\t\tconst relatedProducts = await productService.getRelatedProducts(\r\n\t\t\t\t\tproductId,\r\n\t\t\t\t\tlimit\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (relatedProducts && relatedProducts.length > 0) {\r\n\t\t\t\t\t// Adaptar datos si es necesario\r\n\t\t\t\t\tconst adaptedProducts = relatedProducts.map(adaptProduct);\r\n\r\n\t\t\t\t\t// Guardar en cach√©\r\n\t\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\t\tcacheKey,\r\n\t\t\t\t\t\tadaptedProducts,\r\n\t\t\t\t\t\tappConfig.cache.productCacheTime\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// ‚úÖ PRECARGAR IM√ÅGENES DE PRODUCTOS RELACIONADOS NUEVOS\r\n\t\t\t\t\tpreloadProductImages(adaptedProducts);\r\n\r\n\t\t\t\t\treturn adaptedProducts;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [];\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"‚ùå Error obteniendo productos relacionados:\", err);\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al obtener productos relacionados\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\treturn [];\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[adaptProduct, preloadProductImages]\r\n\t);\r\n\r\n\t/**\r\n\t * Registra visualizaci√≥n de producto\r\n\t */\r\n\tconst trackProductView = useCallback(\r\n\t\tasync (productId: number): Promise<void> => {\r\n\t\t\ttry {\r\n\t\t\t\tawait productService.trackProductView(productId);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"‚ùå Error registrando visualizaci√≥n de producto:\", err);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\t/**\r\n\t * Limpia el estado del producto actual\r\n\t */\r\n\tconst clearCurrentProduct = useCallback((): void => {\r\n\t\tconsole.log(\"üß© useProducts: Limpiando producto actual\");\r\n\t\tsetProduct(null);\r\n\t\tsetError(null);\r\n\t}, []);\r\n\r\n\t/**\r\n\t * Limpia la cach√© de productos usando cache reactivo\r\n\t */\r\n\tconst clearProductCache = useCallback(\r\n\t\t(productId?: number): void => {\r\n\t\t\tif (productId) {\r\n\t\t\t\t// Limpiar cach√© espec√≠fica de un producto\r\n\t\t\t\tCacheService.removeItem(`product_${productId}`);\r\n\t\t\t\tinvalidate(`product_${productId}`);\r\n\t\t\t\tconsole.log(`üóëÔ∏è Cach√© del producto ${productId} eliminada`);\r\n\t\t\t} else {\r\n\t\t\t\t// Invalidar todos los patrones de productos\r\n\t\t\t\tinvalidate(\"products_*\");\r\n\t\t\t\tinvalidate(\"product_*\");\r\n\t\t\t\tconsole.log(\"üóëÔ∏è Toda la cach√© de productos invalidada\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t[invalidate]\r\n\t);\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tproducts,\r\n\t\tproduct,\r\n\t\tmeta,\r\n\t\tfetchProducts,\r\n\t\tfetchProductById,\r\n\t\tfetchProductBySlug,\r\n\t\tfetchFeaturedProducts,\r\n\t\tfetchRelatedProducts,\r\n\t\ttrackProductView,\r\n\t\tclearCurrentProduct, // ‚úÖ NUEVA FUNCI√ìN\r\n\t\tclearProductCache,\r\n\t\t// ‚úÖ NUEVAS FUNCIONALIDADES DE CACHE DE IM√ÅGENES\r\n\t\tpreloadProductImages,\r\n\t};\r\n};\r\n\r\nexport default useProducts;\r\n"],"names":["productService","ProductService","getCacheKey","params","paramsForKey","a","b","useProducts","loading","setLoading","useState","error","setError","products","setProducts","product","setProduct","meta","setMeta","isInitialized","setIsInitialized","invalidate","useCacheInvalidation","getMultipleImageUrls","preloadImages","useImageCache","adaptProduct","useCallback","apiProduct","processedImages","img","preloadProductImages","productImageObjects","getImageString","imageString","imagesArray","imageUrls","useEffect","cachedFeatured","CacheService","fetchProducts","filterParams","cacheKey","cachedData","response","adaptedData","result","appConfig","err","errorMessage","fetchProductById","id","cachedProduct","productDetailResponse","imageStrings","fetchProductBySlug","slug","fetchFeaturedProducts","limit","cachedProducts","featuredProducts","adaptedProducts","fetchRelatedProducts","productId","relatedProducts","trackProductView","clearCurrentProduct","clearProductCache"],"mappings":"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"}