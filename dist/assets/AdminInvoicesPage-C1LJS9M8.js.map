{"version":3,"file":"AdminInvoicesPage-C1LJS9M8.js","sources":["../../src/infrastructure/repositories/HttpInvoiceRepository.ts","../../src/core/useCases/admin/invoice/GetAllInvoicesUseCase.ts","../../src/core/useCases/admin/invoice/GetInvoiceByIdUseCase.ts","../../src/core/useCases/admin/invoice/RetryInvoiceUseCase.ts","../../src/core/useCases/admin/invoice/CheckInvoiceStatusUseCase.ts","../../src/core/useCases/admin/invoice/GetInvoiceStatsUseCase.ts","../../src/core/useCases/admin/invoice/UpdateInvoiceUseCase.ts","../../src/presentation/pages/admin/AdminInvoicesPage.tsx"],"sourcesContent":["import { ApiClient } from '../api/apiClient';\nimport appConfig from '../../config/appConfig';\nimport type { InvoiceRepository } from '../../core/domain/repositories/InvoiceRepository';\nimport type { PaginatedApiResponse } from '../../core/domain/entities/ApiResponse';\nimport type { InvoiceFilters, AdminInvoice } from '../../core/useCases/admin/invoice/GetAllInvoicesUseCase';\nimport type { InvoiceDetail } from '../../core/useCases/admin/invoice/GetInvoiceByIdUseCase';\nimport type { RetryInvoiceResponse } from '../../core/useCases/admin/invoice/RetryInvoiceUseCase';\nimport type { InvoiceStatusCheck } from '../../core/useCases/admin/invoice/CheckInvoiceStatusUseCase';\nimport type { InvoiceStats } from '../../core/useCases/admin/invoice/GetInvoiceStatsUseCase';\nimport type { UpdateInvoiceRequest, UpdateInvoiceResponse } from '../../core/useCases/admin/invoice/UpdateInvoiceUseCase';\n\nexport class HttpInvoiceRepository implements InvoiceRepository {\n\n  async getAllInvoices(filters: InvoiceFilters = {}): Promise<PaginatedApiResponse<AdminInvoice>> {\n    try {\n      // Construir query parameters (usar objeto directo como AdminOrderService)\n      const queryParams = filters;\n\n      const response = await ApiClient.get<any>('/admin/invoices', queryParams);\n\n      // Seguir patr√≥n de AdminOrderService - acceso directo a datos\n      const invoices = response?.data || [];\n      const meta = response?.meta || {\n        current_page: 1,\n        last_page: 1,\n        per_page: 20,\n        total: 0,\n        from: 0,\n        to: 0,\n      };\n\n      return {\n        status: 'success',\n        message: 'Facturas obtenidas exitosamente',\n        data: {\n          data: invoices,\n          meta: meta,\n          links: {\n            first: '',\n            last: '',\n            prev: null,\n            next: null,\n          }\n        }\n      };\n    } catch (error) {\n      console.error('Error en HttpInvoiceRepository.getAllInvoices:', error);\n      throw error;\n    }\n  }\n\n  async getInvoiceById(id: number): Promise<InvoiceDetail> {\n    try {\n      const response = await ApiClient.get<any>(`/admin/invoices/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error en HttpInvoiceRepository.getInvoiceById:', error);\n      throw error;\n    }\n  }\n\n  async retryInvoice(invoiceId: number): Promise<RetryInvoiceResponse> {\n    try {\n      const response = await ApiClient.post<any>(`/admin/invoices/${invoiceId}/retry`, {});\n      return response.data;\n    } catch (error) {\n      console.error('Error en HttpInvoiceRepository.retryInvoice:', error);\n      throw error;\n    }\n  }\n\n  async checkInvoiceStatus(invoiceId: number): Promise<InvoiceStatusCheck> {\n    try {\n      const response = await ApiClient.get<any>(`/admin/invoices/${invoiceId}/check-status`);\n      return response.data;\n    } catch (error) {\n      console.error('Error en HttpInvoiceRepository.checkInvoiceStatus:', error);\n      throw error;\n    }\n  }\n\n  async getInvoiceStats(): Promise<InvoiceStats> {\n    try {\n      const response = await ApiClient.get<any>('/admin/invoices/stats/overview');\n      return response.data;\n    } catch (error) {\n      console.error('Error en HttpInvoiceRepository.getInvoiceStats:', error);\n      throw error;\n    }\n  }\n\n  async updateInvoice(invoiceId: number, updateData: UpdateInvoiceRequest): Promise<UpdateInvoiceResponse> {\n    try {\n      const response = await ApiClient.put<any>(`/admin/invoices/${invoiceId}`, updateData);\n      return response.data;\n    } catch (error) {\n      console.error('Error en HttpInvoiceRepository.updateInvoice:', error);\n      throw error;\n    }\n  }\n\n  async downloadInvoicePdf(invoiceId: number): Promise<Blob> {\n    try {\n      // Usar fetch directo como en AdminLogService para descargas de archivos\n      const response = await fetch(`${appConfig.api.baseUrl}/admin/invoices/${invoiceId}/download-pdf`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(appConfig.storage.authTokenKey)}`,\n          'Accept': 'application/pdf',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n\n      return await response.blob();\n    } catch (error) {\n      console.error('Error en HttpInvoiceRepository.downloadInvoicePdf:', error);\n      throw error;\n    }\n  }\n}","import type { InvoiceRepository } from '../../../domain/repositories/InvoiceRepository';\nimport type { PaginatedResponse } from '../../../domain/entities/ApiResponse';\n\nexport interface InvoiceFilters {\n  status?: string;\n  customer_identification?: string;\n  customer_name?: string;\n  start_date?: string;\n  end_date?: string;\n  invoice_number?: string;\n  page?: number;\n  per_page?: number;\n}\n\nexport interface AdminInvoice {\n  id: number;\n  invoice_number: string;\n  issue_date: string;\n  status: string;\n  status_label: string;\n  status_color: string;\n  customer: {\n    identification: string;\n    identification_type: string;\n    name: string;\n    email: string;\n    address: string;\n    phone: string;\n  };\n  subtotal: number;\n  tax_amount: number;\n  total_amount: number;\n  currency: string;\n  sri_access_key?: string;\n  sri_authorization_number?: string;\n  sri_error_message?: string;\n  retry_count: number;\n  last_retry_at?: string;\n  order?: {\n    id: number;\n    order_number: string;\n    user: {\n      name: string;\n      email: string;\n    };\n  };\n  items_count: number;\n  created_at: string;\n}\n\nexport class GetAllInvoicesUseCase {\n  constructor(private invoiceRepository: InvoiceRepository) {}\n\n  async execute(filters: InvoiceFilters = {}): Promise<PaginatedResponse<AdminInvoice>> {\n    try {\n      const response = await this.invoiceRepository.getAllInvoices(filters);\n      return response.data;\n    } catch (error) {\n      console.error('Error en GetAllInvoicesUseCase:', error);\n      throw error;\n    }\n  }\n}","import type { InvoiceRepository } from '../../../domain/repositories/InvoiceRepository';\n\nexport interface InvoiceDetail {\n  id: number;\n  invoice_number: string;\n  issue_date: string;\n  status: string;\n  status_label: string;\n  status_color: string;\n  customer: {\n    identification: string;\n    identification_type: string;\n    identification_type_label: string;\n    name: string;\n    email: string;\n    address: string;\n    phone: string;\n  };\n  subtotal: number;\n  tax_amount: number;\n  total_amount: number;\n  currency: string;\n  sri: {\n    access_key?: string;\n    authorization_number?: string;\n    error_message?: string;\n    response?: any;\n  };\n  retry_info: {\n    count: number;\n    last_retry_at?: string;\n    can_retry: boolean;\n  };\n  order?: {\n    id: number;\n    order_number: string;\n    status: string;\n    payment_status: string;\n    payment_method: string;\n    user: {\n      id?: number;\n      name: string;\n      email: string;\n    };\n  };\n  items: Array<{\n    id: number;\n    product_code: string;\n    product_name: string;\n    quantity: number;\n    unit_price: number;\n    discount: number;\n    subtotal: number;\n    tax_rate: number;\n    tax_amount: number;\n    product?: {\n      id: number;\n      name: string;\n      slug: string;\n    };\n  }>;\n  created_via: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport class GetInvoiceByIdUseCase {\n  constructor(private invoiceRepository: InvoiceRepository) {}\n\n  async execute(id: number): Promise<InvoiceDetail> {\n    try {\n      const invoiceDetail = await this.invoiceRepository.getInvoiceById(id);\n      return invoiceDetail;\n    } catch (error) {\n      console.error('Error en GetInvoiceByIdUseCase:', error);\n      throw error;\n    }\n  }\n}","import type { InvoiceRepository } from '../../../domain/repositories/InvoiceRepository';\n\nexport interface RetryInvoiceResponse {\n  invoice_id: number;\n  retry_count: number;\n  sri_response: any;\n}\n\nexport class RetryInvoiceUseCase {\n  constructor(private invoiceRepository: InvoiceRepository) {}\n\n  async execute(invoiceId: number): Promise<RetryInvoiceResponse> {\n    try {\n      const retryResponse = await this.invoiceRepository.retryInvoice(invoiceId);\n      return retryResponse;\n    } catch (error) {\n      console.error('Error en RetryInvoiceUseCase:', error);\n      throw error;\n    }\n  }\n}","import type { InvoiceRepository } from '../../../domain/repositories/InvoiceRepository';\n\nexport interface InvoiceStatusCheck {\n  invoice_id: number;\n  current_status: string;\n  sri_status: any;\n}\n\nexport class CheckInvoiceStatusUseCase {\n  constructor(private invoiceRepository: InvoiceRepository) {}\n\n  async execute(invoiceId: number): Promise<InvoiceStatusCheck> {\n    try {\n      const invoiceStatus = await this.invoiceRepository.checkInvoiceStatus(invoiceId);\n      return invoiceStatus;\n    } catch (error) {\n      console.error('Error en CheckInvoiceStatusUseCase:', error);\n      throw error;\n    }\n  }\n}","import type { InvoiceRepository } from '../../../domain/repositories/InvoiceRepository';\n\nexport interface InvoiceStats {\n  sri_stats: {\n    total_invoices: number;\n    authorized: number;\n    pending: number;\n    failed: number;\n    definitively_failed: number;\n    draft: number;\n    success_rate: number;\n  };\n  additional_stats: {\n    failed_invoices: number;\n    pending_retries: number;\n    recent_invoices: Array<{\n      id: number;\n      invoice_number: string;\n      customer_name: string;\n      total_amount: number;\n      status: string;\n      created_at: string;\n    }>;\n  };\n}\n\nexport class GetInvoiceStatsUseCase {\n  constructor(private invoiceRepository: InvoiceRepository) {}\n\n  async execute(): Promise<InvoiceStats> {\n    try {\n      const invoiceStats = await this.invoiceRepository.getInvoiceStats();\n      return invoiceStats;\n    } catch (error) {\n      console.error('Error en GetInvoiceStatsUseCase:', error);\n      throw error;\n    }\n  }\n}","import type { InvoiceRepository } from '../../../domain/repositories/InvoiceRepository';\n\nexport interface UpdateInvoiceRequest {\n  customer_name?: string;\n  customer_identification?: string;\n  customer_email?: string;\n  customer_address?: string;\n  customer_phone?: string;\n}\n\nexport interface UpdateInvoiceResponse {\n  invoice_id: number;\n  updated_fields: string[];\n}\n\nexport class UpdateInvoiceUseCase {\n  constructor(private invoiceRepository: InvoiceRepository) {}\n\n  async execute(invoiceId: number, updateData: UpdateInvoiceRequest): Promise<UpdateInvoiceResponse> {\n    try {\n      const updateResponse = await this.invoiceRepository.updateInvoice(invoiceId, updateData);\n      return updateResponse;\n    } catch (error) {\n      console.error('Error en UpdateInvoiceUseCase:', error);\n      throw error;\n    }\n  }\n}","import React, { useState, useEffect } from \"react\";\r\nimport Table from \"../../components/dashboard/Table\";\r\nimport {\r\n  FileText,\r\n  User,\r\n  Calendar,\r\n  CheckCircle,\r\n  XCircle,\r\n  AlertTriangle,\r\n  RefreshCw,\r\n  Filter,\r\n  Eye,\r\n  Download,\r\n  ShoppingBag,\r\n  Clock,\r\n  Send,\r\n  X,\r\n  RotateCcw,\r\n  CreditCard,\r\n  Phone,\r\n  MapPin,\r\n  Edit,\r\n  Minus\r\n} from \"lucide-react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport StatCardList from \"../../components/dashboard/StatCardList\";\r\nimport { HttpInvoiceRepository } from \"../../../infrastructure/repositories/HttpInvoiceRepository\";\r\nimport { GetAllInvoicesUseCase, type AdminInvoice, type InvoiceFilters } from \"../../../core/useCases/admin/invoice/GetAllInvoicesUseCase\";\r\nimport { GetInvoiceByIdUseCase, type InvoiceDetail } from \"../../../core/useCases/admin/invoice/GetInvoiceByIdUseCase\";\r\nimport { RetryInvoiceUseCase } from \"../../../core/useCases/admin/invoice/RetryInvoiceUseCase\";\r\nimport { CheckInvoiceStatusUseCase } from \"../../../core/useCases/admin/invoice/CheckInvoiceStatusUseCase\";\r\nimport { GetInvoiceStatsUseCase, type InvoiceStats } from \"../../../core/useCases/admin/invoice/GetInvoiceStatsUseCase\";\r\nimport { UpdateInvoiceUseCase, type UpdateInvoiceRequest } from \"../../../core/useCases/admin/invoice/UpdateInvoiceUseCase\";\r\nimport { useToast } from \"../../components/UniversalToast\";\r\nimport { NotificationType } from \"../../types/NotificationTypes\";\r\n\r\n// Estados v√°lidos de facturas SRI\r\nconst validStatuses = [\r\n  'DRAFT',\r\n  'SENT_TO_SRI', \r\n  'PENDING',\r\n  'PROCESSING',\r\n  'RECEIVED',\r\n  'AUTHORIZED',\r\n  'REJECTED',\r\n  'NOT_AUTHORIZED',\r\n  'RETURNED',\r\n  'SRI_ERROR',\r\n  'FAILED',\r\n  'DEFINITIVELY_FAILED'\r\n];\r\n\r\nconst AdminInvoicesPage: React.FC = () => {\r\n  // Hook para mostrar notificaciones usando el sistema correcto\r\n  const { showToast } = useToast();\r\n  const navigate = useNavigate();\r\n\r\n  // Inicializar repositorios y use cases una sola vez\r\n  const [getAllInvoicesUseCase] = useState(() => {\r\n    const repository = new HttpInvoiceRepository();\r\n    return new GetAllInvoicesUseCase(repository);\r\n  });\r\n  const [getInvoiceByIdUseCase] = useState(() => {\r\n    const repository = new HttpInvoiceRepository();\r\n    return new GetInvoiceByIdUseCase(repository);\r\n  });\r\n  const [retryInvoiceUseCase] = useState(() => {\r\n    const repository = new HttpInvoiceRepository();\r\n    return new RetryInvoiceUseCase(repository);\r\n  });\r\n  const [checkInvoiceStatusUseCase] = useState(() => {\r\n    const repository = new HttpInvoiceRepository();\r\n    return new CheckInvoiceStatusUseCase(repository);\r\n  });\r\n  const [getInvoiceStatsUseCase] = useState(() => {\r\n    const repository = new HttpInvoiceRepository();\r\n    return new GetInvoiceStatsUseCase(repository);\r\n  });\r\n  const [updateInvoiceUseCase] = useState(() => {\r\n    const repository = new HttpInvoiceRepository();\r\n    return new UpdateInvoiceUseCase(repository);\r\n  });\r\n\r\n  // Estado de la aplicaci√≥n\r\n  const [invoices, setInvoices] = useState<AdminInvoice[]>([]);\r\n  const [stats, setStats] = useState<InvoiceStats | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Filtros\r\n  const [filters, setFilters] = useState<InvoiceFilters>({\r\n    page: 1,\r\n    per_page: 20\r\n  });\r\n\r\n  // Paginaci√≥n\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    totalPages: 1,\r\n    totalItems: 0,\r\n    itemsPerPage: 20,\r\n  });\r\n\r\n  // Modal de detalle\r\n  const [selectedInvoice, setSelectedInvoice] = useState<InvoiceDetail | null>(null);\r\n  const [showInvoiceModal, setShowInvoiceModal] = useState(false);\r\n  const [showPrintOptions, setShowPrintOptions] = useState(false);\r\n\r\n  // Modal de edici√≥n\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [editingInvoice, setEditingInvoice] = useState<AdminInvoice | null>(null);\r\n  const [editFormData, setEditFormData] = useState<UpdateInvoiceRequest>({});\r\n\r\n  // Estado de acciones\r\n  const [actionLoading, setActionLoading] = useState<{[key: number]: boolean}>({});\r\n\r\n  // Cargar datos iniciales\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [filters]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const [invoicesResponse, statsResponse] = await Promise.all([\r\n        getAllInvoicesUseCase.execute(filters),\r\n        getInvoiceStatsUseCase.execute()\r\n      ]);\r\n\r\n      // Asegurar que data sea siempre un array\r\n      const invoicesData = Array.isArray(invoicesResponse.data) ? invoicesResponse.data : [];\r\n      \r\n      setInvoices(invoicesData);\r\n      setPagination({\r\n        currentPage: invoicesResponse.meta?.current_page || 1,\r\n        totalPages: invoicesResponse.meta?.last_page || 1,\r\n        totalItems: invoicesResponse.meta?.total || 0,\r\n        itemsPerPage: invoicesResponse.meta?.per_page || 20,\r\n      });\r\n\r\n      if (statsResponse) {\r\n        setStats(statsResponse);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando facturas:', error);\r\n      setError(error instanceof Error ? error.message : 'Error al cargar los datos');\r\n      setInvoices([]); // Establecer array vac√≠o en caso de error\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Manejar cambio de filtros\r\n  const handleFilterChange = (key: keyof InvoiceFilters, value: any) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [key]: value,\r\n      page: key === 'page' ? value : 1 // Reset p√°gina si cambia otro filtro\r\n    }));\r\n  };\r\n\r\n  // Manejar cambio de p√°gina\r\n  const handlePageChange = (page: number) => {\r\n    handleFilterChange('page', page);\r\n  };\r\n\r\n  // Abrir modal de detalle\r\n  const openInvoiceModal = async (invoice: AdminInvoice) => {\r\n    try {\r\n      setShowInvoiceModal(true);\r\n      const detail = await getInvoiceByIdUseCase.execute(invoice.id);\r\n      setSelectedInvoice(detail);\r\n    } catch (error) {\r\n      console.error('Error cargando detalles:', error);\r\n      showToast(NotificationType.ERROR, 'Error al cargar los detalles de la factura');\r\n      setShowInvoiceModal(false);\r\n    }\r\n  };\r\n\r\n  // Cerrar modal\r\n  const closeInvoiceModal = () => {\r\n    setShowInvoiceModal(false);\r\n    setSelectedInvoice(null);\r\n    setShowPrintOptions(false);\r\n  };\r\n\r\n  // Reintentar factura\r\n  const retryInvoice = async (invoiceId: number) => {\r\n    try {\r\n      setActionLoading(prev => ({...prev, [invoiceId]: true}));\r\n      await retryInvoiceUseCase.execute(invoiceId);\r\n      showToast(NotificationType.SUCCESS, 'Reintento de factura iniciado correctamente');\r\n      fetchData(); // Recargar datos\r\n    } catch (error) {\r\n      const errorMessage = (error as any)?.response?.data?.error || 'Error al reintentar la factura';\r\n      showToast(NotificationType.ERROR, errorMessage);\r\n    } finally {\r\n      setActionLoading(prev => ({...prev, [invoiceId]: false}));\r\n    }\r\n  };\r\n\r\n  // Consultar estado en SRI\r\n  const checkSriStatus = async (invoiceId: number) => {\r\n    try {\r\n      setActionLoading(prev => ({...prev, [invoiceId]: true}));\r\n      const result = await checkInvoiceStatusUseCase.execute(invoiceId);\r\n      showToast(NotificationType.INFO, `Estado actual: ${result.current_status}\\nEstado SRI: ${JSON.stringify(result.sri_status, null, 2)}`);\r\n    } catch (error) {\r\n      console.error('Error consultando estado:', error);\r\n      showToast(NotificationType.ERROR, error instanceof Error ? error.message : 'Error al consultar el estado');\r\n    } finally {\r\n      setActionLoading(prev => ({...prev, [invoiceId]: false}));\r\n    }\r\n  };\r\n\r\n  // Formatear fecha\r\n  const formatDate = (dateString: string | undefined) => {\r\n    if (!dateString) return \"N/A\";\r\n    const date = new Date(dateString);\r\n    return new Intl.DateTimeFormat(\"es-ES\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\", \r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    }).format(date);\r\n  };\r\n\r\n  // Formatear moneda\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat(\"es-EC\", {\r\n      style: \"currency\",\r\n      currency: \"USD\",\r\n      minimumFractionDigits: 2,\r\n    }).format(amount);\r\n  };\r\n\r\n  // Descargar factura\r\n  const downloadInvoice = async (invoiceId: number, format: \"pdf\" | \"xml\") => {\r\n    if (format === \"xml\") {\r\n      showToast(NotificationType.INFO, 'Funcionalidad de descarga XML en desarrollo');\r\n      if (showPrintOptions) {\r\n        setShowPrintOptions(false);\r\n      }\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setActionLoading(prev => ({...prev, [invoiceId]: true}));\r\n\r\n      // Descargar PDF usando el repositorio\r\n      const repository = new HttpInvoiceRepository();\r\n      const pdfBlob = await repository.downloadInvoicePdf(invoiceId);\r\n\r\n      // Crear URL del blob y descargar\r\n      const url = window.URL.createObjectURL(pdfBlob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `factura_${invoiceId}.pdf`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      showToast(NotificationType.SUCCESS, 'PDF descargado correctamente');\r\n\r\n    } catch (error) {\r\n      console.error('Error descargando PDF:', error);\r\n      showToast(NotificationType.ERROR, error instanceof Error ? error.message : 'Error al descargar el PDF');\r\n    } finally {\r\n      setActionLoading(prev => ({...prev, [invoiceId]: false}));\r\n      if (showPrintOptions) {\r\n        setShowPrintOptions(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Enviar por email (placeholder)\r\n  const sendInvoiceByEmail = (_invoiceId: number) => {\r\n    showToast(NotificationType.INFO, 'Funcionalidad de env√≠o por email en desarrollo');\r\n    if (showPrintOptions) {\r\n      setShowPrintOptions(false);\r\n    }\r\n  };\r\n\r\n  // Crear nota de cr√©dito\r\n  const createCreditNote = (invoice: AdminInvoice) => {\r\n    // Navegar a la p√°gina de notas de cr√©dito con datos de la factura\r\n    navigate('/admin/credit-notes', {\r\n      state: {\r\n        createFromInvoice: true,\r\n        invoiceData: {\r\n          id: invoice.id,\r\n          invoice_number: invoice.invoice_number,\r\n          customer: invoice.customer,\r\n          total_amount: invoice.total_amount,\r\n          subtotal: invoice.subtotal,\r\n          tax_amount: invoice.tax_amount\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // Abrir modal de edici√≥n\r\n  const openEditModal = (invoice: AdminInvoice) => {\r\n    setEditingInvoice(invoice);\r\n    setEditFormData({\r\n      customer_name: invoice.customer?.name || '',\r\n      customer_identification: invoice.customer?.identification || '',\r\n      customer_email: invoice.customer?.email || '',\r\n      customer_address: invoice.customer?.address || '',\r\n      customer_phone: invoice.customer?.phone || '',\r\n    });\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  // Cerrar modal de edici√≥n\r\n  const closeEditModal = () => {\r\n    setShowEditModal(false);\r\n    setEditingInvoice(null);\r\n    setEditFormData({});\r\n  };\r\n\r\n  // Guardar cambios de edici√≥n\r\n  const saveEditChanges = async () => {\r\n    if (!editingInvoice) return;\r\n\r\n    try {\r\n      setActionLoading(prev => ({...prev, [editingInvoice.id]: true}));\r\n      \r\n      // Filtrar solo campos que han cambiado y no est√°n vac√≠os\r\n      const changedData: UpdateInvoiceRequest = {};\r\n      if (editFormData.customer_name && editFormData.customer_name !== editingInvoice.customer?.name) {\r\n        changedData.customer_name = editFormData.customer_name;\r\n      }\r\n      if (editFormData.customer_identification && editFormData.customer_identification !== editingInvoice.customer?.identification) {\r\n        changedData.customer_identification = editFormData.customer_identification;\r\n      }\r\n      if (editFormData.customer_email !== editingInvoice.customer?.email) {\r\n        changedData.customer_email = editFormData.customer_email || undefined;\r\n      }\r\n      if (editFormData.customer_address && editFormData.customer_address !== editingInvoice.customer?.address) {\r\n        changedData.customer_address = editFormData.customer_address;\r\n      }\r\n      if (editFormData.customer_phone !== editingInvoice.customer?.phone) {\r\n        changedData.customer_phone = editFormData.customer_phone || undefined;\r\n      }\r\n\r\n      // Solo actualizar si hay cambios\r\n      if (Object.keys(changedData).length === 0) {\r\n        showToast(NotificationType.WARNING, 'No se detectaron cambios para guardar');\r\n        return;\r\n      }\r\n\r\n      await updateInvoiceUseCase.execute(editingInvoice.id, changedData);\r\n      \r\n      showToast(NotificationType.SUCCESS, 'Factura actualizada correctamente');\r\n      closeEditModal();\r\n      fetchData(); // Recargar datos\r\n      \r\n    } catch (error) {\r\n      console.error('Error actualizando factura:', error);\r\n      showToast(NotificationType.ERROR, error instanceof Error ? error.message : 'Error al actualizar la factura');\r\n    } finally {\r\n      setActionLoading(prev => ({...prev, [editingInvoice.id]: false}));\r\n    }\r\n  };\r\n\r\n  // Definir columnas de la tabla\r\n  const columns = [\r\n    {\r\n      key: \"invoice\",\r\n      header: \"Factura\",\r\n      sortable: true,\r\n      render: (invoice: AdminInvoice) => (\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex-shrink-0 h-10 w-10 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n            <FileText className=\"h-5 w-5 text-blue-600\" />\r\n          </div>\r\n          <div className=\"ml-4\">\r\n            <div className=\"text-sm font-medium text-gray-900\">\r\n              {invoice.invoice_number}\r\n            </div>\r\n            <div className=\"text-xs text-gray-500\">\r\n              {formatDate(invoice.created_at)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"customer\",\r\n      header: \"Cliente\",\r\n      sortable: true,\r\n      render: (invoice: AdminInvoice) => (\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex-shrink-0 h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center overflow-hidden\">\r\n            <User className=\"h-4 w-4 text-gray-500\" />\r\n          </div>\r\n          <div className=\"ml-3\">\r\n            <div className=\"text-sm font-medium text-gray-900\">\r\n              {invoice.customer?.name || 'N/A'}\r\n            </div>\r\n            <div className=\"text-xs text-gray-500 flex items-center\">\r\n              <CreditCard className=\"h-3 w-3 mr-1\" />\r\n              {invoice.customer?.identification || 'N/A'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"order\",\r\n      header: \"Pedido\",\r\n      sortable: true,\r\n      render: (invoice: AdminInvoice) => (\r\n        <div>\r\n          {invoice.order ? (\r\n            <Link\r\n              to={`/admin/orders/${invoice.order.id}`}\r\n              className=\"text-sm font-medium text-primary-600 hover:text-primary-700\"\r\n            >\r\n              {invoice.order.order_number}\r\n            </Link>\r\n          ) : (\r\n            <span className=\"text-sm text-gray-500\">N/A</span>\r\n          )}\r\n          <div className=\"text-xs text-gray-500\">\r\n            {invoice.items_count} items\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"amount\",\r\n      header: \"Monto\",\r\n      sortable: true,\r\n      render: (invoice: AdminInvoice) => (\r\n        <div className=\"text-sm font-medium text-gray-900\">\r\n          {formatCurrency(invoice.total_amount)}\r\n          <div className=\"text-xs text-gray-500\">\r\n            Subtotal: {formatCurrency(invoice.subtotal)}\r\n          </div>\r\n          <div className=\"text-xs text-gray-500\">\r\n            IVA: {formatCurrency(invoice.tax_amount)}\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"status\",\r\n      header: \"Estado\",\r\n      sortable: true,\r\n      render: (invoice: AdminInvoice) => (\r\n        <div>\r\n          <span\r\n            className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium`}\r\n            style={{\r\n              backgroundColor: getStatusBgColor(invoice.status_color),\r\n              color: getStatusTextColor(invoice.status_color)\r\n            }}\r\n          >\r\n            {getStatusIcon(invoice.status)}\r\n            {invoice.status_label}\r\n          </span>\r\n          {invoice.retry_count > 0 && (\r\n            <div className=\"text-xs text-orange-600 mt-1\">\r\n              Reintentos: {invoice.retry_count}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"actions\",\r\n      header: \"Acciones\",\r\n      render: (invoice: AdminInvoice) => {\r\n        const isActionLoading = actionLoading[invoice.id];\r\n        \r\n        return (\r\n          <div className=\"flex justify-end space-x-2\">\r\n            {/* Ver detalles */}\r\n            <button\r\n              onClick={() => openInvoiceModal(invoice)}\r\n              className=\"p-1 text-blue-600 hover:bg-blue-100 rounded-md\"\r\n              title=\"Ver detalles\"\r\n            >\r\n              <Eye size={18} />\r\n            </button>\r\n\r\n            {/* Editar (solo si no est√° autorizada) */}\r\n            {invoice.status !== 'AUTHORIZED' && (\r\n              <button\r\n                onClick={() => openEditModal(invoice)}\r\n                disabled={isActionLoading}\r\n                className=\"p-1 text-green-600 hover:bg-green-100 rounded-md disabled:opacity-50\"\r\n                title=\"Editar datos de cliente\"\r\n              >\r\n                <Edit size={18} />\r\n              </button>\r\n            )}\r\n\r\n            {/* Reintentar (solo si est√° fallida y puede reintentarse) */}\r\n            {invoice.status === 'FAILED' && invoice.retry_count < 12 && (\r\n              <button\r\n                onClick={() => retryInvoice(invoice.id)}\r\n                disabled={isActionLoading}\r\n                className=\"p-1 text-orange-600 hover:bg-orange-100 rounded-md disabled:opacity-50\"\r\n                title=\"Reintentar env√≠o\"\r\n              >\r\n                {isActionLoading ? (\r\n                  <RefreshCw size={18} className=\"animate-spin\" />\r\n                ) : (\r\n                  <RotateCcw size={18} />\r\n                )}\r\n              </button>\r\n            )}\r\n\r\n            {/* Consultar estado SRI */}\r\n            {invoice.sri_access_key && (\r\n              <button\r\n                onClick={() => checkSriStatus(invoice.id)}\r\n                disabled={isActionLoading}\r\n                className=\"p-1 text-purple-600 hover:bg-purple-100 rounded-md disabled:opacity-50\"\r\n                title=\"Consultar estado SRI\"\r\n              >\r\n                {isActionLoading ? (\r\n                  <RefreshCw size={18} className=\"animate-spin\" />\r\n                ) : (\r\n                  <RefreshCw size={18} />\r\n                )}\r\n              </button>\r\n            )}\r\n\r\n            {/* Descargar */}\r\n            <button\r\n              onClick={() => downloadInvoice(invoice.id, \"pdf\")}\r\n              className=\"p-1 text-green-600 hover:bg-green-100 rounded-md\"\r\n              title=\"Descargar PDF\"\r\n            >\r\n              <Download size={18} />\r\n            </button>\r\n\r\n            {/* Crear nota de cr√©dito (solo si est√° autorizada) */}\r\n            {invoice.status === 'AUTHORIZED' && (\r\n              <button\r\n                onClick={() => createCreditNote(invoice)}\r\n                className=\"p-1 text-indigo-600 hover:bg-indigo-100 rounded-md\"\r\n                title=\"Crear nota de cr√©dito\"\r\n              >\r\n                <Minus size={18} />\r\n              </button>\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // Funciones auxiliares para colores de estado\r\n  const getStatusBgColor = (color: string) => {\r\n    const colorMap: Record<string, string> = {\r\n      'gray': '#f3f4f6',\r\n      'blue': '#dbeafe',\r\n      'yellow': '#fef3c7',\r\n      'indigo': '#e0e7ff', \r\n      'green': '#d1fae5',\r\n      'red': '#fee2e2',\r\n      'orange': '#fed7aa',\r\n    };\r\n    return colorMap[color] || colorMap['gray'];\r\n  };\r\n\r\n  const getStatusTextColor = (color: string) => {\r\n    const colorMap: Record<string, string> = {\r\n      'gray': '#374151',\r\n      'blue': '#1e40af',\r\n      'yellow': '#92400e',\r\n      'indigo': '#3730a3',\r\n      'green': '#059669',\r\n      'red': '#dc2626', \r\n      'orange': '#ea580c',\r\n    };\r\n    return colorMap[color] || colorMap['gray'];\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    const iconMap: Record<string, React.ReactNode> = {\r\n      'DRAFT': <Clock className=\"w-3 h-3 mr-1\" />,\r\n      'SENT_TO_SRI': <Send className=\"w-3 h-3 mr-1\" />,\r\n      'PENDING': <Clock className=\"w-3 h-3 mr-1\" />,\r\n      'PROCESSING': <RefreshCw className=\"w-3 h-3 mr-1 animate-spin\" />,\r\n      'RECEIVED': <CheckCircle className=\"w-3 h-3 mr-1\" />,\r\n      'AUTHORIZED': <CheckCircle className=\"w-3 h-3 mr-1\" />,\r\n      'REJECTED': <XCircle className=\"w-3 h-3 mr-1\" />,\r\n      'NOT_AUTHORIZED': <XCircle className=\"w-3 h-3 mr-1\" />,\r\n      'RETURNED': <RotateCcw className=\"w-3 h-3 mr-1\" />,\r\n      'SRI_ERROR': <AlertTriangle className=\"w-3 h-3 mr-1\" />,\r\n      'FAILED': <XCircle className=\"w-3 h-3 mr-1\" />,\r\n      'DEFINITIVELY_FAILED': <XCircle className=\"w-3 h-3 mr-1\" />,\r\n    };\r\n    return iconMap[status] || <AlertTriangle className=\"w-3 h-3 mr-1\" />;\r\n  };\r\n\r\n  // Preparar datos de estad√≠sticas\r\n  const statItems = stats ? [\r\n    { \r\n      title: \"Total\", \r\n      value: stats.sri_stats.total_invoices, \r\n      description: \"Facturas\", \r\n      icon: FileText, \r\n      bgColor: \"bg-blue-50/20\", \r\n      textColor: \"text-blue-800\", \r\n      valueColor: \"text-blue-900\", \r\n      descriptionColor: \"text-blue-700\", \r\n      iconColor: \"text-blue-600\", \r\n    },\r\n    { \r\n      title: \"Autorizadas\", \r\n      value: stats.sri_stats.authorized, \r\n      description: `${stats.sri_stats.success_rate}% √©xito`, \r\n      icon: CheckCircle, \r\n      bgColor: \"bg-green-50/20\", \r\n      textColor: \"text-green-800\", \r\n      valueColor: \"text-green-900\", \r\n      descriptionColor: \"text-green-700\", \r\n      iconColor: \"text-green-600\", \r\n    },\r\n    { \r\n      title: \"Pendientes\", \r\n      value: stats.sri_stats.pending, \r\n      description: \"En proceso\", \r\n      icon: Clock, \r\n      bgColor: \"bg-yellow-50\", \r\n      textColor: \"text-yellow-800\", \r\n      valueColor: \"text-yellow-900\", \r\n      descriptionColor: \"text-yellow-700\", \r\n      iconColor: \"text-yellow-600\", \r\n    },\r\n    { \r\n      title: \"Fallidas\", \r\n      value: stats.sri_stats.failed + stats.sri_stats.definitively_failed, \r\n      description: `${stats.additional_stats.pending_retries} pueden reintentarse`, \r\n      icon: AlertTriangle, \r\n      bgColor: \"bg-red-50/20\", \r\n      textColor: \"text-red-800\", \r\n      valueColor: \"text-red-900\", \r\n      descriptionColor: \"text-red-700\", \r\n      iconColor: \"text-red-600\", \r\n    }\r\n  ] : [];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">\r\n          Gesti√≥n de Facturas SRI\r\n        </h1>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={fetchData}\r\n            disabled={loading}\r\n            className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors disabled:opacity-50\"\r\n          >\r\n            <RefreshCw size={18} className={`inline mr-2 ${loading ? 'animate-spin' : ''}`} />\r\n            Actualizar\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mostrar error si existe */}\r\n      {error && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n          <div className=\"flex\">\r\n            <AlertTriangle className=\"h-5 w-5 text-red-400 mr-3\" />\r\n            <p className=\"text-red-800\">{error}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Panel de estad√≠sticas */}\r\n      <StatCardList items={statItems} />\r\n      \r\n      {/* Filtros */}\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4\">\r\n        <div className=\"flex flex-col md:flex-row gap-4\">\r\n          {/* Filtro de Estado */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Filter className=\"h-5 w-5 text-gray-500\" />\r\n            <select\r\n              className=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              value={filters.status || 'all'}\r\n              onChange={(e) => handleFilterChange('status', e.target.value === 'all' ? undefined : e.target.value)}\r\n            >\r\n              <option value=\"all\">Todos los Estados</option>\r\n              {validStatuses.map(status => (\r\n                <option key={status} value={status}>{status}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Filtro de Fecha */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Calendar className=\"h-5 w-5 text-gray-500\" />\r\n            <input\r\n              type=\"date\"\r\n              className=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              value={filters.start_date || ''}\r\n              onChange={(e) => handleFilterChange('start_date', e.target.value || undefined)}\r\n              placeholder=\"Desde\"\r\n            />\r\n            <input\r\n              type=\"date\"\r\n              className=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              value={filters.end_date || ''}\r\n              onChange={(e) => handleFilterChange('end_date', e.target.value || undefined)}\r\n              placeholder=\"Hasta\"\r\n            />\r\n          </div>\r\n\r\n          {/* Filtro de Cliente */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <User className=\"h-5 w-5 text-gray-500\" />\r\n            <input\r\n              type=\"text\"\r\n              className=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              value={filters.customer_name || ''}\r\n              onChange={(e) => handleFilterChange('customer_name', e.target.value || undefined)}\r\n              placeholder=\"Nombre cliente\"\r\n            />\r\n          </div>\r\n\r\n          {/* Filtro de Identificaci√≥n */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <CreditCard className=\"h-5 w-5 text-gray-500\" />\r\n            <input\r\n              type=\"text\"\r\n              className=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              value={filters.customer_identification || ''}\r\n              onChange={(e) => handleFilterChange('customer_identification', e.target.value || undefined)}\r\n              placeholder=\"C√©dula/RUC\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabla de Facturas */}\r\n      <Table\r\n        data={invoices}\r\n        columns={columns}\r\n        searchFields={[\"invoice_number\", \"customer.name\", \"customer.identification\"] as any}\r\n        loading={loading}\r\n        emptyMessage=\"No se encontraron facturas\"\r\n        pagination={{\r\n          currentPage: pagination.currentPage,\r\n          totalPages: pagination.totalPages,\r\n          totalItems: pagination.totalItems,\r\n          itemsPerPage: pagination.itemsPerPage,\r\n          onPageChange: handlePageChange,\r\n        }}\r\n      />\r\n\r\n      {/* Modal de Edici√≥n de Factura */}\r\n      {showEditModal && editingInvoice && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">\r\n                Editar Factura {editingInvoice.invoice_number}\r\n              </h3>\r\n              <button\r\n                onClick={closeEditModal}\r\n                className=\"text-gray-400 hover:text-gray-500\"\r\n                disabled={actionLoading[editingInvoice.id]}\r\n              >\r\n                <X className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <div className=\"space-y-4\">\r\n                {/* Nombre del cliente */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Nombre del cliente\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                    value={editFormData.customer_name || ''}\r\n                    onChange={(e) => setEditFormData(prev => ({...prev, customer_name: e.target.value}))}\r\n                    placeholder=\"Nombre completo del cliente\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Identificaci√≥n */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    C√©dula/RUC\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                    value={editFormData.customer_identification || ''}\r\n                    onChange={(e) => setEditFormData(prev => ({...prev, customer_identification: e.target.value}))}\r\n                    placeholder=\"C√©dula (10 d√≠gitos) o RUC (13 d√≠gitos)\"\r\n                    maxLength={13}\r\n                  />\r\n                  <p className=\"text-xs text-gray-500 mt-1\">\r\n                    C√©dula: 10 d√≠gitos | RUC: 13 d√≠gitos terminado en 001\r\n                  </p>\r\n                </div>\r\n\r\n                {/* Email */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Email (opcional)\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                    value={editFormData.customer_email || ''}\r\n                    onChange={(e) => setEditFormData(prev => ({...prev, customer_email: e.target.value}))}\r\n                    placeholder=\"email@ejemplo.com\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Direcci√≥n */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Direcci√≥n\r\n                  </label>\r\n                  <textarea\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                    rows={3}\r\n                    value={editFormData.customer_address || ''}\r\n                    onChange={(e) => setEditFormData(prev => ({...prev, customer_address: e.target.value}))}\r\n                    placeholder=\"Direcci√≥n completa del cliente\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Tel√©fono */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Tel√©fono (opcional)\r\n                  </label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                    value={editFormData.customer_phone || ''}\r\n                    onChange={(e) => setEditFormData(prev => ({...prev, customer_phone: e.target.value}))}\r\n                    placeholder=\"0999999999\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Acciones */}\r\n              <div className=\"flex justify-end gap-3 mt-6 pt-4 border-t border-gray-200\">\r\n                <button\r\n                  onClick={closeEditModal}\r\n                  disabled={actionLoading[editingInvoice.id]}\r\n                  className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors disabled:opacity-50\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n                <button\r\n                  onClick={saveEditChanges}\r\n                  disabled={actionLoading[editingInvoice.id]}\r\n                  className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors disabled:opacity-50 flex items-center\"\r\n                >\r\n                  {actionLoading[editingInvoice.id] ? (\r\n                    <>\r\n                      <RefreshCw className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                      Guardando...\r\n                    </>\r\n                  ) : (\r\n                    'Guardar Cambios'\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de Detalle de Factura */}\r\n      {showInvoiceModal && selectedInvoice && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">\r\n                Detalle de Factura {selectedInvoice.invoice_number}\r\n              </h3>\r\n              <button\r\n                onClick={closeInvoiceModal}\r\n                className=\"text-gray-400 hover:text-gray-500\"\r\n              >\r\n                <X className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              {/* Informaci√≥n de cabecera */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\r\n                {/* Informaci√≥n general */}\r\n                <div>\r\n                  <h4 className=\"text-sm font-medium text-gray-500 mb-2\">\r\n                    Informaci√≥n General\r\n                  </h4>\r\n                  <div className=\"space-y-1 text-sm\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">N√∫mero:</span>\r\n                      <span className=\"font-medium text-gray-900\">\r\n                        {selectedInvoice.invoice_number}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Fecha emisi√≥n:</span>\r\n                      <span className=\"font-medium text-gray-900\">\r\n                        {formatDate(selectedInvoice.issue_date)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Estado:</span>\r\n                      <span\r\n                        className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium`}\r\n                        style={{\r\n                          backgroundColor: getStatusBgColor(selectedInvoice.status_color),\r\n                          color: getStatusTextColor(selectedInvoice.status_color)\r\n                        }}\r\n                      >\r\n                        {getStatusIcon(selectedInvoice.status)}\r\n                        {selectedInvoice.status_label}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Informaci√≥n del cliente */}\r\n                <div>\r\n                  <h4 className=\"text-sm font-medium text-gray-500 mb-2\">\r\n                    Cliente\r\n                  </h4>\r\n                  <div className=\"space-y-1 text-sm\">\r\n                    <div className=\"flex items-center\">\r\n                      <User className=\"h-4 w-4 text-gray-400 mr-2\" />\r\n                      <span className=\"font-medium text-gray-900\">\r\n                        {selectedInvoice.customer.name}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                      <CreditCard className=\"h-4 w-4 text-gray-400 mr-2\" />\r\n                      <span className=\"text-gray-700\">\r\n                        {selectedInvoice.customer.identification}\r\n                        <span className=\"text-xs text-gray-500 ml-1\">\r\n                          ({selectedInvoice.customer.identification_type_label})\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                      <Phone className=\"h-4 w-4 text-gray-400 mr-2\" />\r\n                      <span className=\"text-gray-700\">\r\n                        {selectedInvoice.customer.phone || 'N/A'}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex items-start\">\r\n                      <MapPin className=\"h-4 w-4 text-gray-400 mr-2 mt-0.5\" />\r\n                      <span className=\"text-gray-700 text-xs\">\r\n                        {selectedInvoice.customer.address}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Informaci√≥n SRI */}\r\n                <div>\r\n                  <h4 className=\"text-sm font-medium text-gray-500 mb-2\">\r\n                    SRI\r\n                  </h4>\r\n                  <div className=\"space-y-1 text-sm\">\r\n                    {selectedInvoice.sri.access_key && (\r\n                      <div>\r\n                        <span className=\"text-gray-600\">Clave de acceso:</span>\r\n                        <p className=\"text-xs text-gray-900 font-mono break-all mt-1\">\r\n                          {selectedInvoice.sri.access_key}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                    {selectedInvoice.sri.authorization_number && (\r\n                      <div>\r\n                        <span className=\"text-gray-600\">N¬∞ autorizaci√≥n:</span>\r\n                        <p className=\"text-xs text-gray-900 font-mono break-all mt-1\">\r\n                          {selectedInvoice.sri.authorization_number}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                    {selectedInvoice.retry_info.count > 0 && (\r\n                      <div className=\"text-orange-600\">\r\n                        <span className=\"text-xs\">\r\n                          Reintentos: {selectedInvoice.retry_info.count}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Informaci√≥n de error SRI (si existe) */}\r\n              {selectedInvoice.sri.error_message && (\r\n                <div className=\"bg-red-50 p-4 rounded-lg mb-6\">\r\n                  <h4 className=\"text-sm font-medium text-red-800 mb-2 flex items-center\">\r\n                    <AlertTriangle className=\"h-4 w-4 mr-1\" />\r\n                    Error del SRI\r\n                  </h4>\r\n                  <p className=\"text-sm text-red-700\">\r\n                    {selectedInvoice.sri.error_message}\r\n                  </p>\r\n                </div>\r\n              )}\r\n\r\n              {/* Tabla de art√≠culos */}\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"text-sm font-medium text-gray-500 mb-2\">\r\n                  Art√≠culos ({selectedInvoice.items.length})\r\n                </h4>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"min-w-full divide-y divide-gray-200\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Descripci√≥n\r\n                        </th>\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Cantidad\r\n                        </th>\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Precio Unit.\r\n                        </th>\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          IVA\r\n                        </th>\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Total\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                      {selectedInvoice.items.map((item) => (\r\n                        <tr key={item.id} className=\"hover:bg-gray-50\">\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            {item.product_name}\r\n                            <div className=\"text-xs text-gray-500\">\r\n                              C√≥digo: {item.product_code}\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {item.quantity}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {formatCurrency(item.unit_price)}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {formatCurrency(item.tax_amount)}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                            {formatCurrency(item.subtotal)}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                    <tfoot className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <td\r\n                          colSpan={3}\r\n                          className=\"px-6 py-4 text-right text-sm font-medium text-gray-500\"\r\n                        >\r\n                          Subtotal:\r\n                        </td>\r\n                        <td\r\n                          colSpan={2}\r\n                          className=\"px-6 py-4 text-sm text-gray-900\"\r\n                        >\r\n                          {formatCurrency(selectedInvoice.subtotal)}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td\r\n                          colSpan={3}\r\n                          className=\"px-6 py-4 text-right text-sm font-medium text-gray-500\"\r\n                        >\r\n                          IVA (15%):\r\n                        </td>\r\n                        <td\r\n                          colSpan={2}\r\n                          className=\"px-6 py-4 text-sm text-gray-900\"\r\n                        >\r\n                          {formatCurrency(selectedInvoice.tax_amount)}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td\r\n                          colSpan={3}\r\n                          className=\"px-6 py-4 text-right text-sm font-medium text-gray-900\"\r\n                        >\r\n                          Total:\r\n                        </td>\r\n                        <td\r\n                          colSpan={2}\r\n                          className=\"px-6 py-4 text-sm font-bold text-gray-900\"\r\n                        >\r\n                          {formatCurrency(selectedInvoice.total_amount)}\r\n                        </td>\r\n                      </tr>\r\n                    </tfoot>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Acciones */}\r\n              <div className=\"flex flex-wrap justify-end gap-2 mt-6\">\r\n                {/* Crear nota de cr√©dito (solo si est√° autorizada) */}\r\n                {selectedInvoice.status === 'AUTHORIZED' && (\r\n                  <button\r\n                    onClick={() => {\r\n                      const invoice: AdminInvoice = {\r\n                        id: selectedInvoice.id,\r\n                        invoice_number: selectedInvoice.invoice_number,\r\n                        customer: selectedInvoice.customer,\r\n                        total_amount: selectedInvoice.total_amount,\r\n                        subtotal: selectedInvoice.subtotal,\r\n                        tax_amount: selectedInvoice.tax_amount,\r\n                        currency: selectedInvoice.currency || 'USD',\r\n                        status: selectedInvoice.status,\r\n                        status_label: selectedInvoice.status_label,\r\n                        status_color: selectedInvoice.status_color,\r\n                        created_at: selectedInvoice.created_at,\r\n                        issue_date: selectedInvoice.issue_date,\r\n                        items_count: selectedInvoice.items.length,\r\n                        retry_count: selectedInvoice.retry_info.count,\r\n                        sri_access_key: selectedInvoice.sri.access_key,\r\n                        order: selectedInvoice.order\r\n                      };\r\n                      createCreditNote(invoice);\r\n                      closeInvoiceModal();\r\n                    }}\r\n                    className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors flex items-center\"\r\n                  >\r\n                    <Minus className=\"h-4 w-4 mr-2\" />\r\n                    Crear Nota de Cr√©dito\r\n                  </button>\r\n                )}\r\n\r\n                {/* Opci√≥n para descargar */}\r\n                <div className=\"relative\">\r\n                  <button\r\n                    onClick={() => setShowPrintOptions(!showPrintOptions)}\r\n                    className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors flex items-center\"\r\n                  >\r\n                    <Download className=\"h-4 w-4 mr-2\" />\r\n                    Descargar\r\n                  </button>\r\n\r\n                  {showPrintOptions && (\r\n                    <div className=\"absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-10\">\r\n                      <div className=\"py-1\">\r\n                        <button\r\n                          onClick={() => downloadInvoice(selectedInvoice.id, \"pdf\")}\r\n                          className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 w-full text-left\"\r\n                        >\r\n                          <FileText className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                          Descargar PDF\r\n                        </button>\r\n                        <button\r\n                          onClick={() => downloadInvoice(selectedInvoice.id, \"xml\")}\r\n                          className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 w-full text-left\"\r\n                        >\r\n                          <FileText className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                          Descargar XML\r\n                        </button>\r\n                        <button\r\n                          onClick={() => sendInvoiceByEmail(selectedInvoice.id)}\r\n                          className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 w-full text-left\"\r\n                        >\r\n                          <Send className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                          Enviar por email\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Ver orden relacionada */}\r\n                {selectedInvoice.order && (\r\n                  <Link\r\n                    to={`/admin/orders/${selectedInvoice.order.id}`}\r\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center\"\r\n                  >\r\n                    <ShoppingBag className=\"h-4 w-4 mr-2\" />\r\n                    Ver Orden\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminInvoicesPage;"],"names":["HttpInvoiceRepository","filters","queryParams","response","ApiClient","invoices","meta","error","id","invoiceId","updateData","appConfig","GetAllInvoicesUseCase","invoiceRepository","GetInvoiceByIdUseCase","RetryInvoiceUseCase","CheckInvoiceStatusUseCase","GetInvoiceStatsUseCase","UpdateInvoiceUseCase","validStatuses","AdminInvoicesPage","showToast","useToast","navigate","useNavigate","getAllInvoicesUseCase","useState","repository","getInvoiceByIdUseCase","retryInvoiceUseCase","checkInvoiceStatusUseCase","getInvoiceStatsUseCase","updateInvoiceUseCase","setInvoices","stats","setStats","loading","setLoading","setError","setFilters","pagination","setPagination","selectedInvoice","setSelectedInvoice","showInvoiceModal","setShowInvoiceModal","showPrintOptions","setShowPrintOptions","showEditModal","setShowEditModal","editingInvoice","setEditingInvoice","editFormData","setEditFormData","actionLoading","setActionLoading","useEffect","fetchData","invoicesResponse","statsResponse","invoicesData","handleFilterChange","key","value","prev","handlePageChange","page","openInvoiceModal","invoice","detail","NotificationType","closeInvoiceModal","retryInvoice","errorMessage","checkSriStatus","result","formatDate","dateString","date","formatCurrency","amount","downloadInvoice","format","pdfBlob","url","link","sendInvoiceByEmail","_invoiceId","createCreditNote","openEditModal","closeEditModal","saveEditChanges","changedData","columns","jsxs","jsx","FileText","User","CreditCard","Link","getStatusBgColor","getStatusTextColor","getStatusIcon","isActionLoading","Eye","Edit","RefreshCw","RotateCcw","Download","Minus","color","colorMap","status","Clock","Send","CheckCircle","XCircle","AlertTriangle","statItems","StatCardList","Filter","e","Calendar","Table","X","Fragment","Phone","MapPin","item","ShoppingBag"],"mappings":"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"}