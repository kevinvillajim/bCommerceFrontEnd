{"version":3,"file":"AdminAccountingPage-DGQvUes5.js","sources":["../../src/infrastructure/services/AccountingService.ts","../../src/presentation/pages/admin/AdminAccountingPage.tsx"],"sourcesContent":["import ApiClient from '../api/apiClient';\r\nimport { API_ENDPOINTS } from '../../constants/apiEndpoints';\r\nimport type {\r\n  AccountingTransaction,\r\n  AccountingAccount,\r\n  AccountingEntryCreationData,\r\n} from '../../core/domain/entities/Accounting';\r\n\r\nexport interface AccountingMetrics {\r\n  period: {\r\n    start_date: string;\r\n    end_date: string;\r\n  };\r\n  sales: {\r\n    total: number;\r\n    orders_count: number;\r\n    average_order: number;\r\n  };\r\n  expenses: {\r\n    total: number;\r\n  };\r\n  profit: {\r\n    gross: number;\r\n    margin_percentage: number;\r\n  };\r\n  vat: {\r\n    payable: number;\r\n  };\r\n  cash: {\r\n    balance: number;\r\n  };\r\n  pending: {\r\n    transactions_count: number;\r\n  };\r\n}\r\n\r\nexport interface TransactionFilters {\r\n  start_date?: string;\r\n  end_date?: string;\r\n  type?: string;\r\n  is_posted?: boolean;\r\n  search?: string;\r\n  per_page?: number;\r\n  page?: number;\r\n}\r\n\r\nexport interface TransactionCreationData {\r\n  reference_number: string;\r\n  transaction_date: string;\r\n  description: string;\r\n  type: string;\r\n  entries: AccountingEntryCreationData[];\r\n}\r\n\r\nexport interface AccountCreationData {\r\n  code: string;\r\n  name: string;\r\n  type: 'Activo' | 'Pasivo' | 'Patrimonio' | 'Ingreso' | 'Gasto' | 'Costo';\r\n  description?: string;\r\n  is_active?: boolean;\r\n}\r\n\r\nexport interface PaginatedResponse<T> {\r\n  data: T[];\r\n  current_page: number;\r\n  last_page: number;\r\n  per_page: number;\r\n  total: number;\r\n  from: number;\r\n  to: number;\r\n}\r\n\r\nexport class AccountingService {\r\n  // ✅ CORREGIDO: No necesita constructor ni httpClient, usa ApiClient estático\r\n\r\n  // ===== MÉTRICAS Y DASHBOARD =====\r\n\r\n  /**\r\n   * ✅ CORREGIDO: Obtiene métricas financieras para el dashboard usando ApiClient\r\n   */\r\n  static async getMetrics(startDate?: string, endDate?: string): Promise<AccountingMetrics> {\r\n    const params: Record<string, string> = {};\r\n\r\n    if (startDate) params.start_date = startDate;\r\n    if (endDate) params.end_date = endDate;\r\n\r\n    // ✅ Usar endpoint de constantes\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.METRICS;\r\n\r\n    const response = await ApiClient.get<{ success: boolean; data: AccountingMetrics }>(url, params);\r\n\r\n    if (!response.success) {\r\n      throw new Error('Error al obtener métricas contables');\r\n    }\r\n\r\n    return response.data;\r\n  }\r\n\r\n  // ===== TRANSACCIONES =====\r\n\r\n  /**\r\n   * ✅ CORREGIDO: Obtiene lista de transacciones con filtros y paginación usando ApiClient\r\n   */\r\n  static async getTransactions(filters: TransactionFilters = {}): Promise<PaginatedResponse<AccountingTransaction>> {\r\n    const params = Object.entries(filters).reduce((acc, [key, value]) => {\r\n      if (value !== undefined && value !== null && value !== '') {\r\n        acc[key] = String(value);\r\n      }\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.TRANSACTIONS;\r\n\r\n    const response = await ApiClient.get<{ success: boolean; data: PaginatedResponse<AccountingTransaction> }>(url, params);\r\n\r\n    if (!response.success) {\r\n      throw new Error('Error al obtener transacciones');\r\n    }\r\n\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * ✅ CORREGIDO: Obtiene una transacción específica por ID usando ApiClient\r\n   */\r\n  static async getTransaction(id: number): Promise<AccountingTransaction> {\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.TRANSACTION_DETAIL(id);\r\n\r\n    const response = await ApiClient.get<{ success: boolean; data: AccountingTransaction }>(url);\r\n\r\n    if (!response.success) {\r\n      throw new Error('Error al obtener la transacción');\r\n    }\r\n\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * ✅ CORREGIDO: Crea una nueva transacción contable usando ApiClient\r\n   */\r\n  static async createTransaction(transactionData: TransactionCreationData): Promise<AccountingTransaction> {\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.TRANSACTIONS;\r\n\r\n    const response = await ApiClient.post<{\r\n      success: boolean;\r\n      data: AccountingTransaction;\r\n      message: string;\r\n    }>(url, transactionData);\r\n\r\n    if (!response.success) {\r\n      throw new Error(response.message || 'Error al crear la transacción');\r\n    }\r\n\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * ✅ CORREGIDO: Contabiliza una transacción (marca como posted) usando ApiClient\r\n   */\r\n  static async postTransaction(id: number): Promise<void> {\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.POST_TRANSACTION(id);\r\n\r\n    const response = await ApiClient.patch<{ success: boolean; message: string }>(url);\r\n\r\n    if (!response.success) {\r\n      throw new Error(response.message || 'Error al contabilizar la transacción');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ✅ NUEVO: Elimina una transacción contable usando ApiClient\r\n   */\r\n  static async deleteTransaction(id: number): Promise<void> {\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.TRANSACTION_DETAIL(id);\r\n\r\n    const response = await ApiClient.delete<{ success: boolean; message: string }>(url);\r\n\r\n    if (!response.success) {\r\n      throw new Error(response.message || 'Error al eliminar la transacción');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ✅ NUEVO: Actualiza una transacción contable existente usando ApiClient\r\n   */\r\n  static async updateTransaction(id: number, transactionData: any): Promise<AccountingTransaction> {\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.TRANSACTION_DETAIL(id);\r\n\r\n    const response = await ApiClient.put<{ success: boolean; data: AccountingTransaction; message: string }>(url, transactionData);\r\n\r\n    if (!response.success) {\r\n      throw new Error(response.message || 'Error al actualizar la transacción');\r\n    }\r\n\r\n    return response.data;\r\n  }\r\n\r\n  // ===== CUENTAS CONTABLES =====\r\n\r\n  /**\r\n   * ✅ CORREGIDO: Obtiene lista de cuentas contables usando ApiClient\r\n   */\r\n  static async getAccounts(activeOnly: boolean = true): Promise<AccountingAccount[]> {\r\n    const params = { active_only: String(activeOnly) };\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.ACCOUNTS;\r\n\r\n    const response = await ApiClient.get<{ success: boolean; data: AccountingAccount[] }>(url, params);\r\n\r\n    if (!response.success) {\r\n      throw new Error('Error al obtener cuentas contables');\r\n    }\r\n\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * ✅ CORREGIDO: Crea una nueva cuenta contable usando ApiClient\r\n   */\r\n  static async createAccount(accountData: AccountCreationData): Promise<AccountingAccount> {\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.ACCOUNTS;\r\n\r\n    const response = await ApiClient.post<{\r\n      success: boolean;\r\n      data: AccountingAccount;\r\n      message: string;\r\n    }>(url, accountData);\r\n\r\n    if (!response.success) {\r\n      throw new Error(response.message || 'Error al crear la cuenta');\r\n    }\r\n\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * ✅ CORREGIDO: Actualiza una cuenta contable usando ApiClient\r\n   */\r\n  static async updateAccount(id: number, accountData: Partial<AccountCreationData>): Promise<AccountingAccount> {\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.ACCOUNT_DETAIL(id);\r\n\r\n    const response = await ApiClient.put<{\r\n      success: boolean;\r\n      data: AccountingAccount;\r\n      message: string;\r\n    }>(url, accountData);\r\n\r\n    if (!response.success) {\r\n      throw new Error(response.message || 'Error al actualizar la cuenta');\r\n    }\r\n\r\n    return response.data;\r\n  }\r\n\r\n  // ===== REPORTES =====\r\n\r\n  /**\r\n   * ✅ CORREGIDO: Obtiene balance general usando ApiClient\r\n   */\r\n  static async getBalanceSheet(asOf?: string): Promise<any> {\r\n    const params: Record<string, string> = {};\r\n    if (asOf) params.as_of = asOf;\r\n\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.BALANCE_SHEET;\r\n\r\n    const response = await ApiClient.get<{ success: boolean; data: any }>(url, params);\r\n\r\n    if (!response.success) {\r\n      throw new Error('Error al obtener balance general');\r\n    }\r\n\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * ✅ CORREGIDO: Obtiene estado de resultados usando ApiClient\r\n   */\r\n  static async getIncomeStatement(startDate: string, endDate: string): Promise<any> {\r\n    const params = { start_date: startDate, end_date: endDate };\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.INCOME_STATEMENT;\r\n\r\n    const response = await ApiClient.get<{ success: boolean; data: any }>(url, params);\r\n\r\n    if (!response.success) {\r\n      throw new Error('Error al obtener estado de resultados');\r\n    }\r\n\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * ✅ CORREGIDO: Obtiene libro mayor de una cuenta usando ApiClient\r\n   */\r\n  static async getAccountLedger(accountId: number, startDate: string, endDate: string): Promise<any> {\r\n    const params = { start_date: startDate, end_date: endDate };\r\n    const url = API_ENDPOINTS.ADMIN.ACCOUNTING.ACCOUNT_LEDGER(accountId);\r\n\r\n    const response = await ApiClient.get<{ success: boolean; data: any }>(url, params);\r\n\r\n    if (!response.success) {\r\n      throw new Error('Error al obtener libro mayor');\r\n    }\r\n\r\n    return response.data;\r\n  }\r\n\r\n  // ===== UTILIDADES =====\r\n\r\n  /**\r\n   * ✅ Formatea un número como moneda\r\n   */\r\n  static formatCurrency(amount: number): string {\r\n    return new Intl.NumberFormat('es-ES', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 2,\r\n    }).format(amount);\r\n  }\r\n\r\n  /**\r\n   * ✅ Valida que una transacción esté balanceada\r\n   */\r\n  static validateTransactionBalance(entries: AccountingEntryCreationData[]): {\r\n    isBalanced: boolean;\r\n    totalDebits: number;\r\n    totalCredits: number;\r\n    difference: number;\r\n  } {\r\n    const totalDebits = entries.reduce((sum, entry) => sum + (entry.debit_amount || 0), 0);\r\n    const totalCredits = entries.reduce((sum, entry) => sum + (entry.credit_amount || 0), 0);\r\n    const difference = totalDebits - totalCredits;\r\n\r\n    return {\r\n      isBalanced: Math.abs(difference) < 0.01,\r\n      totalDebits,\r\n      totalCredits,\r\n      difference\r\n    };\r\n  }\r\n\r\n  /**\r\n   * ✅ Genera número de referencia automático\r\n   */\r\n  static generateReferenceNumber(type: string): string {\r\n    const timestamp = Date.now().toString().slice(-6);\r\n    const prefix = type.toUpperCase().slice(0, 3);\r\n    return `${prefix}-${timestamp}`;\r\n  }\r\n}\r\n\r\nexport default AccountingService;","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n\tDollarSign,\r\n\tFilter,\r\n\tBarChart2,\r\n\tX,\r\n\tPlus,\r\n\tSave,\r\n\tArchive,\r\n\tEye,\r\n\tRefreshCw,\r\n\tTrash2,\r\n\tEdit2,\r\n} from \"lucide-react\";\r\nimport Table from \"../../components/dashboard/Table\";\r\nimport type {\r\n\tAccountingTransaction,\r\n\tAccountingAccount,\r\n\tAccountingEntryCreationData,\r\n} from \"../../../core/domain/entities/Accounting\";\r\nimport DashboardCardList from \"../../components/dashboard/DashboardCardList\";\r\nimport AccountingService, {\r\n\ttype AccountingMetrics,\r\n} from \"../../../infrastructure/services/AccountingService\";\r\n\r\n\r\n\r\n/**\r\n * Página de administración de contabilidad\r\n * Muestra transacciones contables y resumen financiero\r\n */\r\nconst AdminAccountingPage: React.FC = () => {\r\n\t// ✅ CORREGIDO: AccountingService ahora es estático, no necesita instancia\r\n\r\n\t// Estados para las diferentes secciones\r\n\tconst [activeTab, setActiveTab] = useState<\r\n\t\t\"transactions\" | \"accounts\" | \"reports\"\r\n\t>(\"transactions\");\r\n\tconst [loading, setLoading] = useState<boolean>(true);\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\r\n\t// ✅ Estados para datos reales de la API\r\n\tconst [transactions, setTransactions] = useState<AccountingTransaction[]>([]);\r\n\tconst [accounts, setAccounts] = useState<AccountingAccount[]>([]);\r\n\tconst [metrics, setMetrics] = useState<AccountingMetrics | null>(null);\r\n\tconst [paginationData, setPaginationData] = useState<{\r\n\t\tcurrent_page: number;\r\n\t\tlast_page: number;\r\n\t\ttotal: number;\r\n\t\tper_page: number;\r\n\t}>({\r\n\t\tcurrent_page: 1,\r\n\t\tlast_page: 1,\r\n\t\ttotal: 0,\r\n\t\tper_page: 15\r\n\t});\r\n\r\n\t// Estados para modales\r\n\tconst [isNewTransactionModalOpen, setIsNewTransactionModalOpen] =\r\n\t\tuseState<boolean>(false);\r\n\tconst [isNewAccountModalOpen, setIsNewAccountModalOpen] =\r\n\t\tuseState<boolean>(false);\r\n\tconst [isTransactionDetailModalOpen, setIsTransactionDetailModalOpen] =\r\n\t\tuseState<boolean>(false);\r\n\tconst [isAccountDetailModalOpen, setIsAccountDetailModalOpen] =\r\n\t\tuseState<boolean>(false);\r\n\tconst [selectedTransaction, setSelectedTransaction] =\r\n\t\tuseState<AccountingTransaction | null>(null);\r\n\tconst [selectedAccount, setSelectedAccount] =\r\n\t\tuseState<AccountingAccount | null>(null);\r\n\tconst [editingTransaction, setEditingTransaction] =\r\n\t\tuseState<AccountingTransaction | null>(null);\r\n\r\n\t// Estados para formulario de nueva transacción\r\n\tconst [newTransaction, setNewTransaction] = useState<{\r\n\t\treferenceNumber: string;\r\n\t\ttransactionDate: string;\r\n\t\tdescription: string;\r\n\t\ttype: string;\r\n\t\tentries: AccountingEntryCreationData[];\r\n\t}>({\r\n\t\treferenceNumber: \"\",\r\n\t\ttransactionDate: new Date().toISOString().split(\"T\")[0],\r\n\t\tdescription: \"\",\r\n\t\ttype: \"Venta\",\r\n\t\tentries: [\r\n\t\t\t{account_id: 0, debit_amount: 0, credit_amount: 0, notes: \"\"},\r\n\t\t\t{account_id: 0, debit_amount: 0, credit_amount: 0, notes: \"\"},\r\n\t\t],\r\n\t});\r\n\r\n\t// Estados para formulario de nueva cuenta\r\n\tconst [newAccount, setNewAccount] = useState<{\r\n\t\tcode: string;\r\n\t\tname: string;\r\n\t\ttype: string;\r\n\t\tdescription: string;\r\n\t\tisActive: boolean;\r\n\t}>({\r\n\t\tcode: \"\",\r\n\t\tname: \"\",\r\n\t\ttype: \"Activo\",\r\n\t\tdescription: \"\",\r\n\t\tisActive: true,\r\n\t});\r\n\r\n\t// Obtener fechas para el rango por defecto (1 mes atrás hasta hoy)\r\n\tconst oneMonthAgo = new Date();\r\n\toneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1);\r\n\tconst today = new Date();\r\n\r\n\tconst [dateRange, setDateRange] = useState<{from: string; to: string}>({\r\n\t\tfrom: oneMonthAgo.toISOString().split(\"T\")[0],\r\n\t\tto: today.toISOString().split(\"T\")[0],\r\n\t});\r\n\tconst [currentPage, setCurrentPage] = useState<number>(1);\r\n\tconst [filterType, setFilterType] = useState<string>(\"all\");\r\n\r\n\t// ✅ NUEVA LÓGICA: Cargar datos reales desde la API\r\n\tconst loadData = async () => {\r\n\t\tsetLoading(true);\r\n\t\tsetError(null);\r\n\r\n\t\ttry {\r\n\t\t\t// ✅ CORREGIDO: Usar métodos estáticos de AccountingService\r\n\t\t\tconst [metricsResponse, transactionsResponse, accountsResponse] = await Promise.all([\r\n\t\t\t\tAccountingService.getMetrics(dateRange.from, dateRange.to),\r\n\t\t\t\tAccountingService.getTransactions({\r\n\t\t\t\t\tstart_date: dateRange.from,\r\n\t\t\t\t\tend_date: dateRange.to,\r\n\t\t\t\t\ttype: filterType === \"all\" ? undefined : filterType,\r\n\t\t\t\t\tpage: currentPage,\r\n\t\t\t\t\tper_page: paginationData.per_page\r\n\t\t\t\t}),\r\n\t\t\t\tAccountingService.getAccounts()\r\n\t\t\t]);\r\n\r\n\t\t\tsetMetrics(metricsResponse);\r\n\t\t\tsetTransactions(transactionsResponse.data);\r\n\t\t\tsetPaginationData({\r\n\t\t\t\tcurrent_page: transactionsResponse.current_page,\r\n\t\t\t\tlast_page: transactionsResponse.last_page,\r\n\t\t\t\ttotal: transactionsResponse.total,\r\n\t\t\t\tper_page: transactionsResponse.per_page\r\n\t\t\t});\r\n\t\t\tsetAccounts(accountsResponse);\r\n\r\n\t\t} catch (err: any) {\r\n\t\t\tconsole.error('Error cargando datos de contabilidad:', err);\r\n\t\t\tsetError(err.message || 'Error al cargar los datos');\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// ✅ Cargar datos al montar el componente y cuando cambien los filtros\r\n\tuseEffect(() => {\r\n\t\tloadData();\r\n\t}, [currentPage, filterType, dateRange.from, dateRange.to]);\r\n\r\n\t// Función para abrir el modal de detalle de transacción\r\n\tconst openTransactionDetail = (transaction: AccountingTransaction) => {\r\n\t\tsetSelectedTransaction(transaction);\r\n\t\tsetIsTransactionDetailModalOpen(true);\r\n\t};\r\n\r\n\t// Función para abrir el modal de detalle de cuenta\r\n\tconst openAccountDetail = (account: AccountingAccount) => {\r\n\t\tsetSelectedAccount(account);\r\n\t\tsetIsAccountDetailModalOpen(true);\r\n\t};\r\n\r\n\t// Función para manejar cambios en el formulario de nueva transacción\r\n\tconst handleTransactionChange = (\r\n\t\te: React.ChangeEvent<\r\n\t\t\tHTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n\t\t>\r\n\t) => {\r\n\t\tconst {name, value} = e.target;\r\n\t\tsetNewTransaction({\r\n\t\t\t...newTransaction,\r\n\t\t\t[name]: value,\r\n\t\t});\r\n\t};\r\n\r\n\t// Función para manejar cambios en las entradas de la transacción\r\n\tconst handleEntryChange = (\r\n\t\tindex: number,\r\n\t\tfield: keyof AccountingEntryCreationData,\r\n\t\tvalue: any\r\n\t) => {\r\n\t\tconst updatedEntries = [...newTransaction.entries];\r\n\r\n\t\t// Convertir valores según el tipo de campo\r\n\t\tlet convertedValue;\r\n\t\tif (field === \"account_id\") {\r\n\t\t\tconvertedValue = Number(value);\r\n\t\t} else if (field === \"debit_amount\" || field === \"credit_amount\") {\r\n\t\t\tconvertedValue = parseFloat(value) || 0;\r\n\t\t} else {\r\n\t\t\t// Para 'notes' y otros campos string\r\n\t\t\tconvertedValue = value;\r\n\t\t}\r\n\r\n\t\tupdatedEntries[index] = {\r\n\t\t\t...updatedEntries[index],\r\n\t\t\t[field]: convertedValue,\r\n\t\t};\r\n\t\tsetNewTransaction({\r\n\t\t\t...newTransaction,\r\n\t\t\tentries: updatedEntries,\r\n\t\t});\r\n\t};\r\n\r\n\t// Función para añadir una nueva entrada a la transacción\r\n\tconst addTransactionEntry = () => {\r\n\t\tsetNewTransaction({\r\n\t\t\t...newTransaction,\r\n\t\t\tentries: [\r\n\t\t\t\t...newTransaction.entries,\r\n\t\t\t\t{account_id: 0, debit_amount: 0, credit_amount: 0, notes: \"\"},\r\n\t\t\t],\r\n\t\t});\r\n\t};\r\n\r\n\t// Función para eliminar una entrada de la transacción\r\n\tconst removeTransactionEntry = (index: number) => {\r\n\t\tif (newTransaction.entries.length <= 2) {\r\n\t\t\talert(\"Una transacción debe tener al menos dos entradas\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst updatedEntries = newTransaction.entries.filter((_, i) => i !== index);\r\n\t\tsetNewTransaction({\r\n\t\t\t...newTransaction,\r\n\t\t\tentries: updatedEntries,\r\n\t\t});\r\n\t};\r\n\r\n\t// Función para manejar cambios en el formulario de nueva cuenta\r\n\tconst handleAccountChange = (\r\n\t\te: React.ChangeEvent<\r\n\t\t\tHTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n\t\t>\r\n\t) => {\r\n\t\tconst {name, value, type} = e.target;\r\n\t\tconst updatedValue =\r\n\t\t\ttype === \"checkbox\" ? (e.target as HTMLInputElement).checked : value;\r\n\r\n\t\tsetNewAccount({\r\n\t\t\t...newAccount,\r\n\t\t\t[name]: updatedValue,\r\n\t\t});\r\n\t};\r\n\r\n\t// ✅ ACTUALIZADA: Función para guardar la nueva transacción usando API real\r\n\tconst saveTransaction = async () => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\t// ✅ CORREGIDO: Validar usando métodos estáticos\r\n\t\t\tconst validation = AccountingService.validateTransactionBalance(newTransaction.entries);\r\n\r\n\t\t\tif (!validation.isBalanced) {\r\n\t\t\t\talert(\r\n\t\t\t\t\t`Los totales de débito (${validation.totalDebits.toFixed(2)}) y crédito (${validation.totalCredits.toFixed(2)}) deben ser iguales`\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst transactionData = {\r\n\t\t\t\treference_number: newTransaction.referenceNumber,\r\n\t\t\t\ttransaction_date: newTransaction.transactionDate,\r\n\t\t\t\tdescription: newTransaction.description,\r\n\t\t\t\ttype: newTransaction.type,\r\n\t\t\t\tentries: newTransaction.entries\r\n\t\t\t};\r\n\r\n\t\t\tlet result;\r\n\t\t\tlet successMessage;\r\n\r\n\t\t\tif (editingTransaction) {\r\n\t\t\t\t// Actualizar transacción existente\r\n\t\t\t\tresult = await AccountingService.updateTransaction(editingTransaction.id!, transactionData);\r\n\t\t\t\tsuccessMessage = 'Transacción actualizada exitosamente';\r\n\t\t\t\tconsole.log('Transacción actualizada exitosamente:', result);\r\n\t\t\t} else {\r\n\t\t\t\t// Crear nueva transacción\r\n\t\t\t\tresult = await AccountingService.createTransaction(transactionData);\r\n\t\t\t\tsuccessMessage = 'Transacción creada exitosamente';\r\n\t\t\t\tconsole.log('Transacción creada exitosamente:', result);\r\n\t\t\t}\r\n\r\n\t\t\t// Recargar datos para mostrar los cambios\r\n\t\t\tawait loadData();\r\n\r\n\t\t\t// Cerrar modal y reiniciar formulario\r\n\t\t\tcloseTransactionModal();\r\n\r\n\t\t\talert(successMessage);\r\n\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.error('Error guardando transacción:', error);\r\n\t\t\talert(`Error al guardar la transacción: ${error.message}`);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// ✅ ACTUALIZADA: Función para guardar la nueva cuenta usando API real\r\n\tconst saveAccount = async () => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\t// ✅ CORREGIDO: Usar métodos estáticos\r\n\t\t\tconst createdAccount = await AccountingService.createAccount({\r\n\t\t\t\tcode: newAccount.code,\r\n\t\t\t\tname: newAccount.name,\r\n\t\t\t\ttype: newAccount.type as any,\r\n\t\t\t\tdescription: newAccount.description,\r\n\t\t\t\tis_active: newAccount.isActive\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log('Cuenta creada exitosamente:', createdAccount);\r\n\r\n\t\t\t// Recargar las cuentas para mostrar la nueva\r\n\t\t\tconst updatedAccounts = await AccountingService.getAccounts();\r\n\t\t\tsetAccounts(updatedAccounts);\r\n\r\n\t\t\t// Cerrar modal y reiniciar formulario\r\n\t\t\tsetIsNewAccountModalOpen(false);\r\n\t\t\tsetNewAccount({\r\n\t\t\t\tcode: \"\",\r\n\t\t\t\tname: \"\",\r\n\t\t\t\ttype: \"Activo\",\r\n\t\t\t\tdescription: \"\",\r\n\t\t\t\tisActive: true,\r\n\t\t\t});\r\n\r\n\t\t\talert('Cuenta creada exitosamente');\r\n\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.error('Error guardando cuenta:', error);\r\n\t\t\talert(`Error al guardar la cuenta: ${error.message}`);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// ✅ NUEVA FUNCIÓN: Contabilizar una transacción\r\n\tconst postTransaction = async (transaction: AccountingTransaction) => {\r\n\t\tif (!transaction.id) {\r\n\t\t\talert('Error: ID de transacción no válido');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!confirm('¿Estás seguro de que deseas contabilizar esta transacción? Esta acción no se puede deshacer.')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tawait AccountingService.postTransaction(transaction.id);\r\n\t\t\talert('Transacción contabilizada exitosamente');\r\n\t\t\tawait loadData(); // Recargar datos\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.error('Error contabilizando transacción:', error);\r\n\t\t\talert(`Error al contabilizar la transacción: ${error.message}`);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// ✅ NUEVA FUNCIÓN: Eliminar una transacción (para ajustes/devoluciones)\r\n\tconst deleteTransaction = async (transaction: AccountingTransaction) => {\r\n\t\tif (!transaction.id) {\r\n\t\t\talert('Error: ID de transacción no válido');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (transaction.is_posted) {\r\n\t\t\talert('No se puede eliminar una transacción que ya está contabilizada');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!confirm(`¿Estás seguro de que deseas eliminar la transacción ${transaction.reference_number}? Esta acción no se puede deshacer.`)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tawait AccountingService.deleteTransaction(transaction.id);\r\n\t\t\talert('Transacción eliminada exitosamente');\r\n\t\t\tawait loadData(); // Recargar datos\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.error('Error eliminando transacción:', error);\r\n\t\t\talert(`Error al eliminar la transacción: ${error.message}`);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// ✅ NUEVA FUNCIÓN: Editar una transacción existente\r\n\tconst editTransaction = (transaction: AccountingTransaction) => {\r\n\t\tif (transaction.is_posted) {\r\n\t\t\talert('No se puede editar una transacción que ya está contabilizada');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Cargar datos de la transacción en el formulario\r\n\t\tsetNewTransaction({\r\n\t\t\treferenceNumber: transaction.reference_number,\r\n\t\t\ttransactionDate: transaction.transaction_date,\r\n\t\t\tdescription: transaction.description,\r\n\t\t\ttype: transaction.type,\r\n\t\t\tentries: transaction.entries.map(entry => ({\r\n\t\t\t\taccount_id: entry.account_id,\r\n\t\t\t\tdebit_amount: entry.debit_amount,\r\n\t\t\t\tcredit_amount: entry.credit_amount,\r\n\t\t\t\tnotes: entry.notes || '',\r\n\t\t\t})),\r\n\t\t});\r\n\r\n\t\t// Configurar como edición\r\n\t\tsetEditingTransaction(transaction);\r\n\t\tsetIsNewTransactionModalOpen(true);\r\n\t};\r\n\r\n\t// ✅ NUEVA FUNCIÓN: Cerrar modal de transacción y limpiar estado\r\n\tconst closeTransactionModal = () => {\r\n\t\tsetIsNewTransactionModalOpen(false);\r\n\t\tsetEditingTransaction(null);\r\n\t\tsetNewTransaction({\r\n\t\t\treferenceNumber: \"\",\r\n\t\t\ttransactionDate: new Date().toISOString().split(\"T\")[0],\r\n\t\t\tdescription: \"\",\r\n\t\t\ttype: \"Venta\",\r\n\t\t\tentries: [\r\n\t\t\t\t{account_id: 0, debit_amount: 0, credit_amount: 0, notes: \"\"},\r\n\t\t\t\t{account_id: 0, debit_amount: 0, credit_amount: 0, notes: \"\"},\r\n\t\t\t],\r\n\t\t});\r\n\t};\r\n\r\n\t// Columnas para la tabla de transacciones\r\n\tconst transactionColumns = [\r\n\t\t{\r\n\t\t\tkey: \"reference_number\",\r\n\t\t\theader: \"Referencia\",\r\n\t\t\trender: (transaction: AccountingTransaction) => (\r\n\t\t\t\t<span className=\"font-medium text-primary-600\">\r\n\t\t\t\t\t{transaction.reference_number}\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"transaction_date\",\r\n\t\t\theader: \"Fecha\",\r\n\t\t\trender: (transaction: AccountingTransaction) => (\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{new Date(transaction.transaction_date).toLocaleDateString(\"es-ES\")}\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"description\",\r\n\t\t\theader: \"Descripción\",\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"type\",\r\n\t\t\theader: \"Tipo\",\r\n\t\t\trender: (transaction: AccountingTransaction) => {\r\n\t\t\t\t// Mapeo simple de tipos según la base de datos\r\n\t\t\t\tconst typeLabels: Record<string, string> = {\r\n\t\t\t\t\t'SALE': 'Venta',\r\n\t\t\t\t\t'EXPENSE': 'Gasto',\r\n\t\t\t\t\t'ADJUSTMENT': 'Ajuste',\r\n\t\t\t\t\t'TRANSFER': 'Transferencia'\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Obtener el texto a mostrar - manejar strings vacíos\r\n\t\t\t\tconst displayText = typeLabels[transaction.type] || (transaction.type && transaction.type.trim() !== '' ? transaction.type : 'Sin tipo');\r\n\r\n\t\t\t\t// Determinar color basado en el tipo\r\n\t\t\t\tlet colorClass = \"bg-gray-100 text-gray-800\"; // por defecto\r\n\t\t\t\tif (transaction.type === \"SALE\") {\r\n\t\t\t\t\tcolorClass = \"bg-green-100 text-green-800\";\r\n\t\t\t\t} else if (transaction.type === \"EXPENSE\") {\r\n\t\t\t\t\tcolorClass = \"bg-red-100 text-red-800\";\r\n\t\t\t\t} else if (transaction.type === \"ADJUSTMENT\") {\r\n\t\t\t\t\tcolorClass = \"bg-yellow-100 text-yellow-800\";\r\n\t\t\t\t} else if (transaction.type === \"TRANSFER\") {\r\n\t\t\t\t\tcolorClass = \"bg-purple-100 text-purple-800\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass}`}>\r\n\t\t\t\t\t\t{displayText}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"is_posted\",\r\n\t\t\theader: \"Estado\",\r\n\t\t\trender: (transaction: AccountingTransaction) => (\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\r\n          ${transaction.is_posted ? \"bg-green-100 text-green-800\" : \"bg-yellow-100 text-yellow-800\"}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{transaction.is_posted ? \"Contabilizado\" : \"Pendiente\"}\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"actions\",\r\n\t\t\theader: \"Acciones\",\r\n\t\t\trender: (transaction: AccountingTransaction) => (\r\n\t\t\t\t<div className=\"flex space-x-2\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => openTransactionDetail(transaction)}\r\n\t\t\t\t\t\tclassName=\"text-primary-600 hover:text-primary-900\"\r\n\t\t\t\t\t\ttitle=\"Ver detalles\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Eye size={16} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{!transaction.is_posted && (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => editTransaction(transaction)}\r\n\t\t\t\t\t\t\tclassName=\"text-blue-600 hover:text-blue-900\"\r\n\t\t\t\t\t\t\ttitle=\"Editar transacción\"\r\n\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Edit2 size={16} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!transaction.is_posted && (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => postTransaction(transaction)}\r\n\t\t\t\t\t\t\tclassName=\"text-green-600 hover:text-green-900\"\r\n\t\t\t\t\t\t\ttitle=\"Contabilizar\"\r\n\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Archive size={16} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!transaction.is_posted && (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => deleteTransaction(transaction)}\r\n\t\t\t\t\t\t\tclassName=\"text-red-600 hover:text-red-900\"\r\n\t\t\t\t\t\t\ttitle=\"Eliminar transacción\"\r\n\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Trash2 size={16} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\t// Columnas para la tabla de cuentas\r\n\tconst accountColumns = [\r\n\t\t{\r\n\t\t\tkey: \"code\",\r\n\t\t\theader: \"Código\",\r\n\t\t\trender: (account: AccountingAccount) => (\r\n\t\t\t\t<span className=\"font-medium text-primary-600\">\r\n\t\t\t\t\t{account.code}\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"name\",\r\n\t\t\theader: \"Nombre\",\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"type\",\r\n\t\t\theader: \"Tipo\",\r\n\t\t\trender: (account: AccountingAccount) => {\r\n\t\t\t\t// Mapeo de tipos de cuentas contables\r\n\t\t\t\tconst accountTypeLabels: Record<string, string> = {\r\n\t\t\t\t\t'ASSET': 'Activo',\r\n\t\t\t\t\t'LIABILITY': 'Pasivo',\r\n\t\t\t\t\t'EQUITY': 'Patrimonio',\r\n\t\t\t\t\t'REVENUE': 'Ingreso',\r\n\t\t\t\t\t'EXPENSE': 'Gasto'\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Obtener el texto a mostrar\r\n\t\t\t\tconst displayText = accountTypeLabels[account.type] || (account.type && account.type.trim() !== '' ? account.type : 'Sin tipo');\r\n\r\n\t\t\t\t// Determinar color basado en el tipo\r\n\t\t\t\tlet colorClass = \"bg-gray-100 text-gray-800\"; // por defecto\r\n\t\t\t\tif (account.type === \"ASSET\") {\r\n\t\t\t\t\tcolorClass = \"bg-blue-100 text-blue-800\";\r\n\t\t\t\t} else if (account.type === \"LIABILITY\") {\r\n\t\t\t\t\tcolorClass = \"bg-yellow-100 text-yellow-800\";\r\n\t\t\t\t} else if (account.type === \"EQUITY\") {\r\n\t\t\t\t\tcolorClass = \"bg-purple-100 text-purple-800\";\r\n\t\t\t\t} else if (account.type === \"REVENUE\") {\r\n\t\t\t\t\tcolorClass = \"bg-green-100 text-green-800\";\r\n\t\t\t\t} else if (account.type === \"EXPENSE\") {\r\n\t\t\t\t\tcolorClass = \"bg-red-100 text-red-800\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass}`}>\r\n\t\t\t\t\t\t{displayText}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"balance\",\r\n\t\t\theader: \"Saldo\",\r\n\t\t\trender: (account: AccountingAccount) => {\r\n\t\t\t\t// Verificar si balance existe y proporcionar un valor predeterminado\r\n\t\t\t\tconst balance = account.balance ?? 0;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={`font-medium ${balance >= 0 ? \"text-green-600\" : \"text-red-600\"}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{formatCurrency(balance)}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"is_active\",\r\n\t\t\theader: \"Estado\",\r\n\t\t\trender: (account: AccountingAccount) => (\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\r\n          ${account.is_active ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\"}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{account.is_active ? \"Activa\" : \"Inactiva\"}\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"actions\",\r\n\t\t\theader: \"Acciones\",\r\n\t\t\trender: (account: AccountingAccount) => (\r\n\t\t\t\t<div className=\"flex space-x-2\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => openAccountDetail(account)}\r\n\t\t\t\t\t\tclassName=\"text-primary-600 hover:text-primary-900\"\r\n\t\t\t\t\t\ttitle=\"Ver detalles\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Eye size={16} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\t// ✅ ACTUALIZADA: Función para refrescar datos\r\n\tconst refreshData = () => {\r\n\t\tloadData();\r\n\t};\r\n\r\n\t// Función para formatear los números como moneda\r\n\tconst formatCurrency = (amount: number) => {\r\n\t\treturn new Intl.NumberFormat(\"es-ES\", {\r\n\t\t\tstyle: \"currency\",\r\n\t\t\tcurrency: \"USD\",\r\n\t\t\tminimumFractionDigits: 2,\r\n\t\t}).format(amount);\r\n\t};\r\n\r\n\t// Calcular totales para la transacción actual\r\n\tconst calculateTotals = () => {\r\n\t\tconst totalDebit = newTransaction.entries.reduce(\r\n\t\t\t(sum, entry) => sum + (entry.debit_amount || 0),\r\n\t\t\t0\r\n\t\t);\r\n\t\tconst totalCredit = newTransaction.entries.reduce(\r\n\t\t\t(sum, entry) => sum + (entry.credit_amount || 0),\r\n\t\t\t0\r\n\t\t);\r\n\r\n\t\treturn {\r\n\t\t\ttotalDebit,\r\n\t\t\ttotalCredit,\r\n\t\t\tdifference: totalDebit - totalCredit,\r\n\t\t};\r\n\t};\r\n\r\n\tconst totals = calculateTotals();\r\n\r\n\t// ✅ ACTUALIZADA: Tarjetas usando datos reales de métricas\r\n\tconst cards = metrics ? [\r\n\t\t{\r\n\t\t  title: \"Ventas Totales\",\r\n\t\t  value: formatCurrency(metrics.sales.total),\r\n\t\t  change: 0,\r\n\t\t  icon: DollarSign,\r\n\t\t  iconBgColor: \"bg-green-50\",\r\n\t\t  iconColor: \"text-green-600\",\r\n\t\t},\r\n\t\t{\r\n\t\t  title: \"Gastos Totales\",\r\n\t\t  value: formatCurrency(metrics.expenses.total),\r\n\t\t  change: 0,\r\n\t\t  icon: DollarSign,\r\n\t\t  iconBgColor: \"bg-red-50\",\r\n\t\t  iconColor: \"text-red-600\",\r\n\t\t},\r\n\t\t{\r\n\t\t  title: \"Beneficio Bruto\",\r\n\t\t  value: formatCurrency(metrics.profit.gross),\r\n\t\t  change: metrics.profit.margin_percentage,\r\n\t\t  icon: BarChart2,\r\n\t\t  iconBgColor: \"bg-blue-50\",\r\n\t\t  iconColor: \"text-blue-600\",\r\n\t\t},\r\n\t\t{\r\n\t\t  title: \"Efectivo Disponible\",\r\n\t\t  value: formatCurrency(metrics.cash.balance),\r\n\t\t  change: 0,\r\n\t\t  icon: DollarSign,\r\n\t\t  iconBgColor: \"bg-purple-50\",\r\n\t\t  iconColor: \"text-purple-600\",\r\n\t\t},\r\n\t  ] : [];\r\n\r\n\treturn (\r\n    <div>\r\n      {/* ✅ Header con botón de refrescar */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">\r\n          Gestión Contable\r\n        </h1>\r\n        <button\r\n          onClick={refreshData}\r\n          disabled={loading}\r\n          className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          <RefreshCw className={`h-4 w-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\r\n          {loading ? 'Actualizando...' : 'Actualizar'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* ✅ Mostrar errores si existen */}\r\n      {error && (\r\n        <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n          <div className=\"flex\">\r\n            <div className=\"ml-3\">\r\n              <h3 className=\"text-sm font-medium text-red-800\">\r\n                Error al cargar los datos\r\n              </h3>\r\n              <div className=\"mt-2 text-sm text-red-700\">\r\n                <p>{error}</p>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <button\r\n                  onClick={refreshData}\r\n                  className=\"bg-red-100 px-3 py-2 rounded-md text-sm font-medium text-red-800 hover:bg-red-200\"\r\n                >\r\n                  Intentar de nuevo\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mb-5\">\r\n        {/* Tarjetas de resumen */}\r\n        <DashboardCardList cards={cards} />\r\n      </div>\r\n      {/* Pestañas */}\r\n      <div className=\"mb-6\">\r\n        <div className=\"border-b border-gray-200\">\r\n          <nav className=\"-mb-px flex space-x-8\">\r\n            <button\r\n              onClick={() => setActiveTab(\"transactions\")}\r\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\r\n                activeTab === \"transactions\"\r\n                  ? \"border-primary-500 text-primary-600\"\r\n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\r\n              }`}\r\n            >\r\n              Transacciones\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab(\"accounts\")}\r\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\r\n                activeTab === \"accounts\"\r\n                  ? \"border-primary-500 text-primary-600\"\r\n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\r\n              }`}\r\n            >\r\n              Plan Contable\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab(\"reports\")}\r\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\r\n                activeTab === \"reports\"\r\n                  ? \"border-primary-500 text-primary-600\"\r\n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\r\n              }`}\r\n            >\r\n              Reportes\r\n            </button>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filtros */}\r\n      {activeTab === \"transactions\" && (\r\n        <div className=\"mb-6 p-4 bg-white rounded-lg shadow-sm\">\r\n          <div className=\"flex flex-col md:flex-row md:items-center space-y-4 md:space-y-0 md:space-x-4\">\r\n            <div className=\"flex items-center\">\r\n              <Filter className=\"h-5 w-5 text-gray-400 mr-2\" />\r\n              <span className=\"text-gray-700\">Filtrar:</span>\r\n            </div>\r\n\r\n            <div className=\"flex flex-wrap gap-4\">\r\n              <div>\r\n                <label\r\n                  htmlFor=\"dateFrom\"\r\n                  className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n                >\r\n                  Fecha desde\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"dateFrom\"\r\n                  value={dateRange.from}\r\n                  onChange={(e) =>\r\n                    setDateRange({ ...dateRange, from: e.target.value })\r\n                  }\r\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label\r\n                  htmlFor=\"dateTo\"\r\n                  className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n                >\r\n                  Fecha hasta\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"dateTo\"\r\n                  value={dateRange.to}\r\n                  onChange={(e) =>\r\n                    setDateRange({ ...dateRange, to: e.target.value })\r\n                  }\r\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label\r\n                  htmlFor=\"type\"\r\n                  className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n                >\r\n                  Tipo\r\n                </label>\r\n                <select\r\n                  id=\"type\"\r\n                  value={filterType}\r\n                  onChange={(e) => setFilterType(e.target.value)}\r\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm\"\r\n                >\r\n                  <option value=\"all\">Todos</option>\r\n                  <option value=\"SALE\">Venta</option>\r\n                  <option value=\"EXPENSE\">Gasto</option>\r\n                  <option value=\"ADJUSTMENT\">Ajuste</option>\r\n                  <option value=\"TRANSFER\">Transferencia</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label\r\n                  htmlFor=\"status\"\r\n                  className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n                >\r\n                  Estado\r\n                </label>\r\n                <select\r\n                  id=\"status\"\r\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm\"\r\n                >\r\n                  <option value=\"all\">Todos</option>\r\n                  <option value=\"posted\">Contabilizados</option>\r\n                  <option value=\"pending\">Pendientes</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"ml-auto\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setIsNewTransactionModalOpen(true)}\r\n                className=\"px-4 py-2 bg-primary-600 border border-transparent rounded-md font-medium text-white shadow-sm hover:bg-primary-700\"\r\n              >\r\n                Nueva Transacción\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Contenido de pestañas */}\r\n      <div className=\"bg-white rounded-lg shadow-sm\">\r\n        {activeTab === \"transactions\" && (\r\n          <Table\r\n            data={transactions}\r\n            columns={transactionColumns}\r\n            loading={loading}\r\n            searchFields={[\"reference_number\", \"description\", \"type\"]}\r\n            emptyMessage=\"No hay transacciones disponibles para los filtros aplicados\"\r\n            pagination={{\r\n              currentPage: paginationData.current_page,\r\n              totalPages: paginationData.last_page,\r\n              totalItems: paginationData.total,\r\n              itemsPerPage: paginationData.per_page,\r\n              onPageChange: setCurrentPage,\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {activeTab === \"accounts\" && (\r\n          <div>\r\n            <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\r\n              <h2 className=\"text-lg font-medium text-gray-900\">\r\n                Plan de Cuentas\r\n              </h2>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setIsNewAccountModalOpen(true)}\r\n                className=\"px-4 py-2 bg-primary-600 border border-transparent rounded-md font-medium text-white shadow-sm hover:bg-primary-700\"\r\n              >\r\n                Nueva Cuenta\r\n              </button>\r\n            </div>\r\n            <Table\r\n              data={accounts}\r\n              columns={accountColumns}\r\n              loading={loading}\r\n              searchFields={[\"code\", \"name\", \"type\"]}\r\n              emptyMessage=\"No hay cuentas disponibles\"\r\n              pagination={{\r\n                currentPage,\r\n                totalPages: Math.ceil(accounts.length / 10),\r\n                totalItems: accounts.length,\r\n                itemsPerPage: 10,\r\n                onPageChange: setCurrentPage,\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === \"reports\" && (\r\n          <div className=\"p-6\">\r\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n              Informes Financieros\r\n            </h2>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n              <div className=\"bg-white rounded-lg shadow p-6 border border-gray-200\">\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n                  Balance General\r\n                </h3>\r\n                <p className=\"text-gray-600 mb-4\">\r\n                  Resumen de activos, pasivos y patrimonio de la empresa.\r\n                </p>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"px-4 py-2 bg-primary-600 border border-transparent rounded-md font-medium text-white shadow-sm hover:bg-primary-700 w-full\"\r\n                >\r\n                  Ver Balance General\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"bg-white rounded-lg shadow p-6 border border-gray-200\">\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n                  Estado de Resultados\r\n                </h3>\r\n                <p className=\"text-gray-600 mb-4\">\r\n                  Informe detallado de ingresos, gastos y beneficios.\r\n                </p>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"px-4 py-2 bg-primary-600 border border-transparent rounded-md font-medium text-white shadow-sm hover:bg-primary-700 w-full\"\r\n                >\r\n                  Ver Estado de Resultados\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"bg-white rounded-lg shadow p-6 border border-gray-200\">\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n                  Libro Mayor\r\n                </h3>\r\n                <p className=\"text-gray-600 mb-4\">\r\n                  Registro detallado de movimientos por cuenta.\r\n                </p>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"px-4 py-2 bg-primary-600 border border-transparent rounded-md font-medium text-white shadow-sm hover:bg-primary-700 w-full\"\r\n                >\r\n                  Ver Libro Mayor\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-8\">\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n                Generar Informes Personalizados\r\n              </h3>\r\n\r\n              <div className=\"bg-white rounded-lg shadow p-6 border border-gray-200\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4\">\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"reportType\"\r\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n                    >\r\n                      Tipo de Informe\r\n                    </label>\r\n                    <select\r\n                      id=\"reportType\"\r\n                      className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm\"\r\n                    >\r\n                      <option value=\"balance\">Balance General</option>\r\n                      <option value=\"income\">Estado de Resultados</option>\r\n                      <option value=\"ledger\">Libro Mayor</option>\r\n                      <option value=\"tax\">Informe de Impuestos</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"reportDateFrom\"\r\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n                    >\r\n                      Fecha desde\r\n                    </label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"reportDateFrom\"\r\n                      className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"reportDateTo\"\r\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n                    >\r\n                      Fecha hasta\r\n                    </label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"reportDateTo\"\r\n                      className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"reportFormat\"\r\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n                    >\r\n                      Formato\r\n                    </label>\r\n                    <select\r\n                      id=\"reportFormat\"\r\n                      className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm\"\r\n                    >\r\n                      <option value=\"pdf\">PDF</option>\r\n                      <option value=\"excel\">Excel</option>\r\n                      <option value=\"csv\">CSV</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex justify-end\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"px-4 py-2 bg-primary-600 border border-transparent rounded-md font-medium text-white shadow-sm hover:bg-primary-700\"\r\n                  >\r\n                    Generar Informe\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal de Nueva Transacción */}\r\n      {isNewTransactionModalOpen && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50\" onClick={closeTransactionModal}></div>\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-4xl z-10 max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900\">\r\n                {editingTransaction ? 'Editar Transacción Contable' : 'Nueva Transacción Contable'}\r\n              </h3>\r\n              <button\r\n                type=\"button\"\r\n                className=\"bg-white rounded-md text-gray-400 hover:text-gray-500 focus:outline-none\"\r\n                onClick={closeTransactionModal}\r\n              >\r\n                <span className=\"sr-only\">Cerrar</span>\r\n                <X className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n\r\n            <form className=\"space-y-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"referenceNumber\"\r\n                    className=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Número de Referencia\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"referenceNumber\"\r\n                    name=\"referenceNumber\"\r\n                    value={newTransaction.referenceNumber}\r\n                    onChange={handleTransactionChange}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                    placeholder=\"TRANS-XXX\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"transactionDate\"\r\n                    className=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Fecha de Transacción\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"transactionDate\"\r\n                    name=\"transactionDate\"\r\n                    value={newTransaction.transactionDate}\r\n                    onChange={handleTransactionChange}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"type\"\r\n                    className=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Tipo de Transacción\r\n                  </label>\r\n                  <select\r\n                    id=\"type\"\r\n                    name=\"type\"\r\n                    value={newTransaction.type}\r\n                    onChange={handleTransactionChange}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                    required\r\n                  >\r\n                    <option value=\"Venta\">Venta</option>\r\n                    <option value=\"Compra\">Compra</option>\r\n                    <option value=\"Gasto\">Gasto</option>\r\n                    <option value=\"Devolución\">Devolución</option>\r\n                    <option value=\"Ajuste\">Ajuste</option>\r\n                    <option value=\"Transferencia\">Transferencia</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"description\"\r\n                    className=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Descripción\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    value={newTransaction.description}\r\n                    onChange={handleTransactionChange}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                    placeholder=\"Descripción de la transacción\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div className=\"flex justify-between items-center mb-2\">\r\n                  <label className=\"block text-sm font-medium text-gray-700\">\r\n                    Entradas Contables\r\n                  </label>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={addTransactionEntry}\r\n                    className=\"text-primary-600 hover:text-primary-700 flex items-center text-sm font-medium\"\r\n                  >\r\n                    <Plus\r\n                      size={16}\r\n                      className=\"mr-1\"\r\n                    />{\" \"}\r\n                    Añadir entrada\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"overflow-x-auto border border-gray-300 rounded-md shadow-sm\">\r\n                  <table className=\"min-w-full divide-y divide-gray-200\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Cuenta\r\n                        </th>\r\n                        <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Debe\r\n                        </th>\r\n                        <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Haber\r\n                        </th>\r\n                        <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Notas\r\n                        </th>\r\n                        <th className=\"px-3 py-2 text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Acción\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                      {newTransaction.entries.map((entry, index) => (\r\n                        <tr key={index}>\r\n                          <td className=\"px-3 py-2 whitespace-nowrap\">\r\n                            <select\r\n                              value={entry.account_id}\r\n                              onChange={(e) =>\r\n                                handleEntryChange(\r\n                                  index,\r\n                                  \"account_id\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              className=\"block w-full border border-gray-300 rounded-md shadow-sm py-1 px-2 text-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                              required\r\n                            >\r\n                              <option value=\"\">Seleccionar cuenta</option>\r\n                              {accounts.map((account) => (\r\n                                <option\r\n                                  key={account.id}\r\n                                  value={account.id}\r\n                                >\r\n                                  {account.code} - {account.name}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </td>\r\n                          <td className=\"px-3 py-2 whitespace-nowrap\">\r\n                            <input\r\n                              type=\"number\"\r\n                              value={entry.debit_amount}\r\n                              onChange={(e) =>\r\n                                handleEntryChange(\r\n                                  index,\r\n                                  \"debit_amount\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              step=\"0.01\"\r\n                              min=\"0\"\r\n                              className=\"block w-full border border-gray-300 rounded-md shadow-sm py-1 px-2 text-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                            />\r\n                          </td>\r\n                          <td className=\"px-3 py-2 whitespace-nowrap\">\r\n                            <input\r\n                              type=\"number\"\r\n                              value={entry.credit_amount}\r\n                              onChange={(e) =>\r\n                                handleEntryChange(\r\n                                  index,\r\n                                  \"credit_amount\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              step=\"0.01\"\r\n                              min=\"0\"\r\n                              className=\"block w-full border border-gray-300 rounded-md shadow-sm py-1 px-2 text-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                            />\r\n                          </td>\r\n                          <td className=\"px-3 py-2 whitespace-nowrap\">\r\n                            <input\r\n                              type=\"text\"\r\n                              value={entry.notes || \"\"}\r\n                              onChange={(e) =>\r\n                                handleEntryChange(index, \"notes\", e.target.value)\r\n                              }\r\n                              className=\"block w-full border border-gray-300 rounded-md shadow-sm py-1 px-2 text-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                              placeholder=\"Notas\"\r\n                            />\r\n                          </td>\r\n                          <td className=\"px-3 py-2 whitespace-nowrap text-center\">\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => removeTransactionEntry(index)}\r\n                              className=\"text-red-600 hover:text-red-900\"\r\n                            >\r\n                              <X size={16} />\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                      <tr className=\"bg-gray-50\">\r\n                        <td className=\"px-3 py-2 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                          Totales\r\n                        </td>\r\n                        <td className=\"px-3 py-2 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                          {formatCurrency(totals.totalDebit)}\r\n                        </td>\r\n                        <td className=\"px-3 py-2 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                          {formatCurrency(totals.totalCredit)}\r\n                        </td>\r\n                        <td\r\n                          colSpan={2}\r\n                          className=\"px-3 py-2 whitespace-nowrap text-sm font-medium\"\r\n                        >\r\n                          <span\r\n                            className={`${totals.difference === 0 ? \"text-green-600\" : \"text-red-600\"}`}\r\n                          >\r\n                            {totals.difference === 0\r\n                              ? \"Transacción balanceada\"\r\n                              : `Diferencia: ${formatCurrency(Math.abs(totals.difference))}`}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setIsNewTransactionModalOpen(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={saveTransaction}\r\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 flex items-center\"\r\n                >\r\n                  <Save\r\n                    size={16}\r\n                    className=\"mr-2\"\r\n                  />{\" \"}\r\n                  Guardar Transacción\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de Nueva Cuenta */}\r\n      {isNewAccountModalOpen && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50\" onClick={() => setIsNewAccountModalOpen(false)}></div>\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl z-10 max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900\">\r\n                Nueva Cuenta Contable\r\n              </h2>\r\n              <button\r\n                onClick={() => setIsNewAccountModalOpen(false)}\r\n                className=\"text-gray-400 hover:text-gray-600\"\r\n              >\r\n                <X className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n\r\n            <form className=\"space-y-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"code\"\r\n                    className=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Código de Cuenta\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"code\"\r\n                    name=\"code\"\r\n                    value={newAccount.code}\r\n                    onChange={handleAccountChange}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                    placeholder=\"Ej. 1000\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"name\"\r\n                    className=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Nombre de Cuenta\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    value={newAccount.name}\r\n                    onChange={handleAccountChange}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                    placeholder=\"Ej. Efectivo\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"accountType\"\r\n                    className=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Tipo de Cuenta\r\n                  </label>\r\n                  <select\r\n                    id=\"accountType\"\r\n                    name=\"type\"\r\n                    value={newAccount.type}\r\n                    onChange={handleAccountChange}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                    required\r\n                  >\r\n                    <option value=\"Activo\">Activo</option>\r\n                    <option value=\"Pasivo\">Pasivo</option>\r\n                    <option value=\"Patrimonio\">Patrimonio</option>\r\n                    <option value=\"Ingreso\">Ingreso</option>\r\n                    <option value=\"Gasto\">Gasto</option>\r\n                    <option value=\"Costo\">Costo</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"isActive\"\r\n                    className=\"flex items-center text-sm font-medium text-gray-700 mt-6\"\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"isActive\"\r\n                      name=\"isActive\"\r\n                      checked={newAccount.isActive}\r\n                      onChange={handleAccountChange}\r\n                      className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\r\n                    />\r\n                    <span className=\"ml-2\">Cuenta Activa</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label\r\n                  htmlFor=\"description\"\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                >\r\n                  Descripción\r\n                </label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={newAccount.description}\r\n                  onChange={handleAccountChange}\r\n                  rows={3}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                  placeholder=\"Descripción detallada de la cuenta\"\r\n                ></textarea>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setIsNewAccountModalOpen(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={saveAccount}\r\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 flex items-center\"\r\n                >\r\n                  <Save\r\n                    size={16}\r\n                    className=\"mr-2\"\r\n                  />{\" \"}\r\n                  Guardar Cuenta\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de Detalle de Transacción */}\r\n      {isTransactionDetailModalOpen && selectedTransaction && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50\" onClick={() => setIsTransactionDetailModalOpen(false)}></div>\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-5xl z-10 max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900\">\r\n                Detalles de Transacción: {selectedTransaction.reference_number}\r\n              </h2>\r\n              <button\r\n                onClick={() => setIsTransactionDetailModalOpen(false)}\r\n                className=\"text-gray-400 hover:text-gray-600\"\r\n              >\r\n                <X className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"space-y-6\">\r\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div>\r\n                    <h4 className=\"text-xs font-medium text-gray-500 uppercase\">\r\n                      Referencia\r\n                    </h4>\r\n                    <p className=\"mt-1 text-sm font-medium text-gray-900\">\r\n                      {selectedTransaction.reference_number}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"text-xs font-medium text-gray-500 uppercase\">\r\n                      Fecha\r\n                    </h4>\r\n                    <p className=\"mt-1 text-sm text-gray-900\">\r\n                      {new Date(\r\n                        selectedTransaction.transaction_date\r\n                      ).toLocaleDateString(\"es-ES\")}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"text-xs font-medium text-gray-500 uppercase\">\r\n                      Tipo\r\n                    </h4>\r\n                    <p className=\"mt-1\">\r\n                      <span\r\n                        className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\r\n                        ${\r\n                          (selectedTransaction.type === \"SALE\" || selectedTransaction.type === \"Venta\")\r\n                            ? \"bg-green-100 text-green-800\"\r\n                            : (selectedTransaction.type === \"PURCHASE\" || selectedTransaction.type === \"Compra\")\r\n                              ? \"bg-blue-100 text-blue-800\"\r\n                              : (selectedTransaction.type === \"EXPENSE\" || selectedTransaction.type === \"Gasto\")\r\n                                ? \"bg-red-100 text-red-800\"\r\n                                : (selectedTransaction.type === \"REFUND\" || selectedTransaction.type === \"Devolución\")\r\n                                  ? \"bg-orange-100 text-orange-800\"\r\n                                  : (selectedTransaction.type === \"ADJUSTMENT\" || selectedTransaction.type === \"Ajuste\")\r\n                                    ? \"bg-yellow-100 text-yellow-800\"\r\n                                    : (selectedTransaction.type === \"TRANSFER\" || selectedTransaction.type === \"Transferencia\")\r\n                                      ? \"bg-purple-100 text-purple-800\"\r\n                                      : \"bg-gray-100 text-gray-800\"\r\n                        }`}\r\n                      >\r\n                        {{\r\n                          'SALE': 'Venta',\r\n                          'PURCHASE': 'Compra',\r\n                          'EXPENSE': 'Gasto',\r\n                          'REFUND': 'Devolución',\r\n                          'ADJUSTMENT': 'Ajuste',\r\n                          'TRANSFER': 'Transferencia',\r\n                          'Venta': 'Venta',\r\n                          'Compra': 'Compra',\r\n                          'Gasto': 'Gasto',\r\n                          'Devolución': 'Devolución',\r\n                          'Ajuste': 'Ajuste',\r\n                          'Transferencia': 'Transferencia'\r\n                        }[selectedTransaction.type] || selectedTransaction.type}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <h4 className=\"text-xs font-medium text-gray-500 uppercase\">\r\n                    Descripción\r\n                  </h4>\r\n                  <p className=\"mt-1 text-sm text-gray-900\">\r\n                    {selectedTransaction.description}\r\n                  </p>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <h4 className=\"text-xs font-medium text-gray-500 uppercase\">\r\n                    Estado\r\n                  </h4>\r\n                  <p className=\"mt-1\">\r\n                    <span\r\n                      className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\r\n                      ${selectedTransaction.is_posted ? \"bg-green-100 text-green-800\" : \"bg-yellow-100 text-yellow-800\"}`}\r\n                    >\r\n                      {selectedTransaction.is_posted\r\n                        ? \"Contabilizado\"\r\n                        : \"Pendiente\"}\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n                {selectedTransaction.order_id && (\r\n                  <div className=\"mt-4\">\r\n                    <h4 className=\"text-xs font-medium text-gray-500 uppercase\">\r\n                      Orden relacionada\r\n                    </h4>\r\n                    <p className=\"mt-1 text-sm text-primary-600 font-medium\">\r\n                      #{selectedTransaction.order_id}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <h3 className=\"text-base font-medium text-gray-900 mb-3\">\r\n                  Entradas Contables\r\n                </h3>\r\n                <div className=\"overflow-x-auto border border-gray-300 rounded-md shadow-sm\">\r\n                  <table className=\"min-w-full divide-y divide-gray-200\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Cuenta\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Debe\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Haber\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Notas\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                      {selectedTransaction.entries.map((entry) => {\r\n                        // Encontrar la cuenta correspondiente\r\n                        const account = accounts.find(\r\n                          (a) => a.id === entry.account_id\r\n                        );\r\n\r\n                        return (\r\n                          <tr key={entry.id}>\r\n                            <td className=\"px-4 py-3 text-sm text-gray-900\">\r\n                              {account\r\n                                ? `${account.code} - ${account.name}`\r\n                                : `Cuenta ID: ${entry.account_id}`}\r\n                            </td>\r\n                            <td className=\"px-4 py-3 text-sm text-right text-gray-900\">\r\n                              {entry.debit_amount > 0\r\n                                ? formatCurrency(entry.debit_amount)\r\n                                : \"\"}\r\n                            </td>\r\n                            <td className=\"px-4 py-3 text-sm text-right text-gray-900\">\r\n                              {entry.credit_amount > 0\r\n                                ? formatCurrency(entry.credit_amount)\r\n                                : \"\"}\r\n                            </td>\r\n                            <td className=\"px-4 py-3 text-sm text-gray-500\">\r\n                              {entry.notes}\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n\r\n                      {/* Fila de totales */}\r\n                      <tr className=\"bg-gray-50 font-medium\">\r\n                        <td className=\"px-4 py-3 text-sm text-gray-900\">\r\n                          Totales\r\n                        </td>\r\n                        <td className=\"px-4 py-3 text-sm text-right text-gray-900\">\r\n                          {formatCurrency(\r\n                            selectedTransaction.entries.reduce(\r\n                              (sum, entry) => sum + (entry.debit_amount || 0),\r\n                              0\r\n                            )\r\n                          )}\r\n                        </td>\r\n                        <td className=\"px-4 py-3 text-sm text-right text-gray-900\">\r\n                          {formatCurrency(\r\n                            selectedTransaction.entries.reduce(\r\n                              (sum, entry) => sum + (entry.credit_amount || 0),\r\n                              0\r\n                            )\r\n                          )}\r\n                        </td>\r\n                        <td className=\"px-4 py-3 text-sm text-gray-900\">\r\n                          {(() => {\r\n                            // Calcular balance localmente para verificar\r\n                            const totalDebits = selectedTransaction.entries.reduce(\r\n                              (sum, entry) => sum + (entry.debit_amount || 0),\r\n                              0\r\n                            );\r\n                            const totalCredits = selectedTransaction.entries.reduce(\r\n                              (sum, entry) => sum + (entry.credit_amount || 0),\r\n                              0\r\n                            );\r\n                            const isBalanced = Math.abs(totalDebits - totalCredits) < 0.01;\r\n\r\n                            return isBalanced ? (\r\n                              <span className=\"text-green-600\">\r\n                                Transacción balanceada\r\n                              </span>\r\n                            ) : (\r\n                              <span className=\"text-red-600\">\r\n                                Transacción no balanceada (Dif: {formatCurrency(Math.abs(totalDebits - totalCredits))})\r\n                              </span>\r\n                            );\r\n                          })()}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-3\">\r\n                {!selectedTransaction.is_posted && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 flex items-center\"\r\n                  >\r\n                    <Archive\r\n                      size={16}\r\n                      className=\"mr-2\"\r\n                    />{\" \"}\r\n                    Contabilizar\r\n                  </button>\r\n                )}\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setIsTransactionDetailModalOpen(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\r\n                >\r\n                  Cerrar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de Detalle de Cuenta */}\r\n      {isAccountDetailModalOpen && selectedAccount && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50\" onClick={() => setIsAccountDetailModalOpen(false)}></div>\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-3xl z-10 max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900\">\r\n                Detalles de Cuenta: {selectedAccount.code} - {selectedAccount.name}\r\n              </h2>\r\n              <button\r\n                onClick={() => setIsAccountDetailModalOpen(false)}\r\n                className=\"text-gray-400 hover:text-gray-600\"\r\n              >\r\n                <X className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"space-y-6\">\r\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <h4 className=\"text-xs font-medium text-gray-500 uppercase\">\r\n                      Código\r\n                    </h4>\r\n                    <p className=\"mt-1 text-sm font-medium text-gray-900\">\r\n                      {selectedAccount.code}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"text-xs font-medium text-gray-500 uppercase\">\r\n                      Nombre\r\n                    </h4>\r\n                    <p className=\"mt-1 text-sm text-gray-900\">\r\n                      {selectedAccount.name}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n                  <div>\r\n                    <h4 className=\"text-xs font-medium text-gray-500 uppercase\">\r\n                      Tipo\r\n                    </h4>\r\n                    <p className=\"mt-1\">\r\n                      <span\r\n                        className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\r\n                        ${\r\n                          selectedAccount.type === \"Activo\"\r\n                            ? \"bg-blue-100 text-blue-800\"\r\n                            : selectedAccount.type === \"Pasivo\"\r\n                              ? \"bg-yellow-100 text-yellow-800\"\r\n                              : selectedAccount.type === \"Ingreso\"\r\n                                ? \"bg-green-100 text-green-800\"\r\n                                : selectedAccount.type === \"Gasto\"\r\n                                  ? \"bg-red-100 text-red-800\"\r\n                                  : selectedAccount.type === \"Costo\"\r\n                                    ? \"bg-orange-100 text-orange-800\"\r\n                                    : \"bg-gray-100 text-gray-800\"\r\n                        }`}\r\n                      >\r\n                        {selectedAccount.type}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"text-xs font-medium text-gray-500 uppercase\">\r\n                      Saldo\r\n                    </h4>\r\n                    <p className=\"mt-1 text-sm text-gray-900\">\r\n                      <span\r\n                        className={`font-medium ${selectedAccount.balance && selectedAccount.balance >= 0 ? \"text-green-600\" : \"text-red-600\"}`}\r\n                      >\r\n                        {formatCurrency(selectedAccount.balance || 0)}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <h4 className=\"text-xs font-medium text-gray-500 uppercase\">\r\n                    Estado\r\n                  </h4>\r\n                  <p className=\"mt-1\">\r\n                    <span\r\n                      className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\r\n                      ${selectedAccount.is_active ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\"}`}\r\n                    >\r\n                      {selectedAccount.is_active ? \"Activa\" : \"Inactiva\"}\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <h4 className=\"text-xs font-medium text-gray-500 uppercase\">\r\n                    Descripción\r\n                  </h4>\r\n                  <p className=\"mt-1 text-sm text-gray-900\">\r\n                    {selectedAccount.description || \"Sin descripción\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <h3 className=\"text-base font-medium text-gray-900 mb-3\">\r\n                  Movimientos Recientes\r\n                </h3>\r\n                <div className=\"border border-gray-300 rounded-md shadow-sm p-4 text-center text-gray-500\">\r\n                  <p>\r\n                    Para ver los movimientos detallados de esta cuenta, genere un\r\n                    informe de Libro Mayor.\r\n                  </p>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"mt-3 px-4 py-2 bg-primary-600 border border-transparent rounded-md font-medium text-white shadow-sm hover:bg-primary-700\"\r\n                  >\r\n                    Ver Libro Mayor\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\r\n                  onClick={() => setIsAccountDetailModalOpen(false)}\r\n                >\r\n                  Cerrar\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 flex items-center\"\r\n                >\r\n                  Editar Cuenta\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminAccountingPage;\r\n"],"names":["AccountingService","startDate","endDate","params","url","API_ENDPOINTS","response","ApiClient","filters","acc","key","value","id","transactionData","activeOnly","accountData","asOf","accountId","amount","entries","totalDebits","sum","entry","totalCredits","difference","type","timestamp","AdminAccountingPage","activeTab","setActiveTab","useState","loading","setLoading","error","setError","transactions","setTransactions","accounts","setAccounts","metrics","setMetrics","paginationData","setPaginationData","isNewTransactionModalOpen","setIsNewTransactionModalOpen","isNewAccountModalOpen","setIsNewAccountModalOpen","isTransactionDetailModalOpen","setIsTransactionDetailModalOpen","isAccountDetailModalOpen","setIsAccountDetailModalOpen","selectedTransaction","setSelectedTransaction","selectedAccount","setSelectedAccount","editingTransaction","setEditingTransaction","newTransaction","setNewTransaction","newAccount","setNewAccount","oneMonthAgo","today","dateRange","setDateRange","currentPage","setCurrentPage","filterType","setFilterType","loadData","metricsResponse","transactionsResponse","accountsResponse","err","useEffect","openTransactionDetail","transaction","openAccountDetail","account","handleTransactionChange","e","name","handleEntryChange","index","field","updatedEntries","convertedValue","addTransactionEntry","removeTransactionEntry","_","i","handleAccountChange","updatedValue","saveTransaction","validation","result","successMessage","closeTransactionModal","saveAccount","createdAccount","updatedAccounts","postTransaction","deleteTransaction","editTransaction","transactionColumns","jsx","displayText","colorClass","jsxs","Eye","Edit2","Archive","Trash2","accountColumns","balance","refreshData","formatCurrency","totals","totalDebit","totalCredit","cards","DollarSign","BarChart2","RefreshCw","DashboardCardList","Filter","Table","X","Plus","Save","a"],"mappings":"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"}