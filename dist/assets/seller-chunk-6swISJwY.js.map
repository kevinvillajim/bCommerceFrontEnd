{"version":3,"file":"seller-chunk-6swISJwY.js","sources":["../../src/infrastructure/services/LocalStorageService.ts","../../src/infrastructure/services/RoleService.ts","../../src/infrastructure/services/SecureRoleCache.ts","../../src/infrastructure/services/OptimizedRoleService.ts","../../src/presentation/contexts/AuthContext.tsx","../../src/core/services/ProductService.ts","../../src/presentation/components/common/RatingStars.tsx","../../src/core/services/CategoryService.ts","../../src/presentation/hooks/useCategories.ts","../../src/utils/formatters/formatDate.ts","../../src/core/domain/entities/Order.ts","../../src/core/services/OrderBreakdownService.ts","../../src/presentation/components/dashboard/RecentOrdersTable.tsx","../../src/presentation/components/dashboard/TopProductsTable.tsx","../../src/presentation/pages/seller/SellerDashboard.tsx","../../src/presentation/hooks/useSellerProducts.ts","../../src/presentation/pages/seller/SellerProductsPage.tsx","../../src/presentation/components/dashboard/SellerStatCardList.tsx","../../src/core/adapters/SellerOrderServiceAdapter.ts","../../src/presentation/components/shipping/ShippingFormModal.tsx","../../src/presentation/pages/seller/SellerOrdersPage.tsx","../../src/presentation/components/seller/OrderEarningsInfo.tsx","../../src/presentation/pages/seller/SellerOrderDetailPage.tsx","../../src/presentation/pages/seller/SellerEarningsPage.tsx"],"sourcesContent":["/**\r\n * Servicio para manejar el almacenamiento local (localStorage)\r\n * Proporciona métodos para almacenar, recuperar y eliminar datos\r\n */\r\nexport class LocalStorageService {\r\n  /**\r\n   * Guarda un valor en localStorage\r\n   * @param key Clave para almacenar el valor\r\n   * @param value Valor a almacenar (se convertirá a JSON si es un objeto)\r\n   */\r\n  setItem(key: string, value: any): void {\r\n    try {\r\n      // Si el valor es un objeto, lo convertimos a JSON\r\n      const valueToStore = typeof value === 'object' ? JSON.stringify(value) : value;\r\n      localStorage.setItem(key, valueToStore);\r\n    } catch (error) {\r\n      console.error('Error al guardar en localStorage:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recupera un valor de localStorage\r\n   * @param key Clave del valor a recuperar\r\n   * @returns El valor almacenado o null si no existe\r\n   */\r\n  getItem(key: string): any {\r\n    try {\r\n      const item = localStorage.getItem(key);\r\n      \r\n      // Si el ítem no existe, devolvemos null\r\n      if (item === null) {\r\n        return null;\r\n      }\r\n      \r\n      // Intentamos parsear como JSON, si falla devolvemos el valor original\r\n      try {\r\n        return JSON.parse(item);\r\n      } catch (e) {\r\n        return item;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al recuperar de localStorage:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Elimina un valor de localStorage\r\n   * @param key Clave del valor a eliminar\r\n   */\r\n  removeItem(key: string): void {\r\n    try {\r\n      localStorage.removeItem(key);\r\n    } catch (error) {\r\n      console.error('Error al eliminar de localStorage:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Limpia todo el localStorage\r\n   */\r\n  clear(): void {\r\n    try {\r\n      localStorage.clear();\r\n    } catch (error) {\r\n      console.error('Error al limpiar localStorage:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica si una clave existe en localStorage\r\n   * @param key Clave a verificar\r\n   * @returns true si existe, false si no\r\n   */\r\n  hasKey(key: string): boolean {\r\n    try {\r\n      return localStorage.getItem(key) !== null;\r\n    } catch (error) {\r\n      console.error('Error al verificar clave en localStorage:', error);\r\n      return false;\r\n    }\r\n  }\r\n}","// src/infrastructure/services/RoleService.ts\r\n\r\nimport axiosInstance from \"../api/axiosConfig\";\r\nimport CacheService from \"./CacheService\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\n\r\nconst ROLE_CACHE_KEY = \"user_role_data\";\r\nconst CACHE_TIME = 10 * 60 * 1000; // 10 minutos\r\n\r\n// Memoria local para evitar consultas excesivas al localStorage\r\nlet cachedRoleData: RoleCheckResponse | null = null;\r\nlet lastRoleCheck = 0;\r\n\r\nexport interface RoleCheckResponse {\r\n\tsuccess: boolean;\r\n\tstatus: number;\r\n\tdata: {\r\n\t\tuser_id: number;\r\n\t\trole: string;\r\n\t\tis_seller: boolean;\r\n\t\tis_admin: boolean;\r\n\t\tseller_info?: {\r\n\t\t\tid: number;\r\n\t\t\tstore_name: string;\r\n\t\t\tstatus: string;\r\n\t\t\tverification_level: string;\r\n\t\t} | null;\r\n\t\tadmin_info?: {\r\n\t\t\tid: number;\r\n\t\t\trole: string;\r\n\t\t\tpermissions: string[];\r\n\t\t} | null;\r\n\t};\r\n}\r\n\r\n/**\r\n * Servicio para verificar y gestionar roles de usuario\r\n */\r\nexport class RoleService {\r\n\t/**\r\n\t * Verifica el rol del usuario actual y guarda los datos en caché\r\n\t * @param forceRefresh Si es true, fuerza una recarga desde la API\r\n\t */\r\n\tstatic async checkUserRole(\r\n\t\tforceRefresh = false\r\n\t): Promise<RoleCheckResponse | null> {\r\n\t\ttry {\r\n\t\t\t// Si tenemos datos en memoria y no ha pasado mucho tiempo, usarlos directamente\r\n\t\t\tconst now = Date.now();\r\n\t\t\tif (!forceRefresh && cachedRoleData && now - lastRoleCheck < 30000) {\r\n\t\t\t\tconsole.log(\"Usando datos de rol desde memoria:\", cachedRoleData);\r\n\t\t\t\treturn cachedRoleData;\r\n\t\t\t}\r\n\r\n\t\t\t// Verificar si hay datos en caché de localStorage y no forzamos actualización\r\n\t\t\tif (!forceRefresh) {\r\n\t\t\t\tconst localCachedData = CacheService.getItem(ROLE_CACHE_KEY);\r\n\t\t\t\tif (localCachedData) {\r\n\t\t\t\t\tcachedRoleData = localCachedData as RoleCheckResponse;\r\n\t\t\t\t\tlastRoleCheck = now;\r\n\t\t\t\t\tconsole.log(\"Usando datos de rol desde localStorage:\", cachedRoleData);\r\n\t\t\t\t\treturn cachedRoleData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Si se fuerza actualización o no hay caché, hacer la petición a la API\r\n\t\t\tconsole.log(\"Verificando rol del usuario desde API...\");\r\n\t\t\tconst response = await axiosInstance.get(API_ENDPOINTS.AUTH.CHECK_ROLE);\r\n\r\n\t\t\tconsole.log(\"Respuesta del endpoint check-role:\", response.data);\r\n\r\n\t\t\t// Verificar la respuesta\r\n\t\t\tif (response && response.data && response.data.success) {\r\n\t\t\t\t// Guardar en caché de localStorage\r\n\t\t\t\tCacheService.setItem(ROLE_CACHE_KEY, response.data, CACHE_TIME);\r\n\r\n\t\t\t\t// Actualizar memoria local\r\n\t\t\t\tcachedRoleData = response.data as RoleCheckResponse;\r\n\t\t\t\tlastRoleCheck = now;\r\n\r\n\t\t\t\tconsole.log(\"Datos de rol actualizados desde API:\", cachedRoleData);\r\n\t\t\t\treturn cachedRoleData;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error(\"Respuesta inválida del endpoint check-role:\", response.data);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al verificar rol de usuario:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Verificar si el usuario es administrador\r\n\t */\r\n\tstatic async isAdmin(): Promise<boolean> {\r\n\t\tconst roleData = await this.checkUserRole();\r\n\t\tconst isAdmin = roleData?.data?.is_admin || false;\r\n\t\tconsole.log(\"Verificando si es admin:\", isAdmin, roleData);\r\n\t\treturn isAdmin;\r\n\t}\r\n\r\n\t/**\r\n\t * Verificar si el usuario es vendedor\r\n\t */\r\n\tstatic async isSeller(): Promise<boolean> {\r\n\t\tconst roleData = await this.checkUserRole();\r\n\t\tconst isSeller = roleData?.data?.is_seller || false;\r\n\t\tconsole.log(\"Verificando si es seller:\", isSeller, roleData);\r\n\t\treturn isSeller;\r\n\t}\r\n\r\n\t/**\r\n\t * Obtener rol del usuario actual\r\n\t */\r\n\tstatic async getUserRole(): Promise<string | null> {\r\n\t\tconst roleData = await this.checkUserRole();\r\n\t\tconst role = roleData?.data?.role || null;\r\n\t\tconsole.log(\"Obteniendo rol del usuario:\", role, roleData);\r\n\t\treturn role;\r\n\t}\r\n\r\n\t/**\r\n\t * Limpiar la caché de roles\r\n\t * Útil cuando el usuario cierra sesión\r\n\t */\r\n\tstatic clearRoleCache(): void {\r\n\t\tCacheService.removeItem(ROLE_CACHE_KEY);\r\n\t\tcachedRoleData = null;\r\n\t\tlastRoleCheck = 0;\r\n\t\tconsole.log(\"Caché de roles limpiada\");\r\n\t}\r\n\r\n\t/**\r\n\t * Obtener información completa del seller\r\n\t */\r\n\tstatic async getSellerInfo(): Promise<any> {\r\n\t\tconst roleData = await this.checkUserRole();\r\n\t\treturn roleData?.data?.seller_info || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Obtener información completa del admin\r\n\t */\r\n\tstatic async getAdminInfo(): Promise<any> {\r\n\t\tconst roleData = await this.checkUserRole();\r\n\t\treturn roleData?.data?.admin_info || null;\r\n\t}\r\n}\r\n\r\nexport default RoleService;","// src/infrastructure/services/SecureRoleCache.ts\r\n\r\nimport CryptoJS from \"crypto-js\";\r\n\r\n// Función para obtener la clave de cifrado según el bundler\r\nconst getEncryptionKey = (): string => {\r\n\t// Para Vite\r\n\tif (typeof import.meta !== \"undefined\" && import.meta.env) {\r\n\t\treturn import.meta.env.VITE_CACHE_KEY || \"nTIonshRityLkSomPLIgMayOUsEmPLeW\";\r\n\t}\r\n\r\n\t// Para Create React App y otros bundlers que exponen process.env\r\n\tif (typeof process !== \"undefined\" && process.env) {\r\n\t\treturn (\r\n\t\t\tprocess.env.REACT_APP_CACHE_KEY || \"nTIonshRityLkSomPLIgMayOUsEmPLeW\"\r\n\t\t);\r\n\t}\r\n\r\n\t// Fallback seguro usando la clave que ya configuraste\r\n\treturn \"nTIonshRityLkSomPLIgMayOUsEmPLeW\";\r\n};\r\n\r\nconst ENCRYPTION_KEY = getEncryptionKey();\r\nconst INTEGRITY_SALT = \"role-integrity-2024\";\r\n\r\ninterface SecureRoleData {\r\n\trole: string;\r\n\tisAdmin: boolean;\r\n\tisSeller: boolean;\r\n\tsellerInfo?: any;\r\n\tadminInfo?: any;\r\n\ttimestamp: number;\r\n\tsessionId: string;\r\n}\r\n\r\ninterface CachedSecureData {\r\n\tencrypted: string;\r\n\thash: string;\r\n\ttimestamp: number;\r\n}\r\n\r\n/**\r\n * Servicio de cache seguro para roles de usuario\r\n * Combina cifrado + validación de integridad\r\n */\r\nexport class SecureRoleCache {\r\n\tprivate static sessionId = this.generateSessionId();\r\n\tprivate static readonly STORAGE_CACHE_TIME = 5 * 60 * 1000; // 5 minutos en storage\r\n\tprivate static readonly CRITICAL_REVALIDATION_TIME = 2 * 60 * 1000; // 2 minutos para operaciones críticas\r\n\r\n\tprivate static generateSessionId(): string {\r\n\t\treturn CryptoJS.lib.WordArray.random(16).toString();\r\n\t}\r\n\r\n\t/**\r\n\t * Cifra datos sensibles\r\n\t */\r\n\tprivate static encrypt(data: SecureRoleData): string {\r\n\t\tconst jsonString = JSON.stringify(data);\r\n\t\treturn CryptoJS.AES.encrypt(jsonString, ENCRYPTION_KEY).toString();\r\n\t}\r\n\r\n\t/**\r\n\t * Descifra datos\r\n\t */\r\n\tprivate static decrypt(encryptedData: string): SecureRoleData | null {\r\n\t\ttry {\r\n\t\t\tconst decrypted = CryptoJS.AES.decrypt(encryptedData, ENCRYPTION_KEY);\r\n\t\t\tconst jsonString = decrypted.toString(CryptoJS.enc.Utf8);\r\n\t\t\treturn JSON.parse(jsonString);\r\n\t\t} catch {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Genera hash de integridad\r\n\t */\r\n\tprivate static generateIntegrityHash(data: SecureRoleData): string {\r\n\t\tconst content = `${data.role}-${data.isAdmin}-${data.isSeller}-${data.timestamp}-${data.sessionId}`;\r\n\t\treturn CryptoJS.HmacSHA256(content, INTEGRITY_SALT).toString();\r\n\t}\r\n\r\n\t/**\r\n\t * Valida integridad de los datos\r\n\t */\r\n\tprivate static validateIntegrity(\r\n\t\tdata: SecureRoleData,\r\n\t\texpectedHash: string\r\n\t): boolean {\r\n\t\tconst calculatedHash = this.generateIntegrityHash(data);\r\n\t\treturn calculatedHash === expectedHash;\r\n\t}\r\n\r\n\t/**\r\n\t * Guarda datos de rol de forma segura\r\n\t */\r\n\tstatic setSecureRoleData(\r\n\t\troleData: Omit<SecureRoleData, \"timestamp\" | \"sessionId\">\r\n\t): void {\r\n\t\tconst secureData: SecureRoleData = {\r\n\t\t\t...roleData,\r\n\t\t\ttimestamp: Date.now(),\r\n\t\t\tsessionId: this.sessionId,\r\n\t\t};\r\n\r\n\t\tconst encrypted = this.encrypt(secureData);\r\n\t\tconst hash = this.generateIntegrityHash(secureData);\r\n\r\n\t\tconst cachedData: CachedSecureData = {\r\n\t\t\tencrypted,\r\n\t\t\thash,\r\n\t\t\ttimestamp: secureData.timestamp,\r\n\t\t};\r\n\r\n\t\t// Solo guardar en localStorage datos no críticos cifrados\r\n\t\ttry {\r\n\t\t\tlocalStorage.setItem(\"secure_role_cache\", JSON.stringify(cachedData));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.warn(\"No se pudo guardar cache de roles:\", error);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene datos de rol validando integridad\r\n\t */\r\n\tstatic getSecureRoleData(): SecureRoleData | null {\r\n\t\ttry {\r\n\t\t\tconst cachedDataStr = localStorage.getItem(\"secure_role_cache\");\r\n\t\t\tif (!cachedDataStr) return null;\r\n\r\n\t\t\tconst cachedData: CachedSecureData = JSON.parse(cachedDataStr);\r\n\r\n\t\t\t// Verificar expiración\r\n\t\t\tconst now = Date.now();\r\n\t\t\tif (now - cachedData.timestamp > this.STORAGE_CACHE_TIME) {\r\n\t\t\t\tthis.clearSecureCache();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Descifrar datos\r\n\t\t\tconst decryptedData = this.decrypt(cachedData.encrypted);\r\n\t\t\tif (!decryptedData) {\r\n\t\t\t\tthis.clearSecureCache();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Validar integridad\r\n\t\t\tif (!this.validateIntegrity(decryptedData, cachedData.hash)) {\r\n\t\t\t\tconsole.warn(\"Integridad de cache de roles comprometida\");\r\n\t\t\t\tthis.clearSecureCache();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Validar sesión\r\n\t\t\tif (decryptedData.sessionId !== this.sessionId) {\r\n\t\t\t\tconsole.log(\"Cache de sesión anterior, invalidando\");\r\n\t\t\t\tthis.clearSecureCache();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn decryptedData;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.warn(\"Error al leer cache seguro:\", error);\r\n\t\t\tthis.clearSecureCache();\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Limpia cache seguro\r\n\t */\r\n\tstatic clearSecureCache(): void {\r\n\t\tlocalStorage.removeItem(\"secure_role_cache\");\r\n\t}\r\n\r\n\t/**\r\n\t * Verifica si necesita revalidación para operaciones críticas\r\n\t */\r\n\tstatic needsCriticalRevalidation(): boolean {\r\n\t\tconst data = this.getSecureRoleData();\r\n\t\tif (!data) return true;\r\n\r\n\t\tconst now = Date.now();\r\n\t\treturn now - data.timestamp > this.CRITICAL_REVALIDATION_TIME;\r\n\t}\r\n}\r\n","// src/infrastructure/services/OptimizedRoleService.ts\r\n\r\nimport axiosInstance from \"../api/axiosConfig\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\nimport {SecureRoleCache} from \"./SecureRoleCache\";\r\n\r\n// Endpoint fallback en caso de que no esté definido\r\nconst CHECK_ROLE_ENDPOINT =\r\n\tAPI_ENDPOINTS?.AUTH?.CHECK_ROLE || \"/api/user/check-role\";\r\n\r\nexport interface RoleCheckResponse {\r\n\tsuccess: boolean;\r\n\tstatus: number;\r\n\tdata: {\r\n\t\tuser_id: number;\r\n\t\trole: string;\r\n\t\tis_seller: boolean;\r\n\t\tis_admin: boolean;\r\n\t\tseller_info?: any;\r\n\t\tadmin_info?: any;\r\n\t};\r\n}\r\n\r\n/**\r\n * Servicio optimizado y seguro para roles\r\n */\r\nexport class OptimizedRoleService {\r\n\tprivate static memoryCache: Map<string, {data: any; timestamp: number}> =\r\n\t\tnew Map();\r\n\tprivate static readonly MEMORY_CACHE_TIME = 30000; // 30 segundos\r\n\r\n\t/**\r\n\t * Obtiene datos desde memoria (más rápido)\r\n\t */\r\n\tprivate static getFromMemory(key: string): any | null {\r\n\t\tconst cached = this.memoryCache.get(key);\r\n\t\tif (!cached) return null;\r\n\r\n\t\tconst now = Date.now();\r\n\t\tif (now - cached.timestamp > this.MEMORY_CACHE_TIME) {\r\n\t\t\tthis.memoryCache.delete(key);\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn cached.data;\r\n\t}\r\n\r\n\t/**\r\n\t * Guarda en memoria\r\n\t */\r\n\tprivate static setInMemory(key: string, data: any): void {\r\n\t\tthis.memoryCache.set(key, {\r\n\t\t\tdata,\r\n\t\t\ttimestamp: Date.now(),\r\n\t\t});\r\n\r\n\t\t// Limitar tamaño del cache en memoria\r\n\t\tif (this.memoryCache.size > 10) {\r\n\t\t\tconst firstKey = this.memoryCache.keys().next().value;\r\n\t\t\tif (firstKey !== undefined) {\r\n\t\t\t\tthis.memoryCache.delete(firstKey);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Verifica rol con cache seguro híbrido\r\n\t */\r\n\tstatic async checkUserRole(\r\n\t\tforceRefresh = false,\r\n\t\tcriticalOperation = false\r\n\t): Promise<RoleCheckResponse | null> {\r\n\t\tconst cacheKey = \"user_role_check\";\r\n\r\n\t\ttry {\r\n\t\t\t// 1. Cache en memoria (más rápido, menos seguro) - solo para operaciones no críticas\r\n\t\t\tif (!forceRefresh && !criticalOperation) {\r\n\t\t\t\tconst memoryData = this.getFromMemory(cacheKey);\r\n\t\t\t\tif (memoryData) {\r\n\t\t\t\t\tconsole.log(\"🧠 Usando rol desde memoria\");\r\n\t\t\t\t\treturn memoryData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 2. Cache seguro cifrado - para operaciones normales\r\n\t\t\tif (!forceRefresh) {\r\n\t\t\t\t// Para operaciones críticas, verificar si necesita revalidación\r\n\t\t\t\tif (criticalOperation && SecureRoleCache.needsCriticalRevalidation()) {\r\n\t\t\t\t\tconsole.log(\"🔒 Operación crítica requiere revalidación\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst secureData = SecureRoleCache.getSecureRoleData();\r\n\t\t\t\t\tif (secureData) {\r\n\t\t\t\t\t\tconsole.log(\"🔐 Usando rol desde cache seguro\");\r\n\r\n\t\t\t\t\t\tconst roleResponse: RoleCheckResponse = {\r\n\t\t\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\t\t\tstatus: 200,\r\n\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\tuser_id: 0,\r\n\t\t\t\t\t\t\t\trole: secureData.role,\r\n\t\t\t\t\t\t\t\tis_admin: secureData.isAdmin,\r\n\t\t\t\t\t\t\t\tis_seller: secureData.isSeller,\r\n\t\t\t\t\t\t\t\tseller_info: secureData.sellerInfo,\r\n\t\t\t\t\t\t\t\tadmin_info: secureData.adminInfo,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// Guardar en memoria para consultas rápidas\r\n\t\t\t\t\t\tthis.setInMemory(cacheKey, roleResponse);\r\n\t\t\t\t\t\treturn roleResponse;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 3. Consulta fresh desde API\r\n\t\t\tconsole.log(\"🌐 Consultando rol desde API\");\r\n\t\t\tconst response = await axiosInstance.get(CHECK_ROLE_ENDPOINT);\r\n\r\n\t\t\tif (response?.data?.success) {\r\n\t\t\t\tconst roleData = response.data;\r\n\r\n\t\t\t\t// Guardar en cache seguro\r\n\t\t\t\tSecureRoleCache.setSecureRoleData({\r\n\t\t\t\t\trole: roleData.data.role,\r\n\t\t\t\t\tisAdmin: roleData.data.is_admin,\r\n\t\t\t\t\tisSeller: roleData.data.is_seller,\r\n\t\t\t\t\tsellerInfo: roleData.data.seller_info,\r\n\t\t\t\t\tadminInfo: roleData.data.admin_info,\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Guardar en memoria\r\n\t\t\t\tthis.setInMemory(cacheKey, roleData);\r\n\r\n\t\t\t\treturn roleData;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error verificando rol:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Verificaciones rápidas (usan memoria + cache seguro)\r\n\t */\r\n\tstatic async isAdmin(): Promise<boolean> {\r\n\t\tconst roleData = await this.checkUserRole(false, false);\r\n\t\treturn roleData?.data?.is_admin || false;\r\n\t}\r\n\r\n\tstatic async isSeller(): Promise<boolean> {\r\n\t\tconst roleData = await this.checkUserRole(false, false);\r\n\t\treturn roleData?.data?.is_seller || false;\r\n\t}\r\n\r\n\t/**\r\n\t * Verificaciones críticas (requieren revalidación frecuente)\r\n\t */\r\n\tstatic async isAdminCritical(): Promise<boolean> {\r\n\t\tconst roleData = await this.checkUserRole(false, true);\r\n\t\treturn roleData?.data?.is_admin || false;\r\n\t}\r\n\r\n\tstatic async isSellerCritical(): Promise<boolean> {\r\n\t\tconst roleData = await this.checkUserRole(false, true);\r\n\t\treturn roleData?.data?.is_seller || false;\r\n\t}\r\n\r\n\t/**\r\n\t * Limpia toda la cache\r\n\t */\r\n\tstatic clearAllCache(): void {\r\n\t\tthis.memoryCache.clear();\r\n\t\tSecureRoleCache.clearSecureCache();\r\n\t\tconsole.log(\"🗑️ Cache de roles limpiada completamente\");\r\n\t}\r\n}\r\n","// src/presentation/contexts/AuthContext.tsx (VERSIÓN UNIFICADA Y OPTIMIZADA - MANTENIENDO REDIRECCIÓN ORIGINAL)\r\n\r\nimport React, {\r\n\tcreateContext,\r\n\tuseState,\r\n\tuseEffect,\r\n\tuseCallback,\r\n\tuseContext,\r\n\tuseMemo,\r\n\tuseRef,\r\n} from \"react\";\r\nimport type {ReactNode} from \"react\";\r\nimport {LocalStorageService} from \"../../infrastructure/services/LocalStorageService\";\r\nimport type {User} from \"../../core/domain/entities/User\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport RoleService from \"../../infrastructure/services/RoleService\";\r\nimport {OptimizedRoleService} from \"../../infrastructure/services/OptimizedRoleService\";\r\nimport {CacheService} from \"../../infrastructure/services/CacheService\";\r\nimport axiosInstance from \"../../infrastructure/api/axiosConfig\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\n\r\n// Interfaz para información de rol\r\ninterface UserRoleInfo {\r\n\trole: string | null;\r\n\tisAdmin: boolean;\r\n\tisSeller: boolean;\r\n\tsellerInfo?: {\r\n\t\tid: number;\r\n\t\tstore_name: string;\r\n\t\tstatus: string;\r\n\t\tverification_level: string;\r\n\t} | null;\r\n\tadminInfo?: {\r\n\t\tid: number;\r\n\t\trole: string;\r\n\t\tpermissions: string[];\r\n\t} | null;\r\n}\r\n\r\n// Crear instancia del servicio de almacenamiento\r\nconst storageService = new LocalStorageService();\r\n\r\n// Cache keys\r\nconst CACHE_KEYS = {\r\n\tROLE_INFO: \"auth_role_info\",\r\n\tUSER_DATA: \"auth_user_data\",\r\n};\r\n\r\n// Tiempos de cache (en milisegundos)\r\nconst CACHE_TIMES = {\r\n\tROLE_INFO: 5 * 60 * 1000, // 5 minutos\r\n\tUSER_DATA: 10 * 60 * 1000, // 10 minutos\r\n};\r\n\r\n// Definir interfaz para el contexto\r\ninterface AuthContextProps {\r\n\tuser: User | null;\r\n\tsetUser: React.Dispatch<React.SetStateAction<User | null>>;\r\n\tisAuthenticated: boolean;\r\n\tsetIsAuthenticated: React.Dispatch<React.SetStateAction<boolean>>;\r\n\tlogout: () => Promise<void>;\r\n\troleInfo: UserRoleInfo;\r\n\tisLoadingRole: boolean;\r\n\trefreshRoleInfo: () => Promise<void>;\r\n\tisInitialized: boolean;\r\n\tgetDefaultRouteForRole: () => string;\r\n\tupdateUser?: (userData: Partial<User>) => void;\r\n\t// Funciones optimizadas de roles\r\n\tisAdmin: (critical?: boolean) => Promise<boolean>;\r\n\tisSeller: (critical?: boolean) => Promise<boolean>;\r\n}\r\n\r\n// Crear el contexto con valores por defecto\r\nexport const AuthContext = createContext<AuthContextProps>({\r\n\tuser: null,\r\n\tsetUser: () => {},\r\n\tisAuthenticated: false,\r\n\tsetIsAuthenticated: () => {},\r\n\tlogout: async () => {},\r\n\troleInfo: {\r\n\t\trole: null,\r\n\t\tisAdmin: false,\r\n\t\tisSeller: false,\r\n\t\tsellerInfo: null,\r\n\t\tadminInfo: null,\r\n\t},\r\n\tisLoadingRole: false,\r\n\trefreshRoleInfo: async () => {},\r\n\tisInitialized: false,\r\n\tgetDefaultRouteForRole: () => \"/\",\r\n\tisAdmin: async () => false,\r\n\tisSeller: async () => false,\r\n});\r\n\r\n// Props para el proveedor\r\ninterface AuthProviderProps {\r\n\tchildren: ReactNode;\r\n}\r\n\r\n// Proveedor del contexto UNIFICADO Y OPTIMIZADO\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({children}) => {\r\n\t// Estados principales\r\n\tconst [user, setUser] = useState<User | null>(null);\r\n\tconst [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n\tconst [initialized, setInitialized] = useState<boolean>(false);\r\n\tconst [isLoadingRole, setIsLoadingRole] = useState<boolean>(false);\r\n\tconst [roleInfo, setRoleInfo] = useState<UserRoleInfo>({\r\n\t\trole: null,\r\n\t\tisAdmin: false,\r\n\t\tisSeller: false,\r\n\t\tsellerInfo: null,\r\n\t\tadminInfo: null,\r\n\t});\r\n\r\n\t// Referencias para controlar flujos\r\n\tconst hasFetchedRole = useRef(false);\r\n\tconst isAuthenticatedRef = useRef(false);\r\n\tconst userRef = useRef<User | null>(null);\r\n\tconst isInitializationComplete = useRef(false);\r\n\r\n\t// Actualizar refs cuando cambian los estados\r\n\tuseEffect(() => {\r\n\t\tisAuthenticatedRef.current = isAuthenticated;\r\n\t}, [isAuthenticated]);\r\n\r\n\tuseEffect(() => {\r\n\t\tuserRef.current = user;\r\n\t}, [user]);\r\n\r\n\t// Función para obtener la ruta por defecto según el rol\r\n\tconst getDefaultRouteForRole = useCallback(() => {\r\n\t\tif (roleInfo.isAdmin) {\r\n\t\t\treturn \"/admin/dashboard\";\r\n\t\t} else if (roleInfo.isSeller) {\r\n\t\t\treturn \"/seller/dashboard\";\r\n\t\t}\r\n\t\treturn \"/\";\r\n\t}, [roleInfo]);\r\n\r\n\tconst updateUser = useCallback((userData: Partial<User>) => {\r\n  if (user) {\r\n    const updatedUser = { ...user, ...userData };\r\n    setUser(updatedUser);\r\n    \r\n    // Opcionalmente, guardar en localStorage si usas persistencia\r\n    if (typeof window !== 'undefined') {\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    }\r\n  }\r\n}, [user]);\r\n\r\n\t// Función SOLO para redirección automática en inicialización\r\n\tconst handleInitialRedirection = useCallback(() => {\r\n\t\tconst currentPath = window.location.pathname;\r\n\r\n\t\t// SOLO redirigir automáticamente si estamos en páginas de autenticación Y es inicialización automática\r\n\t\tconst isAuthPage =\r\n\t\t\t[\"/login\", \"/register\"].includes(currentPath) ||\r\n\t\t\tcurrentPath.startsWith(\"/auth\");\r\n\r\n\t\tif (!isAuthPage) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"No estamos en página de auth, no redireccionar automáticamente\"\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Si estamos en una página de auth y el usuario ya está logueado automáticamente, redirigir\r\n\t\tif (isAuthenticated && roleInfo.role && isInitializationComplete.current) {\r\n\t\t\tconst targetPath = getDefaultRouteForRole();\r\n\t\t\tconsole.log(\r\n\t\t\t\t`🔄 Redirección automática desde ${currentPath} a ${targetPath}`\r\n\t\t\t);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\twindow.location.replace(targetPath);\r\n\t\t\t}, 100);\r\n\t\t}\r\n\t}, [isAuthenticated, roleInfo, getDefaultRouteForRole]);\r\n\r\n\t// Función OPTIMIZADA para obtener información de rol (MANTENIENDO LÓGICA ORIGINAL)\r\n\tconst fetchRoleInfo = useCallback(async () => {\r\n\t\t// Verificaciones de salida temprana (EXACTAMENTE COMO EN TU ORIGINAL)\r\n\t\tif (\r\n\t\t\t!isAuthenticatedRef.current ||\r\n\t\t\tisLoadingRole ||\r\n\t\t\thasFetchedRole.current\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetIsLoadingRole(true);\r\n\t\ttry {\r\n\t\t\tconsole.log(\"Obteniendo información de rol del usuario...\");\r\n\r\n\t\t\t// OPTIMIZACIÓN: Verificar cache solo si no es inicialización\r\n\t\t\tif (!isInitializationComplete.current) {\r\n\t\t\t\tconst cachedRoleInfo = CacheService.getItem(CACHE_KEYS.ROLE_INFO);\r\n\t\t\t\tif (cachedRoleInfo) {\r\n\t\t\t\t\tconsole.log(\"🔐 Usando roleInfo desde cache (no-inicialización)\");\r\n\t\t\t\t\tsetRoleInfo(cachedRoleInfo);\r\n\t\t\t\t\thasFetchedRole.current = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// MEJORADO: Intentar OptimizedRoleService primero, fallback a RoleService\r\n\t\t\tlet roleData = null;\r\n\t\t\ttry {\r\n\t\t\t\troleData = await OptimizedRoleService.checkUserRole(true, false);\r\n\t\t\t\tconsole.log(\"✅ Usando OptimizedRoleService en fetchRoleInfo\");\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"⚠️ OptimizedRoleService no disponible, usando RoleService:\",\r\n\t\t\t\t\terror\r\n\t\t\t\t);\r\n\t\t\t\troleData = await RoleService.checkUserRole(true);\r\n\t\t\t}\r\n\r\n\t\t\tif (roleData && roleData.success) {\r\n\t\t\t\tconst newRoleInfo = {\r\n\t\t\t\t\trole: roleData.data.role,\r\n\t\t\t\t\tisAdmin: roleData.data.is_admin,\r\n\t\t\t\t\tisSeller: roleData.data.is_seller,\r\n\t\t\t\t\tsellerInfo: roleData.data.seller_info || null,\r\n\t\t\t\t\tadminInfo: roleData.data.admin_info || null,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconsole.log(\"Información de rol obtenida:\", newRoleInfo);\r\n\t\t\t\tsetRoleInfo(newRoleInfo);\r\n\r\n\t\t\t\t// Guardar en cache DESPUÉS de establecer el estado\r\n\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\tCACHE_KEYS.ROLE_INFO,\r\n\t\t\t\t\tnewRoleInfo,\r\n\t\t\t\t\tCACHE_TIMES.ROLE_INFO\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Actualizar el rol en usuario si es necesario (EXACTAMENTE COMO EN TU ORIGINAL)\r\n\t\t\t\tif (userRef.current && !userRef.current.role) {\r\n\t\t\t\t\tsetUser((prevUser) => {\r\n\t\t\t\t\t\tif (!prevUser) return null;\r\n\t\t\t\t\t\treturn {...prevUser, role: roleData.data.role};\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Marcar que ya obtuvimos el rol (EXACTAMENTE COMO EN TU ORIGINAL)\r\n\t\t\t\thasFetchedRole.current = true;\r\n\r\n\t\t\t\t// SOLO redirigir automáticamente si estamos en inicialización (EXACTAMENTE COMO EN TU ORIGINAL)\r\n\t\t\t\tif (isInitializationComplete.current) {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\thandleInitialRedirection();\r\n\t\t\t\t\t}, 300);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al obtener información de rol:\", error);\r\n\t\t} finally {\r\n\t\t\tsetIsLoadingRole(false);\r\n\t\t}\r\n\t}, [isLoadingRole, handleInitialRedirection]);\r\n\r\n\t// Método público para actualizar información de rol (MEJORADO PERO MANTENIENDO LÓGICA ORIGINAL)\r\n\tconst refreshRoleInfo = useCallback(async () => {\r\n\t\t// Limpiar cache antes del refresh para forzar consulta fresca\r\n\t\tCacheService.removeItem(CACHE_KEYS.ROLE_INFO);\r\n\t\thasFetchedRole.current = false;\r\n\r\n\t\tsetIsLoadingRole(true);\r\n\t\ttry {\r\n\t\t\tconsole.log(\"Refrescando información de rol del usuario...\");\r\n\r\n\t\t\t// MEJORADO: Intentar OptimizedRoleService primero, fallback a RoleService\r\n\t\t\tlet roleData = null;\r\n\t\t\ttry {\r\n\t\t\t\troleData = await OptimizedRoleService.checkUserRole(true, false);\r\n\t\t\t\tconsole.log(\"✅ Usando OptimizedRoleService en refreshRoleInfo\");\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"⚠️ OptimizedRoleService no disponible, usando RoleService:\",\r\n\t\t\t\t\terror\r\n\t\t\t\t);\r\n\t\t\t\troleData = await RoleService.checkUserRole(true);\r\n\t\t\t}\r\n\r\n\t\t\tif (roleData && roleData.success) {\r\n\t\t\t\tconst newRoleInfo = {\r\n\t\t\t\t\trole: roleData.data.role,\r\n\t\t\t\t\tisAdmin: roleData.data.is_admin,\r\n\t\t\t\t\tisSeller: roleData.data.is_seller,\r\n\t\t\t\t\tsellerInfo: roleData.data.seller_info || null,\r\n\t\t\t\t\tadminInfo: roleData.data.admin_info || null,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconsole.log(\"Información de rol refrescada:\", newRoleInfo);\r\n\t\t\t\tsetRoleInfo(newRoleInfo);\r\n\r\n\t\t\t\t// Guardar en cache\r\n\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\tCACHE_KEYS.ROLE_INFO,\r\n\t\t\t\t\tnewRoleInfo,\r\n\t\t\t\t\tCACHE_TIMES.ROLE_INFO\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Actualizar el rol en usuario si es necesario (EXACTAMENTE COMO EN TU ORIGINAL)\r\n\t\t\t\tif (userRef.current && !userRef.current.role) {\r\n\t\t\t\t\tsetUser((prevUser) => {\r\n\t\t\t\t\t\tif (!prevUser) return null;\r\n\t\t\t\t\t\treturn {...prevUser, role: roleData.data.role};\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Marcar que ya obtuvimos el rol (EXACTAMENTE COMO EN TU ORIGINAL)\r\n\t\t\t\thasFetchedRole.current = true;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al refrescar información de rol:\", error);\r\n\t\t} finally {\r\n\t\t\tsetIsLoadingRole(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// Funciones optimizadas de verificación de roles\r\n\tconst isAdmin = useCallback(\r\n\t\tasync (critical: boolean = false): Promise<boolean> => {\r\n\t\t\ttry {\r\n\t\t\t\tif (critical) {\r\n\t\t\t\t\treturn await OptimizedRoleService.isAdminCritical();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn await OptimizedRoleService.isAdmin();\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.warn(\"⚠️ OptimizedRoleService falló, usando roleInfo:\", error);\r\n\t\t\t\treturn roleInfo.isAdmin;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[roleInfo.isAdmin]\r\n\t);\r\n\r\n\tconst isSeller = useCallback(\r\n\t\tasync (critical: boolean = false): Promise<boolean> => {\r\n\t\t\ttry {\r\n\t\t\t\tif (critical) {\r\n\t\t\t\t\treturn await OptimizedRoleService.isSellerCritical();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn await OptimizedRoleService.isSeller();\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.warn(\"⚠️ OptimizedRoleService falló, usando roleInfo:\", error);\r\n\t\t\t\treturn roleInfo.isSeller;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[roleInfo.isSeller]\r\n\t);\r\n\r\n\t// Inicialización OPTIMIZADA - solo UNA VEZ\r\n\tuseEffect(() => {\r\n\t\tif (isInitializationComplete.current) return;\r\n\r\n\t\tconst initializeAuth = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst token = storageService.getItem(appConfig.storage.authTokenKey);\r\n\r\n\t\t\t\tif (token) {\r\n\t\t\t\t\tconsole.log(\"🔑 Token encontrado, inicializando autenticación...\");\r\n\t\t\t\t\tsetIsAuthenticated(true);\r\n\t\t\t\t\tisAuthenticatedRef.current = true;\r\n\r\n\t\t\t\t\t// Verificar cache de usuario primero\r\n\t\t\t\t\tlet userData = CacheService.getItem(CACHE_KEYS.USER_DATA);\r\n\t\t\t\t\tif (!userData) {\r\n\t\t\t\t\t\tuserData = storageService.getItem(appConfig.storage.userKey);\r\n\t\t\t\t\t\tif (userData) {\r\n\t\t\t\t\t\t\t// Guardar en cache para próximas consultas\r\n\t\t\t\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\t\t\t\tCACHE_KEYS.USER_DATA,\r\n\t\t\t\t\t\t\t\tuserData,\r\n\t\t\t\t\t\t\t\tCACHE_TIMES.USER_DATA\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (userData) {\r\n\t\t\t\t\t\tsetUser(userData);\r\n\t\t\t\t\t\tuserRef.current = userData;\r\n\t\t\t\t\t\tconsole.log(\"👤 Datos de usuario cargados (cache/localStorage)\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Cargar información de rol de manera optimizada (LLAMADA SIN PARÁMETROS)\r\n\t\t\t\t\tawait fetchRoleInfo();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"❌ No hay token, usuario no autenticado\");\r\n\t\t\t\t\tsetIsAuthenticated(false);\r\n\t\t\t\t\tsetUser(null);\r\n\t\t\t\t\t// Limpiar cache\r\n\t\t\t\t\tCacheService.removeItem(CACHE_KEYS.ROLE_INFO);\r\n\t\t\t\t\tCacheService.removeItem(CACHE_KEYS.USER_DATA);\r\n\t\t\t\t\tOptimizedRoleService.clearAllCache();\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"❌ Error durante la inicialización:\", error);\r\n\t\t\t\tsetIsAuthenticated(false);\r\n\t\t\t\tsetUser(null);\r\n\t\t\t} finally {\r\n\t\t\t\tsetInitialized(true);\r\n\t\t\t\tisInitializationComplete.current = true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tinitializeAuth();\r\n\t}, [fetchRoleInfo]);\r\n\r\n\t// Sincronizar datos de usuario con localStorage Y cache\r\n\tuseEffect(() => {\r\n\t\tif (!initialized) return;\r\n\r\n\t\tif (user) {\r\n\t\t\tconst storedUser = storageService.getItem(appConfig.storage.userKey);\r\n\t\t\tconst currentUserStr = JSON.stringify(user);\r\n\t\t\tconst storedUserStr = storedUser ? JSON.stringify(storedUser) : \"\";\r\n\r\n\t\t\tif (currentUserStr !== storedUserStr) {\r\n\t\t\t\tstorageService.setItem(appConfig.storage.userKey, user);\r\n\t\t\t\tCacheService.setItem(CACHE_KEYS.USER_DATA, user, CACHE_TIMES.USER_DATA);\r\n\t\t\t}\r\n\t\t} else if (initialized) {\r\n\t\t\tstorageService.removeItem(appConfig.storage.userKey);\r\n\t\t\tCacheService.removeItem(CACHE_KEYS.USER_DATA);\r\n\t\t}\r\n\t}, [user, initialized]);\r\n\r\n\t// Implementación OPTIMIZADA de logout\r\n\tconst logout = useCallback(async (): Promise<void> => {\r\n\t\ttry {\r\n\t\t\tif (isAuthenticatedRef.current) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait axiosInstance.post(API_ENDPOINTS.AUTH.LOGOUT);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(\"❌ Error al hacer logout en el servidor:\", error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Limpiar datos locales específicos\r\n\t\t\tstorageService.removeItem(appConfig.storage.authTokenKey);\r\n\t\t\tstorageService.removeItem(appConfig.storage.userKey);\r\n\t\t\tstorageService.removeItem(appConfig.storage.refreshTokenKey);\r\n\t\t\tstorageService.removeItem(appConfig.storage.cartKey);\r\n\r\n\t\t\t// Limpiar cache\r\n\t\t\tCacheService.removeItem(CACHE_KEYS.ROLE_INFO);\r\n\t\t\tCacheService.removeItem(CACHE_KEYS.USER_DATA);\r\n\t\t\tOptimizedRoleService.clearAllCache();\r\n\r\n\t\t\t// Limpieza inteligente basada en análisis de datos reales\r\n\t\t\tconsole.log(\"🧹 Limpiando datos específicos de sesión...\");\r\n\t\t\t\r\n\t\t\t// PRESERVAR: Configuraciones de usuario y sistema\r\n\t\t\tconst preserveInLocalStorage = [\r\n\t\t\t\t'user_theme', // Tema del usuario - UX crítica\r\n\t\t\t];\r\n\t\t\t\r\n\t\t\t// PRESERVAR: Configuraciones técnicas que mejoran rendimiento\r\n\t\t\tconst preserveInSessionStorage = [\r\n\t\t\t\t'bcommerce_shipping_config', // Config de envío - evita llamadas API\r\n\t\t\t\t'bcommerce_volume_discount_config', // Config de descuentos - evita llamadas API\r\n\t\t\t];\r\n\t\t\t\r\n\t\t\t// ELIMINAR de localStorage: Datos específicos del usuario\r\n\t\t\tconst authRelatedKeys = [\r\n\t\t\t\t'user_data', // Datos del usuario - SEGURIDAD\r\n\t\t\t\t'cache_user_role_data', // Roles del usuario - SEGURIDAD\r\n\t\t\t];\r\n\t\t\t\r\n\t\t\t// ELIMINAR: Tokens y datos sensibles (pattern matching)\r\n\t\t\tconst sensitivePatterns = [\r\n\t\t\t\t/^eyJ/, // JWT tokens (empiezan con eyJ)\r\n\t\t\t\t/^cache_header_counters/, // Contadores específicos del usuario\r\n\t\t\t\t/^cache_products_/, // Cache de productos - puede estar desactualizado\r\n\t\t\t];\r\n\t\t\t\r\n\t\t\t// Limpiar localStorage\r\n\t\t\tauthRelatedKeys.forEach(key => localStorage.removeItem(key));\r\n\t\t\t\r\n\t\t\t// Limpiar por patrones\r\n\t\t\tconst localStorageKeys = Object.keys(localStorage);\r\n\t\t\tlocalStorageKeys.forEach(key => {\r\n\t\t\t\tconst shouldRemove = sensitivePatterns.some(pattern => pattern.test(key));\r\n\t\t\t\tif (shouldRemove && !preserveInLocalStorage.includes(key)) {\r\n\t\t\t\t\tlocalStorage.removeItem(key);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Limpiar sessionStorage selectivamente\r\n\t\t\tconst sessionKeys = Object.keys(sessionStorage);\r\n\t\t\tsessionKeys.forEach(key => {\r\n\t\t\t\t// Solo mantener configs técnicas y flags de prefetch\r\n\t\t\t\tif (!preserveInSessionStorage.includes(key) && \r\n\t\t\t\t\t!key.includes('_executed') && // prefetch flags\r\n\t\t\t\t\t!key.includes('autoprefetch')) {\r\n\t\t\t\t\tsessionStorage.removeItem(key);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconsole.log(\"✅ Limpieza inteligente completada - Preservadas configs técnicas\");\r\n\r\n\t\t\t// Reiniciar flags\r\n\t\t\thasFetchedRole.current = false;\r\n\t\t\tisAuthenticatedRef.current = false;\r\n\t\t\tuserRef.current = null;\r\n\r\n\t\t\t// Actualizar estados\r\n\t\t\tsetIsAuthenticated(false);\r\n\t\t\tsetUser(null);\r\n\t\t\tsetRoleInfo({\r\n\t\t\t\trole: null,\r\n\t\t\t\tisAdmin: false,\r\n\t\t\t\tisSeller: false,\r\n\t\t\t\tsellerInfo: null,\r\n\t\t\t\tadminInfo: null,\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(\"✅ Logout completado exitosamente\");\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error durante el proceso de logout:\", error);\r\n\t\t\t// Asegurar limpieza local incluso en error\r\n\t\t\tstorageService.removeItem(appConfig.storage.authTokenKey);\r\n\t\t\tstorageService.removeItem(appConfig.storage.userKey);\r\n\t\t\tCacheService.removeItem(CACHE_KEYS.ROLE_INFO);\r\n\t\t\tCacheService.removeItem(CACHE_KEYS.USER_DATA);\r\n\t\t\tsetIsAuthenticated(false);\r\n\t\t\tsetUser(null);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// Memorizar el contexto para evitar renderizaciones innecesarias\r\n\tconst contextValue = useMemo(\r\n\t\t() => ({\r\n\t\t\tuser,\r\n\t\t\tsetUser,\r\n\t\t\tisAuthenticated,\r\n\t\t\tsetIsAuthenticated,\r\n\t\t\tlogout,\r\n\t\t\troleInfo,\r\n\t\t\tisLoadingRole,\r\n\t\t\trefreshRoleInfo,\r\n\t\t\tisInitialized: initialized,\r\n\t\t\tgetDefaultRouteForRole,\r\n\t\t\tisAdmin,\r\n\t\t\tisSeller,\r\n\t\t\tupdateUser,\r\n\t\t}),\r\n\t\t[\r\n\t\t\tuser,\r\n\t\t\tisAuthenticated,\r\n\t\t\tlogout,\r\n\t\t\troleInfo,\r\n\t\t\tisLoadingRole,\r\n\t\t\trefreshRoleInfo,\r\n\t\t\tinitialized,\r\n\t\t\tgetDefaultRouteForRole,\r\n\t\t\tisAdmin,\r\n\t\t\tisSeller,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\r\n\t);\r\n};\r\n\r\n// Hook de utilidad para consumir el contexto\r\nexport const useAuth = () => {\r\n\tconst context = useContext(AuthContext);\r\n\tif (!context) {\r\n\t\tthrow new Error(\"useAuth debe usarse dentro de un AuthProvider\");\r\n\t}\r\n\treturn context;\r\n};\r\n\r\nexport default AuthProvider;\r\n","// src/core/services/ProductService.ts\r\n\r\nimport ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport { API_ENDPOINTS } from \"../../constants/apiEndpoints\";\r\nimport type {\r\n\tProduct,\r\n\tProductDetail,\r\n\tProductCreationData,\r\n\tProductListResponse,\r\n} from \"../domain/entities/Product\";\r\nimport type { ExtendedProductFilterParams } from \"../../presentation/types/ProductFilterParams\";\r\nimport type { ServiceResponse } from \"../../presentation/types/admin/ProductFilterParams\";\r\n\r\nexport class ProductService {\r\n\t/**\r\n\t * Obtiene productos con filtros opcionales\r\n\t */\r\n\tasync getProducts(\r\n\t\tfilterParams?: ExtendedProductFilterParams\r\n\t): Promise<ProductListResponse | null> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<ProductListResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.LIST,\r\n\t\t\t\tfilterParams\r\n\t\t\t);\r\n\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.getProducts:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Elimina un producto\r\n\t */\r\n\tasync deleteProduct(id: number): Promise<boolean> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.delete<ServiceResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.DELETE(id)\r\n\t\t\t);\r\n\t\t\treturn response?.success === true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(`Error al eliminar producto ${id}:`, error);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Crea un nuevo producto\r\n\t */\r\n\tasync createProduct(data: ProductCreationData): Promise<Product> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"📤 ProductService: Creando producto:\", data);\r\n\r\n\t\t\tconst formData = new FormData();\r\n\r\n\t\t\t// Campos básicos\r\n\t\t\tformData.append(\"name\", data.name);\r\n\t\t\tformData.append(\"description\", data.description);\r\n\t\t\tformData.append(\"price\", String(data.price));\r\n\t\t\tformData.append(\"stock\", String(data.stock));\r\n\t\t\tformData.append(\"category_id\", String(data.category_id));\r\n\r\n\t\t\t// Campos opcionales\r\n\t\t\tif (data.shortDescription)\r\n\t\t\t\tformData.append(\"short_description\", data.shortDescription);\r\n\t\t\tif (data.weight !== undefined)\r\n\t\t\t\tformData.append(\"weight\", String(data.weight));\r\n\t\t\tif (data.width !== undefined)\r\n\t\t\t\tformData.append(\"width\", String(data.width));\r\n\t\t\tif (data.height !== undefined)\r\n\t\t\t\tformData.append(\"height\", String(data.height));\r\n\t\t\tif (data.depth !== undefined)\r\n\t\t\t\tformData.append(\"depth\", String(data.depth));\r\n\t\t\tif (data.dimensions) formData.append(\"dimensions\", data.dimensions);\r\n\t\t\tif (data.sku) formData.append(\"sku\", data.sku);\r\n\t\t\tif (data.status) formData.append(\"status\", data.status);\r\n\t\t\tif (data.featured !== undefined)\r\n\t\t\t\tformData.append(\"featured\", String(data.featured));\r\n\t\t\tif (data.published !== undefined)\r\n\t\t\t\tformData.append(\"published\", String(data.published));\r\n\t\t\tif (data.discount_percentage !== undefined) {\r\n\t\t\t\tformData.append(\r\n\t\t\t\t\t\"discount_percentage\",\r\n\t\t\t\t\tString(data.discount_percentage)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// Arrays\r\n\t\t\tif (data.colors) {\r\n\t\t\t\tconst colorsValue =\r\n\t\t\t\t\ttypeof data.colors === \"string\"\r\n\t\t\t\t\t\t? data.colors\r\n\t\t\t\t\t\t: JSON.stringify(data.colors);\r\n\t\t\t\tformData.append(\"colors\", colorsValue);\r\n\t\t\t}\r\n\t\t\tif (data.sizes) {\r\n\t\t\t\tconst sizesValue =\r\n\t\t\t\t\ttypeof data.sizes === \"string\"\r\n\t\t\t\t\t\t? data.sizes\r\n\t\t\t\t\t\t: JSON.stringify(data.sizes);\r\n\t\t\t\tformData.append(\"sizes\", sizesValue);\r\n\t\t\t}\r\n\t\t\tif (data.tags) {\r\n\t\t\t\tconst tagsValue =\r\n\t\t\t\t\ttypeof data.tags === \"string\" ? data.tags : JSON.stringify(data.tags);\r\n\t\t\t\tformData.append(\"tags\", tagsValue);\r\n\t\t\t}\r\n\r\n\t\t\t// Atributos\r\n\t\t\tif (data.attributes && Object.keys(data.attributes).length > 0) {\r\n\t\t\t\tformData.append(\"attributes\", JSON.stringify(data.attributes));\r\n\t\t\t}\r\n\r\n\t\t\t// Imágenes\r\n\t\t\tif (data.images && data.images.length > 0) {\r\n\t\t\t\tdata.images.forEach((file, index) => {\r\n\t\t\t\t\tformData.append(`images[${index}]`, file);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst response = await ApiClient.uploadFile<Product>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.CREATE,\r\n\t\t\t\tformData\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"✅ ProductService: Producto creado:\", response);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.createProduct:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene un producto por ID\r\n\t */\r\n\tasync getProductById(id: number): Promise<ProductDetail | null> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<{data: ProductDetail}>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.DETAILS(id)\r\n\t\t\t);\r\n\t\t\treturn response?.data || null;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.getProductById:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene un producto por slug\r\n\t */\r\n\tasync getProductBySlug(slug: string): Promise<ProductDetail | null> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<{data: ProductDetail}>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.DETAILS_BY_SLUG(slug)\r\n\t\t\t);\r\n\t\t\treturn response?.data || null;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.getProductBySlug:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene productos destacados\r\n\t */\r\n\tasync getFeaturedProducts(limit: number = 8): Promise<Product[]> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<ProductListResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.FEATURED,\r\n\t\t\t\t{limit}\r\n\t\t\t);\r\n\t\t\treturn response?.data || [];\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.getFeaturedProducts:\", error);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene productos relacionados\r\n\t */\r\n\tasync getRelatedProducts(\r\n\t\tproductId: number,\r\n\t\tlimit: number = 4\r\n\t): Promise<Product[]> {\r\n\t\ttry {\r\n\t\t\t// Obtener productos de la misma categoría o similares\r\n\t\t\tconst response = await ApiClient.get<ProductListResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.LIST,\r\n\t\t\t\t{limit, excludeId: productId}\r\n\t\t\t);\r\n\t\t\treturn response?.data || [];\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.getRelatedProducts:\", error);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Busca productos por término\r\n\t */\r\n\tasync searchProducts(\r\n\t\tterm: string,\r\n\t\tfilterParams?: ExtendedProductFilterParams\r\n\t): Promise<ProductListResponse | null> {\r\n\t\ttry {\r\n\t\t\t// Usar el endpoint de búsqueda con el término\r\n\t\t\tconst response = await ApiClient.get<ProductListResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.SEARCH(term),\r\n\t\t\t\tfilterParams\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.searchProducts:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registra visualización de producto\r\n\t */\r\n\tasync trackProductView(productId: number): Promise<void> {\r\n\t\ttry {\r\n\t\t\tawait ApiClient.post(API_ENDPOINTS.PRODUCTS.INCREMENT_VIEW(productId), {\r\n\t\t\t\ttimestamp: new Date().toISOString(),\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.trackProductView:\", error);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene productos por categoría\r\n\t */\r\n\tasync getProductsByCategory(\r\n\t\tcategoryId: number,\r\n\t\tlimit: number = 12,\r\n\t\toffset: number = 0\r\n\t): Promise<ProductListResponse | null> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<ProductListResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.BY_CATEGORY(categoryId),\r\n\t\t\t\t{limit, offset}\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.getProductsByCategory:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene productos destacados aleatorios\r\n\t */\r\n\tstatic async getFeaturedRandom(limit: number = 6): Promise<ProductListResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<ProductListResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.FEATURED_RANDOM,\r\n\t\t\t\t{limit}\r\n\t\t\t);\r\n\t\t\treturn response || { data: [], meta: { total: 0, count: 0 } };\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.getFeaturedRandom:\", error);\r\n\t\t\treturn { data: [], meta: {\r\n\t\t\t\ttotal: 0, count: 0,\r\n\t\t\t\tlimit: 0,\r\n\t\t\t\toffset: 0\r\n\t\t\t} };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene productos trending y ofertas\r\n\t */\r\n\tstatic async getTrendingAndOffers(limit: number = 12): Promise<ProductListResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<ProductListResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.TRENDING_OFFERS,\r\n\t\t\t\t{limit}\r\n\t\t\t);\r\n\t\t\treturn response || { data: [], meta: { total: 0, count: 0 } };\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.getTrendingAndOffers:\", error);\r\n\t\t\treturn { data: [], meta: {\r\n\t\t\t\ttotal: 0, count: 0,\r\n\t\t\t\tlimit: 0,\r\n\t\t\t\toffset: 0\r\n\t\t\t} };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene productos personalizados para el usuario\r\n\t */\r\n\tstatic async getPersonalizedProducts(limit: number = 10): Promise<ProductListResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<ProductListResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.PERSONALIZED,\r\n\t\t\t\t{limit}\r\n\t\t\t);\r\n\t\t\treturn response || { data: [], meta: { total: 0, count: 0 } };\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.getPersonalizedProducts:\", error);\r\n\t\t\treturn { data: [], meta: {\r\n\t\t\t\ttotal: 0, count: 0,\r\n\t\t\t\tlimit: 0,\r\n\t\t\t\toffset: 0\r\n\t\t\t} };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene productos con descuento\r\n\t */\r\n\tstatic async getDiscountedProducts(limit: number = 12): Promise<ProductListResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<ProductListResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.DISCOUNTED,\r\n\t\t\t\t{limit}\r\n\t\t\t);\r\n\t\t\treturn response || { data: [], meta: { total: 0, count: 0 } };\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.getDiscountedProducts:\", error);\r\n\t\t\treturn { data: [], meta: {\r\n\t\t\t\ttotal: 0, count: 0,\r\n\t\t\t\tlimit: 0,\r\n\t\t\t\toffset: 0\r\n\t\t\t} };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene productos populares\r\n\t */\r\n\tstatic async getPopularProducts(limit: number = 12): Promise<ProductListResponse> {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<ProductListResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.PRODUCTS.POPULAR,\r\n\t\t\t\t{limit}\r\n\t\t\t);\r\n\t\t\treturn response || { data: [], meta: { total: 0, count: 0 } };\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en ProductService.getPopularProducts:\", error);\r\n\t\t\treturn { data: [], meta: {\r\n\t\t\t\ttotal: 0, count: 0,\r\n\t\t\t\tlimit: 0,\r\n\t\t\t\toffset: 0\r\n\t\t\t} };\r\n\t\t}\r\n\t}\r\n}","import React from \"react\";\r\nimport {Star} from \"lucide-react\";\r\n\r\ninterface RatingStarsProps {\r\n\trating?: number | null;\r\n\tmaxRating?: number;\r\n\tsize?: number;\r\n\tshowValue?: boolean;\r\n\treviews?: number | null;\r\n}\r\n\r\nconst RatingStars: React.FC<RatingStarsProps> = ({\r\n\trating,\r\n\tmaxRating = 5,\r\n\tsize = 16,\r\n\tshowValue = false,\r\n\treviews,\r\n}) => {\r\n\tconst normalizedRating =\r\n\t\trating !== undefined && rating !== null && rating > 0\r\n\t\t\t? Math.max(0, Math.min(rating, maxRating))\r\n\t\t\t: 0; // ✅ CORREGIDO: 0 en lugar de 4.5 cuando no hay rating\r\n\r\n\treturn (\r\n\t\t<div className=\"flex items-center\">\r\n\t\t\t<div className=\"flex relative gap-[2px]\">\r\n\t\t\t\t{Array.from({length: maxRating}).map((_, index) => {\r\n\t\t\t\t\tconst starFill =\r\n\t\t\t\t\t\tnormalizedRating >= index + 1\r\n\t\t\t\t\t\t\t? 100\r\n\t\t\t\t\t\t\t: normalizedRating > index\r\n\t\t\t\t\t\t\t\t? (normalizedRating - index) * 100\r\n\t\t\t\t\t\t\t\t: 0;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tclassName=\"relative\"\r\n\t\t\t\t\t\t\tstyle={{width: size, height: size}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{/* Empty Star */}\r\n\t\t\t\t\t\t\t<Star\r\n\t\t\t\t\t\t\t\tsize={size}\r\n\t\t\t\t\t\t\t\tclassName=\"text-gray-300 absolute top-0 left-0\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{/* Filled Star with dynamic width */}\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"overflow-hidden absolute top-0 left-0 text-yellow-400\"\r\n\t\t\t\t\t\t\t\tstyle={{width: `${starFill}%`}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Star size={size} className=\"fill-yellow-400\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\r\n\t\t\t{showValue && normalizedRating > 0 && (\r\n\t\t\t\t<span className=\"ml-1 text-xs text-gray-500\">\r\n\t\t\t\t\t{normalizedRating.toFixed(1)}\r\n\t\t\t\t\t{reviews !== undefined && reviews !== null && reviews > 0 && ` (${reviews})`}\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RatingStars;\r\n","// src/core/services/CategoryService.ts - ACTUALIZADO\r\n\r\nimport ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\nimport type {\r\n\tCategory,\r\n\tCategoryListResponse,\r\n\tCategoryFilterParams,\r\n} from \"../domain/entities/Category\";\r\n\r\n/**\r\n * Servicio de categorías - Para usuarios normales y operaciones de solo lectura\r\n * NO incluye operaciones de creación, actualización o eliminación\r\n * Esas operaciones están en AdminCategoryService\r\n */\r\nexport class CategoryService {\r\n\t/**\r\n\t * Obtiene categorías (solo lectura)\r\n\t */\r\n\tasync getCategories(\r\n\t\tfilterParams?: CategoryFilterParams\r\n\t): Promise<CategoryListResponse | null> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"📤 CategoryService: Obteniendo categorías:\", filterParams);\r\n\r\n\t\t\tconst response = await ApiClient.get<CategoryListResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.CATEGORIES.LIST,\r\n\t\t\t\tfilterParams\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"📥 CategoryService: Respuesta del servidor:\", response);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en CategoryService.getCategories:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene una categoría por ID (solo lectura)\r\n\t */\r\n\tasync getCategoryById(id: number): Promise<Category | null> {\r\n\t\ttry {\r\n\t\t\tconsole.log(`📤 CategoryService: Obteniendo categoría ${id}`);\r\n\r\n\t\t\tconst response = await ApiClient.get<Category>(\r\n\t\t\t\tAPI_ENDPOINTS.CATEGORIES.DETAILS(id)\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"✅ CategoryService: Categoría obtenida:\", response);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en CategoryService.getCategoryById:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene una categoría por slug (solo lectura)\r\n\t */\r\n\tasync getCategoryBySlug(slug: string): Promise<Category | null> {\r\n\t\ttry {\r\n\t\t\tconsole.log(`📤 CategoryService: Obteniendo categoría por slug ${slug}`);\r\n\r\n\t\t\tconst response = await ApiClient.get<Category>(\r\n\t\t\t\tAPI_ENDPOINTS.CATEGORIES.SLUG(slug)\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"✅ CategoryService: Categoría obtenida por slug:\", response);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en CategoryService.getCategoryBySlug:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene categorías principales (solo lectura)\r\n\t */\r\n\tasync getMainCategories(withCounts: boolean = true): Promise<Category[]> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"📤 CategoryService: Obteniendo categorías principales\");\r\n\r\n\t\t\tconst response = await ApiClient.get<{data: Category[]}>(\r\n\t\t\t\tAPI_ENDPOINTS.CATEGORIES.MAIN,\r\n\t\t\t\t{with_counts: withCounts}\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"✅ CategoryService: Categorías principales obtenidas:\",\r\n\t\t\t\tresponse\r\n\t\t\t);\r\n\t\t\treturn response?.data || [];\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en CategoryService.getMainCategories:\", error);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene categorías destacadas (solo lectura)\r\n\t */\r\n\tasync getFeaturedCategories(limit: number = 8): Promise<Category[]> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"📤 CategoryService: Obteniendo categorías destacadas\");\r\n\r\n\t\t\tconst response = await ApiClient.get<{data: Category[]}>(\r\n\t\t\t\tAPI_ENDPOINTS.CATEGORIES.FEATURED, {limit}\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"✅ CategoryService: Categorías destacadas obtenidas:\",\r\n\t\t\t\tresponse\r\n\t\t\t);\r\n\t\t\treturn response?.data || [];\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t\"❌ Error en CategoryService.getFeaturedCategories:\",\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene subcategorías de una categoría (solo lectura)\r\n\t */\r\n\tasync getSubcategories(parentId: number): Promise<Category[]> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`📤 CategoryService: Obteniendo subcategorías de ${parentId}`\r\n\t\t\t);\r\n\r\n\t\t\tconst response = await ApiClient.get<{data: Category[]}>(\r\n\t\t\t\tAPI_ENDPOINTS.CATEGORIES.SUBCATEGORIES(parentId)\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"✅ CategoryService: Subcategorías obtenidas:\", response);\r\n\t\t\treturn response?.data || [];\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en CategoryService.getSubcategories:\", error);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene productos de una categoría (solo lectura)\r\n\t */\r\n\tasync getCategoryProducts(\r\n\t\tcategoryId: number,\r\n\t\tfilterParams?: any\r\n\t): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`📤 CategoryService: Obteniendo productos de categoría ${categoryId}`\r\n\t\t\t);\r\n\r\n\t\t\tconst response = await ApiClient.get(\r\n\t\t\t\tAPI_ENDPOINTS.CATEGORIES.PRODUCTS(categoryId),\r\n\t\t\t\tfilterParams\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"✅ CategoryService: Productos de categoría obtenidos:\",\r\n\t\t\t\tresponse\r\n\t\t\t);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"❌ Error en CategoryService.getCategoryProducts:\", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default CategoryService;\r\n","// src/presentation/hooks/useCategories.ts - CORREGIDO\r\nimport {useState, useCallback, useEffect} from \"react\";\r\nimport {useCacheInvalidation} from \"./useReactiveCache\";\r\nimport CacheService from \"../../infrastructure/services/CacheService\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {CategoryService} from \"../../core/services/CategoryService\";\r\nimport type {\r\n\tCategory,\r\n\tCategoryListResponse,\r\n} from \"../../core/domain/entities/Category\";\r\n\r\n// Instanciar el servicio de categorías\r\nconst categoryService = new CategoryService();\r\n\r\n/**\r\n * Hook para gestionar operaciones con categorías\r\n */\r\nexport const useCategories = () => {\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\tconst [categories, setCategories] = useState<Category[]>([]);\r\n\tconst [mainCategories, setMainCategories] = useState<Category[]>([]);\r\n\tconst [featuredCategories, setFeaturedCategories] = useState<Category[]>([]);\r\n\tconst [categoryDetail, setCategoryDetail] = useState<Category | null>(null);\r\n\tconst [isInitialized, setIsInitialized] = useState<boolean>(false);\r\n\r\n\t// Hook para invalidación de cache\r\n\tconst {invalidate} = useCacheInvalidation();\r\n\r\n\t// Adaptador para normalizar los datos de categorías\r\n\tconst adaptCategory = useCallback((apiCategory: any): Category => {\r\n\t\t// Verificar que sea un objeto para prevenir errores\r\n\t\tif (!apiCategory || typeof apiCategory !== \"object\") {\r\n\t\t\tconsole.error(\"Categoría inválida para adaptar:\", apiCategory);\r\n\t\t\treturn {} as Category;\r\n\t\t}\r\n\r\n\t\t// Mapeo de propiedades, respetando snake_case del backend\r\n\t\treturn {\r\n\t\t\tid: apiCategory.id,\r\n\t\t\tname: apiCategory.name || \"\",\r\n\t\t\tslug: apiCategory.slug || \"\",\r\n\t\t\tdescription: apiCategory.description || \"\",\r\n\t\t\tparent_id: apiCategory.parent_id,\r\n\t\t\ticon: apiCategory.icon,\r\n\t\t\timage: apiCategory.image,\r\n\t\t\torder: apiCategory.order,\r\n\t\t\tis_active: Boolean(apiCategory.is_active ?? true),\r\n\t\t\tfeatured: Boolean(apiCategory.featured ?? false),\r\n\t\t\tcreated_at: apiCategory.created_at,\r\n\t\t\tupdated_at: apiCategory.updated_at,\r\n\t\t\t// API response specific fields\r\n\t\t\tsubcategories: Array.isArray(apiCategory.subcategories)\r\n\t\t\t\t? apiCategory.subcategories.map((sub: any) => adaptCategory(sub))\r\n\t\t\t\t: undefined,\r\n\t\t\tproduct_count: apiCategory.product_count || 0,\r\n\t\t\t// full_path: apiCategory.full_path, // Commented out as not in Category type\r\n\t\t\t// has_children: Boolean(apiCategory.has_children), // Commented out as not in Category type\r\n\t\t\t// url: apiCategory.url, // Commented out as not in Category type\r\n\t\t\tparent: apiCategory.parent\r\n\t\t\t\t? adaptCategory(apiCategory.parent)\r\n\t\t\t\t: undefined,\r\n\t\t\t// image_url: apiCategory.image_url, // Commented out as not in Category type\r\n\t\t\t// icon_url: apiCategory.icon_url, // Commented out as not in Category type\r\n\t\t};\r\n\t}, []);\r\n\r\n\t// Inicialización - cargar categorías si hay datos en caché\r\n\tuseEffect(() => {\r\n\t\tif (!isInitialized) {\r\n\t\t\t// Verificar si hay categorías en caché\r\n\t\t\tconst cachedCategories = CacheService.getItem(\"categories_all\");\r\n\t\t\tif (cachedCategories && Array.isArray(cachedCategories.data)) {\r\n\t\t\t\tsetCategories(cachedCategories.data);\r\n\t\t\t}\r\n\r\n\t\t\t// Verificar si hay categorías principales en caché\r\n\t\t\tconst cachedMainCategories = CacheService.getItem(\"categories_main\");\r\n\t\t\tif (cachedMainCategories && Array.isArray(cachedMainCategories)) {\r\n\t\t\t\tsetMainCategories(cachedMainCategories);\r\n\t\t\t}\r\n\r\n\t\t\t// Verificar si hay categorías destacadas en caché\r\n\t\t\tconst cachedFeaturedCategories = CacheService.getItem(\r\n\t\t\t\t\"categories_featured\"\r\n\t\t\t);\r\n\t\t\tif (cachedFeaturedCategories && Array.isArray(cachedFeaturedCategories)) {\r\n\t\t\t\tsetFeaturedCategories(cachedFeaturedCategories);\r\n\t\t\t}\r\n\r\n\t\t\tsetIsInitialized(true);\r\n\t\t}\r\n\t}, [isInitialized]);\r\n\r\n\t/**\r\n\t * Obtener todas las categorías\r\n\t */\r\n\tconst fetchCategories = useCallback(\r\n\t\tasync (\r\n\t\t\twithCounts: boolean = true,\r\n\t\t\tforceRefresh: boolean = false\r\n\t\t): Promise<CategoryListResponse> => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\tconst cacheKey = `categories_all_${withCounts ? \"with_counts\" : \"no_counts\"}`;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Intentar obtener datos de la caché primero si no se fuerza refresh\r\n\t\t\t\tif (!forceRefresh) {\r\n\t\t\t\t\tconst cachedData = CacheService.getItem(cacheKey);\r\n\t\t\t\t\tif (cachedData && Array.isArray(cachedData.data)) {\r\n\t\t\t\t\t\tconsole.log(\"💾 Usando categorías en caché\");\r\n\t\t\t\t\t\tsetCategories(cachedData.data);\r\n\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\treturn cachedData;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"🌐 Obteniendo categorías desde API con withCounts:\",\r\n\t\t\t\t\twithCounts\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Hacer la petición a la API\r\n\t\t\t\tconst response: CategoryListResponse | null =\r\n\t\t\t\t\tawait categoryService.getCategories({\r\n\t\t\t\t\t\twith_counts: withCounts,\r\n\t\t\t\t\t\tis_active: true,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tresponse &&\r\n\t\t\t\t\ttypeof response === \"object\" &&\r\n\t\t\t\t\t\"data\" in response &&\r\n\t\t\t\t\tArray.isArray(response.data)\r\n\t\t\t\t) {\r\n\t\t\t\t\t// Adaptar datos\r\n\t\t\t\t\tconst adaptedCategories = response.data.map(adaptCategory);\r\n\r\n\t\t\t\t\tconst result: CategoryListResponse = {\r\n\t\t\t\t\t\tdata: adaptedCategories,\r\n\t\t\t\t\t\tmeta: response.meta || {total: adaptedCategories.length},\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Guardar en caché\r\n\t\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\t\tcacheKey,\r\n\t\t\t\t\t\tresult,\r\n\t\t\t\t\t\tappConfig.cache.categoryCacheTime\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tsetCategories(adaptedCategories);\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"Respuesta de categorías no tiene el formato esperado:\",\r\n\t\t\t\t\t\tresponse\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetCategories([]);\r\n\t\t\t\t\tconst emptyResult: CategoryListResponse = {\r\n\t\t\t\t\t\tdata: [],\r\n\t\t\t\t\t\tmeta: {total: 0},\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn emptyResult;\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error ? err.message : \"Error al obtener categorías\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al obtener categorías:\", err);\r\n\t\t\t\tsetCategories([]);\r\n\t\t\t\tconst emptyResult: CategoryListResponse = {data: [], meta: {total: 0}};\r\n\t\t\t\treturn emptyResult;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[adaptCategory]\r\n\t);\r\n\r\n\t/**\r\n\t * Obtener categorías principales\r\n\t */\r\n\tconst fetchMainCategories = useCallback(\r\n\t\tasync (\r\n\t\t\twithCounts: boolean = true,\r\n\t\t\tforceRefresh: boolean = false\r\n\t\t): Promise<Category[]> => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\tconst cacheKey = `categories_main_${withCounts ? \"with_counts\" : \"no_counts\"}`;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Intentar obtener datos de la caché primero\r\n\t\t\t\tif (!forceRefresh) {\r\n\t\t\t\t\tconst cachedData = CacheService.getItem(cacheKey);\r\n\t\t\t\t\tif (cachedData && Array.isArray(cachedData)) {\r\n\t\t\t\t\t\tconsole.log(\"💾 Usando categorías principales en caché\");\r\n\t\t\t\t\t\tsetMainCategories(cachedData);\r\n\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\treturn cachedData;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(\"🌐 Obteniendo categorías principales desde API\");\r\n\r\n\t\t\t\t// Hacer la petición a la API para categorías principales\r\n\t\t\t\tconst response: Category[] | CategoryListResponse | null =\r\n\t\t\t\t\tawait categoryService.getMainCategories(withCounts);\r\n\r\n\t\t\t\t// Manejar diferentes formatos de respuesta con tipos explícitos\r\n\t\t\t\tlet categoriesArray: Category[] = [];\r\n\r\n\t\t\t\tif (Array.isArray(response)) {\r\n\t\t\t\t\t// Si la respuesta es directamente un array\r\n\t\t\t\t\tcategoriesArray = response;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tresponse &&\r\n\t\t\t\t\ttypeof response === \"object\" &&\r\n\t\t\t\t\t\"data\" in response &&\r\n\t\t\t\t\tArray.isArray((response as CategoryListResponse).data)\r\n\t\t\t\t) {\r\n\t\t\t\t\t// Si la respuesta tiene estructura {data: array, meta: object}\r\n\t\t\t\t\tcategoriesArray = (response as CategoryListResponse).data;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"Respuesta de categorías principales no tiene el formato esperado:\",\r\n\t\t\t\t\t\tresponse\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetMainCategories([]);\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Adaptar datos si es necesario\r\n\t\t\t\tconst adaptedCategories = categoriesArray.map(adaptCategory);\r\n\r\n\t\t\t\t// Guardar en caché\r\n\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\tcacheKey,\r\n\t\t\t\t\tadaptedCategories,\r\n\t\t\t\t\tappConfig.cache.categoryCacheTime\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsetMainCategories(adaptedCategories);\r\n\t\t\t\treturn adaptedCategories;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al obtener categorías principales\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al obtener categorías principales:\", err);\r\n\t\t\t\tsetMainCategories([]);\r\n\t\t\t\treturn [];\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[adaptCategory]\r\n\t);\r\n\r\n\t/**\r\n\t * Obtener categorías destacadas\r\n\t */\r\n\tconst fetchFeaturedCategories = useCallback(\r\n\t\tasync (\r\n\t\t\tlimit: number = 8,\r\n\t\t\tforceRefresh: boolean = false\r\n\t\t): Promise<Category[]> => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\tconst cacheKey = `categories_featured_${limit}`;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Intentar obtener datos de la caché primero\r\n\t\t\t\tif (!forceRefresh) {\r\n\t\t\t\t\tconst cachedData = CacheService.getItem(cacheKey);\r\n\t\t\t\t\tif (cachedData && Array.isArray(cachedData)) {\r\n\t\t\t\t\t\tconsole.log(\"💾 Usando categorías destacadas en caché\");\r\n\t\t\t\t\t\tsetFeaturedCategories(cachedData);\r\n\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\treturn cachedData;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(\"🌐 Obteniendo categorías destacadas desde API\");\r\n\r\n\t\t\t\t// Hacer la petición a la API\r\n\t\t\t\tconst response: Category[] | CategoryListResponse | null =\r\n\t\t\t\t\tawait categoryService.getFeaturedCategories(limit);\r\n\r\n\t\t\t\t// Manejar diferentes formatos de respuesta con tipos explícitos\r\n\t\t\t\tlet categoriesArray: Category[] = [];\r\n\r\n\t\t\t\tif (Array.isArray(response)) {\r\n\t\t\t\t\tcategoriesArray = response;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tresponse &&\r\n\t\t\t\t\ttypeof response === \"object\" &&\r\n\t\t\t\t\t\"data\" in response &&\r\n\t\t\t\t\tArray.isArray((response as CategoryListResponse).data)\r\n\t\t\t\t) {\r\n\t\t\t\t\tcategoriesArray = (response as CategoryListResponse).data;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"Respuesta de categorías destacadas no tiene el formato esperado:\",\r\n\t\t\t\t\t\tresponse\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetFeaturedCategories([]);\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Adaptar datos si es necesario\r\n\t\t\t\tconst adaptedCategories = categoriesArray.map(adaptCategory);\r\n\r\n\t\t\t\t// Guardar en caché\r\n\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\tcacheKey,\r\n\t\t\t\t\tadaptedCategories,\r\n\t\t\t\t\tappConfig.cache.categoryCacheTime\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsetFeaturedCategories(adaptedCategories);\r\n\t\t\t\treturn adaptedCategories;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al obtener categorías destacadas\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al obtener categorías destacadas:\", err);\r\n\t\t\t\tsetFeaturedCategories([]);\r\n\t\t\t\treturn [];\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[adaptCategory]\r\n\t);\r\n\r\n\t/**\r\n\t * Obtener subcategorías de una categoría\r\n\t */\r\n\tconst fetchSubcategories = useCallback(\r\n\t\tasync (categoryId: number): Promise<Category[]> => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\tconst cacheKey = `categories_subcats_${categoryId}`;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Intentar obtener datos de la caché primero\r\n\t\t\t\tconst cachedData = CacheService.getItem(cacheKey);\r\n\r\n\t\t\t\tif (cachedData && Array.isArray(cachedData)) {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t`💾 Usando subcategorías en caché para categoría ${categoryId}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\treturn cachedData;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Si no hay caché, hacer la petición a la API\r\n\t\t\t\tconst response: Category[] | CategoryListResponse | null =\r\n\t\t\t\t\tawait categoryService.getSubcategories(categoryId);\r\n\r\n\t\t\t\t// Manejar diferentes formatos de respuesta con tipos explícitos\r\n\t\t\t\tlet categoriesArray: Category[] = [];\r\n\r\n\t\t\t\tif (Array.isArray(response)) {\r\n\t\t\t\t\tcategoriesArray = response;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tresponse &&\r\n\t\t\t\t\ttypeof response === \"object\" &&\r\n\t\t\t\t\t\"data\" in response &&\r\n\t\t\t\t\tArray.isArray((response as CategoryListResponse).data)\r\n\t\t\t\t) {\r\n\t\t\t\t\tcategoriesArray = (response as CategoryListResponse).data;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (categoriesArray.length > 0) {\r\n\t\t\t\t\t// Adaptar datos si es necesario\r\n\t\t\t\t\tconst adaptedCategories = categoriesArray.map(adaptCategory);\r\n\r\n\t\t\t\t\t// Guardar en caché\r\n\t\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\t\tcacheKey,\r\n\t\t\t\t\t\tadaptedCategories,\r\n\t\t\t\t\t\tappConfig.cache.categoryCacheTime\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\treturn adaptedCategories;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [];\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error ? err.message : \"Error al obtener subcategorías\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al obtener subcategorías:\", err);\r\n\t\t\t\treturn [];\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[adaptCategory]\r\n\t);\r\n\r\n\t/**\r\n\t * Obtener categoría por su slug\r\n\t */\r\n\tconst fetchCategoryBySlug = useCallback(\r\n\t\tasync (slug: string): Promise<Category | null> => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\tconst cacheKey = `category_slug_${slug}`;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Intentar obtener datos de la caché primero\r\n\t\t\t\tconst cachedData = CacheService.getItem(cacheKey);\r\n\r\n\t\t\t\tif (cachedData) {\r\n\t\t\t\t\tconsole.log(`💾 Usando categoría en caché para slug ${slug}`);\r\n\t\t\t\t\tsetCategoryDetail(cachedData);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\treturn cachedData;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Si no hay caché, hacer la petición a la API\r\n\t\t\t\tconst response: Category | null =\r\n\t\t\t\t\tawait categoryService.getCategoryBySlug(slug);\r\n\r\n\t\t\t\tif (response && typeof response === \"object\") {\r\n\t\t\t\t\t// Adaptar datos si es necesario\r\n\t\t\t\t\tconst adaptedCategory = adaptCategory(response);\r\n\r\n\t\t\t\t\t// Guardar en caché\r\n\t\t\t\t\tCacheService.setItem(\r\n\t\t\t\t\t\tcacheKey,\r\n\t\t\t\t\t\tadaptedCategory,\r\n\t\t\t\t\t\tappConfig.cache.categoryCacheTime\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tsetCategoryDetail(adaptedCategory);\r\n\t\t\t\t\treturn adaptedCategory;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCategoryDetail(null);\r\n\t\t\t\treturn null;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al obtener categoría por slug\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al obtener categoría por slug:\", err);\r\n\t\t\t\tsetCategoryDetail(null);\r\n\t\t\t\treturn null;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[adaptCategory]\r\n\t);\r\n\r\n\t/**\r\n\t * Limpiar caché de categorías usando cache reactivo\r\n\t */\r\n\tconst clearCategoryCache = useCallback(\r\n\t\t(categoryId?: number) => {\r\n\t\t\tif (categoryId) {\r\n\t\t\t\t// Limpiar caché específica de una categoría\r\n\t\t\t\tinvalidate(`category_${categoryId}`);\r\n\t\t\t\tinvalidate(`category_slug_*`);\r\n\t\t\t\tconsole.log(`🗑️ Caché de la categoría ${categoryId} invalidada`);\r\n\t\t\t} else {\r\n\t\t\t\t// Invalidar todos los patrones de categorías\r\n\t\t\t\tinvalidate(\"categories_*\");\r\n\t\t\t\tinvalidate(\"category_*\");\r\n\t\t\t\tconsole.log(\"🗑️ Toda la caché de categorías invalidada\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t[invalidate]\r\n\t);\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tcategories,\r\n\t\tmainCategories,\r\n\t\tfeaturedCategories,\r\n\t\tcategoryDetail,\r\n\t\tfetchCategories,\r\n\t\tfetchMainCategories,\r\n\t\tfetchFeaturedCategories,\r\n\t\tfetchSubcategories,\r\n\t\tfetchCategoryBySlug,\r\n\t\tclearCategoryCache,\r\n\t};\r\n};\r\n\r\nexport default useCategories;\r\n","/**\r\n * Formatea una fecha en formato de fecha y hora local\r\n *\r\n * @param dateString Cadena de fecha ISO o Date\r\n * @param options Opciones de formato\r\n * @returns Fecha formateada\r\n */\r\nexport const formatDate = (\r\n\tdateString: string | Date,\r\n\toptions: {\r\n\t\tshowTime?: boolean;\r\n\t\ttimeFormat?: \"12h\" | \"24h\";\r\n\t\tdateFormat?: \"short\" | \"medium\" | \"long\";\r\n\t} = {}\r\n): string => {\r\n\tif (!dateString) return \"Sin fecha\";\r\n\r\n\ttry {\r\n\t\tconst date =\r\n\t\t\ttypeof dateString === \"string\" ? new Date(dateString) : dateString;\r\n\r\n\t\t// Verificar si la fecha es válida\r\n\t\tif (isNaN(date.getTime())) {\r\n\t\t\treturn \"Fecha inválida\";\r\n\t\t}\r\n\r\n\t\tconst {\r\n\t\t\tshowTime = true,\r\n\t\t\ttimeFormat = \"24h\",\r\n\t\t\tdateFormat = \"medium\",\r\n\t\t} = options;\r\n\r\n\t\t// Opciones para la fecha\r\n\t\tconst dateOptions: Intl.DateTimeFormatOptions = {\r\n\t\t\tday: \"numeric\",\r\n\t\t\tmonth: \"long\",\r\n\t\t\tyear: \"numeric\",\r\n\t\t};\r\n\r\n\t\tif (dateFormat === \"short\") {\r\n\t\t\tdateOptions.month = \"numeric\";\r\n\t\t} else if (dateFormat === \"long\") {\r\n\t\t\tdateOptions.weekday = \"long\";\r\n\t\t}\r\n\r\n\t\t// Opciones para la hora\r\n\t\tconst timeOptions: Intl.DateTimeFormatOptions = {\r\n\t\t\thour: \"numeric\",\r\n\t\t\tminute: \"numeric\",\r\n\t\t};\r\n\r\n\t\tif (timeFormat === \"12h\") {\r\n\t\t\ttimeOptions.hour12 = true;\r\n\t\t} else {\r\n\t\t\ttimeOptions.hour12 = false;\r\n\t\t}\r\n\r\n\t\t// Formatear la fecha y hora\r\n\t\tlet formattedDate = date.toLocaleDateString(\"es-ES\", dateOptions);\r\n\r\n\t\tif (showTime) {\r\n\t\t\tconst formattedTime = date.toLocaleTimeString(\"es-ES\", timeOptions);\r\n\t\t\tformattedDate += ` ${formattedTime}`;\r\n\t\t}\r\n\r\n\t\treturn formattedDate;\r\n\t} catch (error) {\r\n\t\tconsole.error(\"Error al formatear fecha:\", error);\r\n\t\treturn String(dateString);\r\n\t}\r\n};\r\n\r\n/**\r\n * Devuelve una cadena con el tiempo relativo (\"hace 5 minutos\", \"ayer\", etc.)\r\n *\r\n * @param dateString Cadena de fecha ISO o Date\r\n * @returns Tiempo relativo\r\n */\r\nexport const getRelativeTime = (dateString: string | Date): string => {\r\n\tif (!dateString) return \"\";\r\n\r\n\ttry {\r\n\t\tconst date =\r\n\t\t\ttypeof dateString === \"string\" ? new Date(dateString) : dateString;\r\n\r\n\t\t// Verificar si la fecha es válida\r\n\t\tif (isNaN(date.getTime())) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\tconst now = new Date();\r\n\t\tconst diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\r\n\r\n\t\t// Menos de un minuto\r\n\t\tif (diffInSeconds < 60) {\r\n\t\t\treturn \"hace unos segundos\";\r\n\t\t}\r\n\r\n\t\t// Menos de una hora\r\n\t\tif (diffInSeconds < 3600) {\r\n\t\t\tconst minutes = Math.floor(diffInSeconds / 60);\r\n\t\t\treturn `hace ${minutes} ${minutes === 1 ? \"minuto\" : \"minutos\"}`;\r\n\t\t}\r\n\r\n\t\t// Menos de un día\r\n\t\tif (diffInSeconds < 86400) {\r\n\t\t\tconst hours = Math.floor(diffInSeconds / 3600);\r\n\t\t\treturn `hace ${hours} ${hours === 1 ? \"hora\" : \"horas\"}`;\r\n\t\t}\r\n\r\n\t\t// Menos de una semana\r\n\t\tif (diffInSeconds < 604800) {\r\n\t\t\tconst days = Math.floor(diffInSeconds / 86400);\r\n\t\t\tif (days === 1) return \"ayer\";\r\n\t\t\treturn `hace ${days} días`;\r\n\t\t}\r\n\r\n\t\t// Menos de un mes\r\n\t\tif (diffInSeconds < 2592000) {\r\n\t\t\tconst weeks = Math.floor(diffInSeconds / 604800);\r\n\t\t\treturn `hace ${weeks} ${weeks === 1 ? \"semana\" : \"semanas\"}`;\r\n\t\t}\r\n\r\n\t\t// Menos de un año\r\n\t\tif (diffInSeconds < 31536000) {\r\n\t\t\tconst months = Math.floor(diffInSeconds / 2592000);\r\n\t\t\treturn `hace ${months} ${months === 1 ? \"mes\" : \"meses\"}`;\r\n\t\t}\r\n\r\n\t\t// Más de un año\r\n\t\tconst years = Math.floor(diffInSeconds / 31536000);\r\n\t\treturn `hace ${years} ${years === 1 ? \"año\" : \"años\"}`;\r\n\t} catch (error) {\r\n\t\tconsole.error(\"Error al calcular tiempo relativo:\", error);\r\n\t\treturn \"\";\r\n\t}\r\n};\r\n","/**\r\n * Archivo: src/core/domain/entities/Order.ts\r\n * Entidades relacionadas con órdenes de compra y sus tipos - CORREGIDO CON DESCUENTOS POR VOLUMEN\r\n */\r\nimport type {Address} from \"../valueObjects/Address\";\r\n\r\nexport interface Order {\r\n\tid?: number;\r\n\tuserId: number;\r\n\tsellerId?: number;\r\n\titems: OrderItem[];\r\n\ttotal: number;\r\n\tstatus: OrderStatus;\r\n\tpaymentId?: string;\r\n\tpayment_method?: PaymentMethod;\r\n\tpaymentStatus?: PaymentStatus;\r\n\tpaymentDetails?: Record<string, any>;\r\n\tshippingData?: ShippingData;\r\n\torderNumber: string;\r\n\tcreatedAt?: string;\r\n\tupdatedAt?: string;\r\n\tuser_name?: string; // Añadido para compatibilidad con API\r\n\tuser_email?: string; // Añadido para compatibilidad con API\r\n\t\r\n\t// ✅ NUEVOS: Campos de descuentos por volumen y pricing detallado\r\n\toriginal_total?: number;\r\n\tvolume_discount_savings?: number;\r\n\tvolume_discounts_applied?: boolean;\r\n\tsubtotal_products?: number;\r\n\tiva_amount?: number;\r\n\tshipping_cost?: number;\r\n\ttotal_discounts?: number;\r\n\tfree_shipping?: boolean;\r\n\tfree_shipping_threshold?: number;\r\n\tpricing_breakdown?: any;\r\n}\r\n\r\n/**\r\n * Order item entity - ACTUALIZADO CON DESCUENTOS POR VOLUMEN\r\n */\r\nexport interface OrderItem {\r\n\tid?: number;\r\n\torderId?: number;\r\n\tproductId: number;\r\n\tquantity: number;\r\n\tprice: number;\r\n\tsubtotal: number;\r\n\tproduct?: {\r\n\t\tname: string;\r\n\t\timage?: string;\r\n\t\tslug?: string;\r\n\t\tsku?: string;\r\n\t};\r\n\tcreatedAt?: string;\r\n\tupdatedAt?: string;\r\n\tproduct_name?: string; // Para compatibilidad con API\r\n\tproduct_sku?: string; // Para compatibilidad con API\r\n\tproduct_image?: string; // Para compatibilidad con API\r\n\t\r\n\t// ✅ NUEVOS: Campos de descuentos por volumen\r\n\toriginal_price?: number;\r\n\tvolume_discount_percentage?: number;\r\n\tvolume_savings?: number;\r\n\tdiscount_label?: string;\r\n\thasVolumeDiscount?: boolean;\r\n}\r\n\r\n/**\r\n * Order detail entity - Versión extendida con información adicional\r\n */\r\nexport interface OrderDetail extends Order {\r\n\tcustomer: any;\r\n\torderDate: any;\r\n\tpayment: any;\r\n\tpayment_status: string | null | undefined;\r\n\tcreated_at: any;\r\n\tcreatedAt: string;\r\n\tcustomerName?: string;\r\n\tcustomerEmail?: string;\r\n\tpaymentMethod?: string;\r\n\tshippingAddress?: {\r\n\t\taddress: string;\r\n\t\tcity: string;\r\n\t\tstate: string;\r\n\t\tcountry: string;\r\n\t};\r\n\torderSummary?: {\r\n\t\ttotal_quantity: number;\r\n\t\ttotal_seller_earnings_from_products: number;\r\n\t\ttotal_platform_commission: number;\r\n\t\tshipping_distribution?: {\r\n\t\t\tseller_amount: number;\r\n\t\t};\r\n\t};\r\n\tseller_id?: number;\r\n\tsellerId?: number;\r\n\tshippingData?: ShippingData;\r\n\titems: (OrderItem & {\r\n\t\tproduct_name?: string;\r\n\t\tproduct_sku?: string;\r\n\t\tproduct_image?: string;\r\n\t\t// ✅ NUEVOS: Campos de descuentos por volumen en detalles\r\n\t\toriginal_price?: number;\r\n\t\tvolume_discount_percentage?: number;\r\n\t\tvolume_savings?: number;\r\n\t\tdiscount_label?: string;\r\n\t\thasVolumeDiscount?: boolean;\r\n\t})[];\r\n}\r\n\r\n/**\r\n * Order creation data\r\n */\r\nexport interface OrderCreationData {\r\n\tsellerId?: number;\r\n\titems: OrderItemCreationData[];\r\n\tshippingAddress: Address;\r\n\tbillingAddress?: Address;\r\n}\r\n\r\n/**\r\n * Order item creation data\r\n */\r\nexport interface OrderItemCreationData {\r\n\tproductId: number;\r\n\tquantity: number;\r\n\tprice?: number;\r\n}\r\n\r\n/**\r\n * Order status update data\r\n */\r\nexport interface OrderStatusUpdateData {\r\n\tstatus: OrderStatus;\r\n}\r\n\r\n/**\r\n * Order payment info update data\r\n */\r\nexport interface OrderPaymentUpdateData {\r\n\tpaymentId: string;\r\n\tpaymentMethod: PaymentMethod;\r\n\tpaymentStatus: PaymentStatus;\r\n\tpaymentDetails?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * Order shipping data update\r\n */\r\nexport interface OrderShippingUpdateData {\r\n\tshippingData: ShippingData;\r\n}\r\n\r\n/**\r\n * Order list response\r\n */\r\nexport interface OrderListResponse {\r\n\tdata: Order[];\r\n\tmeta: {\r\n\t\ttotal: number;\r\n\t\tper_page: number;\r\n\t\tcurrent_page: number;\r\n\t\tlast_page: number;\r\n\t};\r\n}\r\n\r\n/**\r\n * Order detail response\r\n */\r\nexport interface OrderDetailResponse {\r\n\tdata: OrderDetail;\r\n}\r\n\r\n/**\r\n * Order filter params\r\n */\r\nexport interface OrderFilterParams {\r\n\tuserId?: number;\r\n\tsellerId?: number;\r\n\tstatus?: string;\r\n\tpaymentStatus?: string;\r\n\torderNumber?: string;\r\n\tdateFrom?: string;\r\n\tdateTo?: string;\r\n\tsearch?: string;\r\n\tpage?: number;\r\n\tperPage?: number;\r\n\tsortBy?: string;\r\n\tsortDir?: \"asc\" | \"desc\";\r\n}\r\n\r\n/**\r\n * Order statistics\r\n */\r\nexport interface OrderStats {\r\n\ttotalOrders: number;\r\n\tpendingOrders: number;\r\n\tprocessingOrders: number;\r\n\tshippedOrders: number;\r\n\tdeliveredOrders: number;\r\n\tcompletedOrders: number;\r\n\tcancelledOrders: number;\r\n\ttotalSales: number;\r\n}\r\n\r\n/**\r\n * Order status type - ✅ CORREGIDO para incluir 'rejected'\r\n */\r\nexport type OrderStatus =\r\n\t| \"pending\"\r\n\t| \"processing\"\r\n\t| \"paid\"\r\n\t| \"shipped\"\r\n\t| \"delivered\"\r\n\t| \"completed\"\r\n\t| \"cancelled\"\r\n\t| \"rejected\"\r\n\t| \"ready_to_ship\"\r\n\t| \"in_transit\"\r\n\t| \"failed\"\r\n\t| \"returned\";\r\n\r\nexport const isValidOrderStatus = (status: string): status is OrderStatus => {\r\n\tconst validStatuses: OrderStatus[] = [\r\n\t\t\"pending\",\r\n\t\t\"processing\",\r\n\t\t\"paid\",\r\n\t\t\"shipped\",\r\n\t\t\"delivered\",\r\n\t\t\"completed\",\r\n\t\t\"cancelled\",\r\n\t\t\"rejected\",\r\n\t];\r\n\treturn validStatuses.includes(status as OrderStatus);\r\n};\r\n\r\nexport const getValidTransitions = (\r\n\tcurrentStatus: OrderStatus\r\n): OrderStatus[] => {\r\n\tconst transitions: Record<OrderStatus, OrderStatus[]> = {\r\n\t\tpending: [\"processing\", \"cancelled\", \"rejected\"],\r\n\t\tprocessing: [\"shipped\", \"cancelled\", \"rejected\"],\r\n\t\tpaid: [\"processing\", \"shipped\", \"cancelled\", \"rejected\"],\r\n\t\tshipped: [\"delivered\", \"cancelled\"],\r\n\t\tdelivered: [\"completed\"],\r\n\t\tcompleted: [],\r\n\t\tcancelled: [],\r\n\t\trejected: [],\r\n\t\tready_to_ship: [],\r\n\t\tin_transit: [],\r\n\t\tfailed: [],\r\n\t\treturned: []\r\n\t};\r\n\r\n\treturn transitions[currentStatus] || [];\r\n};\r\n\r\n// ✅ FUNCIÓN HELPER PARA VERIFICAR SI UNA TRANSICIÓN ES VÁLIDA\r\nexport const canTransitionTo = (\r\n\tcurrentStatus: OrderStatus,\r\n\tnewStatus: OrderStatus\r\n): boolean => {\r\n\treturn getValidTransitions(currentStatus).includes(newStatus);\r\n};\r\n\r\n/**\r\n * Payment method type\r\n */\r\nexport type PaymentMethod =\r\n\t| \"credit_card\"\r\n\t| \"paypal\"\r\n\t| \"transfer\"\r\n\t| \"datafast\"\r\n\t| \"deuna\"\r\n\t| \"other\"\r\n\t| null;\r\n\r\n/**\r\n * Payment status type\r\n */\r\nexport type PaymentStatus =\r\n\t| \"pending\"\r\n\t| \"completed\"\r\n\t| \"failed\"\r\n\t| \"rejected\"\r\n\t| null;\r\n\r\n/**\r\n * Shipping data type\r\n */\r\nexport interface ShippingData {\r\n\taddress: string;\r\n\tcity: string;\r\n\tstate: string;\r\n\tcountry: string;\r\n\tpostalCode: string;\r\n\tphone?: string;\r\n\tname?: string;\r\n\ttracking_number?: string;\r\n\tshipping_company?: string;\r\n\testimated_delivery?: string;\r\n\tnotes?: string;\r\n\tcancel_reason?: string;\r\n}","/**\r\n * Servicio para obtener el desglose detallado de items de una orden\r\n */\r\nimport ApiClient from '../../infrastructure/api/apiClient';\r\n\r\nexport interface ItemBreakdownStep {\r\n  step: number;\r\n  label: string;\r\n  price_per_unit: number;\r\n  percentage: number;\r\n  is_discount: boolean;\r\n}\r\n\r\nexport interface OrderItemBreakdown {\r\n  id: number;\r\n  product_id: number;\r\n  product_name: string;\r\n  product_image: string | null;\r\n  quantity: number;\r\n  original_price_per_unit: number;\r\n  final_price_per_unit: number;\r\n  subtotal: number;\r\n  total_savings: number;\r\n  breakdown_steps: ItemBreakdownStep[];\r\n  has_seller_discount: boolean;\r\n  has_volume_discount: boolean;\r\n  has_coupon_discount: boolean;\r\n  // ✅ CAMPOS ESPECÍFICOS DEL SELLER\r\n  seller_net_earning_per_unit?: number;\r\n  platform_commission_rate?: number;\r\n  platform_commission_amount?: number;\r\n}\r\n\r\nexport interface OrderBreakdownResponse {\r\n  order_id: number;\r\n  items: OrderItemBreakdown[];\r\n  has_coupon?: boolean;\r\n  coupon_percentage?: number;\r\n  summary?: {\r\n    total_items: number;\r\n    total_quantity: number;\r\n    total_original_amount: number;\r\n    total_final_amount: number;\r\n    total_savings: number;\r\n    // ✅ INFORMACIÓN ESPECÍFICA DEL SELLER\r\n    seller_commission_info?: {\r\n      platform_commission_rate: number;\r\n      total_commission: number;\r\n      seller_earnings_from_products: number;\r\n      shipping_distribution: any;\r\n    };\r\n  };\r\n}\r\n\r\nclass OrderBreakdownService {\r\n  private static instance: OrderBreakdownService;\r\n\r\n  static getInstance(): OrderBreakdownService {\r\n    if (!OrderBreakdownService.instance) {\r\n      OrderBreakdownService.instance = new OrderBreakdownService();\r\n    }\r\n    return OrderBreakdownService.instance;\r\n  }\r\n\r\n  /**\r\n   * ✅ NUEVA FUNCIÓN: Adapta los datos del seller al formato de breakdown esperado\r\n   */\r\n  private adaptSellerDataToBreakdownFormat(sellerData: any): OrderBreakdownResponse {\r\n    const items: OrderItemBreakdown[] = [];\r\n\r\n    if (sellerData.items && Array.isArray(sellerData.items)) {\r\n      sellerData.items.forEach((item: any) => {\r\n        // Crear los pasos del breakdown basados en los datos del seller\r\n        const breakdown_steps: ItemBreakdownStep[] = [];\r\n        \r\n        // Paso 1: Precio original\r\n        breakdown_steps.push({\r\n          step: 1,\r\n          label: 'Precio original',\r\n          price_per_unit: item.original_unit_price || item.unit_price || 0,\r\n          percentage: 0,\r\n          is_discount: false\r\n        });\r\n\r\n        // Paso 2: Descuento del seller (si existe)\r\n        if (item.seller_discount_percentage && item.seller_discount_percentage > 0) {\r\n          breakdown_steps.push({\r\n            step: 2,\r\n            label: `Descuento del seller (${item.seller_discount_percentage}%)`,\r\n            price_per_unit: item.unit_price || 0,\r\n            percentage: item.seller_discount_percentage,\r\n            is_discount: true\r\n          });\r\n        }\r\n\r\n        // Paso 3: Descuento por volumen (si existe)\r\n        if (item.volume_discount_percentage && item.volume_discount_percentage > 0) {\r\n          breakdown_steps.push({\r\n            step: breakdown_steps.length + 1,\r\n            label: `Descuento por volumen (${item.volume_discount_percentage}%)`,\r\n            price_per_unit: item.unit_price || 0,\r\n            percentage: item.volume_discount_percentage,\r\n            is_discount: true\r\n          });\r\n        }\r\n\r\n        const itemResult = {\r\n          id: item.id,\r\n          product_id: item.product_id,\r\n          product_name: item.product_name || 'Producto',\r\n          product_image: item.product_image,\r\n          quantity: item.quantity || 1, // ✅ CANTIDAD CRÍTICA\r\n          original_price_per_unit: item.original_unit_price || item.unit_price || 0,\r\n          final_price_per_unit: item.unit_price || 0,\r\n          subtotal: item.total_price || 0,\r\n          total_savings: item.total_savings || 0,\r\n          breakdown_steps,\r\n          has_seller_discount: (item.seller_discount_percentage || 0) > 0,\r\n          has_volume_discount: (item.volume_discount_percentage || 0) > 0,\r\n          has_coupon_discount: false, // Por implementar si es necesario\r\n          // ✅ AGREGAR CAMPOS ESPECÍFICOS DEL SELLER PARA CÁLCULOS\r\n          seller_net_earning_per_unit: item.seller_net_earning_from_products || 0,\r\n          platform_commission_rate: item.platform_commission_rate || 0,\r\n          platform_commission_amount: item.platform_commission_amount || 0,\r\n        };\r\n        \r\n        items.push(itemResult);\r\n      });\r\n    }\r\n\r\n    return {\r\n      order_id: sellerData.id || 0,\r\n      items,\r\n      summary: {\r\n        total_items: items.length,\r\n        total_quantity: items.reduce((sum, item) => sum + item.quantity, 0),\r\n        total_original_amount: items.reduce((sum, item) => sum + (item.original_price_per_unit * item.quantity), 0),\r\n        total_final_amount: items.reduce((sum, item) => sum + item.subtotal, 0),\r\n        total_savings: items.reduce((sum, item) => sum + item.total_savings, 0),\r\n        // ✅ AGREGAR INFORMACIÓN ESPECÍFICA DEL SELLER - MANEJAR AMBOS FORMATOS\r\n        seller_commission_info: (() => {\r\n          const orderSummary = sellerData.order_summary || sellerData.orderSummary || {};\r\n          return {\r\n            platform_commission_rate: orderSummary.shipping_distribution?.platform_commission_rate || 10,\r\n            total_commission: orderSummary.total_platform_commission || 0,\r\n            seller_earnings_from_products: orderSummary.total_seller_earnings_from_products || 0,\r\n            shipping_distribution: orderSummary.shipping_distribution || { seller_amount: 0 }\r\n          };\r\n        })()\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Obtiene el desglose detallado de descuentos para todos los items de una orden\r\n   */\r\n  async getOrderItemsBreakdown(orderId: string | number, viewType: 'customer' | 'seller' = 'customer'): Promise<OrderBreakdownResponse> {\r\n    try {\r\n      console.log(`📊 Obteniendo desglose de items para orden ${orderId} (vista: ${viewType})`);\r\n      console.log('🔍 OrderBreakdownService.getOrderItemsBreakdown llamado');\r\n      \r\n      // ✅ USAR ENDPOINT CORRECTO SEGÚN EL TIPO DE VISTA\r\n      const endpoint = viewType === 'seller' \r\n        ? `/seller/orders/${orderId}`  // Usar el endpoint de seller que ya corregimos\r\n        : `/user/orders/${orderId}/items-breakdown`; // Endpoint para customers\r\n      \r\n      console.log('🔍 Endpoint a usar:', endpoint);\r\n      console.log('🔍 OrderID que se está usando:', orderId);\r\n      console.log('🔍 ViewType:', viewType);\r\n      \r\n      const response = await ApiClient.get(endpoint);\r\n      \r\n      const responseData = response as any;\r\n      \r\n      // ✅ MANEJAR DIFERENTES FORMATOS DE RESPUESTA\r\n      let orderData = null;\r\n      \r\n      if (responseData.success && responseData.data) {\r\n        orderData = responseData.data;\r\n      } else if (responseData.data) {\r\n        orderData = responseData.data;\r\n      } else if (responseData.id && responseData.items) {\r\n        orderData = responseData;\r\n      }\r\n      \r\n      if (orderData) {\r\n        \r\n        // ✅ ADAPTAR LA ESTRUCTURA DE DATOS SEGÚN EL TIPO DE VISTA\r\n        if (viewType === 'seller') {\r\n          return this.adaptSellerDataToBreakdownFormat(orderData);\r\n        } else {\r\n          // ✅ NUEVO: Adaptar datos del endpoint de customer\r\n          return this.adaptCustomerDataToBreakdownFormat(orderData);\r\n        }\r\n      }\r\n      \r\n      throw new Error('No se pudo obtener el desglose de items');\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener desglose:', error);\r\n      console.error('❌ Error específico:', error);\r\n      console.error('❌ Error mensaje:', error instanceof Error ? error.message : 'Error desconocido');\r\n      console.error('❌ Error status:', (error as any)?.response?.status);\r\n      console.error('❌ Error data:', (error as any)?.response?.data);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ✅ NUEVO: Adapta los datos del endpoint /user/orders/{id}/items-breakdown al formato esperado\r\n   */\r\n  private adaptCustomerDataToBreakdownFormat(customerData: any): OrderBreakdownResponse {\r\n    const items: OrderItemBreakdown[] = [];\r\n\r\n    if (customerData.items && Array.isArray(customerData.items)) {\r\n      customerData.items.forEach((item: any) => {\r\n        items.push({\r\n          id: item.id,\r\n          product_id: item.product_id,\r\n          product_name: item.product_name || 'Producto',\r\n          product_image: item.product_image,\r\n          quantity: item.quantity || 1,\r\n          // ✅ MAPEAR CORRECTAMENTE LOS NOMBRES DE CAMPOS\r\n          original_price_per_unit: item.original_unit_price || 0,\r\n          final_price_per_unit: item.unit_price || 0,\r\n          subtotal: item.total_price || 0,\r\n          total_savings: item.total_savings || 0,\r\n          breakdown_steps: item.breakdown_steps || [],\r\n          has_seller_discount: (item.seller_discount_percentage || 0) > 0,\r\n          has_volume_discount: (item.volume_discount_percentage || 0) > 0,\r\n          has_coupon_discount: false, // Por ahora sin cupones en customer breakdown\r\n        });\r\n      });\r\n    }\r\n\r\n    return {\r\n      order_id: customerData.order_id || 0,\r\n      items,\r\n      summary: {\r\n        total_items: items.length,\r\n        total_quantity: items.reduce((sum, item) => sum + item.quantity, 0),\r\n        total_original_amount: items.reduce((sum, item) => sum + (item.original_price_per_unit * item.quantity), 0),\r\n        total_final_amount: items.reduce((sum, item) => sum + item.subtotal, 0),\r\n        total_savings: items.reduce((sum, item) => sum + item.total_savings, 0),\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nexport default OrderBreakdownService;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport DataTable from \"./dataTable/DataTable\";\r\nimport type {\r\n\tOrder,\r\n\tColumn,\r\n\tBaseTableProps,\r\n\tTableHeaderProps,\r\n} from \"../../types/dashboard/dataTable/DataTableTypes\";\r\nimport { formatCurrency } from \"@/utils/formatters/formatCurrency\";\r\n\r\n\r\n\r\n// Columnas para la tabla de pedidos recientes\r\nconst getOrderColumns = (): Column<Order>[] => [\r\n\t{\r\n\t\tkey: \"id\",\r\n\t\theader: \"ID Pedido\",\r\n\t\trender: (value, row) => (\r\n\t\t\t<Link\r\n\t\t\t\tto={`/seller/orders/${row.id}`}\r\n\t\t\t\tclassName=\"text-primary-600 hover:underline font-medium\"\r\n\t\t\t>\r\n\t\t\t\t#{value}\r\n\t\t\t</Link>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tkey: \"date\",\r\n\t\theader: \"Fecha\",\r\n\t},\r\n\t{\r\n\t\tkey: \"customer\",\r\n\t\theader: \"Cliente\",\r\n\t},\r\n\t{\r\n\t\tkey: \"total\",\r\n\t\theader: \"Total\",\r\n\t\trender: (value) => formatCurrency(value),\r\n\t},\r\n\t{\r\n\t\tkey: \"status\",\r\n\t\theader: \"Estado\",\r\n\t\trender: (value: Order[\"status\"]) => {\r\n\t\t\tconst statusMap = {\r\n\t\t\t\tCompleted: {\r\n\t\t\t\t\ttext: \"Completado\",\r\n\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\"bg-green-100 text-green-800\",\r\n\t\t\t\t},\r\n\t\t\t\tShipped: {\r\n\t\t\t\t\ttext: \"Enviado\",\r\n\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\"bg-blue-100 text-blue-800\",\r\n\t\t\t\t},\r\n\t\t\t\tProcessing: {\r\n\t\t\t\t\ttext: \"En Proceso\",\r\n\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\"bg-yellow-100 text-yellow-800\",\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tconst statusInfo = statusMap[value] || {text: value, classes: \"\"};\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${statusInfo.classes}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{statusInfo.text}\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t},\r\n\t},\r\n];\r\n\r\ninterface RecentOrdersTableProps extends BaseTableProps, TableHeaderProps {\r\n\torders: Order[];\r\n\tcompact?: boolean;\r\n\tonOrderClick?: (order: Order) => void;\r\n}\r\n\r\nconst RecentOrdersTable: React.FC<RecentOrdersTableProps> = ({\r\n\torders,\r\n\ttitle,\r\n\tviewAllLink,\r\n\tviewAllText,\r\n\tcompact = false,\r\n\tclassName = \"\",\r\n\tonOrderClick,\r\n}) => {\r\n\treturn (\r\n\t\t<DataTable<Order>\r\n\t\t\tdata={orders}\r\n\t\t\tcolumns={getOrderColumns()}\r\n\t\t\ttitle={title}\r\n\t\t\tviewAllLink={viewAllLink}\r\n\t\t\tviewAllText={viewAllText}\r\n\t\t\tcompact={compact}\r\n\t\t\tclassName={className}\r\n\t\t\tonRowClick={onOrderClick}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default RecentOrdersTable;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport DataTable from \"./dataTable/DataTable\";\r\nimport {formatCurrency} from \"../../../utils/formatters/formatCurrency\";\r\nimport type {\r\n\tProduct,\r\n\tColumn,\r\n\tBaseTableProps,\r\n\tTableHeaderProps,\r\n} from \"../../types/dashboard/dataTable/DataTableTypes\";\r\n\r\n// Columnas para la tabla de productos más vendidos\r\nconst getTopProductColumns = (): Column<Product>[] => [\r\n\t{\r\n\t\tkey: \"name\",\r\n\t\theader: \"Producto\",\r\n\t\trender: (value, row) => (\r\n\t\t\t<Link\r\n\t\t\t\tto={`/seller/products/edit/${row.id}`}\r\n\t\t\t\tclassName=\"text-primary-600 hover:underline font-medium\"\r\n\t\t\t>\r\n\t\t\t\t{value}\r\n\t\t\t</Link>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tkey: \"sold\",\r\n\t\theader: \"Unidades Vendidas\",\r\n\t},\r\n\t{\r\n\t\tkey: \"revenue\",\r\n\t\theader: \"Ingresos\",\r\n\t\trender: (value) => formatCurrency(value),\r\n\t},\r\n];\r\n\r\ninterface TopProductsTableProps extends BaseTableProps, TableHeaderProps {\r\n\tproducts: Product[];\r\n\tcompact?: boolean;\r\n\tonProductClick?: (product: Product) => void;\r\n}\r\n\r\nconst TopProductsTable: React.FC<TopProductsTableProps> = ({\r\n\tproducts,\r\n\ttitle,\r\n\tviewAllLink,\r\n\tviewAllText,\r\n\tcompact = false,\r\n\tclassName = \"\",\r\n\tonProductClick,\r\n}) => {\r\n\treturn (\r\n\t\t<DataTable<Product>\r\n\t\t\tdata={products}\r\n\t\t\tcolumns={getTopProductColumns()}\r\n\t\t\ttitle={title}\r\n\t\t\tviewAllLink={viewAllLink}\r\n\t\t\tviewAllText={viewAllText}\r\n\t\t\tcompact={compact}\r\n\t\t\tclassName={className}\r\n\t\t\tonRowClick={onProductClick}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default TopProductsTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {useNavigate} from \"react-router\" \r\nimport {\r\n\tPackage,\r\n\tShoppingBag,\r\n\tDollarSign,\r\n\tTrendingUp,\r\n\tStar,\r\n} from \"lucide-react\";\r\nimport RatingStars from \"@/presentation/components/common/RatingStars\";\r\nimport { formatCurrency } from \"../../../utils/formatters/formatCurrency\";\r\nimport DashboardCardList from \"../../components/dashboard/DashboardCardList\";\r\nimport PendingCardList from \"../../components/dashboard/PendingCardList\";\r\nimport RecentOrdersTable from \"../../components/dashboard/RecentOrdersTable\";\r\nimport TopProductsTable from \"../../components/dashboard/TopProductsTable\";\r\nimport type {\r\n\tOrder,\r\n\tProduct,\r\n} from \"../../types/dashboard/dataTable/DataTableTypes\";\r\nimport ApiClient from \"@/infrastructure/api/apiClient\";\r\nimport { API_ENDPOINTS } from \"@/constants/apiEndpoints\";\r\n\r\ninterface DashboardData {\r\n\tstats: {\r\n\t\ttotal_sales: number;\r\n\t\ttotal_orders: number;\r\n\t\tactive_products: number;\r\n\t\ttotal_products: number;\r\n\t\taverage_rating: number;\r\n\t\tpending_orders: number;\r\n\t};\r\n\trecent_orders: Order[];\r\n\ttop_products: Product[];\r\n}\r\n\r\nconst SellerDashboard: React.FC = () => {\r\n\tconst navigate = useNavigate();\r\n\tconst [dashboardData, setDashboardData] = useState<DashboardData | null>(null);\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchDashboardData();\r\n\t}, []);\r\n\r\n\tconst fetchDashboardData = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await ApiClient.get<{status: string; data: DashboardData}>(API_ENDPOINTS.SELLER.DASHBOARD);\r\n\t\t\tif (response.status === 'success') {\r\n\t\t\t\tsetDashboardData(response.data);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error('Dashboard API returned error:', response);\r\n\t\t\t\t// Mantener datos en cero si hay error\r\n\t\t\t\tsetDashboardData(getDefaultDashboardData());\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching dashboard data:', error);\r\n\t\t\t// En caso de error, mostrar datos en cero\r\n\t\t\tsetDashboardData(getDefaultDashboardData());\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// Función para datos por defecto en caso de error\r\n\tconst getDefaultDashboardData = (): DashboardData => ({\r\n\t\tstats: {\r\n\t\t\ttotal_sales: 0,\r\n\t\t\ttotal_orders: 0,\r\n\t\t\tactive_products: 0,\r\n\t\t\ttotal_products: 0,\r\n\t\t\taverage_rating: 0,\r\n\t\t\tpending_orders: 0\r\n\t\t},\r\n\t\trecent_orders: [],\r\n\t\ttop_products: []\r\n\t});\r\n\r\n\tconst handleOrderClick = (order: Order) => {\r\n\t\tnavigate(`/seller/orders/${order.id}`);\r\n\t};\r\n\t\r\n\tconst handleProductClick = (product: Product) => {\r\n\t\tnavigate(`/seller/products/${product.id}`);\r\n\t};\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div className=\"space-y-6\">\r\n\t\t\t\t<h1 className=\"text-2xl font-bold text-gray-900\">Panel del Vendedor</h1>\r\n\t\t\t\t<div className=\"text-center py-12\">Cargando...</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// Usar datos por defecto si no hay dashboardData\r\n\tconst data = dashboardData || getDefaultDashboardData();\r\n\r\n\tconst cards = [\r\n\t\t{\r\n\t\t\ttitle: \"Ventas Totales\",\r\n\t\t\tvalue: formatCurrency(data.stats.total_sales),\r\n\t\t\tchange: 0,\r\n\t\t\ticon: DollarSign,\r\n\t\t\ticonBgColor: \"bg-primary-50\",\r\n\t\t\ticonColor: \"text-primary-600\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Pedidos Totales\",\r\n\t\t\tvalue: data.stats.total_orders,\r\n\t\t\tchange: 0,\r\n\t\t\ticon: ShoppingBag,\r\n\t\t\ticonBgColor: \"bg-orange-50\",\r\n\t\t\ticonColor: \"text-orange-600\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Productos Activos\",\r\n\t\t\tvalue: `${data.stats.active_products} / ${data.stats.total_products}`,\r\n\t\t\tchange: 0,\r\n\t\t\ttext: `${data.stats.active_products} productos activos`,\r\n\t\t\ticon: Package,\r\n\t\t\ticonBgColor: \"bg-blue-50\",\r\n\t\t\ticonColor: \"text-blue-600\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Promedio de Valoraciones\",\r\n\t\t\tvalue: data.stats.average_rating.toFixed(1),\r\n\t\t\tchange: 0,\r\n\t\t\ttext: (\r\n\t\t\t\t<RatingStars rating={data.stats.average_rating} size={15}/>\r\n\t\t\t),\r\n\t\t\ticon: Star,\r\n\t\t\ticonBgColor: \"bg-yellow-50\",\r\n\t\t\ticonColor: \"text-yellow-600\",\r\n\t\t},\r\n\t];\r\n\r\n\tconst pendingCardItems = [\r\n\t\t{\r\n\t\t\ticon: ShoppingBag,\r\n\t\t\ticonBgColor: \"bg-orange-50\",\r\n\t\t\ticonColor: \"text-orange-600\",\r\n\t\t\ttitle: \"Pedidos Pendientes\",\r\n\t\t\tdescription:\r\n\t\t\t\t`Tienes ${data.stats.pending_orders} pedidos esperando ser procesados.`,\r\n\t\t\tlinkText: \"Procesar Pedidos\",\r\n\t\t\tlinkTo: \"/seller/orders?status=pending\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: Package,\r\n\t\t\ticonBgColor: \"bg-blue-50\",\r\n\t\t\ticonColor: \"text-blue-600\",\r\n\t\t\ttitle: \"Añadir Nuevo Producto\",\r\n\t\t\tdescription:\r\n\t\t\t\t\"Aumenta tu catálogo añadiendo nuevos productos a tu tienda.\",\r\n\t\t\tlinkText: \"Añadir Producto\",\r\n\t\t\tlinkTo: \"/seller/products/create\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: TrendingUp,\r\n\t\t\ticonBgColor: \"bg-green-50\",\r\n\t\t\ticonColor: \"text-green-600\",\r\n\t\t\ttitle: \"Informes de Ventas\",\r\n\t\t\tdescription:\r\n\t\t\t\t\"Consulta informes detallados de ventas y análisis para tu tienda.\",\r\n\t\t\tlinkText: \"Ver Informes\",\r\n\t\t\tlinkTo: \"/seller/earnings\",\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className=\"space-y-6\">\r\n\t\t\t<h1 className=\"text-2xl font-bold text-gray-900\">\r\n\t\t\t\tPanel del Vendedor\r\n\t\t\t</h1>\r\n\r\n\t\t\t{/* Stats Cards */}\r\n\t\t\t<DashboardCardList cards={cards} />\r\n\r\n\t\t\t{/* Recent Orders & Top Products */}\r\n\t\t\t<div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n\t\t\t\t{/* Recent Orders */}\r\n\t\t\t\t<RecentOrdersTable\r\n\t\t\t\t\torders={data.recent_orders}\r\n\t\t\t\t\ttitle=\"Pedidos Recientes\"\r\n\t\t\t\t\tviewAllLink=\"/seller/orders\"\r\n\t\t\t\t\tonOrderClick={handleOrderClick}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* Top Products */}\r\n\t\t\t\t<TopProductsTable\r\n\t\t\t\t\tproducts={data.top_products}\r\n\t\t\t\t\ttitle=\"Productos Más Vendidos\"\r\n\t\t\t\t\tviewAllLink=\"/seller/products\"\r\n\t\t\t\t\tonProductClick={handleProductClick}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Actions Cards */}\r\n\t\t\t<PendingCardList items={pendingCardItems} color={true} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SellerDashboard;\r\n","import {useState, useCallback, useEffect} from \"react\";\r\nimport {ProductService} from \"../../core/services/ProductService\";\r\nimport type {\r\n\tProduct,\r\n\tProductDetail,\r\n\tProductCreationData,\r\n\tProductUpdateData,\r\n} from \"../../core/domain/entities/Product\";\r\nimport {useAuth} from \"../contexts/AuthContext\";\r\nimport ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport CacheService from \"../../infrastructure/services/CacheService\";\r\nimport { API_ENDPOINTS } from \"../../constants/apiEndpoints\";\r\nimport type {ExtendedProductFilterParams} from \"../types/ProductFilterParams\";\r\n\r\n// Instancia del servicio de productos\r\nconst productService = new ProductService();\r\n\r\n/**\r\n * Hook personalizado para gestionar los productos del vendedor\r\n */\r\nexport const useSellerProducts = () => {\r\n\tconst {user} = useAuth();\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\tconst [products, setProducts] = useState<Product[]>([]);\r\n\tconst [productDetail, setProductDetail] = useState<ProductDetail | null>(\r\n\t\tnull\r\n\t);\r\n\tconst [totalProducts, setTotalProducts] = useState<number>(0);\r\n\tconst [page, setPage] = useState<number>(1);\r\n\tconst [itemsPerPage, setItemsPerPage] = useState<number>(10);\r\n\r\n\t/**\r\n\t * Obtiene los productos del vendedor actual\r\n\t */\r\n\tconst fetchSellerProducts = useCallback(\r\n\t\tasync (page = 1, limit = 10, forceRefresh = false) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst sellerId = user?.id;\r\n\t\t\t\tif (!sellerId) {\r\n\t\t\t\t\tthrow new Error(\"No se pudo obtener el ID del vendedor\");\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tconst filterParams: ExtendedProductFilterParams = {\r\n\t\t\t\t\tlimit,\r\n\t\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\t\tpage,\r\n\t\t\t\t\tsellerId: sellerId,\r\n\t\t\t\t\tsortBy: \"created_at\",\r\n\t\t\t\t\tsortDir: \"desc\",\r\n\t\t\t\t\tfeatured: undefined,\r\n\t\t\t\t\tstatus: undefined,\r\n\t\t\t\t\t// Añadir timestamp para evitar cache cuando se fuerza refresh\r\n\t\t\t\t\t...(forceRefresh && { _t: Date.now() })\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tif (forceRefresh) {\r\n\t\t\t\t\tconsole.log(\"🔥 FORCE REFRESH - timestamp:\", Date.now());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst response = await productService.getProducts(filterParams);\r\n\r\n\t\t\t\tif (response) {\r\n\t\t\t\t\tif (Array.isArray(response.data)) {\r\n\t\t\t\t\t\tsetProducts(response.data);\r\n\t\t\t\t\t\tsetTotalProducts(response.meta?.total || response.data.length);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetProducts([]);\r\n\t\t\t\t\t\tsetTotalProducts(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetProducts([]);\r\n\t\t\t\t\tsetTotalProducts(0);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al obtener productos del vendedor\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al obtener productos del vendedor:\", err);\r\n\t\t\t\tsetProducts([]);\r\n\t\t\t\tsetTotalProducts(0);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[user]\r\n\t);\r\n\r\n\t/**\r\n\t * Obtiene los detalles de un producto específico por su ID\r\n\t */\r\n\tconst fetchProductById = useCallback(\r\n\t\tasync (id: number): Promise<ProductDetail | null> => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst product = await productService.getProductById(id);\r\n\t\t\t\tsetProductDetail(product);\r\n\t\t\t\treturn product;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al obtener los detalles del producto\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al obtener detalles del producto:\", err);\r\n\t\t\t\treturn null;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\t/**\r\n\t * Crea un nuevo producto\r\n\t */\r\n\tconst createProduct = useCallback(\r\n\t\tasync (data: ProductCreationData) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Crear un FormData manualmente para asegurarnos de que todos los campos se envíen correctamente\r\n\t\t\t\tconst formData = new FormData();\r\n\r\n\t\t\t\t// Añadir campos básicos - asegurando explícitamente el tipo de cada uno\r\n\t\t\t\tformData.append(\"name\", data.name);\r\n\t\t\t\tformData.append(\"description\", data.description);\r\n\r\n\t\t\t\t// Añadir descripción corta si existe\r\n\t\t\t\tif (data.shortDescription) {\r\n\t\t\t\t\tformData.append(\"short_description\", data.shortDescription);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Convertir números a string explícitamente\r\n\t\t\t\tformData.append(\"price\", String(data.price));\r\n\t\t\t\tformData.append(\"stock\", String(data.stock));\r\n\r\n\t\t\t\t// Añadir dimensiones si existen\r\n\t\t\t\tif (data.weight !== undefined)\r\n\t\t\t\t\tformData.append(\"weight\", String(data.weight));\r\n\t\t\t\tif (data.width !== undefined)\r\n\t\t\t\t\tformData.append(\"width\", String(data.width));\r\n\t\t\t\tif (data.height !== undefined)\r\n\t\t\t\t\tformData.append(\"height\", String(data.height));\r\n\t\t\t\tif (data.depth !== undefined)\r\n\t\t\t\t\tformData.append(\"depth\", String(data.depth));\r\n\t\t\t\tif (data.dimensions) formData.append(\"dimensions\", data.dimensions);\r\n\r\n\t\t\t\t// Añadir categoría\r\n\t\t\t\tformData.append(\"category_id\", String(data.category_id));\r\n\r\n\t\t\t\t// Campos adicionales\r\n\t\t\t\tif (data.sku) formData.append(\"sku\", data.sku);\r\n\t\t\t\tif (data.status !== undefined) formData.append(\"status\", data.status);\r\n\t\t\t\tif (data.featured !== undefined)\r\n\t\t\t\t\tformData.append(\"featured\", String(data.featured));\r\n\t\t\t\tif (data.published !== undefined)\r\n\t\t\t\t\tformData.append(\"published\", String(data.published));\r\n\t\t\t\tif (data.discount_percentage !== undefined) {\r\n\t\t\t\t\tformData.append(\r\n\t\t\t\t\t\t\"discount_percentage\",\r\n\t\t\t\t\t\tString(data.discount_percentage)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Añadir arrays como JSON string\r\n\t\t\t\tif (data.colors) {\r\n\t\t\t\t\tconst colorsValue =\r\n\t\t\t\t\t\ttypeof data.colors === \"string\"\r\n\t\t\t\t\t\t\t? data.colors\r\n\t\t\t\t\t\t\t: JSON.stringify(data.colors);\r\n\t\t\t\t\tformData.append(\"colors\", colorsValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.sizes) {\r\n\t\t\t\t\tconst sizesValue =\r\n\t\t\t\t\t\ttypeof data.sizes === \"string\"\r\n\t\t\t\t\t\t\t? data.sizes\r\n\t\t\t\t\t\t\t: JSON.stringify(data.sizes);\r\n\t\t\t\t\tformData.append(\"sizes\", sizesValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.tags) {\r\n\t\t\t\t\tconst tagsValue =\r\n\t\t\t\t\t\ttypeof data.tags === \"string\"\r\n\t\t\t\t\t\t\t? data.tags\r\n\t\t\t\t\t\t\t: JSON.stringify(data.tags);\r\n\t\t\t\t\tformData.append(\"tags\", tagsValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Añadir atributos si existen\r\n\t\t\t\tif (data.attributes && Object.keys(data.attributes).length > 0) {\r\n\t\t\t\t\tformData.append(\"attributes\", JSON.stringify(data.attributes));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Añadir imágenes\r\n\t\t\t\tif (data.images && data.images.length > 0) {\r\n\t\t\t\t\tdata.images.forEach((file, index) => {\r\n\t\t\t\t\t\tformData.append(`images[${index}]`, file);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Enviar un log completo para depuración\r\n\t\t\t\tconsole.log(\"Enviando datos de producto para creación:\");\r\n\t\t\t\tfor (const [key, value] of formData.entries()) {\r\n\t\t\t\t\t// No loggear el contenido binario de las imágenes\r\n\t\t\t\t\tif (key.startsWith(\"images[\")) {\r\n\t\t\t\t\t\tconsole.log(`${key}: (archivo binario)`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(`${key}: ${value}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Realizar la petición directamente usando ApiClient para subir archivos\r\n\t\t\t\tconst response = await ApiClient.uploadFile(\r\n\t\t\t\t\tAPI_ENDPOINTS.PRODUCTS.CREATE,\r\n\t\t\t\t\tformData\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Verificar la respuesta y extraer el producto creado\r\n\t\t\t\tlet newProduct = null;\r\n\r\n\t\t\t\t// Determinar el producto basado en la estructura de la respuesta\r\n\t\t\t\tif (response) {\r\n\t\t\t\t\tif (typeof response === \"object\") {\r\n\t\t\t\t\t\tnewProduct = response;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Actualizar la lista de productos si se creó correctamente\r\n\t\t\t\tif (newProduct) {\r\n\t\t\t\t\tconsole.log(\"✅ Producto creado exitosamente:\", newProduct);\r\n\t\t\t\t\tconsole.log(\"🔄 Iniciando invalidación de cache y refetch...\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t// ✅ INVALIDAR CACHE: Mismo patrón que updateProduct\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tCacheService.removeItem('seller_products_list');\r\n\t\t\t\t\t\tCacheService.removeItem('seller_products_page_1');\r\n\t\t\t\t\t\tCacheService.removeItem('seller_products_page_2');\r\n\t\t\t\t\t\tCacheService.removeItem('seller_products_page_3');\r\n\t\t\t\t\t\tCacheService.removeItem('products_list');\r\n\t\t\t\t\t\tCacheService.removeItem('header_counters');\r\n\t\t\t\t\t\tconsole.log(\"🗑️ Cache de productos invalidado correctamente\");\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tconsole.warn(\"⚠️ Error invalidando cache:\", error);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// SOLUCIÓN 1: Refresh inmediato sin cache\r\n\t\t\t\t\tsetTimeout(async () => {\r\n\t\t\t\t\t\tconsole.log(\"🔄 Ejecutando fetchSellerProducts después de crear...\");\r\n\t\t\t\t\t\tawait fetchSellerProducts(page, itemsPerPage, true); // forceRefresh = true\r\n\t\t\t\t\t\tconsole.log(\"✅ fetchSellerProducts completado\");\r\n\t\t\t\t\t}, 100); // Reducir delay inicial\r\n\t\t\t\t\t\r\n\t\t\t\t\t// SOLUCIÓN 2: Refresh backup con más tiempo\r\n\t\t\t\t\tsetTimeout(async () => {\r\n\t\t\t\t\t\tconsole.log(\"🔄 Refetch backup después de 1s...\");\r\n\t\t\t\t\t\tawait fetchSellerProducts(page, itemsPerPage, true);\r\n\t\t\t\t\t}, 1000);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t\"Respuesta de creación de producto no válida:\",\r\n\t\t\t\t\t\tresponse\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\"No se pudo crear el producto. La respuesta del servidor no es válida.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn newProduct;\r\n\t\t\t} catch (err: any) {\r\n\t\t\t\tlet userMessage = \"Error desconocido al crear producto\";\r\n\t\t\t\t\r\n\t\t\t\t// Extraer mensaje de error específico del servidor\r\n\t\t\t\tif (err && typeof err === 'object') {\r\n\t\t\t\t\t// Si es un AxiosError con response\r\n\t\t\t\t\tif (err.response && err.response.data) {\r\n\t\t\t\t\t\tconst responseData = err.response.data;\r\n\t\t\t\t\t\t// Extraer mensaje específico del backend\r\n\t\t\t\t\t\tif (responseData.message) {\r\n\t\t\t\t\t\t\tuserMessage = responseData.message;\r\n\t\t\t\t\t\t} else if (responseData.error) {\r\n\t\t\t\t\t\t\tuserMessage = responseData.error;\r\n\t\t\t\t\t\t} else if (err.message) {\r\n\t\t\t\t\t\t\tuserMessage = err.message;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (err.message) {\r\n\t\t\t\t\t\tuserMessage = err.message;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst fullErrorMessage = `Error al crear producto: ${userMessage}`;\r\n\t\t\t\tsetError(fullErrorMessage);\r\n\t\t\t\tconsole.error(\"Error al crear producto:\", err);\r\n\t\t\t\t\r\n\t\t\t\t// Mostrar mensaje específico y claro al usuario\r\n\t\t\t\talert(userMessage);\r\n\t\t\t\t\r\n\t\t\t\treturn null;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchSellerProducts, page, itemsPerPage]\r\n\t);\r\n\r\n\t/**\r\n\t * Actualiza un producto existente\r\n\t */\r\n\tconst updateProduct = useCallback(\r\n\t\tasync (data: ProductUpdateData) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(\"Actualizando producto con datos:\", data);\r\n\t\t\t\t// Crear un FormData manualmente\r\n\t\t\t\tconst formData = new FormData();\r\n\r\n\t\t\t\t// Añadir campos básicos si existen\r\n\t\t\t\tif (data.name) formData.append(\"name\", data.name);\r\n\t\t\t\tif (data.description) formData.append(\"description\", data.description);\r\n\t\t\t\tif (data.shortDescription)\r\n\t\t\t\t\tformData.append(\"short_description\", data.shortDescription);\r\n\r\n\t\t\t\t// Convertir números a string explícitamente\r\n\t\t\t\tif (data.price !== undefined)\r\n\t\t\t\t\tformData.append(\"price\", String(data.price));\r\n\t\t\t\tif (data.stock !== undefined)\r\n\t\t\t\t\tformData.append(\"stock\", String(data.stock));\r\n\r\n\t\t\t\t// Añadir dimensiones si existen\r\n\t\t\t\tif (data.weight !== undefined)\r\n\t\t\t\t\tformData.append(\"weight\", String(data.weight));\r\n\t\t\t\tif (data.width !== undefined)\r\n\t\t\t\t\tformData.append(\"width\", String(data.width));\r\n\t\t\t\tif (data.height !== undefined)\r\n\t\t\t\t\tformData.append(\"height\", String(data.height));\r\n\t\t\t\tif (data.depth !== undefined)\r\n\t\t\t\t\tformData.append(\"depth\", String(data.depth));\r\n\t\t\t\tif (data.dimensions) formData.append(\"dimensions\", data.dimensions);\r\n\r\n\t\t\t\t// Añadir categoría si existe\r\n\t\t\t\tif (data.category_id)\r\n\t\t\t\t\tformData.append(\"category_id\", String(data.category_id));\r\n\r\n\t\t\t\t// Estado del producto y otros campos\r\n\t\t\t\tif (data.status) formData.append(\"status\", data.status);\r\n\t\t\t\tif (data.featured !== undefined)\r\n\t\t\t\t\tformData.append(\"featured\", String(data.featured));\r\n\t\t\t\tif (data.published !== undefined)\r\n\t\t\t\t\tformData.append(\"published\", String(data.published));\r\n\t\t\t\tif (data.discount_percentage !== undefined) {\r\n\t\t\t\t\tformData.append(\r\n\t\t\t\t\t\t\"discount_percentage\",\r\n\t\t\t\t\t\tString(data.discount_percentage)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Añadir arrays como JSON string\r\n\t\t\t\tif (data.colors) {\r\n\t\t\t\t\tconst colorsValue =\r\n\t\t\t\t\t\ttypeof data.colors === \"string\"\r\n\t\t\t\t\t\t\t? data.colors\r\n\t\t\t\t\t\t\t: JSON.stringify(data.colors);\r\n\t\t\t\t\tformData.append(\"colors\", colorsValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.sizes) {\r\n\t\t\t\t\tconst sizesValue =\r\n\t\t\t\t\t\ttypeof data.sizes === \"string\"\r\n\t\t\t\t\t\t\t? data.sizes\r\n\t\t\t\t\t\t\t: JSON.stringify(data.sizes);\r\n\t\t\t\t\tformData.append(\"sizes\", sizesValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.tags) {\r\n\t\t\t\t\tconst tagsValue =\r\n\t\t\t\t\t\ttypeof data.tags === \"string\"\r\n\t\t\t\t\t\t\t? data.tags\r\n\t\t\t\t\t\t\t: JSON.stringify(data.tags);\r\n\t\t\t\t\tformData.append(\"tags\", tagsValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Añadir atributos si existen\r\n\t\t\t\tif (data.attributes && Object.keys(data.attributes).length > 0) {\r\n\t\t\t\t\tformData.append(\"attributes\", JSON.stringify(data.attributes));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Opciones de manejo de imágenes\r\n\t\t\t\tif (data.replace_images !== undefined) {\r\n\t\t\t\t\tformData.append(\"replace_images\", String(data.replace_images));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.remove_images && data.remove_images.length > 0) {\r\n\t\t\t\t\tformData.append(\"remove_images\", JSON.stringify(data.remove_images));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Añadir imágenes si existen\r\n\t\t\t\tif (data.images && data.images.length > 0) {\r\n\t\t\t\t\tdata.images.forEach((file, index) => {\r\n\t\t\t\t\t\tformData.append(`images[${index}]`, file);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Realizar la petición directamente usando ApiClient\r\n\t\t\t\tconst response = await ApiClient.updateFile(\r\n\t\t\t\t\tAPI_ENDPOINTS.PRODUCTS.UPDATE(data.id),\r\n\t\t\t\t\tformData,\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Verificar la respuesta y extraer el producto actualizado\r\n\t\t\t\tlet updatedProduct = null;\r\n\r\n\t\t\t\t// Determinar el producto basado en la estructura de la respuesta\r\n\t\t\t\tif (response) {\r\n\t\t\t\t\tif (typeof response === \"object\") {\r\n\t\t\t\t\t\tupdatedProduct = response;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Actualizar la lista de productos si se actualizó correctamente\r\n\t\t\t\tif (updatedProduct) {\r\n\t\t\t\t\tconsole.log(\"✅ Producto actualizado exitosamente:\", updatedProduct);\r\n\t\t\t\t\tconsole.log(\"🔄 Iniciando invalidación de cache y refetch después de actualizar...\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t// ✅ NUEVA SOLUCIÓN: Invalidar cache explícitamente\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Invalidar caches relacionados con productos del seller\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tCacheService.removeItem('seller_products_list');\r\n\t\t\t\t\t\tCacheService.removeItem('seller_products_page_1');\r\n\t\t\t\t\t\tCacheService.removeItem('seller_products_page_2');\r\n\t\t\t\t\t\tCacheService.removeItem('seller_products_page_3');\r\n\t\t\t\t\t\tCacheService.removeItem('products_list');\r\n\t\t\t\t\t\tCacheService.removeItem('header_counters');\r\n\t\t\t\t\t\tCacheService.removeItem('product_' + data.id); // Cache del producto específico\r\n\t\t\t\t\t\tconsole.log(\"🗑️ Cache de productos invalidado correctamente\");\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tconsole.warn(\"⚠️ Error invalidando cache:\", error);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// SOLUCIÓN 1: Refresh inmediato sin cache\r\n\t\t\t\t\tsetTimeout(async () => {\r\n\t\t\t\t\t\tconsole.log(\"🔄 Ejecutando fetchSellerProducts después de actualizar...\");\r\n\t\t\t\t\t\tawait fetchSellerProducts(page, itemsPerPage, true); // forceRefresh = true\r\n\t\t\t\t\t\tconsole.log(\"✅ fetchSellerProducts completado\");\r\n\t\t\t\t\t}, 100); // Reducir delay inicial\r\n\t\t\t\t\t\r\n\t\t\t\t\t// SOLUCIÓN 2: Refresh backup con más tiempo\r\n\t\t\t\t\tsetTimeout(async () => {\r\n\t\t\t\t\t\tconsole.log(\"🔄 Refetch backup después de 1s...\");\r\n\t\t\t\t\t\tawait fetchSellerProducts(page, itemsPerPage, true);\r\n\t\t\t\t\t}, 1000);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"No se pudo actualizar el producto\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn updatedProduct;\r\n\t\t\t} catch (err: any) {\r\n\t\t\t\tlet userMessage = \"Error desconocido al actualizar producto\";\r\n\t\t\t\t\r\n\t\t\t\t// Extraer mensaje de error específico del servidor\r\n\t\t\t\tif (err && typeof err === 'object') {\r\n\t\t\t\t\t// Si es un AxiosError con response\r\n\t\t\t\t\tif (err.response && err.response.data) {\r\n\t\t\t\t\t\tconst responseData = err.response.data;\r\n\t\t\t\t\t\t// Extraer mensaje específico del backend\r\n\t\t\t\t\t\tif (responseData.message) {\r\n\t\t\t\t\t\t\tuserMessage = responseData.message;\r\n\t\t\t\t\t\t} else if (responseData.error) {\r\n\t\t\t\t\t\t\tuserMessage = responseData.error;\r\n\t\t\t\t\t\t} else if (err.message) {\r\n\t\t\t\t\t\t\tuserMessage = err.message;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (err.message) {\r\n\t\t\t\t\t\tuserMessage = err.message;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst fullErrorMessage = `Error al actualizar producto: ${userMessage}`;\r\n\t\t\t\tsetError(fullErrorMessage);\r\n\t\t\t\tconsole.error(\"Error al actualizar producto:\", err);\r\n\t\t\t\t\r\n\t\t\t\t// Mostrar mensaje específico y claro al usuario\r\n\t\t\t\talert(userMessage);\r\n\t\t\t\t\r\n\t\t\t\treturn null;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchSellerProducts, page, itemsPerPage]\r\n\t);\r\n\r\n\t/**\r\n\t * Elimina un producto\r\n\t */\r\n\tconst deleteProduct = useCallback(\r\n\t\tasync (id: number) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Usamos el servicio existente para eliminar el producto\r\n\t\t\t\tconst result = await productService.deleteProduct(id);\r\n\r\n\t\t\t\t// Actualizar la lista de productos si se eliminó correctamente\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tconsole.log(\"✅ Producto eliminado exitosamente\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t// ✅ INVALIDAR CACHE: Mismo patrón que create/update\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tCacheService.removeItem('seller_products_list');\r\n\t\t\t\t\t\tCacheService.removeItem('seller_products_page_1');\r\n\t\t\t\t\t\tCacheService.removeItem('seller_products_page_2');\r\n\t\t\t\t\t\tCacheService.removeItem('seller_products_page_3');\r\n\t\t\t\t\t\tCacheService.removeItem('products_list');\r\n\t\t\t\t\t\tCacheService.removeItem('header_counters');\r\n\t\t\t\t\t\tCacheService.removeItem('product_' + id); // Cache del producto específico\r\n\t\t\t\t\t\tconsole.log(\"🗑️ Cache de productos invalidado correctamente\");\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tconsole.warn(\"⚠️ Error invalidando cache:\", error);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Refresh inmediato después de eliminar\r\n\t\t\t\t\tsetTimeout(async () => {\r\n\t\t\t\t\t\tawait fetchSellerProducts(page, itemsPerPage, true);\r\n\t\t\t\t\t}, 100);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error ? err.message : \"Error al eliminar producto\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al eliminar producto:\", err);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchSellerProducts, page, itemsPerPage]\r\n\t);\r\n\r\n\t/**\r\n\t * Cambia el estado de un producto (active/inactive)\r\n\t */\r\n\tconst toggleProductStatus = useCallback(\r\n\t\tasync (id: number, currentStatus: string) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst newStatus = currentStatus === \"active\" ? \"inactive\" : \"active\";\r\n\r\n\t\t\t\t// Crear FormData con solo el campo status\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append(\"status\", newStatus);\r\n\r\n\t\t\t\t// Enviar la actualización directamente\r\n\t\t\t\tconst response = await ApiClient.uploadFile(\r\n\t\t\t\t\tAPI_ENDPOINTS.PRODUCTS.UPDATE(id),\r\n\t\t\t\t\tformData\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Actualizar la lista de productos si se actualizó correctamente\r\n\t\t\t\tif (response) {\r\n\t\t\t\t\tconsole.log(\"✅ Estado del producto cambiado exitosamente\");\r\n\t\t\t\t\t// Refresh inmediato después de cambiar estado\r\n\t\t\t\t\tsetTimeout(async () => {\r\n\t\t\t\t\t\tawait fetchSellerProducts(page, itemsPerPage, true);\r\n\t\t\t\t\t}, 100);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"Error al cambiar estado del producto\");\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terr instanceof Error\r\n\t\t\t\t\t\t? err.message\r\n\t\t\t\t\t\t: \"Error al cambiar estado del producto\";\r\n\t\t\t\tsetError(errorMessage);\r\n\t\t\t\tconsole.error(\"Error al cambiar estado del producto:\", err);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchSellerProducts, page, itemsPerPage]\r\n\t);\r\n\r\n\t// Cargar productos del vendedor al montar el componente o cuando cambie el usuario\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\tfetchSellerProducts(page, itemsPerPage);\r\n\t\t}\r\n\t}, [user, page, itemsPerPage, fetchSellerProducts]);\r\n\r\n\t// Cambiar página\r\n\tconst changePage = useCallback((newPage: number) => {\r\n\t\tsetPage(newPage);\r\n\t}, []);\r\n\r\n\t// Cambiar ítems por página\r\n\tconst changeItemsPerPage = useCallback((newItemsPerPage: number) => {\r\n\t\tsetItemsPerPage(newItemsPerPage);\r\n\t\tsetPage(1); // Resetear a la primera página\r\n\t}, []);\r\n\r\n\treturn {\r\n\t\tproducts,\r\n\t\tproductDetail,\r\n\t\ttotalProducts,\r\n\t\tloading,\r\n\t\terror,\r\n\t\tpage,\r\n\t\titemsPerPage,\r\n\t\tfetchSellerProducts,\r\n\t\tfetchProductById,\r\n\t\tcreateProduct,\r\n\t\tupdateProduct,\r\n\t\tdeleteProduct,\r\n\t\ttoggleProductStatus,\r\n\t\tchangePage,\r\n\t\tchangeItemsPerPage,\r\n\t};\r\n};\r\n\r\nexport default useSellerProducts;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {Link, useNavigate, useLocation} from \"react-router-dom\";\r\nimport {\r\n\tPackage,\r\n\tEdit,\r\n\tTrash2,\r\n\tSearch,\r\n\tFilter,\r\n\tPlusCircle,\r\n\tEye,\r\n\tEyeOff,\r\n\tAlertCircle,\r\n} from \"lucide-react\";\r\nimport useSellerProducts from \"../../hooks/useSellerProducts\";\r\nimport useCategories from \"../../hooks/useCategories\";\r\nimport {formatCurrency} from \"../../../utils/formatters/formatCurrency\";\r\nimport {formatDate} from \"../../../utils/formatters/formatDate\";\r\n// Adaptador para productos en la tabla\r\ninterface ProductTableItem {\r\n\tid: number;\r\n\tname: string;\r\n\tprice: number;\r\n\tstock: number;\r\n\tcategory: string;\r\n\tcategoryId: number;\r\n\tstatus: \"active\" | \"inactive\" | \"draft\";\r\n\tcreatedAt: string;\r\n}\r\n\r\nconst SellerProductsPage: React.FC = () => {\r\n\t// Estado y hooks\r\n\tconst navigate = useNavigate();\r\n\tconst location = useLocation();\r\n\tconst {\r\n\t\tproducts,\r\n\t\tloading,\r\n\t\terror,\r\n\t\tfetchSellerProducts,\r\n\t\tdeleteProduct,\r\n\t\ttoggleProductStatus,\r\n\t} = useSellerProducts();\r\n\r\n\tconst {categories, fetchCategories} = useCategories();\r\n\tconst [searchTerm, setSearchTerm] = useState(\"\");\r\n\tconst [statusFilter, setStatusFilter] = useState<string>(\"all\");\r\n\tconst [adaptedProducts, setAdaptedProducts] = useState<ProductTableItem[]>(\r\n\t\t[]\r\n\t);\r\n\tconst [isDeleting, setIsDeleting] = useState<number | null>(null);\r\n\tconst [isTogglingStatus, setIsTogglingStatus] = useState<number | null>(null);\r\n\r\n\t// Cargar categorías al iniciar\r\n\tuseEffect(() => {\r\n\t\tfetchCategories();\r\n\t}, [fetchCategories]);\r\n\t\r\n\t// 🔄 SOLUCIÓN: Detectar cuando viene de una edición y forzar refresh\r\n\tuseEffect(() => {\r\n\t\tconst state = location.state as { \r\n\t\t\tupdatedProduct?: boolean;\r\n\t\t\tproductId?: number;\r\n\t\t\ttimestamp?: number;\r\n\t\t} | null;\r\n\t\t\r\n\t\tif (state?.updatedProduct) {\r\n\t\t\tconsole.log(\"🔄 Detectado regreso desde edición, forzando refresh...\", {\r\n\t\t\t\tproductId: state.productId,\r\n\t\t\t\ttimestamp: state.timestamp\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Force refresh inmediato\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tfetchSellerProducts(1, 10, true); // forceRefresh = true\r\n\t\t\t}, 100);\r\n\t\t\t\r\n\t\t\t// Limpiar el state para evitar refetch en futuras navegaciones\r\n\t\t\tnavigate(location.pathname, { replace: true, state: null });\r\n\t\t}\r\n\t}, [location.state, fetchSellerProducts, navigate, location.pathname]);\r\n\r\n\t// Adaptar productos de la API al formato de la tabla\r\n\tuseEffect(() => {\r\n\t\tif (products && products.length > 0) {\r\n\t\t\t// Crear un mapa de IDs de categoría a nombres para búsqueda rápida\r\n\t\t\tconst categoryMap = new Map();\r\n\t\t\tcategories.forEach((category) => {\r\n\t\t\t\tif (category.id) {\r\n\t\t\t\t\tcategoryMap.set(category.id, category.name);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconst tableProducts = products.map((product) => {\r\n\t\t\t\t// Obtener categoría del mapa o mostrar el ID si no se encuentra\r\n\t\t\t\tconst categoryId = product.categoryId || 0;\r\n\t\t\t\tconst categoryName =\r\n\t\t\t\t\tproduct.category_name || `Categoría ${categoryId}`;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product.id || 0,\r\n\t\t\t\t\tname: product.name,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\ttypeof product.price === \"number\"\r\n\t\t\t\t\t\t\t? product.price\r\n\t\t\t\t\t\t\t: parseFloat(String(product.price)) || 0,\r\n\t\t\t\t\tstock:\r\n\t\t\t\t\t\ttypeof product.stock === \"number\"\r\n\t\t\t\t\t\t\t? product.stock\r\n\t\t\t\t\t\t\t: parseInt(String(product.stock)) || 0,\r\n\t\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\t\tcategory: categoryName,\r\n\t\t\t\t\tstatus:\r\n\t\t\t\t\t\t(product.status as \"active\" | \"inactive\" | \"draft\") || \"inactive\",\r\n\t\t\t\t\tcreatedAt:\r\n\t\t\t\t\t\tformatDate(product.created_at),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tsetAdaptedProducts(tableProducts);\r\n\t\t} else {\r\n\t\t\tsetAdaptedProducts([]);\r\n\t\t}\r\n\t}, [products, categories]);\r\n\r\n\t// Filtrar productos basados en búsqueda y estado\r\n\tconst filteredProducts = adaptedProducts.filter((product) => {\r\n\t\tconst matchesSearch =\r\n\t\t\tproduct.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n\t\t\tproduct.category.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n\t\tconst matchesStatus =\r\n\t\t\tstatusFilter === \"all\" || product.status === statusFilter;\r\n\r\n\t\treturn matchesSearch && matchesStatus;\r\n\t});\r\n\r\n\t// Manejar eliminación de producto\r\n\tconst handleDelete = async (id: number) => {\r\n\t\tif (window.confirm(\"¿Estás seguro de que deseas eliminar este producto?\")) {\r\n\t\t\ttry {\r\n\t\t\t\tsetIsDeleting(id);\r\n\t\t\t\tconst success = await deleteProduct(id);\r\n\t\t\t\tif (!success) {\r\n\t\t\t\t\t// Manejar error de eliminación\r\n\t\t\t\t\talert(\r\n\t\t\t\t\t\t\"No se pudo eliminar el producto. Inténtalo de nuevo más tarde.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsDeleting(null);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Cambiar estado del producto (activar/desactivar)\r\n\tconst handleToggleStatus = async (\r\n\t\tid: number,\r\n\t\tcurrentStatus: \"active\" | \"inactive\" | \"draft\"\r\n\t) => {\r\n\t\ttry {\r\n\t\t\tsetIsTogglingStatus(id);\r\n\t\t\tconst success = await toggleProductStatus(id, currentStatus);\r\n\t\t\tif (!success) {\r\n\t\t\t\talert(\r\n\t\t\t\t\t\"No se pudo cambiar el estado del producto. Inténtalo de nuevo más tarde.\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tsetIsTogglingStatus(null);\r\n\t\t}\r\n\t};\r\n\r\n\t// Navegar a la página de edición\r\n\tconst handleEdit = (id: number) => {\r\n\t\tnavigate(`/seller/products/edit/${id}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"space-y-6\">\r\n\t\t\t<div className=\"flex justify-between items-center\">\r\n\t\t\t\t<h1 className=\"text-2xl font-bold text-gray-900\">\r\n\t\t\t\t\tMis Productos\r\n\t\t\t\t</h1>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto=\"/seller/products/create\"\r\n\t\t\t\t\tclassName=\"flex items-center px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<PlusCircle size={18} className=\"mr-2\" />\r\n\t\t\t\t\tAñadir Nuevo Producto\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Filters */}\r\n\t\t\t<div className=\"bg-white rounded-lg shadow-sm p-4\">\r\n\t\t\t\t<div className=\"flex flex-col md:flex-row gap-4\">\r\n\t\t\t\t\t{/* Search */}\r\n\t\t\t\t\t<div className=\"relative flex-grow\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Buscar productos...\"\r\n\t\t\t\t\t\t\tclassName=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\tvalue={searchTerm}\r\n\t\t\t\t\t\t\tonChange={(e) => setSearchTerm(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Search className=\"absolute left-3 top-2.5 h-5 w-5 text-gray-400\" />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Status Filter */}\r\n\t\t\t\t\t<div className=\"flex items-center space-x-2\">\r\n\t\t\t\t\t\t<Filter className=\"h-5 w-5 text-gray-500\" />\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\tvalue={statusFilter}\r\n\t\t\t\t\t\t\tonChange={(e) => setStatusFilter(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"all\">Todos los Estados</option>\r\n\t\t\t\t\t\t\t<option value=\"active\">Activo</option>\r\n\t\t\t\t\t\t\t<option value=\"inactive\">Inactivo</option>\r\n\t\t\t\t\t\t\t<option value=\"draft\">Borrador</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Products Table */}\r\n\t\t\t<div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n\t\t\t\t{loading ? (\r\n\t\t\t\t\t<div className=\"p-8 flex justify-center\">\r\n\t\t\t\t\t\t<div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : error ? (\r\n\t\t\t\t\t<div className=\"p-8 text-center\">\r\n\t\t\t\t\t\t<AlertCircle className=\"h-12 w-12 mx-auto text-red-500 mb-4\" />\r\n\t\t\t\t\t\t<h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n\t\t\t\t\t\t\tError al cargar productos\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<p className=\"text-gray-500 mb-4\">{error}</p>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => fetchSellerProducts()}\r\n\t\t\t\t\t\t\tclassName=\"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tIntentar de nuevo\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : filteredProducts.length === 0 ? (\r\n\t\t\t\t\t<div className=\"p-8 text-center\">\r\n\t\t\t\t\t\t<Package className=\"h-12 w-12 mx-auto text-gray-400 mb-4\" />\r\n\t\t\t\t\t\t<h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n\t\t\t\t\t\t\tNo se encontraron productos\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<p className=\"text-gray-500 mb-4\">\r\n\t\t\t\t\t\t\t{searchTerm || statusFilter !== \"all\"\r\n\t\t\t\t\t\t\t\t? \"Intenta ajustar tu búsqueda o filtro para encontrar lo que buscas.\"\r\n\t\t\t\t\t\t\t\t: \"Comienza agregando tu primer producto.\"}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto=\"/seller/products/create\"\r\n\t\t\t\t\t\t\tclassName=\"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PlusCircle size={18} className=\"mr-2\" />\r\n\t\t\t\t\t\t\tAñadir Nuevo Producto\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"overflow-x-auto\">\r\n\t\t\t\t\t\t<table className=\"min-w-full divide-y divide-gray-200\">\r\n\t\t\t\t\t\t\t<thead className=\"bg-gray-50\">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\t\tscope=\"col\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tProducto\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\t\tscope=\"col\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tCategoría\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\t\tscope=\"col\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPrecio\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\t\tscope=\"col\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\t\tscope=\"col\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tEstado\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\t\tscope=\"col\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tCreado\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\t\tscope=\"col\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tAcciones\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody className=\"bg-white divide-y divide-gray-200\">\r\n\t\t\t\t\t\t\t\t{filteredProducts.map((product) => (\r\n\t\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\t\tkey={product.id}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"hover:bg-gray-50\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex-shrink-0 h-10 w-10 bg-gray-100 rounded-md flex items-center justify-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Package className=\"h-6 w-6 text-gray-500\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"ml-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-sm font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{product.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-sm text-gray-500\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tID: {product.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-sm text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{product.category || \"Sin categoría\"}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-sm text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{formatCurrency(product.price)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`text-sm ${product.stock > 0 ? \"text-green-600\" : \"text-red-600\"}`}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{product.stock > 0 ? product.stock : \"Sin stock\"}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tproduct.status === \"active\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"bg-green-100 text-green-800\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: product.status === \"inactive\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"bg-yellow-100 text-yellow-800\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"bg-gray-100 text-gray-800\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{product.status === \"active\" && \"Activo\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{product.status === \"inactive\" && \"Inactivo\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{product.status === \"draft\" && \"Borrador\"}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n\t\t\t\t\t\t\t\t\t\t\t{product.createdAt}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex justify-end space-x-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* Botón para activar/desactivar */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleToggleStatus(product.id, product.status)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isTogglingStatus === product.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`p-1 rounded-md ${\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisTogglingStatus === product.id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"opacity-50 cursor-not-allowed\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: product.status === \"active\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"text-yellow-600 hover:bg-yellow-100\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"text-green-600 hover:bg-green-100\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tproduct.status === \"active\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"Desactivar\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"Activar\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{isTogglingStatus === product.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"animate-spin h-4 w-4\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : product.status === \"active\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EyeOff size={18} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Eye size={18} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* Botón para editar */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleEdit(product.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"p-1 text-blue-600 hover:bg-blue-100 rounded-md\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Editar producto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Edit size={18} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* Botón para eliminar */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(product.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isDeleting === product.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`p-1 text-red-600 hover:bg-red-100 rounded-md ${\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDeleting === product.id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"opacity-50 cursor-not-allowed\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Eliminar producto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{isDeleting === product.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"animate-spin h-4 w-4\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Trash2 size={18} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SellerProductsPage;\r\n","import React from \"react\";\r\nimport type {OrderStatUI} from \"../../../core/adapters/OrderServiceAdapter\";\r\n\r\nexport interface StatItem {\r\n\tlabel: string;\r\n\tvalue: string | number;\r\n\ticon: React.ReactNode;\r\n\tcolor: string;\r\n\tisCurrency?: boolean;\r\n}\r\n\r\ninterface SellerStatCardListProps {\r\n\titems: OrderStatUI[];\r\n}\r\n\r\nexport const SellerStatCardList: React.FC<SellerStatCardListProps> = ({\r\n\titems,\r\n}) => {\r\n\tconst getColorClass = (color: string) => {\r\n\t\tswitch (color) {\r\n\t\t\tcase \"blue\":\r\n\t\t\t\treturn \"bg-blue-50 text-blue-700 border-blue-200\";\r\n\t\t\tcase \"green\":\r\n\t\t\t\treturn \"bg-green-50 text-green-700 border-green-200\";\r\n\t\t\tcase \"indigo\":\r\n\t\t\t\treturn \"bg-indigo-50 text-indigo-700 border-indigo-200\";\r\n\t\t\tcase \"red\":\r\n\t\t\t\treturn \"bg-red-50 text-red-700 border-red-200\";\r\n\t\t\tcase \"yellow\":\r\n\t\t\t\treturn \"bg-yellow-50 text-yellow-700 border-yellow-200\";\r\n\t\t\tcase \"purple\":\r\n\t\t\t\treturn \"bg-purple-50 text-purple-700 border-purple-200\";\r\n\t\t\tdefault:\r\n\t\t\t\treturn \"bg-gray-50 text-gray-700 border-gray-200\";\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{items.map((item, index) => (\r\n\t\t\t\t<div\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tclassName={`rounded-lg border p-4 ${getColorClass(item.color)}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"flex items-center justify-between\">\r\n\t\t\t\t\t\t<h3 className=\"text-sm font-medium\">{item.label}</h3>\r\n\t\t\t\t\t\t{item.icon || null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"mt-2 text-2xl font-bold\">{item.value}</p>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SellerStatCardList;\r\n","// src/core/adapters/SellerOrderServiceAdapter.ts\r\nimport ApiClient from \"../../infrastructure/api/apiClient\";\r\nimport { API_ENDPOINTS } from \"../../constants/apiEndpoints\";\r\nimport type {ServiceResponse} from \"../../presentation/types/admin/ProductFilterParams\";\r\nimport type {OrderStatus} from \"../domain/entities/Order\";\r\n\r\n// Definición de interfaces para los datos de la UI\r\nexport interface SellerOrderUI {\r\n\tid: string;\r\n\torderNumber: string;\r\n\tdate: string;\r\n\tcustomer: {\r\n\t\tid: number;\r\n\t\tname: string;\r\n\t\temail: string;\r\n\t};\r\n\ttotal: number;\r\n\titems: Array<{\r\n\t\tid: number;\r\n\t\tproduct_id: number;\r\n\t\tquantity: number;\r\n\t\tprice: number;\r\n\t\tsubtotal: number;\r\n\t\tname?: string;\r\n\t\tsku?: string;\r\n\t\timage?: string;\r\n\t}>;\r\n\tstatus: OrderStatus;\r\n\tpaymentStatus: \"pending\" | \"completed\" | \"failed\" | \"rejected\";\r\n\tshippingAddress?: string;\r\n}\r\n\r\nexport interface SellerOrderStatUI {\r\n\tlabel: string;\r\n\tvalue: number | string;\r\n\tisCurrency?: boolean;\r\n\tcolor: string;\r\n\ticon?: React.ReactNode;\r\n}\r\n\r\n// Definición de interfaces para filtros de búsqueda\r\nexport interface SellerOrderFilters {\r\n\tpage?: number;\r\n\tlimit?: number;\r\n\tstatus?: string;\r\n\tpaymentStatus?: string;\r\n\tsearch?: string;\r\n\tdateFrom?: string;\r\n\tdateTo?: string;\r\n}\r\n\r\n/**\r\n * Adaptador de servicio para gestionar órdenes del vendedor\r\n * Convierte los datos de la API a formato amigable para la UI\r\n */\r\nexport default class SellerOrderServiceAdapter {\r\n\t/**\r\n\t * Obtiene las órdenes del vendedor con filtros aplicados\r\n\t * @param filters Filtros para la búsqueda de órdenes\r\n\t * @returns Órdenes formateadas y datos de paginación\r\n\t */\r\n\tpublic async getSellerOrders(filters: SellerOrderFilters = {}) {\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"SellerOrderServiceAdapter: Obteniendo órdenes con filtros:\",\r\n\t\t\t\tfilters\r\n\t\t\t);\r\n\r\n\t\t\t// Formatear los parámetros para la API\r\n\t\t\tconst apiFilters: any = {\r\n\t\t\t\tlimit: filters.limit || 10,\r\n\t\t\t\tpage: filters.page || 1,\r\n\t\t\t};\r\n\r\n\t\t\t// Añadir filtros opcionales si están presentes\r\n\t\t\tif (filters.status && filters.status !== \"all\") {\r\n\t\t\t\tapiFilters.status = filters.status;\r\n\t\t\t}\r\n\r\n\t\t\tif (filters.paymentStatus && filters.paymentStatus !== \"all\") {\r\n\t\t\t\tapiFilters.payment_status = filters.paymentStatus;\r\n\t\t\t}\r\n\r\n\t\t\tif (filters.search) {\r\n\t\t\t\tapiFilters.search = filters.search;\r\n\t\t\t}\r\n\r\n\t\t\tif (filters.dateFrom) {\r\n\t\t\t\tapiFilters.date_from = filters.dateFrom;\r\n\t\t\t}\r\n\r\n\t\t\tif (filters.dateTo) {\r\n\t\t\t\tapiFilters.date_to = filters.dateTo;\r\n\t\t\t}\r\n\r\n\t\t\t// Llamar a la API usando la ruta específica para vendedores\r\n\t\t\tconst response = await ApiClient.get<any>(\r\n\t\t\t\tAPI_ENDPOINTS.ORDERS.SELLER_ORDERS,\r\n\t\t\t\tapiFilters\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"SellerOrderServiceAdapter: Respuesta de la API:\", response);\r\n\r\n\t\t\t// Verificar la estructura de la respuesta\r\n\t\t\tif (!response || response.success !== true) {\r\n\t\t\t\tthrow new Error(\"Respuesta de API inválida\");\r\n\t\t\t}\r\n\r\n\t\t\t// Mapear los datos a formato UI\r\n\t\t\tconst orders: SellerOrderUI[] = Array.isArray(response.data)\r\n\t\t\t\t? response.data.map((order: any) => this.mapOrderToUI(order))\r\n\t\t\t\t: [];\r\n\r\n\t\t\t// Extraer información de paginación o usar valores predeterminados\r\n\t\t\tconst pagination = response.pagination || {\r\n\t\t\t\tcurrentPage: 1,\r\n\t\t\t\ttotalPages: 1,\r\n\t\t\t\ttotalItems: orders.length,\r\n\t\t\t\titemsPerPage: 10,\r\n\t\t\t};\r\n\r\n\t\t\t// Convertir todos los valores numéricos que podrían venir como strings\r\n\t\t\tconst formattedPagination = {\r\n\t\t\t\tcurrentPage: Number(pagination.currentPage) || 1,\r\n\t\t\t\ttotalPages: Number(pagination.totalPages) || 1,\r\n\t\t\t\ttotalItems: Number(pagination.totalItems) || orders.length,\r\n\t\t\t\titemsPerPage: Number(pagination.itemsPerPage) || 10,\r\n\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\torders,\r\n\t\t\t\tpagination: formattedPagination,\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t\"SellerOrderServiceAdapter: Error al obtener órdenes:\",\r\n\t\t\t\terror\r\n\t\t\t);\r\n\r\n\t\t\t// Devolver un valor predeterminado en caso de error\r\n\t\t\treturn {\r\n\t\t\t\torders: [],\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tcurrentPage: 1,\r\n\t\t\t\t\ttotalPages: 1,\r\n\t\t\t\t\ttotalItems: 0,\r\n\t\t\t\t\titemsPerPage: 10,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convierte un objeto de orden del API al formato UI\r\n\t * @param order Objeto de orden del API\r\n\t * @returns Objeto de orden con formato para UI\r\n\t */\r\n\tprivate mapOrderToUI(order: any): SellerOrderUI {\r\n\t\t// Asegurar que el objeto order existe\r\n\t\tif (!order) {\r\n\t\t\tconsole.warn(\"SellerOrderServiceAdapter: Orden inválida recibida\");\r\n\t\t\treturn {\r\n\t\t\t\tid: \"0\",\r\n\t\t\t\torderNumber: \"N/A\",\r\n\t\t\t\tdate: new Date().toISOString(),\r\n\t\t\t\tcustomer: {\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\tname: \"Cliente\",\r\n\t\t\t\t\temail: \"sin@email.com\",\r\n\t\t\t\t},\r\n\t\t\t\ttotal: 0,\r\n\t\t\t\titems: [],\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\tpaymentStatus: \"pending\",\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Extraer datos del usuario\r\n\t\tconst userName = order.customer?.name || \"Cliente\";\r\n\t\tconst userEmail = order.customer?.email || \"sin@email.com\";\r\n\r\n\t\t// Asegurar que items sea un array y mapear correctamente\r\n\t\tconst items = Array.isArray(order.items) ? order.items.map((item: any) => ({\r\n\t\t\tid: item.id,\r\n\t\t\tproduct_id: item.product_id,\r\n\t\t\tquantity: Number(item.quantity) || 1,\r\n\t\t\tprice: Number(item.price) || 0,\r\n\t\t\tsubtotal: Number(item.subtotal) || 0,\r\n\t\t\tname: item.product?.name || item.product_name || `Producto ${item.product_id}`,\r\n\t\t\tsku: item.product?.sku || item.product_sku || `SKU-${item.product_id}`,\r\n\t\t\timage: item.product?.image || item.product_image || '/placeholder-product.jpg'\r\n\t\t})) : [];\r\n\r\n\t\t// Usar el total que viene del backend directamente\r\n\t\tconst total = typeof order.total === \"string\" \r\n\t\t\t? parseFloat(order.total) \r\n\t\t\t: order.total || 0;\r\n\r\n\t\treturn {\r\n\t\t\tid: String(order.id || 0),\r\n\t\t\torderNumber: order.orderNumber || order.order_number || `#${order.id || 0}`,\r\n\t\t\tdate: order.date || order.created_at || new Date().toISOString(),\r\n\t\t\tcustomer: {\r\n\t\t\t\tid: order.customer?.id || order.user_id || 0,\r\n\t\t\t\tname: userName,\r\n\t\t\t\temail: userEmail,\r\n\t\t\t},\r\n\t\t\ttotal: total,\r\n\t\t\titems: items,\r\n\t\t\tstatus: order.status || \"pending\",\r\n\t\t\tpaymentStatus: order.paymentStatus || order.payment_status || \"pending\",\r\n\t\t\tshippingAddress:\r\n\t\t\t\ttypeof order.shippingAddress === \"string\"\r\n\t\t\t\t\t? order.shippingAddress\r\n\t\t\t\t\t: JSON.stringify(order.shippingAddress || {}),\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Actualiza el estado de una orden\r\n\t * @param orderId ID de la orden\r\n\t * @param status Nuevo estado\r\n\t * @returns Éxito de la operación\r\n\t */\r\n\tpublic async updateOrderStatus(\r\n\t\torderId: string,\r\n\t\tstatus: OrderStatus\r\n\t): Promise<boolean> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`SellerOrderServiceAdapter: Actualizando orden ${orderId} a estado ${status}`\r\n\t\t\t);\r\n\r\n\t\t\t// Usar el endpoint de actualización de estado según los endpoints reales\r\n\t\t\tconst response = await ApiClient.patch<ServiceResponse>(\r\n\t\t\t\tAPI_ENDPOINTS.ORDERS.UPDATE_STATUS(Number(orderId)),\r\n\t\t\t\t{\r\n\t\t\t\t\tstatus,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\t// Verificar con campo 'success' en la respuesta\r\n\t\t\tif (!response || response.success !== true) {\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t`Error al actualizar estado: Respuesta inválida`,\r\n\t\t\t\t\tresponse\r\n\t\t\t\t);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Estado de orden actualizado correctamente:`,\r\n\t\t\t\tresponse.data || response.message\r\n\t\t\t);\r\n\r\n\t\t\treturn true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`SellerOrderServiceAdapter: Error al actualizar estado de orden ${orderId}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene estadísticas de pedidos del vendedor\r\n\t * @returns Estadísticas formateadas para la UI\r\n\t */\r\n\tpublic async getOrderStats(): Promise<SellerOrderStatUI[]> {\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"SellerOrderServiceAdapter: Obteniendo estadísticas de órdenes\"\r\n\t\t\t);\r\n\r\n\t\t\t// Usar el endpoint específico para estadísticas de vendedor\r\n\t\t\tconst response = await ApiClient.get<any>(API_ENDPOINTS.ORDERS.STATS);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"SellerOrderServiceAdapter: Respuesta de estadísticas:\",\r\n\t\t\t\tresponse\r\n\t\t\t);\r\n\r\n\t\t\t// Verificar con campo 'success' en lugar de 'status'\r\n\t\t\tif (!response || response.success !== true) {\r\n\t\t\t\tthrow new Error(\"Respuesta de API inválida para estadísticas\");\r\n\t\t\t}\r\n\r\n\t\t\tconst data = response.data || {};\r\n\r\n\t\t\t// Mapear los datos a estadísticas para UI\r\n\t\t\tconst stats: SellerOrderStatUI[] = [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Total Pedidos\",\r\n\t\t\t\t\tvalue: Number(data.totalOrders) || 0,\r\n\t\t\t\t\tcolor: \"blue\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Pendientes\",\r\n\t\t\t\t\tvalue: Number(data.pendingOrders) || 0,\r\n\t\t\t\t\tcolor: \"yellow\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"En Proceso\",\r\n\t\t\t\t\tvalue: Number(data.processingOrders) || 0,\r\n\t\t\t\t\tcolor: \"blue\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Enviados\",\r\n\t\t\t\t\tvalue: Number(data.shippedOrders) || 0,\r\n\t\t\t\t\tcolor: \"indigo\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Total Ventas\",\r\n\t\t\t\t\tvalue: Number(data.totalSales) || 0,\r\n\t\t\t\t\tisCurrency: true,\r\n\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t},\r\n\t\t\t];\r\n\r\n\t\t\treturn stats;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t\"SellerOrderServiceAdapter: Error al obtener estadísticas:\",\r\n\t\t\t\terror\r\n\t\t\t);\r\n\r\n\t\t\t// Devolver estadísticas básicas en caso de error\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Total Pedidos\",\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\tcolor: \"blue\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Pendientes\",\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\tcolor: \"yellow\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"En Proceso\",\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\tcolor: \"blue\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Total Ventas\",\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\tisCurrency: true,\r\n\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene los detalles de una orden específica como vendedor\r\n\t * CORREGIDO: Se adapta exactamente a la respuesta del backend\r\n\t */\r\n\tasync getOrderDetails(orderId: string | number): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst id = typeof orderId === \"string\" ? parseInt(orderId) : orderId;\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`SellerOrderServiceAdapter: Obteniendo detalle de orden ${id} como vendedor`\r\n\t\t\t);\r\n\r\n\t\t\tconst response = await ApiClient.get<any>(\r\n\t\t\t\tAPI_ENDPOINTS.ORDERS.SELLER_ORDER_DETAILS(id)\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`SellerOrderServiceAdapter: Respuesta para orden ${id}:`,\r\n\t\t\t\tresponse\r\n\t\t\t);\r\n\r\n\t\t\tif (!response || !response.data) {\r\n\t\t\t\tthrow new Error(\"Respuesta vacía al obtener detalle de orden\");\r\n\t\t\t}\r\n\r\n\t\t\tconst orderData = response.data;\r\n\t\t\t\r\n\t\t\t// 🔍 INVESTIGACIÓN DETALLADA DE CAMPOS\r\n\t\t\tconsole.log('🔍 TODOS LOS CAMPOS EN orderData:', Object.keys(orderData));\r\n\t\t\tconsole.log('🔍 orderData.seller_id:', orderData.seller_id);\r\n\t\t\tconsole.log('🔍 orderData.sellerId:', orderData.sellerId);\r\n\t\t\tconsole.log('🔍 orderData.user_id:', orderData.user_id);\r\n\t\t\tconsole.log('🔍 orderData.userId:', orderData.userId);\r\n\t\t\tconsole.log('🔍 orderData.seller:', orderData.seller);\r\n\t\t\tconsole.log('🔍 orderData completo:', orderData);\r\n\r\n\t\t\t// SIMPLIFICADO: Usar los datos tal como vienen del backend\r\n\t\t\t// Mapear solo los campos necesarios sin cambiar la estructura\r\n\t\t\tconst orderDetail = {\r\n\t\t\t\t// Datos básicos de la orden\r\n\t\t\t\tid: orderData.id,\r\n\t\t\t\tsellerId: orderData.seller_id || orderData.sellerId, // ✅ AGREGAR SELLER ID\r\n\t\t\t\torderNumber: orderData.orderNumber || orderData.order_number || `#${orderData.id}`,\r\n\t\t\t\torderDate: orderData.orderDate || orderData.order_date || orderData.date,\r\n\t\t\t\tstatus: orderData.status,\r\n\t\t\t\ttotal: Number(orderData.total) || 0,\r\n\t\t\t\t\r\n\t\t\t\t// Items de la orden\r\n\t\t\t\titems: Array.isArray(orderData.items) ? orderData.items.map((item: any) => ({\r\n\t\t\t\t\tid: item.id,\r\n\t\t\t\t\tproduct_id: item.product_id,\r\n\t\t\t\t\tproduct_name: item.product_name || `Producto ${item.product_id}`,\r\n\t\t\t\t\tquantity: Number(item.quantity) || 1,\r\n\t\t\t\t\tunit_price: Number(item.unit_price) || 0,\r\n\t\t\t\t\ttotal_price: Number(item.total_price) || 0,\r\n\t\t\t\t\toriginal_unit_price: Number(item.original_unit_price) || 0,\r\n\t\t\t\t\tprice: Number(item.unit_price) || 0, // Para compatibilidad\r\n\t\t\t\t\tsubtotal: Number(item.total_price) || 0, // Para compatibilidad\r\n\t\t\t\t\tproduct_image: item.product_image || '/placeholder-product.jpg',\r\n\t\t\t\t\tproduct_slug: item.product_slug || null,\r\n\t\t\t\t\t\r\n\t\t\t\t\t// ✅ DATOS ESPECÍFICOS DEL SELLER\r\n\t\t\t\t\tseller_discount_percentage: Number(item.seller_discount_percentage) || 0,\r\n\t\t\t\t\tseller_discount_amount: Number(item.seller_discount_amount) || 0,\r\n\t\t\t\t\tplatform_commission_rate: Number(item.platform_commission_rate) || 0,\r\n\t\t\t\t\tplatform_commission_amount: Number(item.platform_commission_amount) || 0,\r\n\t\t\t\t\tseller_net_earning_from_products: Number(item.seller_net_earning_from_products) || 0,\r\n\t\t\t\t\tvolume_discount_percentage: Number(item.volume_discount_percentage) || 0,\r\n\t\t\t\t\thas_volume_discount: Boolean(item.has_volume_discount) || false\r\n\t\t\t\t})) : [],\r\n\r\n\t\t\t\t// Datos del cliente\r\n\t\t\t\tcustomer: orderData.customer || {\r\n\t\t\t\t\tid: orderData.user_id || 0,\r\n\t\t\t\t\tname: \"Cliente\",\r\n\t\t\t\t\temail: \"sin@email.com\"\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t\t// ✅ CAMPOS ADICIONALES PARA COMPATIBILIDAD CON LA UI\r\n\t\t\t\tcustomerName: orderData.customer?.name || \"Cliente\",\r\n\t\t\t\tcustomerEmail: orderData.customer?.email || \"sin@email.com\",\r\n\r\n\t\t\t\t// Datos de envío\r\n\t\t\t\tshippingData: orderData.shippingData || orderData.shipping_data || {},\r\n\t\t\t\tshipping: orderData.shipping || null,\r\n\r\n\t\t\t\t// Datos de pago - CORREGIDO para usar la estructura del backend\r\n\t\t\t\tpayment: orderData.payment || {\r\n\t\t\t\t\tmethod: \"Tarjeta de crédito\",\r\n\t\t\t\t\tstatus: \"completed\",\r\n\t\t\t\t\tpayment_id: null\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Campos adicionales para compatibilidad\r\n\t\t\t\tpaymentMethod: orderData.payment?.method || \"Tarjeta de crédito\",\r\n\t\t\t\tpaymentStatus: orderData.payment?.status || \"completed\",\r\n\t\t\t\tpaymentId: orderData.payment?.payment_id || null,\r\n\t\t\t\t\r\n\t\t\t\t// Fechas\r\n\t\t\t\tcreatedAt: orderData.orderDate || orderData.order_date || orderData.date,\r\n\t\t\t\tupdatedAt: orderData.updated_at || orderData.orderDate,\r\n\r\n\t\t\t\t// Dirección de envío formateada\r\n\t\t\t\tshippingAddress: this.formatShippingAddress(orderData),\r\n\r\n\t\t\t\t// ✅ DATOS CRÍTICOS DEL SELLER - order_summary del backend\r\n\t\t\t\torderSummary: orderData.order_summary || {}\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\"Orden adaptada para UI de vendedor:\", orderDetail);\r\n\t\t\treturn orderDetail;\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`SellerOrderServiceAdapter: Error al obtener detalle de orden ${orderId}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Formatea la dirección de envío desde los datos de la orden\r\n\t */\r\n\tprivate formatShippingAddress(orderData: any): string {\r\n\t\t// Intentar diferentes ubicaciones de los datos de envío\r\n\t\tconst shippingData = orderData.shippingData || orderData.shipping_data || {};\r\n\t\t\r\n\t\tif (typeof shippingData === 'string') {\r\n\t\t\ttry {\r\n\t\t\t\tconst parsed = JSON.parse(shippingData);\r\n\t\t\t\tconst parts = [\r\n\t\t\t\t\tparsed.address,\r\n\t\t\t\t\tparsed.city,\r\n\t\t\t\t\tparsed.state || parsed.province,\r\n\t\t\t\t\tparsed.country,\r\n\t\t\t\t\tparsed.postal_code\r\n\t\t\t\t].filter(Boolean);\r\n\t\t\t\t\r\n\t\t\t\treturn parts.length > 0 ? parts.join(', ') : 'Dirección no disponible';\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn shippingData;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (shippingData && typeof shippingData === 'object') {\r\n\t\t\tconst parts = [\r\n\t\t\t\tshippingData.address,\r\n\t\t\t\tshippingData.city,\r\n\t\t\t\tshippingData.state || shippingData.province,\r\n\t\t\t\tshippingData.country,\r\n\t\t\t\tshippingData.postal_code\r\n\t\t\t].filter(Boolean);\r\n\t\t\t\r\n\t\t\treturn parts.length > 0 ? parts.join(', ') : 'Dirección no disponible';\r\n\t\t}\r\n\t\t\r\n\t\treturn 'Dirección no disponible';\r\n\t}\r\n\r\n\t/**\r\n\t * Completa una orden específica\r\n\t */\r\n\tasync completeOrder(orderId: string | number): Promise<boolean> {\r\n\t\ttry {\r\n\t\t\tconst id = typeof orderId === \"string\" ? parseInt(orderId) : orderId;\r\n\r\n\t\t\tconsole.log(`SellerOrderServiceAdapter: Completando orden ${id}`);\r\n\r\n\t\t\tconst response = await ApiClient.post<any>(\r\n\t\t\t\tAPI_ENDPOINTS.ORDERS.COMPLETE(id)\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(`Respuesta al completar orden ${id}:`, response);\r\n\r\n\t\t\treturn response && response.success === true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`SellerOrderServiceAdapter: Error al completar orden ${orderId}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Actualiza la información de envío de una orden\r\n\t */\r\n\tasync updateShippingInfo(\r\n\t\torderId: string | number,\r\n\t\tshippingInfo: {\r\n\t\t\ttracking_number?: string;\r\n\t\t\tshipping_company?: string;\r\n\t\t\testimated_delivery?: string;\r\n\t\t\tnotes?: string;\r\n\t\t}\r\n\t): Promise<boolean> {\r\n\t\ttry {\r\n\t\t\tconst id = typeof orderId === \"string\" ? parseInt(orderId) : orderId;\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`SellerOrderServiceAdapter: Actualizando información de envío para orden ${id}`\r\n\t\t\t);\r\n\r\n\t\t\tconst response = await ApiClient.patch<any>(\r\n\t\t\t\tAPI_ENDPOINTS.ORDERS.UPDATE_SHIPPING(id),\r\n\t\t\t\tshippingInfo\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(`Respuesta al actualizar información de envío:`, response);\r\n\r\n\t\t\treturn response && response.success === true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`SellerOrderServiceAdapter: Error al actualizar información de envío para orden ${orderId}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Crea información de envío para una orden\r\n\t */\r\n\tasync createShipping(\r\n\t\torderId: string | number,\r\n\t\tshippingData: {\r\n\t\t\ttracking_number: string;\r\n\t\t\tshipping_company?: string;\r\n\t\t\testimated_delivery?: string;\r\n\t\t\tnotes?: string;\r\n\t\t}\r\n\t): Promise<boolean> {\r\n\t\ttry {\r\n\t\t\tconst id = typeof orderId === \"string\" ? parseInt(orderId) : orderId;\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`SellerOrderServiceAdapter: Creando información de envío para orden ${id}`\r\n\t\t\t);\r\n\r\n\t\t\tconst response = await ApiClient.post<any>(\r\n\t\t\t\tAPI_ENDPOINTS.ORDERS.UPDATE_SHIPPING(id),\r\n\t\t\t\t{\r\n\t\t\t\t\t...shippingData,\r\n\t\t\t\t\tstatus: 'shipped'\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(`Respuesta al crear información de envío:`, response);\r\n\r\n\t\t\treturn response && response.success === true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`SellerOrderServiceAdapter: Error al crear información de envío para orden ${orderId}:`,\r\n\t\t\t\terror\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}","// src/presentation/components/shipping/ShippingFromModal.tsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { X, Truck, Package, CheckCircle } from \"lucide-react\";\r\n\r\nexport interface ShippingFormData {\r\n\ttracking_number: string;\r\n\tshipping_company: string;\r\n\testimated_delivery?: string;\r\n\tnotes?: string;\r\n}\r\n\r\ninterface ShippingFromModalProps {\r\n\torderId: string;\r\n\torderNumber?: string;\r\n\tisOpen: boolean;\r\n\tonClose: () => void;\r\n\tonSubmit: (data: ShippingFormData) => Promise<void>;\r\n\tisLoading?: boolean;\r\n}\r\n\r\nconst ShippingFromModal: React.FC<ShippingFromModalProps> = ({\r\n\torderId,\r\n\torderNumber,\r\n\tisOpen,\r\n\tonClose,\r\n\tonSubmit,\r\n\tisLoading = false,\r\n}) => {\r\n\tconst [formData, setFormData] = useState<ShippingFormData>({\r\n\t\ttracking_number: \"\",\r\n\t\tshipping_company: \"Correos Express\",\r\n\t\testimated_delivery: \"\",\r\n\t\tnotes: \"\",\r\n\t});\r\n\r\n\tconst [errors, setErrors] = useState<Record<string, string>>({});\r\n\r\n\tconst generateTrackingNumber = (company: string): string => {\r\n\t\tconst timestamp = Date.now().toString();\r\n\t\tconst random = Math.random().toString(36).substring(2, 8).toUpperCase();\r\n\r\n\t\tswitch (company) {\r\n\t\t\tcase \"Correos Express\":\r\n\t\t\t\treturn `CE${timestamp.slice(-8)}${random}`;\r\n\t\t\tcase \"SEUR\":\r\n\t\t\t\treturn `SEUR${timestamp.slice(-6)}${random.slice(0, 4)}`;\r\n\t\t\tcase \"MRW\":\r\n\t\t\t\treturn `MRW${timestamp.slice(-7)}${random.slice(0, 3)}`;\r\n\t\t\tcase \"DHL\":\r\n\t\t\t\treturn `DHL${timestamp.slice(-8)}${random}`;\r\n\t\t\tcase \"FedEx\":\r\n\t\t\t\treturn `FDX${timestamp.slice(-8)}${random}`;\r\n\t\t\tcase \"UPS\":\r\n\t\t\t\treturn `1Z${random}${timestamp.slice(-6)}`;\r\n\t\t\tcase \"Nacex\":\r\n\t\t\t\treturn `NCX${timestamp.slice(-8)}${random}`;\r\n\t\t\tcase \"GLS\":\r\n\t\t\t\treturn `GLS${timestamp.slice(-8)}${random}`;\r\n\t\t\tdefault:\r\n\t\t\t\treturn `TRK${timestamp.slice(-8)}${random}`;\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isOpen) {\r\n\t\t\tconst trackingNumber = generateTrackingNumber(\"Correos Express\");\r\n\r\n\t\t\tconst estimatedDate = new Date();\r\n\t\t\testimatedDate.setDate(estimatedDate.getDate() + 4);\r\n\r\n\t\t\tsetFormData({\r\n\t\t\t\ttracking_number: trackingNumber,\r\n\t\t\t\tshipping_company: \"Correos Express\",\r\n\t\t\t\testimated_delivery: estimatedDate.toISOString().split(\"T\")[0],\r\n\t\t\t\tnotes: \"\",\r\n\t\t\t});\r\n\t\t\tsetErrors({});\r\n\t\t}\r\n\t}, [isOpen]);\r\n\r\n\tconst handleCompanyChange = (company: string) => {\r\n\t\tconst newTracking = generateTrackingNumber(company);\r\n\t\tsetFormData((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tshipping_company: company,\r\n\t\t\ttracking_number: newTracking,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst validateForm = (): boolean => {\r\n\t\tconst newErrors: Record<string, string> = {};\r\n\r\n\t\tif (!formData.tracking_number.trim()) {\r\n\t\t\tnewErrors.tracking_number = \"El número de seguimiento es requerido\";\r\n\t\t}\r\n\t\tif (!formData.shipping_company.trim()) {\r\n\t\t\tnewErrors.shipping_company = \"La empresa de envío es requerida\";\r\n\t\t}\r\n\t\tif (formData.estimated_delivery) {\r\n\t\t\tconst selectedDate = new Date(formData.estimated_delivery);\r\n\t\t\tconst today = new Date();\r\n\t\t\ttoday.setHours(0, 0, 0, 0);\r\n\r\n\t\t\tif (selectedDate < today) {\r\n\t\t\t\tnewErrors.estimated_delivery = \"La fecha de entrega debe ser futura\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetErrors(newErrors);\r\n\t\treturn Object.keys(newErrors).length === 0;\r\n\t};\r\n\r\n\tconst handleSubmit = async (e: React.FormEvent) => {\r\n\t\te.preventDefault();\r\n\t\tif (!validateForm()) return;\r\n\t\ttry {\r\n\t\t\tawait onSubmit(formData);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al procesar envío:\", error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleInputChange = (\r\n\t\te: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>\r\n\t) => {\r\n\t\tconst { name, value } = e.target;\r\n\r\n\t\tif (name === \"shipping_company\") {\r\n\t\t\thandleCompanyChange(value);\r\n\t\t} else {\r\n\t\t\tsetFormData((prev) => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\t[name]: value,\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tif (errors[name]) {\r\n\t\t\tsetErrors((prev) => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\t[name]: \"\",\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\tif (!isOpen) return null;\r\n\r\n\treturn (\r\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n      <div className=\"flex items-center justify-center min-h-screen px-4 py-10 text-center sm:p-0\">\r\n        {/* Overlay */}\r\n        <div\r\n  className=\"fixed inset-0 bg-black-30 backdrop-blur-sm transition-opacity z-40\"\r\n  onClick={onClose}\r\n/>\r\n\r\n        {/* Modal */}\r\n        <div\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          className=\"z-50 inline-block align-bottom bg-white rounded-xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\"\r\n        >\r\n          {/* Header */}\r\n          <div className=\"bg-gradient-to-r from-primary-500 to-primary-700 px-6 py-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-full bg-white bg-opacity-20\">\r\n                  <Truck className=\"h-6 w-6 text-primary-600\" />\r\n                </div>\r\n                <div className=\"ml-3\">\r\n                  <h3 className=\"text-lg leading-6 font-semibold text-white\">\r\n                    Procesar Envío\r\n                  </h3>\r\n                  <p className=\"text-sm text-primary-100\">\r\n                    {orderNumber\r\n                      ? `Pedido ${orderNumber}`\r\n                      : `Pedido #${orderId}`}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"text-white hover:text-primary-200 transition-colors\"\r\n                disabled={isLoading}\r\n              >\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Body */}\r\n          <div className=\"px-6 py-4\">\r\n            <form\r\n              onSubmit={handleSubmit}\r\n              className=\"space-y-4\"\r\n            >\r\n              {/* Empresa */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Empresa de Envío\r\n                </label>\r\n                <select\r\n                  name=\"shipping_company\"\r\n                  value={formData.shipping_company}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                  disabled={isLoading}\r\n                >\r\n                  <option value=\"Correos Express\">📦 Correos Express</option>\r\n                  <option value=\"SEUR\">🚚 SEUR</option>\r\n                  <option value=\"MRW\">📮 MRW</option>\r\n                  <option value=\"DHL\">✈️ DHL</option>\r\n                  <option value=\"FedEx\">📦 FedEx</option>\r\n                  <option value=\"UPS\">📦 UPS</option>\r\n                  <option value=\"Nacex\">🚛 Nacex</option>\r\n                  <option value=\"GLS\">📦 GLS</option>\r\n                </select>\r\n                {errors.shipping_company && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">\r\n                    {errors.shipping_company}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              {/* Tracking */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Número de Seguimiento\r\n                  <span className=\"text-green-600 text-xs ml-2\">\r\n                    (Generado automáticamente)\r\n                  </span>\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"tracking_number\"\r\n                    value={formData.tracking_number}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full px-3 py-2 pr-10 border border-gray-300 rounded-lg bg-gray-50 font-mono text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                    disabled={isLoading}\r\n                  />\r\n                  <CheckCircle className=\"absolute right-3 top-2.5 h-5 w-5 text-green-500\" />\r\n                </div>\r\n                {errors.tracking_number && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">\r\n                    {errors.tracking_number}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              {/* Fecha estimada */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Fecha de Entrega Estimada\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"estimated_delivery\"\r\n                  value={formData.estimated_delivery}\r\n                  onChange={handleInputChange}\r\n                  min={new Date().toISOString().split(\"T\")[0]}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                  disabled={isLoading}\r\n                />\r\n                {errors.estimated_delivery && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">\r\n                    {errors.estimated_delivery}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              {/* Notas */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Notas (Opcional)\r\n                </label>\r\n                <textarea\r\n                  name=\"notes\"\r\n                  value={formData.notes}\r\n                  onChange={handleInputChange}\r\n                  rows={2}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                  placeholder=\"Información adicional sobre el envío...\"\r\n                  disabled={isLoading}\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          {/* Footer */}\r\n          <div className=\"bg-gray-50 px-6 py-4 flex justify-end space-x-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              disabled={isLoading}\r\n              className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 disabled:opacity-50\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={handleSubmit}\r\n              disabled={isLoading}\r\n              className=\"px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 flex items-center\"\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-white mr-2\"></div>\r\n                  Procesando...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Package\r\n                    size={16}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  Procesar Envío\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShippingFromModal;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n\tShoppingBag,\r\n\tSearch,\r\n\tFilter,\r\n\tRefreshCw,\r\n\tEye,\r\n\tTruck,\r\n\tPackage,\r\n\tBarChart2,\r\n} from \"lucide-react\";\r\nimport Table from \"../../components/dashboard/Table\";\r\nimport {formatCurrency} from \"../../../utils/formatters/formatCurrency\";\r\nimport {SellerStatCardList} from \"../../components/dashboard/SellerStatCardList\";\r\n// Importar el adaptador actualizado\r\nimport SellerOrderServiceAdapter from \"../../../core/adapters/SellerOrderServiceAdapter\";\r\nimport type {\r\n\tSellerOrderUI,\r\n\tSellerOrderStatUI,\r\n} from \"../../../core/adapters/SellerOrderServiceAdapter\";\r\nimport ShippingFormModal from \"../../components/shipping/ShippingFormModal\";\r\nimport type {ShippingFormData} from \"../../components/shipping/ShippingFormModal\";\r\n\r\n// Esta función ayuda a extraer la dirección de envío desde el string JSON\r\nconst parseShippingAddress = (shippingAddressStr?: string): string => {\r\n\tif (!shippingAddressStr) return \"\";\r\n\r\n\ttry {\r\n\t\tconst shippingAddress = JSON.parse(shippingAddressStr);\r\n\t\tif (typeof shippingAddress === \"object\" && shippingAddress !== null) {\r\n\t\t\tconst parts = [\r\n\t\t\t\tshippingAddress.address,\r\n\t\t\t\tshippingAddress.city,\r\n\t\t\t\tshippingAddress.state,\r\n\t\t\t\tshippingAddress.country,\r\n\t\t\t].filter(Boolean);\r\n\t\t\treturn parts.join(\", \");\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tconsole.error(\"Error al parsear dirección de envío:\", e);\r\n\t}\r\n\r\n\treturn shippingAddressStr;\r\n};\r\n\r\nconst SellerOrdersPage: React.FC = () => {\r\n\t// Instanciar el adaptador de servicio\r\n\tconst orderAdapter = new SellerOrderServiceAdapter();\r\n\r\n\t// Usar las interfaces para los estados\r\n\tconst [orders, setOrders] = useState<SellerOrderUI[]>([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [statusFilter, setStatusFilter] = useState<string>(\"all\");\r\n\tconst [paymentFilter, setPaymentFilter] = useState<string>(\"all\");\r\n\tconst [dateFilter, setDateFilter] = useState<string>(\"all\");\r\n\tconst [searchTerm, setSearchTerm] = useState<string>(\"\");\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tcurrentPage: 1,\r\n\t\ttotalPages: 1,\r\n\t\ttotalItems: 0,\r\n\t\titemsPerPage: 10,\r\n\t});\r\n\tconst [statsData, setStatsData] = useState<SellerOrderStatUI[]>([]);\r\n\tconst [dateRange, setDateRange] = useState({\r\n\t\tfrom: \"\",\r\n\t\tto: \"\",\r\n\t});\r\n\tconst [isUpdating, setIsUpdating] = useState(false);\r\n\r\n\t// Estado para el modal de envío\r\n\tconst [isShippingModalOpen, setIsShippingModalOpen] = useState(false);\r\n\tconst [selectedOrderId, setSelectedOrderId] = useState<string | null>(null);\r\n\r\n\t// Cargar datos de pedidos\r\n\tuseEffect(() => {\r\n\t\tfetchOrders();\r\n\t\tfetchStats();\r\n\t}, [\r\n\t\tstatusFilter,\r\n\t\tpaymentFilter,\r\n\t\tsearchTerm,\r\n\t\tpagination.currentPage,\r\n\t\tdateFilter,\r\n\t\tdateRange,\r\n\t]);\r\n\r\n\t// Función para obtener órdenes usando el adaptador\r\n\tconst fetchOrders = async () => {\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\t// Preparar filtros para la API\r\n\t\t\tconst filters: any = {\r\n\t\t\t\tpage: pagination.currentPage,\r\n\t\t\t\tlimit: pagination.itemsPerPage,\r\n\t\t\t};\r\n\r\n\t\t\tif (statusFilter !== \"all\") {\r\n\t\t\t\tfilters.status = statusFilter;\r\n\t\t\t}\r\n\r\n\t\t\tif (paymentFilter !== \"all\") {\r\n\t\t\t\tfilters.paymentStatus = paymentFilter;\r\n\t\t\t}\r\n\r\n\t\t\tif (searchTerm) {\r\n\t\t\t\tfilters.search = searchTerm;\r\n\t\t\t}\r\n\r\n\t\t\t// Añadir filtros de fecha según la selección\r\n\t\t\tif (dateFilter === \"today\") {\r\n\t\t\t\tconst today = new Date().toISOString().split(\"T\")[0];\r\n\t\t\t\tfilters.dateFrom = today;\r\n\t\t\t\tfilters.dateTo = today;\r\n\t\t\t} else if (dateFilter === \"week\") {\r\n\t\t\t\tconst today = new Date();\r\n\t\t\t\tconst firstDay = new Date(\r\n\t\t\t\t\ttoday.setDate(today.getDate() - today.getDay())\r\n\t\t\t\t);\r\n\t\t\t\tfilters.dateFrom = firstDay.toISOString().split(\"T\")[0];\r\n\t\t\t\tfilters.dateTo = new Date().toISOString().split(\"T\")[0];\r\n\t\t\t} else if (dateFilter === \"month\") {\r\n\t\t\t\tconst today = new Date();\r\n\t\t\t\tconst firstDay = new Date(today.getFullYear(), today.getMonth(), 1);\r\n\t\t\t\tfilters.dateFrom = firstDay.toISOString().split(\"T\")[0];\r\n\t\t\t\tfilters.dateTo = new Date().toISOString().split(\"T\")[0];\r\n\t\t\t} else if (dateFilter === \"custom\" && dateRange.from && dateRange.to) {\r\n\t\t\t\tfilters.dateFrom = dateRange.from;\r\n\t\t\t\tfilters.dateTo = dateRange.to;\r\n\t\t\t}\r\n\r\n\t\t\t// Obtener órdenes del adaptador específico de vendedor\r\n\t\t\tconst result = await orderAdapter.getSellerOrders(filters);\r\n\r\n\t\t\t// Establecer órdenes y datos de paginación\r\n\t\t\tsetOrders(result.orders);\r\n\t\t\tsetPagination(result.pagination);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al cargar órdenes:\", error);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// Función para obtener estadísticas usando el adaptador\r\n\tconst fetchStats = async () => {\r\n\t\ttry {\r\n\t\t\tconst stats = await orderAdapter.getOrderStats();\r\n\r\n\t\t\t// Añadir los iconos a las estadísticas\r\n\t\t\tconst statsWithIcons = stats.map((stat: SellerOrderStatUI) => {\r\n\t\t\t\tlet icon;\r\n\t\t\t\tswitch (stat.label) {\r\n\t\t\t\t\tcase \"Total Pedidos\":\r\n\t\t\t\t\t\ticon = (\r\n\t\t\t\t\t\t\t<ShoppingBag className=\"h-5 w-5 text-blue-600\" />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Pendientes\":\r\n\t\t\t\t\t\ticon = (\r\n\t\t\t\t\t\t\t<Package className=\"h-5 w-5 text-yellow-600\" />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"En Proceso\":\r\n\t\t\t\t\t\ticon = (\r\n\t\t\t\t\t\t\t<ShoppingBag className=\"h-5 w-5 text-blue-600\" />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Enviados\":\r\n\t\t\t\t\t\ticon = (\r\n\t\t\t\t\t\t\t<Truck className=\"h-5 w-5 text-indigo-600\" />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Total Ventas\":\r\n\t\t\t\t\t\ticon = (\r\n\t\t\t\t\t\t\t<BarChart2 className=\"h-5 w-5 text-green-600\" />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\ticon = (\r\n\t\t\t\t\t\t\t<ShoppingBag className=\"h-5 w-5 text-blue-600\" />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...stat,\r\n\t\t\t\t\ticon,\r\n\t\t\t\t\t// Si es currency y todavía es un número, lo formateamos\r\n\t\t\t\t\tvalue:\r\n\t\t\t\t\t\tstat.isCurrency && typeof stat.value === \"number\"\r\n\t\t\t\t\t\t\t? formatCurrency(stat.value)\r\n\t\t\t\t\t\t\t: stat.value,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tsetStatsData(statsWithIcons);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al cargar estadísticas:\", error);\r\n\r\n\t\t\t// Estadísticas por defecto en caso de error\r\n\t\t\tsetStatsData([\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Total Pedidos\",\r\n\t\t\t\t\tvalue: orders.length,\r\n\t\t\t\t\ticon: (\r\n\t\t\t\t\t\t<ShoppingBag className=\"h-5 w-5 text-blue-600\" />\r\n\t\t\t\t\t),\r\n\t\t\t\t\tcolor: \"blue\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Pendientes\",\r\n\t\t\t\t\tvalue: orders.filter((order) => order.status === \"pending\").length,\r\n\t\t\t\t\ticon: (\r\n\t\t\t\t\t\t<Package className=\"h-5 w-5 text-yellow-600\" />\r\n\t\t\t\t\t),\r\n\t\t\t\t\tcolor: \"yellow\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"En Proceso\",\r\n\t\t\t\t\tvalue: orders.filter((order) => order.status === \"processing\").length,\r\n\t\t\t\t\ticon: (\r\n\t\t\t\t\t\t<ShoppingBag className=\"h-5 w-5 text-blue-600\" />\r\n\t\t\t\t\t),\r\n\t\t\t\t\tcolor: \"blue\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Total Ventas\",\r\n\t\t\t\t\tvalue: formatCurrency(\r\n\t\t\t\t\t\torders.reduce((sum, order) => sum + order.total, 0)\r\n\t\t\t\t\t),\r\n\t\t\t\t\ticon: (\r\n\t\t\t\t\t\t<BarChart2 className=\"h-5 w-5 text-green-600\" />\r\n\t\t\t\t\t),\r\n\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t},\r\n\t\t\t]);\r\n\t\t}\r\n\t};\r\n\r\n\t// Actualizar estado de un pedido usando el adaptador\r\n\tconst updateOrderStatus = async (\r\n\t\torderId: string,\r\n\t\tnewStatus: SellerOrderUI[\"status\"]\r\n\t) => {\r\n\t\ttry {\r\n\t\t\tsetIsUpdating(true);\r\n\t\t\tconst success = await orderAdapter.updateOrderStatus(orderId, newStatus);\r\n\r\n\t\t\tif (success) {\r\n\t\t\t\t// Actualizar el estado localmente para evitar una recarga completa\r\n\t\t\t\tsetOrders((prevOrders) =>\r\n\t\t\t\t\tprevOrders.map((order) => {\r\n\t\t\t\t\t\tif (order.id === orderId) {\r\n\t\t\t\t\t\t\treturn {...order, status: newStatus};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn order;\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Actualizar estadísticas después de cambiar estado\r\n\t\t\t\tfetchStats();\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(`Error al actualizar estado de orden ${orderId}:`, error);\r\n\t\t} finally {\r\n\t\t\tsetIsUpdating(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// Manejar apertura del modal de envío\r\n\tconst handleShippingModal = (orderId: string) => {\r\n\t\tsetSelectedOrderId(orderId);\r\n\t\tsetIsShippingModalOpen(true);\r\n\t};\r\n\r\n\t// Manejar envío del formulario de shipping\r\n\tconst handleShippingSubmit = async (shippingData: ShippingFormData) => {\r\n\t\tif (!selectedOrderId) return;\r\n\r\n\t\ttry {\r\n\t\t\tsetIsUpdating(true);\r\n\t\t\t\r\n\t\t\t// Actualizar información de envío usando el adaptador\r\n\t\t\tconst success = await orderAdapter.updateShippingInfo(\r\n\t\t\t\tselectedOrderId,\r\n\t\t\t\tshippingData\r\n\t\t\t);\r\n\r\n\t\t\tif (success) {\r\n\t\t\t\t// Actualizar la orden localmente\r\n\t\t\t\tsetOrders((prevOrders) =>\r\n\t\t\t\t\tprevOrders.map((order) => {\r\n\t\t\t\t\t\tif (order.id === selectedOrderId) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...order,\r\n\t\t\t\t\t\t\t\tstatus: \"shipped\" as SellerOrderUI[\"status\"],\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn order;\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Cerrar modal\r\n\t\t\t\tsetIsShippingModalOpen(false);\r\n\t\t\t\tsetSelectedOrderId(null);\r\n\r\n\t\t\t\t// Recargar datos\r\n\t\t\t\tfetchOrders();\r\n\t\t\t\tfetchStats();\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al procesar envío:\", error);\r\n\t\t} finally {\r\n\t\t\tsetIsUpdating(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// Manejar cambio de página\r\n\tconst handlePageChange = (page: number) => {\r\n\t\tsetPagination((prev) => ({...prev, currentPage: page}));\r\n\t};\r\n\r\n\t// Refrescar datos\r\n\tconst refreshData = () => {\r\n\t\tsetLoading(true);\r\n\t\tfetchOrders();\r\n\t\tfetchStats();\r\n\t};\r\n\r\n\t// Definir las columnas de la tabla\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tkey: \"orderNumber\",\r\n\t\t\theader: \"Número de Pedido\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (order: SellerOrderUI) => (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={`/seller/orders/${order.id}`}\r\n\t\t\t\t\tclassName=\"font-medium text-primary-600 hover:underline\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{order.orderNumber}\r\n\t\t\t\t</Link>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"date\",\r\n\t\t\theader: \"Fecha\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (order: SellerOrderUI) => {\r\n\t\t\t\tconst date = new Date(order.date);\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{date.toLocaleDateString(\"es-ES\")}{\" \"}\r\n\t\t\t\t\t\t{date.toLocaleTimeString(\"es-ES\", {\r\n\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"customer\",\r\n\t\t\theader: \"Cliente\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (order: SellerOrderUI) => (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"font-medium\">{order.customer.name}</div>\r\n\t\t\t\t\t<div className=\"text-xs text-gray-500\">\r\n\t\t\t\t\t\t{order.customer.email}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"total\",\r\n\t\t\theader: \"Total\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (order: SellerOrderUI) => (\r\n\t\t\t\t<span className=\"font-medium\">{formatCurrency(order.total)}</span>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"items\",\r\n\t\t\theader: \"Productos\",\r\n\t\t\trender: (order: SellerOrderUI) => (\r\n\t\t\t\t<span className=\"text-center\">\r\n\t\t\t\t\t{order.items ? order.items.reduce((total, item) => total + item.quantity, 0) : 0}\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"status\",\r\n\t\t\theader: \"Estado\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (order: SellerOrderUI) => {\r\n\t\t\t\tlet statusClass = \"\";\r\n\t\t\t\tlet statusText = \"\";\r\n\r\n\t\t\t\tswitch (order.status) {\r\n\t\t\t\t\tcase \"pending\":\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-yellow-100 text-yellow-800\";\r\n\t\t\t\t\t\tstatusText = \"Pendiente\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"ready_to_ship\":\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-blue-100 text-blue-800\";\r\n\t\t\t\t\t\tstatusText = \"Listo para enviar\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"in_transit\":\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-indigo-100 text-indigo-800\";\r\n\t\t\t\t\t\tstatusText = \"En Tránsito\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"processing\":\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-blue-100 text-blue-800\";\r\n\t\t\t\t\t\tstatusText = \"En Proceso\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"paid\":\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-cyan-100 text-cyan-800\";\r\n\t\t\t\t\t\tstatusText = \"Pagado\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"shipped\":\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-indigo-100 text-indigo-800\";\r\n\t\t\t\t\t\tstatusText = \"Enviado\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"delivered\":\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-green-100 text-green-800\";\r\n\t\t\t\t\t\tstatusText = \"Entregado\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"completed\":\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-emerald-100 text-emerald-800\";\r\n\t\t\t\t\t\tstatusText = \"Completado\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"failed\":\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-red-100 text-red-800\";\r\n\t\t\t\t\t\tstatusText = \"Fallido\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"rejected\":\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-orange-100 text-orange-800\";\r\n\t\t\t\t\t\tstatusText = \"Devuelto\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"cancelled\":\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-gray-100 text-gray-800\";\r\n\t\t\t\t\t\tstatusText = \"Cancelado\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"returned\":\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-orange-100 text-orange-800\";\r\n\t\t\t\t\t\tstatusText = \"Devuelto\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tstatusClass =\r\n\t\t\t\t\t\t\t\"bg-gray-100 text-gray-800\";\r\n\t\t\t\t\t\tstatusText = \"Desconocido\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${statusClass}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{statusText}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"payment\",\r\n\t\t\theader: \"Pago\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (order: SellerOrderUI) => {\r\n\t\t\t\tlet paymentClass = \"\";\r\n\t\t\t\tlet paymentText = \"\";\r\n\r\n\t\t\t\tswitch (order.paymentStatus) {\r\n\t\t\t\t\tcase \"pending\":\r\n\t\t\t\t\t\tpaymentClass =\r\n\t\t\t\t\t\t\t\"bg-yellow-100 text-yellow-800\";\r\n\t\t\t\t\t\tpaymentText = \"Pendiente\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"completed\":\r\n\t\t\t\t\t\tpaymentClass =\r\n\t\t\t\t\t\t\t\"bg-green-100 text-green-800\";\r\n\t\t\t\t\t\tpaymentText = \"Pagado\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"rejected\":\r\n\t\t\t\t\t\tpaymentClass =\r\n\t\t\t\t\t\t\t\"bg-red-100 text-red-800\";\r\n\t\t\t\t\t\tpaymentText = \"Rechazado\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${paymentClass}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{paymentText}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"address\",\r\n\t\t\theader: \"Dirección\",\r\n\t\t\trender: (order: SellerOrderUI) => (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"truncate max-w-xs\"\r\n\t\t\t\t\ttitle={parseShippingAddress(order.shippingAddress)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{parseShippingAddress(order.shippingAddress)}\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"actions\",\r\n\t\t\theader: \"Acciones\",\r\n\t\t\trender: (order: SellerOrderUI) => (\r\n\t\t\t\t<div className=\"flex justify-end space-x-2\">\r\n\t\t\t\t\t{/* Ver detalles */}\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto={`/seller/orders/${order.id}`}\r\n\t\t\t\t\t\tclassName=\"p-1 text-blue-600 hover:bg-blue-100 rounded-md\"\r\n\t\t\t\t\t\ttitle=\"Ver detalles\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Eye size={18} />\r\n\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t{/* Gestionar envío - AHORA ABRE EL MODAL MEJORADO */}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => handleShippingModal(order.id)}\r\n\t\t\t\t\t\tdisabled={!(order.status === \"pending\" || order.status === \"processing\") || isUpdating}\r\n\t\t\t\t\t\tclassName={`p-1 rounded-md ${\r\n\t\t\t\t\t\t\torder.status === \"pending\" || order.status === \"processing\"\r\n\t\t\t\t\t\t\t\t? \"text-green-600 hover:bg-green-100\"\r\n\t\t\t\t\t\t\t\t: \"text-gray-400 cursor-not-allowed\"\r\n\t\t\t\t\t\t} disabled:opacity-50`}\r\n\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\torder.status === \"pending\" || order.status === \"processing\"\r\n\t\t\t\t\t\t\t\t? \"Gestionar envío\"\r\n\t\t\t\t\t\t\t\t: \"No se puede gestionar el envío en este estado\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Truck size={18} />\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t{/* Preparar pedido - solo visible para pedidos pendientes */}\r\n\t\t\t\t\t{order.status === \"pending\" && (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => updateOrderStatus(order.id, \"processing\")}\r\n\t\t\t\t\t\t\tdisabled={isUpdating}\r\n\t\t\t\t\t\t\tclassName=\"p-1 text-orange-600 hover:bg-orange-100 rounded-md disabled:opacity-50\"\r\n\t\t\t\t\t\t\ttitle=\"Preparar pedido\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Package size={18} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className=\"space-y-6\">\r\n\t\t\t{/* Modal de envío mejorado */}\r\n\t\t\t<ShippingFormModal\r\n\t\t\t\torderId={selectedOrderId || \"\"}\r\n\t\t\t\torderNumber={orders.find(o => o.id === selectedOrderId)?.orderNumber}\r\n\t\t\t\tisOpen={isShippingModalOpen}\r\n\t\t\t\tonClose={() => {\r\n\t\t\t\t\tsetIsShippingModalOpen(false);\r\n\t\t\t\t\tsetSelectedOrderId(null);\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={handleShippingSubmit}\r\n\t\t\t\tisLoading={isUpdating}\r\n\t\t\t/>\r\n\r\n\t\t\t<div className=\"flex justify-between items-center\">\r\n\t\t\t\t<h1 className=\"text-2xl font-bold text-gray-900\">\r\n\t\t\t\t\tGestión de Pedidos\r\n\t\t\t\t</h1>\r\n\t\t\t\t<div className=\"flex space-x-2\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={refreshData}\r\n\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\tclassName=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors disabled:opacity-50\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RefreshCw size={18} className={`inline mr-2 ${loading ? \"animate-spin\" : \"\"}`} />\r\n\t\t\t\t\t\tActualizar\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Panel de filtros */}\r\n\t\t\t<div className=\"bg-white rounded-lg shadow-sm p-4\">\r\n\t\t\t\t<div className=\"flex flex-col md:flex-row gap-4\">\r\n\t\t\t\t\t{/* Buscador */}\r\n\t\t\t\t\t<div className=\"relative flex-grow\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Buscar por número de pedido, cliente...\"\r\n\t\t\t\t\t\t\tclassName=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t\tvalue={searchTerm}\r\n\t\t\t\t\t\t\tonChange={(e) => setSearchTerm(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Search className=\"absolute left-3 top-2.5 h-5 w-5 text-gray-400\" />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Filtro de Estado */}\r\n\t\t\t\t\t<div className=\"flex items-center space-x-2\">\r\n\t\t\t\t\t\t<Filter className=\"h-5 w-5 text-gray-500\" />\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\tvalue={statusFilter}\r\n\t\t\t\t\t\t\tonChange={(e) => setStatusFilter(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"all\">Todos los estados</option>\r\n\t\t\t\t\t\t\t<option value=\"pending\">Pendientes</option>\r\n\t\t\t\t\t\t\t<option value=\"processing\">En Proceso</option>\r\n\t\t\t\t\t\t\t<option value=\"paid\">Pagados</option>\r\n\t\t\t\t\t\t\t<option value=\"shipped\">Enviados</option>\r\n\t\t\t\t\t\t\t<option value=\"in_transit\">En Tránsito</option>\r\n\t\t\t\t\t\t\t<option value=\"delivered\">Entregados</option>\r\n\t\t\t\t\t\t\t<option value=\"completed\">Completados</option>\r\n\t\t\t\t\t\t\t<option value=\"failed\">Fallidos</option>\r\n\t\t\t\t\t\t\t<option value=\"returned\">Devueltos</option>\r\n\t\t\t\t\t\t\t<option value=\"cancelled\">Cancelados</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Filtro de Pago */}\r\n\t\t\t\t\t<div className=\"flex items-center space-x-2\">\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\tvalue={paymentFilter}\r\n\t\t\t\t\t\t\tonChange={(e) => setPaymentFilter(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"all\">Todos los pagos</option>\r\n\t\t\t\t\t\t\t<option value=\"pending\">Pago Pendiente</option>\r\n\t\t\t\t\t\t\t<option value=\"completed\">Pagados</option>\r\n\t\t\t\t\t\t\t<option value=\"rejected\">Rechazados</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Filtro de Fecha */}\r\n\t\t\t\t\t<div className=\"flex items-center space-x-2\">\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\tvalue={dateFilter}\r\n\t\t\t\t\t\t\tonChange={(e) => setDateFilter(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"all\">Todas las fechas</option>\r\n\t\t\t\t\t\t\t<option value=\"today\">Hoy</option>\r\n\t\t\t\t\t\t\t<option value=\"week\">Esta semana</option>\r\n\t\t\t\t\t\t\t<option value=\"month\">Este mes</option>\r\n\t\t\t\t\t\t\t<option value=\"custom\">Personalizado</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t{dateFilter === \"custom\" && (\r\n\t\t\t\t\t\t\t<div className=\"flex items-center space-x-2\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\t\t\tvalue={dateRange.from}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tsetDateRange({...dateRange, from: e.target.value})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span className=\"text-gray-500\">a</span>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\t\t\tvalue={dateRange.to}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tsetDateRange({...dateRange, to: e.target.value})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Botón para limpiar filtros */}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetStatusFilter(\"all\");\r\n\t\t\t\t\t\t\tsetPaymentFilter(\"all\");\r\n\t\t\t\t\t\t\tsetDateFilter(\"all\");\r\n\t\t\t\t\t\t\tsetSearchTerm(\"\");\r\n\t\t\t\t\t\t\tsetDateRange({from: \"\", to: \"\"});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName=\"bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLimpiar filtros\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Estadísticas resumidas */}\r\n\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n\t\t\t\t<SellerStatCardList\r\n\t\t\t\t\titems={statsData}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Tabla de Pedidos */}\r\n\t\t\t<Table\r\n\t\t\t\tdata={orders}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tsearchFields={[\"orderNumber\"]}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\temptyMessage=\"No se encontraron pedidos\"\r\n\t\t\t\tpagination={{\r\n\t\t\t\t\tcurrentPage: pagination.currentPage,\r\n\t\t\t\t\ttotalPages: pagination.totalPages,\r\n\t\t\t\t\ttotalItems: pagination.totalItems,\r\n\t\t\t\t\titemsPerPage: pagination.itemsPerPage,\r\n\t\t\t\t\tonPageChange: handlePageChange,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SellerOrdersPage;","import React from 'react';\r\nimport { DollarSign, TrendingUp, Info } from 'lucide-react';\r\n\r\ninterface OrderEarningsInfoProps {\r\n\tgrossEarnings: number;        // subtotal total del seller\r\n\tplatformCommission: number;  // ya calculado en backend  \r\n\tnetEarnings: number;         // ya calculado en backend\r\n\tshippingEarnings: number;    // ya calculado en backend\r\n\ttotalEarnings: number;       // ya calculado en backend\r\n\tcommissionRate: number;      // solo para mostrar %\r\n\tsellerCount?: number;        // número de sellers para mostrar info\r\n\tshowBreakdown?: boolean;\r\n\tclassName?: string;\r\n}\r\n\r\n/**\r\n * Componente que muestra información de ganancias para vendedores\r\n * Usa datos ya calculados del backend (no hace llamadas a API)\r\n */\r\nconst OrderEarningsInfo: React.FC<OrderEarningsInfoProps> = ({\r\n\tgrossEarnings,\r\n\tplatformCommission,\r\n\tnetEarnings,\r\n\tshippingEarnings,\r\n\ttotalEarnings,\r\n\tcommissionRate,\r\n\tsellerCount = 1,\r\n\tshowBreakdown = false,\r\n\tclassName = ''\r\n}) => {\r\n\r\n\tconst formatCurrency = (amount: number) => {\r\n\t\treturn new Intl.NumberFormat('en-US', {\r\n\t\t\tstyle: 'currency',\r\n\t\t\tcurrency: 'USD',\r\n\t\t\tminimumFractionDigits: 2,\r\n\t\t}).format(amount);\r\n\t};\r\n\r\n\tconst formatPercentage = (percentage: number) => {\r\n\t\treturn `${percentage.toFixed(1)}%`;\r\n\t};\r\n\r\n\tif (!showBreakdown) {\r\n\t\t// Vista compacta para tablas\r\n\t\treturn (\r\n\t\t\t<div className={`flex items-center gap-2 ${className}`}>\r\n\t\t\t\t<TrendingUp className=\"h-4 w-4 text-green-600\" />\r\n\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t<div className=\"font-semibold text-green-700\">\r\n\t\t\t\t\t\t{formatCurrency(totalEarnings)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"text-xs text-gray-500\">\r\n\t\t\t\t\t\t(Comisión: {formatPercentage(commissionRate)})\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// Vista detallada con desglose\r\n\treturn (\r\n\t\t<div className={`bg-gray-50 rounded-lg p-4 space-y-3 ${className}`}>\r\n\t\t\t<div className=\"flex items-center gap-2 font-semibold text-gray-800\">\r\n\t\t\t\t<DollarSign className=\"h-5 w-5 text-green-600\" />\r\n\t\t\t\t<span>Desglose de Ganancias</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"space-y-2 text-sm\">\r\n\t\t\t\t{/* Ganancias brutas */}\r\n\t\t\t\t<div className=\"flex justify-between\">\r\n\t\t\t\t\t<span className=\"text-gray-600\">Subtotal de productos:</span>\r\n\t\t\t\t\t<span className=\"font-medium\">{formatCurrency(grossEarnings)}</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Comisión de plataforma */}\r\n\t\t\t\t<div className=\"flex justify-between text-red-600\">\r\n\t\t\t\t\t<span>Comisión plataforma ({formatPercentage(commissionRate)}):</span>\r\n\t\t\t\t\t<span className=\"font-medium\">-{formatCurrency(platformCommission)}</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Ganancias netas de productos */}\r\n\t\t\t\t<div className=\"flex justify-between font-medium\">\r\n\t\t\t\t\t<span className=\"text-gray-800\">Ganancia neta de productos:</span>\r\n\t\t\t\t\t<span className=\"text-green-700\">{formatCurrency(netEarnings)}</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Ganancia por envío */}\r\n\t\t\t\t{shippingEarnings > 0 && (\r\n\t\t\t\t\t<div className=\"flex justify-between\">\r\n\t\t\t\t\t\t<span className=\"text-gray-600\">\r\n\t\t\t\t\t\t\tGanancia por envío:\r\n\t\t\t\t\t\t\t{sellerCount > 1 && (\r\n\t\t\t\t\t\t\t\t<span className=\"text-xs ml-1\">\r\n\t\t\t\t\t\t\t\t\t({sellerCount} vendedores)\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"font-medium text-blue-700\">\r\n\t\t\t\t\t\t\t+{formatCurrency(shippingEarnings)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* Separador */}\r\n\t\t\t\t<hr className=\"border-gray-300\" />\r\n\r\n\t\t\t\t{/* Total */}\r\n\t\t\t\t<div className=\"flex justify-between font-bold text-lg\">\r\n\t\t\t\t\t<span className=\"text-gray-800\">Total a recibir:</span>\r\n\t\t\t\t\t<span className=\"text-green-700\">{formatCurrency(totalEarnings)}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Información adicional */}\r\n\t\t\t<div className=\"mt-4 pt-3 border-t border-gray-300\">\r\n\t\t\t\t<div className=\"flex items-start gap-2 text-xs text-gray-500\">\r\n\t\t\t\t\t<Info className=\"h-3 w-3 mt-0.5 flex-shrink-0\" />\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>Configuraciones actuales del sistema:</p>\r\n\t\t\t\t\t\t<ul className=\"mt-1 space-y-1\">\r\n\t\t\t\t\t\t\t<li>• Comisión plataforma: {formatPercentage(commissionRate)}</li>\r\n\t\t\t\t\t\t\t{sellerCount === 1 && (\r\n\t\t\t\t\t\t\t\t<li>• Envío un vendedor: 80.0%</li>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{sellerCount > 1 && (\r\n\t\t\t\t\t\t\t\t<li>• Envío máximo/vendedor: 50.0%</li>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default OrderEarningsInfo;","import React, {useState, useEffect, useCallback} from \"react\";\r\nimport {useParams, Link} from \"react-router-dom\";\r\nimport {ArrowLeft, Truck, Package, Check, X, Calculator} from \"lucide-react\";\r\nimport {formatDate} from \"../../../utils/formatters/formatDate\";\r\nimport SellerOrderServiceAdapter from \"../../../core/adapters/SellerOrderServiceAdapter\";\r\nimport {useAuth} from \"../../contexts/AuthContext\";\r\nimport ShippingFormModal from \"../../components/shipping/ShippingFormModal\";\r\nimport OrderEarningsInfo from \"../../components/seller/OrderEarningsInfo\";\r\nimport OrderBreakdownService from \"../../../core/services/OrderBreakdownService\";\r\nimport type {ShippingFormData} from \"../../components/shipping/ShippingFormModal\";\r\nimport type {OrderDetail} from \"../../../core/domain/entities/Order\";\r\nimport type {OrderBreakdownResponse} from \"../../../core/services/OrderBreakdownService\";\r\nimport {\r\n\tcanTransitionTo,\r\n\ttype OrderStatus,\r\n} from \"../../../core/domain/entities/Order\";\r\n\r\nconst SellerOrderDetailPage: React.FC = () => {\r\n\tconst {id} = useParams<{id: string}>();\r\n\tconst {user} = useAuth();\r\n\tconst [order, setOrder] = useState<OrderDetail | null>(null);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\tconst [isUpdating, setIsUpdating] = useState(false);\r\n\tconst [successMessage, setSuccessMessage] = useState<string | null>(null);\r\n\tconst [isShippingModalOpen, setIsShippingModalOpen] = useState(false);\r\n\tconst [itemsBreakdown, setItemsBreakdown] = useState<OrderBreakdownResponse | null>(null);\r\n\tconst [breakdownLoading, setBreakdownLoading] = useState(false);\r\n\r\n\tconst sellerOrderAdapter = new SellerOrderServiceAdapter();\r\n\tconst breakdownService = OrderBreakdownService.getInstance();\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchOrderDetails();\r\n\t}, [id]);\r\n\r\n\t// ✅ FUNCIÓN para cargar breakdown de productos\r\n\tconst loadItemsBreakdown = useCallback(async () => {\r\n\t\tconsole.log('🔍 loadItemsBreakdown ejecutándose con order:', order?.id, 'sellerId:', order?.sellerId, 'user.id:', user?.id);\r\n\t\tif (!order?.id) {\r\n\t\t\tconsole.log('❌ No se puede cargar breakdown - falta order.id:', {id: order?.id});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t// ✅ USAR sellerId del order o del usuario autenticado como fallback\r\n\t\tconst effectiveSellerId = order?.sellerId || user?.id;\r\n\t\tconsole.log('🔍 effectiveSellerId calculado:', effectiveSellerId);\r\n\r\n\t\tconsole.log('✅ Iniciando carga de breakdown para orden:', order.id);\r\n\t\tsetBreakdownLoading(true);\r\n\t\ttry {\r\n\t\t\tconst breakdown = await breakdownService.getOrderItemsBreakdown(\r\n\t\t\t\torder.id,\r\n\t\t\t\t'seller' // viewType específico para seller\r\n\t\t\t);\r\n\t\t\tsetItemsBreakdown(breakdown);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('❌ ERROR DETALLADO al cargar breakdown para orden', order.id, ':', error);\r\n\t\t\tconsole.error('❌ URL del endpoint usado:', `/seller/orders/${order.id}`);\r\n\t\t\tconsole.error('❌ Detalles del error:', error instanceof Error ? error.message : error);\r\n\t\t\t// En caso de error, mantener el estado actual\r\n\t\t} finally {\r\n\t\t\tsetBreakdownLoading(false);\r\n\t\t}\r\n\t}, [order?.id, order?.sellerId, user?.id, breakdownService]);\r\n\r\n\t// ✅ CARGAR breakdown cuando cambie la orden\r\n\tuseEffect(() => {\r\n\t\tconsole.log('🔍 useEffect para loadItemsBreakdown ejecutándose, order cambió:', order?.id);\r\n\t\tloadItemsBreakdown();\r\n\t}, [loadItemsBreakdown]);\r\n\r\n\tconst fetchOrderDetails = async () => {\r\n\t\tif (!id) return;\r\n\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst orderDetail = await sellerOrderAdapter.getOrderDetails(id);\r\n\t\t\tconsole.log(\"🛍️ Detalles de la orden del seller:\", orderDetail);\r\n\t\t\tconsole.log(\"🔍 VERIFICAR: order.sellerId =\", orderDetail?.sellerId);\r\n\t\t\tconsole.log(\"🔍 VERIFICAR: order.id =\", orderDetail?.id);\r\n\t\t\tconsole.log(\"🔍 VERIFICAR: user.id del contexto =\", user?.id);\r\n\t\t\tsetOrder(orderDetail);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al cargar detalles de la orden:\", error);\r\n\t\t\tsetError(\"No se pudieron cargar los detalles de la orden\");\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleStatusUpdate = async (newStatus: OrderStatus) => {\r\n\t\tif (!order || !id) return;\r\n\r\n\t\tsetIsUpdating(true);\r\n\t\ttry {\r\n\t\t\tawait sellerOrderAdapter.updateOrderStatus(id, newStatus);\r\n\t\t\tsetOrder({...order, status: newStatus});\r\n\t\t\tsetSuccessMessage(\"Estado de la orden actualizado correctamente\");\r\n\t\t\tsetTimeout(() => setSuccessMessage(null), 3000);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al actualizar estado:\", error);\r\n\t\t\tsetError(\"No se pudo actualizar el estado de la orden\");\r\n\t\t} finally {\r\n\t\t\tsetIsUpdating(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCreateShipping = async (shippingData: ShippingFormData) => {\r\n\t\tif (!order || !id) return;\r\n\r\n\t\tsetIsUpdating(true);\r\n\t\ttry {\r\n\t\t\tawait sellerOrderAdapter.createShipping(id, shippingData);\r\n\t\t\tsetIsShippingModalOpen(false);\r\n\t\t\tawait fetchOrderDetails(); // Recargar para mostrar info de envío\r\n\t\t\tsetSuccessMessage(\"Información de envío creada correctamente\");\r\n\t\t\tsetTimeout(() => setSuccessMessage(null), 3000);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error al crear envío:\", error);\r\n\t\t\tsetError(\"No se pudo crear la información de envío\");\r\n\t\t} finally {\r\n\t\t\tsetIsUpdating(false);\r\n\t\t}\r\n\t};\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t<div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\r\n\t\t\t\t\t<p className=\"mt-4 text-gray-600\">Cargando detalles de la orden...</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (error || !order) {\r\n\t\treturn (\r\n\t\t\t<div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t<X className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\r\n\t\t\t\t\t<p className=\"text-red-600 mb-4\">{error || \"Orden no encontrada\"}</p>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto=\"/seller/orders\"\r\n\t\t\t\t\t\tclassName=\"text-primary-600 hover:text-primary-800 font-medium\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t← Volver a pedidos\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// ✅ CALCULAR DATOS ESPECÍFICOS DEL SELLER - LÓGICA CORREGIDA\r\n\tconst calculateSellerData = () => {\r\n\t\tif (!order.orderSummary || !order.items) {\r\n\t\t\treturn {\r\n\t\t\t\ttotalQuantity: 0,\r\n\t\t\t\tsubtotalOriginal: 0,\r\n\t\t\t\tsubtotalFinal: 0,\r\n\t\t\t\tplatformCommission: 0,\r\n\t\t\t\tshippingIncome: 0,\r\n\t\t\t\ttotalToReceive: 0,\r\n\t\t\t\tsellerEarningsFromProducts: 0\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// ✅ DATOS CORRECTOS DEL BACKEND\r\n\t\tconst totalQuantity = order.orderSummary.total_quantity || 0;\r\n\t\tconst sellerEarningsFromProducts = order.orderSummary.total_seller_earnings_from_products || 0;\r\n\t\tconst platformCommission = order.orderSummary.total_platform_commission || 0;\r\n\t\tconst shippingIncome = order.orderSummary.shipping_distribution?.seller_amount || 0;\r\n\t\t\r\n\t\t// ✅ CÁLCULO CORRECTO: total vendido (ganancia + comisión) = lo que realmente se facturó\r\n\t\tconst subtotalVendido = sellerEarningsFromProducts + platformCommission;\r\n\t\tconst totalToReceive = sellerEarningsFromProducts + shippingIncome;\r\n\r\n\t\treturn {\r\n\t\t\ttotalQuantity,\r\n\t\t\tsubtotalVendido,\r\n\t\t\tplatformCommission,\r\n\t\t\tshippingIncome,\r\n\t\t\ttotalToReceive,\r\n\t\t\tsellerEarningsFromProducts\r\n\t\t};\r\n\t};\r\n\r\n\tconst sellerData = calculateSellerData();\r\n\r\n\treturn (\r\n\t\t<div className=\"min-h-screen bg-gray-50\">\r\n\t\t\t<div className=\"bg-white shadow\">\r\n\t\t\t\t<div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n\t\t\t\t\t<div className=\"flex justify-between items-center py-6\">\r\n\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto=\"/seller/orders\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex items-center text-gray-600 hover:text-gray-800 mr-4\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ArrowLeft className=\"w-5 h-5 mr-1\" />\r\n\t\t\t\t\t\t\t\tVolver a pedidos\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<h1 className=\"text-2xl font-bold text-gray-900\">\r\n\t\t\t\t\t\t\t\tPedido #{order.orderNumber}\r\n\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"flex space-x-3\">\r\n\t\t\t\t\t\t\t{canTransitionTo(order.status, \"shipped\") && (\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={() => setIsShippingModalOpen(true)}\r\n\t\t\t\t\t\t\t\t\tdisabled={isUpdating}\r\n\t\t\t\t\t\t\t\t\tclassName=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium disabled:opacity-50\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Truck className=\"w-4 h-4 mr-2 inline\" />\r\n\t\t\t\t\t\t\t\t\tMarcar como enviado\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{canTransitionTo(order.status, \"cancelled\") && (\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={() => handleStatusUpdate(\"cancelled\")}\r\n\t\t\t\t\t\t\t\t\tdisabled={isUpdating}\r\n\t\t\t\t\t\t\t\t\tclassName=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-medium disabled:opacity-50\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<X className=\"w-4 h-4 mr-2 inline\" />\r\n\t\t\t\t\t\t\t\t\tCancelar pedido\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Mensaje de éxito */}\r\n\t\t\t{successMessage && (\r\n\t\t\t\t<div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mt-4\">\r\n\t\t\t\t\t<div className=\"bg-green-50 border border-green-200 text-green-800 px-4 py-3 rounded-md\">\r\n\t\t\t\t\t\t<Check className=\"w-5 h-5 inline mr-2\" />\r\n\t\t\t\t\t\t{successMessage}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* Contenido principal */}\r\n\t\t\t<div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n\t\t\t\t<div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n\t\t\t\t\t{/* Información de la orden */}\r\n\t\t\t\t\t<div className=\"lg:col-span-1 space-y-6\">\r\n\t\t\t\t\t\t{/* Estado del pedido */}\r\n\t\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-md p-6\">\r\n\t\t\t\t\t\t\t<h2 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n\t\t\t\t\t\t\t\tEstado del pedido\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t<div className=\"space-y-3\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"block text-sm font-medium text-gray-600\">Estado:</span>\r\n\t\t\t\t\t\t\t\t\t<span className={`inline-block px-2 py-1 rounded-full text-xs font-medium ${\r\n\t\t\t\t\t\t\t\t\t\torder.status === \"completed\" ? \"bg-green-100 text-green-800\" :\r\n\t\t\t\t\t\t\t\t\t\torder.status === \"shipped\" ? \"bg-blue-100 text-blue-800\" :\r\n\t\t\t\t\t\t\t\t\t\torder.status === \"processing\" ? \"bg-yellow-100 text-yellow-800\" :\r\n\t\t\t\t\t\t\t\t\t\torder.status === \"cancelled\" ? \"bg-red-100 text-red-800\" :\r\n\t\t\t\t\t\t\t\t\t\t\"bg-gray-100 text-gray-800\"\r\n\t\t\t\t\t\t\t\t\t}`}>\r\n\t\t\t\t\t\t\t\t\t\t{order.status === \"pending\" ? \"Pendiente\" :\r\n\t\t\t\t\t\t\t\t\t\t order.status === \"processing\" ? \"En proceso\" :\r\n\t\t\t\t\t\t\t\t\t\t order.status === \"shipped\" ? \"Enviado\" :\r\n\t\t\t\t\t\t\t\t\t\t order.status === \"delivered\" ? \"Entregado\" :\r\n\t\t\t\t\t\t\t\t\t\t order.status === \"cancelled\" ? \"Cancelado\" :\r\n\t\t\t\t\t\t\t\t\t\t order.status === \"completed\" ? \"Completado\" : order.status}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"block text-sm font-medium text-gray-600\">Pago:</span>\r\n\t\t\t\t\t\t\t\t\t<span className={`inline-block px-2 py-1 rounded-full text-xs font-medium ${\r\n\t\t\t\t\t\t\t\t\t\torder.paymentStatus === \"completed\" ? \"bg-green-100 text-green-800\" :\r\n\t\t\t\t\t\t\t\t\t\torder.paymentStatus === \"pending\" ? \"bg-yellow-100 text-yellow-800\" :\r\n\t\t\t\t\t\t\t\t\t\t\"bg-red-100 text-red-800\"\r\n\t\t\t\t\t\t\t\t\t}`}>\r\n\t\t\t\t\t\t\t\t\t\t{order.paymentStatus === \"completed\" ? \"Completado\" :\r\n\t\t\t\t\t\t\t\t\t\t order.paymentStatus === \"pending\" ? \"Pendiente\" : order.paymentStatus}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"block text-sm font-medium text-gray-600\">Método de pago:</span>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-gray-900\">{order.paymentMethod || \"No especificado\"}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"block text-sm font-medium text-gray-600\">Fecha:</span>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-gray-900\">{formatDate(order.createdAt)}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* Cliente */}\r\n\t\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-md p-6\">\r\n\t\t\t\t\t\t\t<h2 className=\"text-lg font-medium text-gray-900 mb-4\">Cliente</h2>\r\n\t\t\t\t\t\t\t<div className=\"space-y-3\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"block text-sm font-medium text-gray-600\">Nombre:</span>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-gray-900\">{order.customerName || \"No especificado\"}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"block text-sm font-medium text-gray-600\">Email:</span>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-gray-900\">{order.customerEmail || \"No especificado\"}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{order.shippingAddress && (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"block text-sm font-medium text-gray-600\">Dirección de envío:</span>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t\t{order.shippingAddress.address}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t{order.shippingAddress.city}, {order.shippingAddress.state}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t{order.shippingAddress.country}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* Información de envío */}\r\n\t\t\t\t\t\t{order.shippingData && (\r\n\t\t\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-md p-6\">\r\n\t\t\t\t\t\t\t\t<h2 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n\t\t\t\t\t\t\t\t\tInformación de envío\r\n\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t<div className=\"space-y-3\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"block text-sm font-medium text-gray-600\">\r\n\t\t\t\t\t\t\t\t\t\t\tNúmero de seguimiento:\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-primary-600 font-medium\">\r\n\t\t\t\t\t\t\t\t\t\t\t{order.shippingData.tracking_number}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{order.shippingData.shipping_company && (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"block text-sm font-medium text-gray-600\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tEmpresa de transporte:\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{order.shippingData.shipping_company}\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{order.shippingData.estimated_delivery && (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"block text-sm font-medium text-gray-600\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tEntrega estimada:\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{formatDate(order.shippingData.estimated_delivery)}\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Productos y resumen */}\r\n\t\t\t\t\t<div className=\"lg:col-span-2 space-y-6\">\r\n\t\t\t\t\t\t{/* ✅ PRODUCTOS DE TU TIENDA - ESPECÍFICO PARA SELLER */}\r\n\t\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-md p-6\">\r\n\t\t\t\t\t\t\t<div className=\"flex items-center mb-4\">\r\n\t\t\t\t\t\t\t\t<Package className=\"w-5 h-5 text-gray-600 mr-2\" />\r\n\t\t\t\t\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900\">\r\n\t\t\t\t\t\t\t\t\tProductos de tu Tienda\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t<span className=\"ml-2 text-sm text-gray-500\">\r\n\t\t\t\t\t\t\t\t\t({sellerData.totalQuantity} {sellerData.totalQuantity === 1 ? 'producto' : 'productos'})\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"space-y-4\">\r\n\t\t\t\t\t\t\t\t{order.items && order.items.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\torder.items.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<div key={item.id || index} className=\"border border-gray-200 rounded-lg p-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-start space-x-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* Imagen del Producto */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex-shrink-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.product_image ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={item.product_image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={item.product_name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-16 h-16 object-cover rounded-lg border border-gray-200\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"w-16 h-16 bg-gray-100 rounded-lg flex items-center justify-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Package className=\"w-8 h-8 text-gray-400\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* Información del Producto */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex-1 min-w-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"text-lg font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.product_name || 'Producto'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* ✅ GANANCIAS POR PRODUCTO usando breakdown centralizado */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{breakdownLoading ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mt-3 bg-gray-50 p-4 rounded-lg border border-gray-200\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary-600\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"ml-2 text-sm text-gray-500\">Calculando ganancias...</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mt-3 space-y-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Cantidad a enviar */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"bg-blue-50 p-3 rounded-lg border border-blue-200\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm font-medium text-gray-700\">Cantidad a enviar:</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-xl font-bold text-primary-600\">{item.quantity || 0}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Ganancias por producto */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"bg-green-50 p-3 rounded-lg border border-green-200\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm font-medium text-gray-700\">Ganancia por este producto:</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-xl font-bold text-green-600\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{itemsBreakdown ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst breakdownItem = itemsBreakdown.items.find(bi => bi.product_id === item.productId);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (breakdownItem) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ✅ USAR DIRECTAMENTE LA GANANCIA CALCULADA POR EL BACKEND SI ESTÁ DISPONIBLE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (breakdownItem.seller_net_earning_per_unit && breakdownItem.seller_net_earning_per_unit > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn `$${(breakdownItem.seller_net_earning_per_unit * item.quantity).toFixed(2)}`;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ✅ FALLBACK: calcular ganancia = final_price - comision_plataforma \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if (itemsBreakdown.summary?.seller_commission_info) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst commissionRate = itemsBreakdown.summary.seller_commission_info.platform_commission_rate / 100;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst sellerEarningPerUnit = breakdownItem.final_price_per_unit * (1 - commissionRate);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn `$${(sellerEarningPerUnit * item.quantity).toFixed(2)}`;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn '$0.00';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : '$0.00'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-xs text-gray-500 mt-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t({item.quantity} x ${itemsBreakdown ? (() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst breakdownItem = itemsBreakdown.items.find(bi => bi.product_id === item.productId);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (breakdownItem) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ✅ USAR DIRECTAMENTE LA GANANCIA POR UNIDAD SI ESTÁ DISPONIBLE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (breakdownItem.seller_net_earning_per_unit && breakdownItem.seller_net_earning_per_unit > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn breakdownItem.seller_net_earning_per_unit.toFixed(2);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ✅ FALLBACK: calcular ganancia por unidad\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if (itemsBreakdown.summary?.seller_commission_info) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst commissionRate = itemsBreakdown.summary.seller_commission_info.platform_commission_rate / 100;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst sellerEarningPerUnit = breakdownItem.final_price_per_unit * (1 - commissionRate);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn sellerEarningPerUnit.toFixed(2);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn '0.00';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})() : '0.00'} c/u)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-center py-8 text-gray-500\">\r\n\t\t\t\t\t\t\t\t\t\tNo hay productos en esta orden\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{/* Nota informativa */}\r\n\t\t\t\t\t\t\t<div className=\"mt-4 p-3 bg-blue-50 rounded-lg border border-blue-200\">\r\n\t\t\t\t\t\t\t\t<p className=\"text-sm text-blue-800\">\r\n\t\t\t\t\t\t\t\t\t<strong>Información del Vendedor:</strong> Los precios mostrados son los finales \r\n\t\t\t\t\t\t\t\t\tque se usaron para calcular tu comisión. Los descuentos ya están aplicados.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* ✅ RESUMEN DE VENTA - ESPECÍFICO PARA SELLER */}\r\n\t\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-md p-6\">\r\n\t\t\t\t\t\t\t<div className=\"flex items-center mb-4\">\r\n\t\t\t\t\t\t\t\t<Calculator className=\"w-5 h-5 text-gray-600 mr-2\" />\r\n\t\t\t\t\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900\">Resumen de Venta</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{/* ✅ RESUMEN usando breakdown centralizado */}\r\n\t\t\t\t\t\t\t{breakdownLoading ? (\r\n\t\t\t\t\t\t\t\t<div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary-600\"></div>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"ml-2 text-sm text-gray-500\">Calculando resumen...</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : itemsBreakdown && itemsBreakdown.summary?.seller_commission_info ? (\r\n\t\t\t\t\t\t\t\t<OrderEarningsInfo\r\n\t\t\t\t\t\t\t\t\tgrossEarnings={itemsBreakdown.summary.total_final_amount}\r\n\t\t\t\t\t\t\t\t\tplatformCommission={itemsBreakdown.summary.seller_commission_info.total_commission}\r\n\t\t\t\t\t\t\t\t\tnetEarnings={itemsBreakdown.summary.seller_commission_info.seller_earnings_from_products}\r\n\t\t\t\t\t\t\t\t\tshippingEarnings={itemsBreakdown.summary.seller_commission_info.shipping_distribution?.seller_amount || 0}\r\n\t\t\t\t\t\t\t\t\ttotalEarnings={itemsBreakdown.summary.seller_commission_info.seller_earnings_from_products + (itemsBreakdown.summary.seller_commission_info.shipping_distribution?.seller_amount || 0)}\r\n\t\t\t\t\t\t\t\t\tcommissionRate={itemsBreakdown.summary.seller_commission_info.platform_commission_rate}\r\n\t\t\t\t\t\t\t\t\tsellerCount={1}\r\n\t\t\t\t\t\t\t\t\tshowBreakdown={true}\r\n\t\t\t\t\t\t\t\t\tclassName=\"mb-4\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className=\"bg-yellow-50 p-4 rounded-lg border border-yellow-200\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm text-yellow-800\">\r\n\t\t\t\t\t\t\t\t\t\t<strong>Nota:</strong> No se pudieron cargar los cálculos centralizados. \r\n\t\t\t\t\t\t\t\t\t\tUsando datos del backend como respaldo.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<OrderEarningsInfo\r\n\t\t\t\t\t\t\t\t\t\tgrossEarnings={sellerData.subtotalVendido || 0}\r\n\t\t\t\t\t\t\t\t\t\tplatformCommission={sellerData.platformCommission || 0}\r\n\t\t\t\t\t\t\t\t\t\tnetEarnings={sellerData.sellerEarningsFromProducts || 0}\r\n\t\t\t\t\t\t\t\t\t\tshippingEarnings={sellerData.shippingIncome || 0}\r\n\t\t\t\t\t\t\t\t\t\ttotalEarnings={sellerData.totalToReceive || 0}\r\n\t\t\t\t\t\t\t\t\t\tcommissionRate={(sellerData.platformCommission ?? 0) > 0 && (sellerData.subtotalVendido ?? 0) > 0 ? ((sellerData.platformCommission ?? 0) / (sellerData.subtotalVendido ?? 1)) * 100 : 10.0}\r\n\t\t\t\t\t\t\t\t\t\tsellerCount={1}\r\n\t\t\t\t\t\t\t\t\t\tshowBreakdown={true}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"mt-2\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div className=\"mt-4 p-3 bg-yellow-50 rounded-lg border border-yellow-200\">\r\n\t\t\t\t\t\t\t\t<p className=\"text-sm text-yellow-800\">\r\n\t\t\t\t\t\t\t\t\t<strong>Nota:</strong> Los cupones de descuento NO afectan al seller (son asumidos por la tienda). \r\n\t\t\t\t\t\t\t\t\tSolo se aplican descuentos de seller y por volumen. El envío se reparte entre sellers.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Modal de envío */}\r\n\t\t\t<ShippingFormModal\r\n\t\t\t\torderId={id || \"\"}\r\n\t\t\t\torderNumber={order.orderNumber}\r\n\t\t\t\tisOpen={isShippingModalOpen}\r\n\t\t\t\tonClose={() => setIsShippingModalOpen(false)}\r\n\t\t\t\tonSubmit={handleCreateShipping}\r\n\t\t\t\tisLoading={isUpdating}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SellerOrderDetailPage;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n\tDollarSign,\r\n\tTrendingUp,\r\n\tCalendar,\r\n\tRefreshCw,\r\n\tDownload,\r\n\tCreditCard,\r\n\tArrowRight,\r\n\tWallet,\r\n\tPieChart,\r\n\r\n\tBarChart2,\r\n} from \"lucide-react\";\r\nimport { formatCurrency } from \"../../../utils/formatters/formatCurrency\";\r\nimport DashboardCardList from \"@/presentation/components/dashboard/DashboardCardList\";\r\n\r\n// Tipos\r\ninterface PaymentMethod {\r\n  method: string;\r\n  amount: number;\r\n  percentage: number;\r\n  color: string;\r\n}\r\n\r\ninterface MonthlySales {\r\n\tmonth: string;\r\n\tsales: number;\r\n\tcommissions: number;\r\n\tnet: number;\r\n}\r\n\r\ninterface CategorySales {\r\n\tcategory: string;\r\n\tamount: number;\r\n\tpercentage: number;\r\n\tcolor: string;\r\n}\r\n\r\ninterface PendingPayment {\r\n  id: string;\r\n  date: string;\r\n  amount: number;\r\n  status: \"processing\" | \"scheduled\";\r\n  estimatedArrival?: string;\r\n}\r\n\r\ninterface EarningsStats {\r\n  totalEarnings: number;\r\n  pendingPayments: number;\r\n  salesThisMonth: number;\r\n  salesGrowth: number;\r\n  commissionsThisMonth: number;\r\n  commissionsPercentage: number;\r\n  netEarningsThisMonth: number;\r\n  earningsGrowth: number;\r\n  paymentMethods: PaymentMethod[];\r\n  monthlySales: MonthlySales[];\r\n  categorySales: CategorySales[];\r\n  pendingPaymentsList: PendingPayment[];\r\n}\r\n\r\n// Componente principal\r\nconst SellerEarningsPage: React.FC = () => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [dateRange, setDateRange] = useState<{ start: string; end: string }>({\r\n    start: \"\",\r\n    end: \"\"\r\n  });\r\n  const [stats, setStats] = useState<EarningsStats | null>(null);\r\n  const [selectedChart, setSelectedChart] = useState<\"sales\" | \"categories\">(\"sales\");\r\n\r\n  // Cargar datos de ganancias (simulando una llamada a API)\r\n  useEffect(() => {\r\n    fetchEarningsData();\r\n  }, []);\r\n\r\n  const fetchEarningsData = () => {\r\n    setLoading(true);\r\n    // Simulación de carga desde API\r\n    setTimeout(() => {\r\n      // Datos de ejemplo\r\n\t  const mockStats: EarningsStats = {\r\n\t\ttotalEarnings: 12580.45,\r\n\t\tpendingPayments: 1458.32,\r\n\t\tsalesThisMonth: 3450.8,\r\n\t\tsalesGrowth: 12.5,\r\n\t\tcommissionsThisMonth: 517.62,\r\n\t\tcommissionsPercentage: 15,\r\n\t\tnetEarningsThisMonth: 2933.18,\r\n\t\tearningsGrowth: 8.2,\r\n\t\tpaymentMethods: [\r\n\t\t  { method: \"Tarjeta de Crédito\", amount: 7548.27, percentage: 60, color: \"bg-blue-500\" },\r\n\t\t  { method: \"Transferencia\", amount: 2516.09, percentage: 20, color: \"bg-green-500\" },\r\n\t\t  { method: \"PayPal\", amount: 1887.07, percentage: 15, color: \"bg-indigo-500\" },\r\n\t\t  { method: \"Otros\", amount: 629.02, percentage: 5, color: \"bg-gray-500\" }\r\n\t\t],\r\n        monthlySales: [\r\n          { month: \"Enero\", sales: 1850.50, commissions: 277.58, net: 1572.92 },\r\n          { month: \"Febrero\", sales: 2105.30, commissions: 315.80, net: 1789.50 },\r\n          { month: \"Marzo\", sales: 2300.75, commissions: 345.11, net: 1955.64 },\r\n          { month: \"Abril\", sales: 2150.40, commissions: 322.56, net: 1827.84 },\r\n          { month: \"Mayo\", sales: 2485.60, commissions: 372.84, net: 2112.76 },\r\n          { month: \"Junio\", sales: 2890.25, commissions: 433.54, net: 2456.71 },\r\n          { month: \"Julio\", sales: 3120.80, commissions: 468.12, net: 2652.68 },\r\n          { month: \"Agosto\", sales: 3250.45, commissions: 487.57, net: 2762.88 },\r\n          { month: \"Septiembre\", sales: 3125.30, commissions: 468.80, net: 2656.50 },\r\n          { month: \"Octubre\", sales: 3450.80, commissions: 517.62, net: 2933.18 },\r\n          { month: \"Noviembre\", sales: 0, commissions: 0, net: 0 },\r\n          { month: \"Diciembre\", sales: 0, commissions: 0, net: 0 }\r\n        ],\r\n        categorySales: [\r\n          { category: \"Electrónica\", amount: 4650.25, percentage: 37, color: \"bg-blue-500\" },\r\n          { category: \"Accesorios\", amount: 3145.11, percentage: 25, color: \"bg-green-500\" },\r\n          { category: \"Moda\", amount: 2516.09, percentage: 20, color: \"bg-yellow-500\" },\r\n          { category: \"Hogar\", amount: 1258.05, percentage: 10, color: \"bg-red-500\" },\r\n          { category: \"Otros\", amount: 1010.95, percentage: 8, color: \"bg-purple-500\" }\r\n        ],\r\n        pendingPaymentsList: [\r\n          {\r\n            id: \"PAY-2023-001\",\r\n            date: \"2023-11-05\",\r\n            amount: 958.32,\r\n            status: \"processing\"\r\n          },\r\n          {\r\n            id: \"PAY-2023-002\",\r\n            date: \"2023-11-10\",\r\n            amount: 500.00,\r\n            status: \"scheduled\",\r\n            estimatedArrival: \"2023-11-15\"\r\n          }\r\n        ]\r\n      };\r\n\r\n      setStats(mockStats);\r\n      setLoading(false);\r\n    }, 800);\r\n\t};\r\n\t\r\n\r\n  // Renderiza un gráfico simple de barras para las ventas mensuales\r\n  const renderSalesChart = (monthlySales: MonthlySales[]) => {\r\n\t\tif (!monthlySales || monthlySales.length === 0) return null;\r\n\r\n\t\tconst data = monthlySales;\r\n\t\t// Encontrar el valor máximo para escalar correctamente las barras\r\n\t\tconst maxSales = Math.max(...data.map((item) => item.sales));\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t<div className=\"flex flex-col sm:flex-row items-start sm:items-center mb-4\">\r\n\t\t\t\t\t<h3 className=\"text-lg font-medium text-gray-900\">\r\n\t\t\t\t\t\tVentas Mensuales\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<div className=\"mt-2 sm:mt-0 sm:ml-4 flex flex-wrap gap-3\">\r\n\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<div className=\"w-3 h-3 bg-blue-500 rounded-full mr-1\"></div>\r\n\t\t\t\t\t\t\t<span className=\"text-xs text-gray-500\">\r\n\t\t\t\t\t\t\t\tVentas\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<div className=\"w-3 h-3 bg-red-500 rounded-full mr-1\"></div>\r\n\t\t\t\t\t\t\t<span className=\"text-xs text-gray-500\">\r\n\t\t\t\t\t\t\t\tComisiones\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<div className=\"w-3 h-3 bg-green-500 rounded-full mr-1\"></div>\r\n\t\t\t\t\t\t\t<span className=\"text-xs text-gray-500\">\r\n\t\t\t\t\t\t\t\tGanancias netas\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"h-64 w-full\">\r\n\t\t\t\t\t{/* Etiquetas eje Y (valores) */}\r\n\t\t\t\t\t<div className=\"flex h-full\">\r\n\t\t\t\t\t\t<div className=\"w-12 h-full flex flex-col justify-between text-xs text-gray-500 pr-2\">\r\n\t\t\t\t\t\t\t<span>{formatCurrency(maxSales)}</span>\r\n\t\t\t\t\t\t\t<span>{formatCurrency(maxSales * 0.75)}</span>\r\n\t\t\t\t\t\t\t<span>{formatCurrency(maxSales * 0.5)}</span>\r\n\t\t\t\t\t\t\t<span>{formatCurrency(maxSales * 0.25)}</span>\r\n\t\t\t\t\t\t\t<span>{formatCurrency(0)}</span>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* Contenedor principal del gráfico */}\r\n\t\t\t\t\t\t<div className=\"flex-1 h-full\">\r\n\t\t\t\t\t\t\t{/* Líneas de referencia horizontales */}\r\n\t\t\t\t\t\t\t<div className=\"h-full flex flex-col justify-between relative\">\r\n\t\t\t\t\t\t\t\t<div className=\"border-t border-gray-200absolute top-0 w-full\"></div>\r\n\t\t\t\t\t\t\t\t<div className=\"border-t border-gray-200absolute top-1/4 w-full\"></div>\r\n\t\t\t\t\t\t\t\t<div className=\"border-t border-gray-200absolute top-2/4 w-full\"></div>\r\n\t\t\t\t\t\t\t\t<div className=\"border-t border-gray-200absolute top-3/4 w-full\"></div>\r\n\t\t\t\t\t\t\t\t<div className=\"border-t border-gray-200absolute bottom-0 w-full\"></div>\r\n\r\n\t\t\t\t\t\t\t\t{/* Barras agrupadas */}\r\n\t\t\t\t\t\t\t\t<div className=\"absolute inset-0 flex items-end\">\r\n\t\t\t\t\t\t\t\t\t{data.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\tconst salesHeight =\r\n\t\t\t\t\t\t\t\t\t\t\tmaxSales > 0 ? (item.sales / maxSales) * 100 : 0;\r\n\t\t\t\t\t\t\t\t\t\tconst commissionHeight =\r\n\t\t\t\t\t\t\t\t\t\t\tmaxSales > 0 ? (item.commissions / maxSales) * 100 : 0;\r\n\t\t\t\t\t\t\t\t\t\tconst netHeight =\r\n\t\t\t\t\t\t\t\t\t\t\tmaxSales > 0 ? (item.net / maxSales) * 100 : 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"flex-1 flex justify-center h-full px-1\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"w-full max-w-[30px] flex justify-between items-end h-full\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Barra de ventas */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-2 bg-blue-500 rounded-t relative group cursor-pointer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: `${salesHeight}%`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminHeight: salesHeight > 0 ? \"4px\" : \"0\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"opacity-0 group-hover:opacity-100 absolute -top-8 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white text-xs rounded py-1 px-2 whitespace-nowrap z-10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tVentas: {formatCurrency(item.sales)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Barra de comisiones */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-2 bg-red-500 rounded-t relative group cursor-pointer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: `${commissionHeight}%`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminHeight: commissionHeight > 0 ? \"4px\" : \"0\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"opacity-0 group-hover:opacity-100 absolute -top-8 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white text-xs rounded py-1 px-2 whitespace-nowrap z-10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tComisiones: {formatCurrency(item.commissions)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Barra de ganancias netas */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-2 bg-green-500 rounded-t relative group cursor-pointer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: `${netHeight}%`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminHeight: netHeight > 0 ? \"4px\" : \"0\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"opacity-0 group-hover:opacity-100 absolute -top-8 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white text-xs rounded py-1 px-2 whitespace-nowrap z-10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNeto: {formatCurrency(item.net)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{/* Etiquetas eje X (meses) */}\r\n\t\t\t\t\t\t\t<div className=\"flex mt-2\">\r\n\t\t\t\t\t\t\t\t{data.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<div key={index} className=\"flex-1 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-xs text-gray-500\">\r\n\t\t\t\t\t\t\t\t\t\t\t{item.month.substring(0, 3)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n  // Renderiza un gráfico circular para las categorías\r\n  const renderCategoryChart = (categorySales: CategorySales[]) => {\r\n\t\tif (!categorySales || categorySales.length === 0) return null;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t<h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n\t\t\t\t\tVentas por Categoría\r\n\t\t\t\t</h3>\r\n\t\t\t\t<div className=\"flex flex-col md:flex-row\">\r\n\t\t\t\t\t<div className=\"md:w-1/2 flex justify-center items-center\">\r\n\t\t\t\t\t\t<div className=\"relative w-48 h-48 md:w-56 md:h-56\">\r\n\t\t\t\t\t\t\t{/* Gráfico circular usando SVG */}\r\n\t\t\t\t\t\t\t<svg viewBox=\"0 0 100 100\" className=\"w-full h-full\">\r\n\t\t\t\t\t\t\t\t{/* Círculo de fondo */}\r\n\t\t\t\t\t\t\t\t<circle\r\n\t\t\t\t\t\t\t\t\tcx=\"50\"\r\n\t\t\t\t\t\t\t\t\tcy=\"50\"\r\n\t\t\t\t\t\t\t\t\tr=\"40\"\r\n\t\t\t\t\t\t\t\t\tfill=\"#f3f4f6\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t{/* Renderizamos cada segmento del círculo */}\r\n\t\t\t\t\t\t\t\t{categorySales.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t// Calculamos los ángulos inicial y final basados en porcentajes acumulados\r\n\t\t\t\t\t\t\t\t\tconst previousSections = categorySales\r\n\t\t\t\t\t\t\t\t\t\t.slice(0, index)\r\n\t\t\t\t\t\t\t\t\t\t.reduce((sum, curr) => sum + curr.percentage, 0);\r\n\r\n\t\t\t\t\t\t\t\t\tconst startAngle = (previousSections / 100) * 360;\r\n\t\t\t\t\t\t\t\t\tconst endAngle = startAngle + (item.percentage / 100) * 360;\r\n\r\n\t\t\t\t\t\t\t\t\t// Convertimos grados a radianes\r\n\t\t\t\t\t\t\t\t\tconst startRad = ((startAngle - 90) * Math.PI) / 180;\r\n\t\t\t\t\t\t\t\t\tconst endRad = ((endAngle - 90) * Math.PI) / 180;\r\n\r\n\t\t\t\t\t\t\t\t\t// Calculamos las coordenadas de inicio y fin del arco\r\n\t\t\t\t\t\t\t\t\tconst x1 = 50 + 40 * Math.cos(startRad);\r\n\t\t\t\t\t\t\t\t\tconst y1 = 50 + 40 * Math.sin(startRad);\r\n\t\t\t\t\t\t\t\t\tconst x2 = 50 + 40 * Math.cos(endRad);\r\n\t\t\t\t\t\t\t\t\tconst y2 = 50 + 40 * Math.sin(endRad);\r\n\r\n\t\t\t\t\t\t\t\t\t// Determinamos si el arco debe ser mayor a 180 grados\r\n\t\t\t\t\t\t\t\t\tconst largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n\r\n\t\t\t\t\t\t\t\t\t// Construimos el path del segmento\r\n\t\t\t\t\t\t\t\t\tconst path = [\r\n\t\t\t\t\t\t\t\t\t\t`M 50 50`,\r\n\t\t\t\t\t\t\t\t\t\t`L ${x1} ${y1}`,\r\n\t\t\t\t\t\t\t\t\t\t`A 40 40 0 ${largeArcFlag} 1 ${x2} ${y2}`,\r\n\t\t\t\t\t\t\t\t\t\t\"Z\",\r\n\t\t\t\t\t\t\t\t\t].join(\" \");\r\n\r\n\t\t\t\t\t\t\t\t\t// Mapeamos colores de clases a colores SVG\r\n\t\t\t\t\t\t\t\t\tconst colorMap: {[key: string]: string} = {\r\n\t\t\t\t\t\t\t\t\t\t\"bg-blue-500\": \"#3b82f6\",\r\n\t\t\t\t\t\t\t\t\t\t\"bg-green-500\": \"#10b981\",\r\n\t\t\t\t\t\t\t\t\t\t\"bg-yellow-500\": \"#f59e0b\",\r\n\t\t\t\t\t\t\t\t\t\t\"bg-red-500\": \"#ef4444\",\r\n\t\t\t\t\t\t\t\t\t\t\"bg-purple-500\": \"#8b5cf6\",\r\n\t\t\t\t\t\t\t\t\t\t\"bg-indigo-500\": \"#6366f1\",\r\n\t\t\t\t\t\t\t\t\t\t\"bg-pink-500\": \"#ec4899\",\r\n\t\t\t\t\t\t\t\t\t\t\"bg-gray-500\": \"#6b7280\",\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tconst fillColor = colorMap[item.color] || \"#6b7280\";\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<g key={index} className=\"cursor-pointer\">\r\n\t\t\t\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\t\t\t\td={path}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfill={fillColor}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"hover:opacity-80 transition-opacity\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// onMouseOver={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// \t// Si quieres añadir interactividad como destacar al pasar el mouse\r\n\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* Tooltip svg nativo */}\r\n\t\t\t\t\t\t\t\t\t\t\t<title>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.category}: {item.percentage}% (\r\n\t\t\t\t\t\t\t\t\t\t\t\t{formatCurrency(item.amount)})\r\n\t\t\t\t\t\t\t\t\t\t\t</title>\r\n\t\t\t\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t{/* Circulo central opcional para hacer un donut chart */}\r\n\t\t\t\t\t\t\t\t{/* <circle cx=\"50\" cy=\"50\" r=\"25\" fill=\"white\" className=\"\" /> */}\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Leyenda */}\r\n\t\t\t\t\t<div className=\"md:w-1/2 mt-4 md:mt-0\">\r\n\t\t\t\t\t\t<div className=\"space-y-3\">\r\n\t\t\t\t\t\t\t{categorySales.map((item, index) => (\r\n\t\t\t\t\t\t\t\t<div key={index} className=\"flex items-center group\">\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={`w-4 h-4 ${item.color} rounded-sm mr-2`}\r\n\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-sm text-gray-700 flex-1\">\r\n\t\t\t\t\t\t\t\t\t\t{item.category}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-sm font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t{formatCurrency(item.amount)}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-xs text-gray-500 ml-2 w-12 text-right\">\r\n\t\t\t\t\t\t\t\t\t\t({item.percentage}%)\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst statsE =\r\n\t{\r\n\t\ttotalEarnings: 12580.45,\r\n\t\tpendingPayments: 1458.32,\r\n\t\tsalesThisMonth: 3450.8,\r\n\t\tsalesGrowth: 12.5,\r\n\t\tcommissionsThisMonth: 517.62,\r\n\t\tcommissionsPercentage: 15, // 15% de comisión\r\n\t\tnetEarningsThisMonth: 2933.18,\r\n\t\tearningsGrowth: 8.2,\r\n\t};\r\n\t\r\n\r\n\tconst cards = [\r\n\t\t{\r\n\t\t\ttitle: \"Total Ganancias\",\r\n\t\t\tvalue: formatCurrency(statsE.totalEarnings),\r\n\t\t\tchange: 0,\r\n\t\t\ticon: DollarSign,\r\n\t\t\ticonBgColor: \"bg-green-50\",\r\n\t\t\ticonColor: \"text-green-600\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Ventas este mes\",\r\n\t\t\tvalue: formatCurrency(statsE.salesThisMonth),\r\n\t\t\tchange: statsE.salesGrowth,\r\n\t\t\ttext: `${Math.abs(statsE.salesGrowth)}% respecto al mes anterior`,\r\n\t\t\ticon: TrendingUp,\r\n\t\t\ticonBgColor: \"bg-blue-50\",\r\n\t\t\ticonColor: \"text-blue-600\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Comisiones este mes\",\r\n\t\t\tvalue: formatCurrency(statsE.commissionsThisMonth),\r\n\t\t\tchange: 0,\r\n\t\t\ttext: `${statsE.commissionsPercentage}% de comisión`,\r\n\t\t\ticon: CreditCard,\r\n\t\t\ticonBgColor: \"bg-red-50\",\r\n\t\t\ticonColor: \"text-red-600\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Ganancias netas este mes\",\r\n\t\t\tvalue: formatCurrency(statsE.netEarningsThisMonth),\r\n\t\t\tchange: statsE.earningsGrowth,\r\n\t\t\ttext: `${Math.abs(statsE.earningsGrowth)}% respecto al mes anterior`,\r\n\t\t\ticon: Wallet,\r\n\t\t\ticonBgColor: \"bg-indigo-50\",\r\n\t\t\ticonColor: \"text-indigo-600\",\r\n\t\t},\r\n\t];\r\n\r\n  return (\r\n\t\t<div className=\"space-y-6\">\r\n\t\t\t<div className=\"flex justify-between items-center\">\r\n\t\t\t\t<h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\r\n\t\t\t\t\t<DollarSign className=\"w-6 h-6 mr-2\" />\r\n\t\t\t\t\tGanancias\r\n\t\t\t\t</h1>\r\n\t\t\t\t<div className=\"flex space-x-2\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={fetchEarningsData}\r\n\t\t\t\t\t\tclassName=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors flex items-center\"\r\n\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RefreshCw\r\n\t\t\t\t\t\t\tsize={18}\r\n\t\t\t\t\t\t\tclassName={`mr-2 ${loading ? \"animate-spin\" : \"\"}`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{loading ? \"Cargando...\" : \"Actualizar\"}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => alert(\"Descargando reporte de ganancias...\")}\r\n\t\t\t\t\t\tclassName=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors flex items-center\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Download size={18} className=\"mr-2\" />\r\n\t\t\t\t\t\tExportar\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Filtros de fecha */}\r\n\t\t\t<div className=\"bg-white rounded-lg shadow-sm p-4\">\r\n\t\t\t\t<div className=\"flex flex-col md:flex-row md:items-center gap-4\">\r\n\t\t\t\t\t<div className=\"text-sm text-gray-700 font-medium\">\r\n\t\t\t\t\t\tRango de fechas:\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"flex items-center space-x-2\">\r\n\t\t\t\t\t\t<Calendar className=\"h-5 w-5 text-gray-500\" />\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\tclassName=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\tvalue={dateRange.start}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tsetDateRange((prev) => ({...prev, start: e.target.value}))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className=\"text-gray-500\">a</span>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\tclassName=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\tvalue={dateRange.end}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tsetDateRange((prev) => ({...prev, end: e.target.value}))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"px-3 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors flex items-center\"\r\n\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\tconsole.log(\"Aplicando filtro de fechas:\", dateRange)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAplicar\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{loading ? (\r\n\t\t\t\t<div className=\"flex justify-center items-center h-64\">\r\n\t\t\t\t\t<div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : stats ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{/* Tarjetas de estadísticas principales */}\r\n\t\t\t\t\t<DashboardCardList cards={cards} />\r\n\r\n\t\t\t\t\t{/* Contenedor principal con gráficos y pagos */}\r\n\t\t\t\t\t<div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n\t\t\t\t\t\t{/* Sección de gráficos */}\r\n\t\t\t\t\t\t<div className=\"lg:col-span-2 bg-white rounded-lg shadow-sm p-6\">\r\n\t\t\t\t\t\t\t<div className=\"flex justify-between items-center mb-4\">\r\n\t\t\t\t\t\t\t\t<h2 className=\"text-lg font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t\t\tAnálisis de Ventas\r\n\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t<div className=\"flex border border-gray-300 rounded-lg overflow-hidden\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName={`px-3 py-1 text-sm ${selectedChart === \"sales\" ? \"bg-primary-600 text-white\" : \"bg-white text-gray-700\"}`}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setSelectedChart(\"sales\")}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<BarChart2 size={16} className=\"inline mr-1\" />\r\n\t\t\t\t\t\t\t\t\t\tVentas mensuales\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName={`px-3 py-1 text-sm ${selectedChart === \"categories\" ? \"bg-primary-600 text-white\" : \"bg-white text-gray-700\"}`}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setSelectedChart(\"categories\")}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<PieChart size={16} className=\"inline mr-1\" />\r\n\t\t\t\t\t\t\t\t\t\tCategorías\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{/* Contenido del gráfico seleccionado */}\r\n\t\t\t\t\t\t\t{selectedChart === \"sales\"\r\n\t\t\t\t\t\t\t\t? renderSalesChart(stats.monthlySales)\r\n\t\t\t\t\t\t\t\t: renderCategoryChart(stats.categorySales)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* Sección de pagos pendientes */}\r\n\t\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n\t\t\t\t\t\t\t<div className=\"flex justify-between items-center mb-4\">\r\n\t\t\t\t\t\t\t\t<h2 className=\"text-lg font-medium text-gray-900 flex items-center\">\r\n\t\t\t\t\t\t\t\t\t<CreditCard className=\"w-5 h-5 mr-2\" />\r\n\t\t\t\t\t\t\t\t\tPagos Pendientes\r\n\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t<span className=\"bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded-full\">\r\n\t\t\t\t\t\t\t\t\t{formatCurrency(stats.pendingPayments)}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{stats.pendingPaymentsList.length > 0 ? (\r\n\t\t\t\t\t\t\t\t<div className=\"space-y-4\">\r\n\t\t\t\t\t\t\t\t\t{stats.pendingPaymentsList.map((payment, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"border border-gray-200rounded-lg p-4\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex justify-between mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{payment.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`text-xs font-medium px-2.5 py-0.5 rounded-full ${\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayment.status === \"processing\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"bg-amber-100 text-amber-800\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"bg-green-100 text-green-800\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{payment.status === \"processing\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"En proceso\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"Programado\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex justify-between text-sm text-gray-500 mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Fecha:</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{payment.date}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t{payment.estimatedArrival && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex justify-between text-sm text-gray-500 mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Llegada estimada:</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{payment.estimatedArrival}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex justify-between items-center mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm font-bold text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formatCurrency(payment.amount)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-primary-600 text-sm hover:underline flex items-center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDetalles\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ArrowRight size={14} className=\"ml-1\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className=\"text-center py-8\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-gray-500\">\r\n\t\t\t\t\t\t\t\t\t\tNo hay pagos pendientes\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<div className=\"mt-6\">\r\n\t\t\t\t\t\t\t\t<h3 className=\"text-md font-medium text-gray-900 mb-3\">\r\n\t\t\t\t\t\t\t\t\tMétodos de Pago Recibidos\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t<div className=\"space-y-2\">\r\n\t\t\t\t\t\t\t\t\t{stats.paymentMethods.map((method, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex justify-between text-sm\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-gray-600\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{method.method}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-gray-900 font-medium\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formatCurrency(method.amount)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"w-full bg-gray-200 rounded-full h-2 mt-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${method.color} h-2 rounded-full`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{width: `${method.percentage}%`}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Tabla de ventas mensuales */}\r\n\t\t\t\t\t<div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n\t\t\t\t\t\t<div className=\"px-6 py-4 border-b border-gray-200aaborder-gray-700\">\r\n\t\t\t\t\t\t\t<h2 className=\"text-lg font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t\tDesglose de Ventas Mensuales\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"overflow-x-auto\">\r\n\t\t\t\t\t\t\t<table className=\"min-w-full divide-y divide-gray-200\">\r\n\t\t\t\t\t\t\t\t<thead className=\"bg-gray-50\">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\t\t\tscope=\"col\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tComisiones\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\t\t\tscope=\"col\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tNeto\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody className=\"bg-white divide-y divide-gray-200\">\r\n\t\t\t\t\t\t\t\t\t{stats.monthlySales.map((month, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"hover:bg-gray-50\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{month.month}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{formatCurrency(month.sales)}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap text-sm text-red-600\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{formatCurrency(month.commissions)}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-green-600\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{formatCurrency(month.net)}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t<tfoot className=\"bg-gray-50\">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t\tTotal\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t\t\t\t\t{formatCurrency(\r\n\t\t\t\t\t\t\t\t\t\t\t\tstats.monthlySales.reduce(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(sum, month) => sum + month.sales,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-red-600\">\r\n\t\t\t\t\t\t\t\t\t\t\t{formatCurrency(\r\n\t\t\t\t\t\t\t\t\t\t\t\tstats.monthlySales.reduce(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(sum, month) => sum + month.commissions,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-green-600\">\r\n\t\t\t\t\t\t\t\t\t\t\t{formatCurrency(\r\n\t\t\t\t\t\t\t\t\t\t\t\tstats.monthlySales.reduce(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(sum, month) => sum + month.net,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</tfoot>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"text-center py-12\">\r\n\t\t\t\t\t<p className=\"text-gray-500\">\r\n\t\t\t\t\t\tNo se pudieron cargar los datos de ganancias.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={fetchEarningsData}\r\n\t\t\t\t\t\tclassName=\"mt-4 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tReintentar\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SellerEarningsPage;"],"names":["LocalStorageService","key","value","valueToStore","error","item","ROLE_CACHE_KEY","CACHE_TIME","cachedRoleData","lastRoleCheck","RoleService","forceRefresh","now","localCachedData","CacheService","response","axiosInstance","API_ENDPOINTS","roleData","isAdmin","isSeller","role","getEncryptionKey","__vite_import_meta_env__","define_process_env_default","ENCRYPTION_KEY","INTEGRITY_SALT","SecureRoleCache","CryptoJS","data","jsonString","encryptedData","content","expectedHash","secureData","encrypted","hash","cachedData","cachedDataStr","decryptedData","CHECK_ROLE_ENDPOINT","OptimizedRoleService","cached","firstKey","criticalOperation","cacheKey","memoryData","roleResponse","storageService","CACHE_KEYS","CACHE_TIMES","AuthContext","createContext","AuthProvider","children","user","setUser","useState","isAuthenticated","setIsAuthenticated","initialized","setInitialized","isLoadingRole","setIsLoadingRole","roleInfo","setRoleInfo","hasFetchedRole","useRef","isAuthenticatedRef","userRef","isInitializationComplete","useEffect","getDefaultRouteForRole","useCallback","updateUser","userData","updatedUser","handleInitialRedirection","currentPath","targetPath","fetchRoleInfo","cachedRoleInfo","newRoleInfo","prevUser","refreshRoleInfo","critical","appConfig","storedUser","currentUserStr","storedUserStr","logout","preserveInLocalStorage","preserveInSessionStorage","authRelatedKeys","sensitivePatterns","pattern","contextValue","useMemo","useAuth","context","useContext","ProductService","filterParams","ApiClient","id","formData","colorsValue","sizesValue","tagsValue","file","index","slug","limit","productId","term","categoryId","offset","RatingStars","rating","maxRating","size","showValue","reviews","normalizedRating","jsxs","jsx","_","starFill","Star","CategoryService","withCounts","parentId","categoryService","useCategories","loading","setLoading","setError","categories","setCategories","mainCategories","setMainCategories","featuredCategories","setFeaturedCategories","categoryDetail","setCategoryDetail","isInitialized","setIsInitialized","invalidate","useCacheInvalidation","adaptCategory","apiCategory","sub","cachedCategories","cachedMainCategories","cachedFeaturedCategories","fetchCategories","adaptedCategories","result","err","errorMessage","fetchMainCategories","categoriesArray","fetchFeaturedCategories","fetchSubcategories","fetchCategoryBySlug","adaptedCategory","clearCategoryCache","formatDate","dateString","options","date","showTime","timeFormat","dateFormat","dateOptions","timeOptions","formattedDate","formattedTime","isValidOrderStatus","status","getValidTransitions","currentStatus","canTransitionTo","newStatus","OrderBreakdownService","sellerData","items","breakdown_steps","itemResult","sum","orderSummary","orderId","viewType","endpoint","responseData","orderData","customerData","getOrderColumns","row","Link","formatCurrency","statusInfo","RecentOrdersTable","orders","title","viewAllLink","viewAllText","compact","className","onOrderClick","DataTable","getTopProductColumns","TopProductsTable","products","onProductClick","SellerDashboard","navigate","useNavigate","dashboardData","setDashboardData","fetchDashboardData","getDefaultDashboardData","handleOrderClick","order","handleProductClick","product","cards","DollarSign","ShoppingBag","Package","pendingCardItems","TrendingUp","DashboardCardList","PendingCardList","productService","useSellerProducts","setProducts","productDetail","setProductDetail","totalProducts","setTotalProducts","page","setPage","itemsPerPage","setItemsPerPage","fetchSellerProducts","sellerId","fetchProductById","createProduct","newProduct","userMessage","fullErrorMessage","updateProduct","updatedProduct","deleteProduct","toggleProductStatus","changePage","newPage","changeItemsPerPage","newItemsPerPage","SellerProductsPage","location","useLocation","searchTerm","setSearchTerm","statusFilter","setStatusFilter","adaptedProducts","setAdaptedProducts","isDeleting","setIsDeleting","isTogglingStatus","setIsTogglingStatus","state","categoryMap","category","tableProducts","categoryName","filteredProducts","matchesSearch","matchesStatus","handleDelete","handleToggleStatus","handleEdit","PlusCircle","e","Search","Filter","AlertCircle","EyeOff","Eye","Edit","Trash2","SellerStatCardList","getColorClass","color","Fragment","SellerOrderServiceAdapter","filters","apiFilters","pagination","formattedPagination","userName","userEmail","total","orderDetail","shippingData","parsed","parts","shippingInfo","ShippingFromModal","orderNumber","isOpen","onClose","onSubmit","isLoading","setFormData","errors","setErrors","generateTrackingNumber","company","timestamp","random","trackingNumber","estimatedDate","handleCompanyChange","newTracking","prev","validateForm","newErrors","selectedDate","today","handleSubmit","handleInputChange","name","Truck","X","CheckCircle","parseShippingAddress","shippingAddressStr","shippingAddress","SellerOrdersPage","orderAdapter","setOrders","paymentFilter","setPaymentFilter","dateFilter","setDateFilter","setPagination","statsData","setStatsData","dateRange","setDateRange","isUpdating","setIsUpdating","isShippingModalOpen","setIsShippingModalOpen","selectedOrderId","setSelectedOrderId","fetchOrders","fetchStats","firstDay","statsWithIcons","stat","icon","BarChart2","updateOrderStatus","prevOrders","handleShippingModal","handleShippingSubmit","handlePageChange","refreshData","columns","statusClass","statusText","paymentClass","paymentText","ShippingFormModal","o","RefreshCw","Table","OrderEarningsInfo","grossEarnings","platformCommission","netEarnings","shippingEarnings","totalEarnings","commissionRate","sellerCount","showBreakdown","amount","formatPercentage","percentage","Info","SellerOrderDetailPage","useParams","setOrder","successMessage","setSuccessMessage","itemsBreakdown","setItemsBreakdown","breakdownLoading","setBreakdownLoading","sellerOrderAdapter","breakdownService","fetchOrderDetails","loadItemsBreakdown","effectiveSellerId","breakdown","handleStatusUpdate","handleCreateShipping","totalQuantity","sellerEarningsFromProducts","shippingIncome","subtotalVendido","totalToReceive","ArrowLeft","Check","breakdownItem","bi","Calculator","SellerEarningsPage","stats","setStats","selectedChart","setSelectedChart","fetchEarningsData","renderSalesChart","monthlySales","maxSales","salesHeight","commissionHeight","netHeight","renderCategoryChart","categorySales","startAngle","curr","endAngle","startRad","endRad","x1","y1","x2","y2","largeArcFlag","path","fillColor","statsE","CreditCard","Wallet","Download","Calendar","PieChart","payment","ArrowRight","method","month"],"mappings":"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"}