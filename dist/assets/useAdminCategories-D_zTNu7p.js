import{l as g,t as d,r as l,m as h,n as f}from"./index-DmNDOrWy.js";class M{async getAllCategories(e){try{console.log("📤 AdminCategoryService: Obteniendo todas las categorías como admin:",e);const r=await g.get(d.CATEGORIES.LIST,e);return console.log("📥 AdminCategoryService: Respuesta del servidor:",r),r}catch(r){return console.error("❌ Error en AdminCategoryService.getAllCategories:",r),null}}async getCategoryById(e){try{console.log(`📤 AdminCategoryService: Obteniendo categoría ${e} como admin`);const r=await g.get(d.CATEGORIES.DETAILS(e));return console.log("✅ AdminCategoryService: Categoría obtenida:",r),r}catch(r){return console.error("❌ Error en AdminCategoryService.getCategoryById:",r),null}}async createCategory(e){try{console.log("📤 AdminCategoryService: Creando categoría como admin:",e);const r=await g.post(d.ADMIN.CATEGORIES.CREATE,e);return console.log("✅ AdminCategoryService: Categoría creada:",r),r}catch(r){return console.error("❌ Error en AdminCategoryService.createCategory:",r),null}}async updateCategory(e){try{if(console.log(`📤 AdminCategoryService: Actualizando categoría ${e.id} como admin:`,e),!e.id)throw new Error("ID de categoría requerido para actualización");const r=await g.put(d.ADMIN.CATEGORIES.UPDATE(e.id),e);return console.log("✅ AdminCategoryService: Categoría actualizada:",r),r}catch(r){return console.error("❌ Error en AdminCategoryService.updateCategory:",r),null}}async partialUpdateCategory(e,r){try{console.log(`📤 AdminCategoryService: Actualizando parcialmente categoría ${e} como admin:`,r);const t=await g.patch(d.ADMIN.CATEGORIES.PARTIAL_UPDATE(e),r);return console.log("✅ AdminCategoryService: Categoría actualizada parcialmente:",t),t}catch(t){return console.error("❌ Error en AdminCategoryService.partialUpdateCategory:",t),null}}async deleteCategory(e){try{console.log(`📤 AdminCategoryService: Eliminando categoría ${e} como admin`);const r=await g.delete(d.ADMIN.CATEGORIES.DELETE(e));return console.log("✅ AdminCategoryService: Categoría eliminada:",r),!0}catch(r){return console.error("❌ Error en AdminCategoryService.deleteCategory:",r),!1}}async toggleActive(e,r){try{console.log(`📤 AdminCategoryService: Cambiando estado activo de categoría ${e} a ${r}`);const t=await g.patch(d.ADMIN.CATEGORIES.PARTIAL_UPDATE(e),{is_active:r});return console.log("✅ AdminCategoryService: Estado activo actualizado:",t),!0}catch(t){return console.error("❌ Error en AdminCategoryService.toggleActive:",t),t instanceof Error&&console.error("Error message:",t.message),!1}}async toggleFeatured(e,r){try{console.log(`📤 AdminCategoryService: Cambiando estado destacado de categoría ${e} a ${r}`);const t=await g.patch(d.ADMIN.CATEGORIES.PARTIAL_UPDATE(e),{featured:r});return console.log("✅ AdminCategoryService: Estado destacado actualizado:",t),!0}catch(t){return console.error("❌ Error en AdminCategoryService.toggleFeatured:",t),t instanceof Error&&console.error("Error message:",t.message),!1}}async updateOrder(e,r){try{console.log(`📤 AdminCategoryService: Actualizando orden de categoría ${e} a ${r}`);const t=await g.patch(d.ADMIN.CATEGORIES.PARTIAL_UPDATE(e),{order:r});return console.log("✅ AdminCategoryService: Orden actualizado:",t),!0}catch(t){return console.error("❌ Error en AdminCategoryService.updateOrder:",t),t instanceof Error&&console.error("Error message:",t.message),!1}}async getMainCategories(e=!0){try{console.log("📤 AdminCategoryService: Obteniendo categorías principales como admin");const r=await g.get(d.CATEGORIES.MAIN,{with_counts:e});return console.log("✅ AdminCategoryService: Categorías principales obtenidas:",r),r||[]}catch(r){return console.error("❌ Error en AdminCategoryService.getMainCategories:",r),[]}}async getSubcategories(e){try{console.log(`📤 AdminCategoryService: Obteniendo subcategorías de ${e} como admin`);const r=await g.get(d.CATEGORIES.SUBCATEGORIES(e));return console.log("✅ AdminCategoryService: Subcategorías obtenidas:",r),r||[]}catch(r){return console.error("❌ Error en AdminCategoryService.getSubcategories:",r),[]}}}class G{adminCategoryService;constructor(e){this.adminCategoryService=e}async execute(e){console.log("GetAllCategoriesUseCase: Obteniendo todas las categorías como admin");try{const r=await this.adminCategoryService.getAllCategories(e);return console.log("GetAllCategoriesUseCase: Categorías obtenidas correctamente:",r),r}catch(r){throw console.error("GetAllCategoriesUseCase: Error al obtener categorías:",r),r}}}class R{adminCategoryService;constructor(e){this.adminCategoryService=e}async execute(e){console.log("CreateCategoryAsAdminUseCase: Creando categoría como admin:",e);try{const r=await this.adminCategoryService.createCategory(e);return console.log("CreateCategoryAsAdminUseCase: Categoría creada correctamente:",r),r}catch(r){throw console.error("CreateCategoryAsAdminUseCase: Error al crear categoría:",r),r}}}class z{adminCategoryService;constructor(e){this.adminCategoryService=e}async execute(e){console.log(`UpdateAnyCategoryUseCase: Actualizando categoría ${e.id} como admin:`,e);try{const r=await this.adminCategoryService.updateCategory(e);return console.log("UpdateAnyCategoryUseCase: Categoría actualizada correctamente:",r),r}catch(r){throw console.error("UpdateAnyCategoryUseCase: Error al actualizar categoría:",r),r}}}class x{adminCategoryService;constructor(e){this.adminCategoryService=e}async execute(e){console.log(`DeleteAnyCategoryUseCase: Eliminando categoría ${e} como admin`);try{const r=await this.adminCategoryService.deleteCategory(e);return console.log("DeleteAnyCategoryUseCase: Categoría eliminada correctamente:",r),r}catch(r){throw console.error("DeleteAnyCategoryUseCase: Error al eliminar categoría:",r),r}}}class B{adminCategoryService;constructor(e){this.adminCategoryService=e}async execute(e,r){console.log(`ToggleCategoryActiveUseCase: Cambiando estado activo de categoría ${e} a ${r}`);try{const t=await this.adminCategoryService.toggleActive(e,r);return console.log("ToggleCategoryActiveUseCase: Estado activo actualizado correctamente:",t),t}catch(t){throw console.error("ToggleCategoryActiveUseCase: Error al cambiar estado activo:",t),t}}}class P{adminCategoryService;constructor(e){this.adminCategoryService=e}async execute(e,r){console.log(`ToggleCategoryFeaturedUseCase: Cambiando estado destacado de categoría ${e} a ${r}`);try{const t=await this.adminCategoryService.toggleFeatured(e,r);return console.log("ToggleCategoryFeaturedUseCase: Estado destacado actualizado correctamente:",t),t}catch(t){throw console.error("ToggleCategoryFeaturedUseCase: Error al cambiar estado destacado:",t),t}}}class N{adminCategoryService;constructor(e){this.adminCategoryService=e}async execute(e){console.log(`GetCategoryByIdUseCase: Obteniendo categoría ${e} como admin`);try{const r=await this.adminCategoryService.getCategoryById(e);return console.log("GetCategoryByIdUseCase: Categoría obtenida correctamente:",r),r}catch(r){throw console.error("GetCategoryByIdUseCase: Error al obtener categoría:",r),r}}}const E=new M,F=new G(E),L=new R(E),k=new z(E),K=new x(E),W=new B(E),j=new P(E),q=new N(E),H=()=>{const[u,e]=l.useState(!1),[r,t]=l.useState(null),[p,C]=l.useState([]),[b,y]=l.useState([]),[m,A]=l.useState(null),i=l.useCallback(a=>!a||typeof a!="object"?(console.error("Categoría inválida para adaptar:",a),{}):{id:a.id,name:a.name||"",slug:a.slug||"",description:a.description||"",parent_id:a.parent_id,icon:a.icon,image:a.image,order:a.order,is_active:!!(a.is_active??!0),featured:!!(a.featured??!1),created_at:a.created_at,updated_at:a.updated_at,subcategories:Array.isArray(a.subcategories)?a.subcategories.map(c=>i(c)):void 0,product_count:a.product_count||0,full_path:a.full_path,has_children:!!a.has_children,url:a.url,parent:a.parent?i(a.parent):void 0,image_url:a.image_url,icon_url:a.icon_url},[]),U=l.useCallback(async(a,c=!1)=>{e(!0),t(null);const s=`admin_categories_${JSON.stringify(a)}`;try{if(!c){const o=h.getItem(s);if(o&&o.data)return console.log("💾 useAdminCategories: Usando categorías en caché"),C(o.data||[]),e(!1),o}console.log("🌐 useAdminCategories: Obteniendo categorías desde API");const n=await F.execute({...a});if(n&&n.data&&Array.isArray(n.data)){const o=n.data.map(i),v={data:o,meta:n.meta||{total:o.length}};return h.setItem(s,v,f.cache.categoryCacheTime),C(o),v}else return console.warn("Respuesta de categorías no tiene el formato esperado:",n),C([]),{data:[],meta:{total:0}}}catch(n){const o=n instanceof Error?n.message:"Error al obtener categorías";return t(o),console.error("Error al obtener categorías:",n),C([]),{data:[],meta:{total:0}}}finally{e(!1)}},[i]),I=l.useCallback(async(a=!0,c=!1)=>{e(!0),t(null);const s=`admin_main_categories_${a?"with_counts":"no_counts"}`;try{if(!c){const o=h.getItem(s);if(o)return console.log("💾 useAdminCategories: Usando categorías principales en caché"),y(o),e(!1),o}console.log("🌐 useAdminCategories: Obteniendo categorías principales desde API");const n=await E.getMainCategories(a);if(n&&Array.isArray(n)){const o=n.map(i);return h.setItem(s,o,f.cache.categoryCacheTime),y(o),o}else return console.warn("Respuesta de categorías principales no tiene el formato esperado:",n),y([]),[]}catch(n){const o=n instanceof Error?n.message:"Error al obtener categorías principales";return t(o),console.error("Error al obtener categorías principales:",n),y([]),[]}finally{e(!1)}},[i]),w=l.useCallback(async a=>{e(!0),t(null);const c=`admin_category_${a}`;try{const s=h.getItem(c);if(s)return console.log(`💾 useAdminCategories: Usando categoría ${a} en caché`),A(s),e(!1),s;console.log(`🌐 useAdminCategories: Obteniendo categoría ${a} desde API`);const n=await q.execute(a);if(n){const o=i(n);return h.setItem(c,o,f.cache.categoryCacheTime),A(o),o}return A(null),null}catch(s){const n=s instanceof Error?s.message:"Error al obtener categoría";return t(n),console.error("Error al obtener categoría:",s),A(null),null}finally{e(!1)}},[i]),_=l.useCallback(async a=>{e(!0),t(null);try{console.log("🌐 useAdminCategories: Creando nueva categoría:",a);const c=await L.execute(a);if(c){const s=i(c);return C(n=>[...n,s]),a.parent_id||y(n=>[...n,s]),S(),s}return null}catch(c){const s=c instanceof Error?c.message:"Error al crear categoría";return t(s),console.error("Error al crear categoría:",c),null}finally{e(!1)}},[i]),T=l.useCallback(async a=>{e(!0),t(null);try{console.log(`🌐 useAdminCategories: Actualizando categoría ${a.id}:`,a);const c=await k.execute(a);if(c){const s=i(c);return C(n=>n.map(o=>o.id===a.id?s:o)),y(n=>n.map(o=>o.id===a.id?s:o)),m?.id===a.id&&A(s),S(),s}return null}catch(c){const s=c instanceof Error?c.message:"Error al actualizar categoría";return t(s),console.error("Error al actualizar categoría:",c),null}finally{e(!1)}},[i,m]),$=l.useCallback(async a=>{e(!0),t(null);try{return console.log(`🌐 useAdminCategories: Eliminando categoría ${a}`),await K.execute(a)?(C(s=>s.filter(n=>n.id!==a)),y(s=>s.filter(n=>n.id!==a)),m?.id===a&&A(null),S(),!0):!1}catch(c){const s=c instanceof Error?c.message:"Error al eliminar categoría";return t(s),console.error("Error al eliminar categoría:",c),!1}finally{e(!1)}},[m]),O=l.useCallback(async(a,c)=>{e(!0),t(null);try{if(console.log(`🌐 useAdminCategories: Cambiando estado activo de categoría ${a} a ${c}`),await W.execute(a,c)){const n=o=>o.id===a?{...o,is_active:c}:o;return C(o=>o.map(n)),y(o=>o.map(n)),m?.id===a&&A(o=>o&&{...o,is_active:c}),S(),!0}return!1}catch(s){const n=s instanceof Error?s.message:"Error al cambiar estado activo";return t(n),console.error("Error al cambiar estado activo:",s),!1}finally{e(!1)}},[m]),D=l.useCallback(async(a,c)=>{e(!0),t(null);try{if(console.log(`🌐 useAdminCategories: Cambiando estado destacado de categoría ${a} a ${c}`),await j.execute(a,c)){const n=o=>o.id===a?{...o,featured:c}:o;return C(o=>o.map(n)),y(o=>o.map(n)),m?.id===a&&A(o=>o&&{...o,featured:c}),S(),!0}return!1}catch(s){const n=s instanceof Error?s.message:"Error al cambiar estado destacado";return t(n),console.error("Error al cambiar estado destacado:",s),!1}finally{e(!1)}},[m]),S=l.useCallback(()=>{const c=Object.keys(localStorage).filter(s=>s.startsWith("admin_categories_")||s.startsWith("admin_category_")||s.startsWith("admin_main_categories_")||s.startsWith("category_")||s.startsWith("categories_"));c.forEach(s=>{h.removeItem(s)}),console.log(`🗑️ ${c.length} claves de caché de categorías de admin eliminadas`)},[]);return{loading:u,error:r,categories:p,mainCategories:b,categoryDetail:m,fetchAllCategories:U,fetchMainCategories:I,fetchCategoryById:w,createCategory:_,updateCategory:T,deleteCategory:$,toggleActive:O,toggleFeatured:D,clearCategoryCache:S,setError:a=>t(a),setLoading:a=>e(a)}};export{H as u};
//# sourceMappingURL=useAdminCategories-D_zTNu7p.js.map
