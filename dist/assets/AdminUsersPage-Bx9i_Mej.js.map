{"version":3,"file":"AdminUsersPage-Bx9i_Mej.js","sources":["../../node_modules/lucide-react/dist/esm/icons/lock-open.js","../../src/core/services/AdminUserService.ts","../../src/presentation/hooks/useAdminUsers.ts","../../src/presentation/pages/admin/AdminUsersPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.484.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"rect\", { width: \"18\", height: \"11\", x: \"3\", y: \"11\", rx: \"2\", ry: \"2\", key: \"1w4ew1\" }],\n  [\"path\", { d: \"M7 11V7a5 5 0 0 1 9.9-1\", key: \"1mm8w8\" }]\n];\nconst LockOpen = createLucideIcon(\"lock-open\", __iconNode);\n\nexport { __iconNode, LockOpen as default };\n//# sourceMappingURL=lock-open.js.map\n","// src/core/services/AdminUserService.ts\r\nimport axiosInstance from \"../../infrastructure/api/axiosConfig\";\r\nimport {API_ENDPOINTS} from \"../../constants/apiEndpoints\";\r\nimport type {UserListResponse} from \"../domain/entities/User\";\r\nimport type {User} from \"../domain/entities/User\";\r\n\r\n/**\r\n * Servicio para la gestión de usuarios desde el panel de administración\r\n */\r\nexport class AdminUserService {\r\n\t/**\r\n\t * Obtiene la lista de usuarios con paginación\r\n\t * @param page Número de página\r\n\t * @param perPage Cantidad de elementos por página\r\n\t * @returns Lista paginada de usuarios\r\n\t */\r\n\tasync getUsers(page = 1, perPage = 15): Promise<UserListResponse> {\r\n\t\tconst response = await axiosInstance.get(API_ENDPOINTS.ADMIN.USERS, {\r\n\t\t\tparams: {page, per_page: perPage},\r\n\t\t});\r\n\t\treturn response.data;\r\n\t}\r\n\r\n\t/**\r\n\t * Bloquea a un usuario\r\n\t * @param userId ID del usuario a bloquear\r\n\t * @returns true si se bloqueó correctamente\r\n\t */\r\n\tasync blockUser(userId: number): Promise<boolean> {\r\n\t\tconst response = await axiosInstance.put(\r\n\t\t\tAPI_ENDPOINTS.ADMIN.BLOCK_USER(userId)\r\n\t\t);\r\n\t\treturn response.data.success;\r\n\t}\r\n\r\n\t/**\r\n\t * Desbloquea a un usuario\r\n\t * @param userId ID del usuario a desbloquear\r\n\t * @returns true si se desbloqueó correctamente\r\n\t */\r\n\tasync unblockUser(userId: number): Promise<boolean> {\r\n\t\tconst response = await axiosInstance.put(\r\n\t\t\tAPI_ENDPOINTS.ADMIN.UNBLOCK_USER(userId)\r\n\t\t);\r\n\t\treturn response.data.success;\r\n\t}\r\n\r\n\t/**\r\n\t * Envía un correo para restablecer contraseña\r\n\t * @param userId ID del usuario\r\n\t * @returns true si se envió correctamente\r\n\t */\r\n\tasync sendPasswordResetEmail(userId: number): Promise<boolean> {\r\n\t\tconst response = await axiosInstance.post(\r\n\t\t\tAPI_ENDPOINTS.ADMIN.RESET_PASSWORD(userId)\r\n\t\t);\r\n\t\treturn response.data.success;\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene detalles de un usuario específico\r\n\t * @param userId ID del usuario\r\n\t * @returns Datos del usuario\r\n\t */\r\n\tasync getUserDetails(userId: number): Promise<User> {\r\n\t\tconst response = await axiosInstance.get(\r\n\t\t\tAPI_ENDPOINTS.ADMIN.USER_DETAIL(userId)\r\n\t\t);\r\n\t\treturn response.data;\r\n\t}\r\n\r\n\t/**\r\n\t * Actualiza rol de usuario a administrador\r\n\t * @param userId ID del usuario a promover\r\n\t * @returns true si se actualizó correctamente\r\n\t */\r\n\tasync makeAdmin(userId: number): Promise<boolean> {\r\n\t\tconst response = await axiosInstance.put(\r\n\t\t\tAPI_ENDPOINTS.ADMIN.MAKE_ADMIN(userId)\r\n\t\t);\r\n\t\treturn response.data.success;\r\n\t}\r\n\r\n\t/**\r\n\t * Convierte un usuario en vendedor\r\n\t * @param userId ID del usuario a convertir\r\n\t * @param storeData Datos de la tienda\r\n\t * @returns true si se creó correctamente\r\n\t */\r\n\tasync makeSeller(\r\n\t\tuserId: number,\r\n\t\tstoreData: {store_name: string; description?: string}\r\n\t): Promise<boolean> {\r\n\t\tconst response = await axiosInstance.post(\r\n\t\t\tAPI_ENDPOINTS.ADMIN.MAKE_SELLER(userId),\r\n\t\t\tstoreData\r\n\t\t);\r\n\t\treturn response.data.success;\r\n\t}\r\n}\r\n\r\nexport default AdminUserService;\r\n","// src/presentation/hooks/useAdminUsers.ts\r\nimport {useState, useCallback} from \"react\";\r\nimport AdminUserService from \"../../core/services/AdminUserService\";\r\nimport {extractErrorMessage} from \"../../utils/errorHandler\";\r\n\r\n// Tipo de usuario para el componente AdminUsersPage\r\nexport interface AdminUserData {\r\n\tid: number;\r\n\tname: string;\r\n\temail: string;\r\n\trole: \"customer\" | \"seller\" | \"admin\";\r\n\tstatus: \"active\" | \"blocked\";\r\n\tlastLogin: string;\r\n\tregisteredDate: string;\r\n\tordersCount: number;\r\n}\r\n\r\n// Tipo para opciones de filtrado\r\ninterface FilterOptions {\r\n\trole?: string;\r\n\tstatus?: string;\r\n\tsearchTerm?: string;\r\n}\r\n\r\n/**\r\n * Hook personalizado para gestión de usuarios desde administración\r\n */\r\nexport const useAdminUsers = () => {\r\n\tconst [users, setUsers] = useState<AdminUserData[]>([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tcurrentPage: 1,\r\n\t\ttotalPages: 5,\r\n\t\ttotalItems: 0,\r\n\t\titemsPerPage: 10,\r\n\t});\r\n\r\n\t// Instancia del servicio\r\n\tconst adminUserService = new AdminUserService();\r\n\r\n\t/**\r\n\t * Mapea el usuario de la API al formato esperado por el componente\r\n\t */\r\n\tconst mapApiUserToAdminUserData = (apiUser: any): AdminUserData => {\r\n\t\t// Determinar el rol\r\n\t\tlet role: \"customer\" | \"seller\" | \"admin\" = \"customer\";\r\n\t\tif (apiUser.is_admin) role = \"admin\";\r\n\t\telse if (apiUser.is_seller) role = \"seller\";\r\n\r\n\t\t// Mapear el estado (is_blocked -> status)\r\n\t\tconst status: \"active\" | \"blocked\" = apiUser.is_blocked\r\n\t\t\t? \"blocked\"\r\n\t\t\t: \"active\";\r\n\r\n\t\treturn {\r\n\t\t\tid: apiUser.id,\r\n\t\t\tname: apiUser.name,\r\n\t\t\temail: apiUser.email,\r\n\t\t\trole,\r\n\t\t\tstatus,\r\n\t\t\tlastLogin: apiUser.last_login_at || \"N/A\",\r\n\t\t\tregisteredDate: apiUser.created_at,\r\n\t\t\tordersCount: apiUser.orders_count || 0,\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Carga la lista de usuarios desde la API\r\n\t */\r\n\tconst fetchUsers = useCallback(async (page = 1, perPage = 10) => {\r\n\t\tsetLoading(true);\r\n\t\tsetError(null);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await adminUserService.getUsers(page, perPage);\r\n\r\n\t\t\t// Mapear usuarios al formato esperado por el componente\r\n\t\t\tconst mappedUsers = response.data.map(mapApiUserToAdminUserData);\r\n\r\n\t\t\tsetUsers(mappedUsers);\r\n\t\t\tsetPagination({\r\n\t\t\t\tcurrentPage: response.meta.current_page,\r\n\t\t\t\ttotalPages: response.meta.last_page,\r\n\t\t\t\ttotalItems: response.meta.total,\r\n\t\t\t\titemsPerPage: response.meta.per_page,\r\n\t\t\t});\r\n\r\n\t\t\treturn mappedUsers;\r\n\t\t} catch (err) {\r\n\t\t\tconst errorMsg = extractErrorMessage(\r\n\t\t\t\terr,\r\n\t\t\t\t\"Error al obtener la lista de usuarios\"\r\n\t\t\t);\r\n\t\t\tconsole.error(\"Error fetching users:\", errorMsg);\r\n\t\t\tsetError(errorMsg);\r\n\t\t\treturn [];\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t/**\r\n\t * Bloquea o desbloquea un usuario\r\n\t */\r\n\tconst toggleUserStatus = useCallback(\r\n\t\tasync (userId: number, isCurrentlyBlocked: boolean) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tlet success;\r\n\r\n\t\t\t\tif (isCurrentlyBlocked) {\r\n\t\t\t\t\t// Si está bloqueado, desbloqueamos\r\n\t\t\t\t\tsuccess = await adminUserService.unblockUser(userId);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Si no está bloqueado, bloqueamos\r\n\t\t\t\t\tsuccess = await adminUserService.blockUser(userId);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\t// Actualizar el estado del usuario en la lista local\r\n\t\t\t\t\tsetUsers((prevUsers) =>\r\n\t\t\t\t\t\tprevUsers.map((user) =>\r\n\t\t\t\t\t\t\tuser.id === userId\r\n\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t...user,\r\n\t\t\t\t\t\t\t\t\t\tstatus: isCurrentlyBlocked ? \"active\" : \"blocked\",\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t: user\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetError(\r\n\t\t\t\t\t\t`No se pudo ${isCurrentlyBlocked ? \"desbloquear\" : \"bloquear\"} al usuario`\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMsg = extractErrorMessage(\r\n\t\t\t\t\terr,\r\n\t\t\t\t\t`Error al ${isCurrentlyBlocked ? \"desbloquear\" : \"bloquear\"} al usuario`\r\n\t\t\t\t);\r\n\t\t\t\tconsole.error(\"Error toggling user status:\", errorMsg);\r\n\t\t\t\tsetError(errorMsg);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\t/**\r\n\t * Envía un correo de restablecimiento de contraseña\r\n\t */\r\n\tconst sendPasswordReset = useCallback(async (userId: number) => {\r\n\t\tsetLoading(true);\r\n\t\tsetError(null);\r\n\r\n\t\ttry {\r\n\t\t\tconst success = await adminUserService.sendPasswordResetEmail(userId);\r\n\r\n\t\t\tif (!success) {\r\n\t\t\t\tsetError(\r\n\t\t\t\t\t\"No se pudo enviar el correo de restablecimiento de contraseña\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn success;\r\n\t\t} catch (err) {\r\n\t\t\tconst errorMsg = extractErrorMessage(\r\n\t\t\t\terr,\r\n\t\t\t\t\"Error al enviar correo de restablecimiento\"\r\n\t\t\t);\r\n\t\t\tconsole.error(\"Error sending password reset:\", errorMsg);\r\n\t\t\tsetError(errorMsg);\r\n\t\t\treturn false;\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t/**\r\n\t * Actualiza el rol de un usuario a administrador\r\n\t */\r\n\tconst makeUserAdmin = useCallback(async (userId: number) => {\r\n\t\tsetLoading(true);\r\n\t\tsetError(null);\r\n\r\n\t\ttry {\r\n\t\t\tconst success = await adminUserService.makeAdmin(userId);\r\n\r\n\t\t\tif (success) {\r\n\t\t\t\t// Actualizar el rol del usuario en la lista local\r\n\t\t\t\tsetUsers((prevUsers) =>\r\n\t\t\t\t\tprevUsers.map((user) =>\r\n\t\t\t\t\t\tuser.id === userId ? {...user, role: \"admin\"} : user\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tsetError(\"No se pudo convertir al usuario en administrador\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconst errorMsg = extractErrorMessage(\r\n\t\t\t\terr,\r\n\t\t\t\t\"Error al convertir usuario en administrador\"\r\n\t\t\t);\r\n\t\t\tconsole.error(\"Error making user admin:\", errorMsg);\r\n\t\t\tsetError(errorMsg);\r\n\t\t\treturn false;\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t/**\r\n\t * Convierte un usuario en vendedor\r\n\t */\r\n\tconst makeUserSeller = useCallback(\r\n\t\tasync (\r\n\t\t\tuserId: number,\r\n\t\t\tstoreData: {store_name: string; description?: string}\r\n\t\t) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst success = await adminUserService.makeSeller(userId, storeData);\r\n\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\t// Actualizar el rol del usuario en la lista local\r\n\t\t\t\t\tsetUsers((prevUsers) =>\r\n\t\t\t\t\t\tprevUsers.map((user) =>\r\n\t\t\t\t\t\t\tuser.id === userId ? {...user, role: \"seller\"} : user\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetError(\"No se pudo convertir al usuario en vendedor\");\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst errorMsg = extractErrorMessage(\r\n\t\t\t\t\terr,\r\n\t\t\t\t\t\"Error al convertir usuario en vendedor\"\r\n\t\t\t\t);\r\n\t\t\t\tconsole.error(\"Error making user seller:\", errorMsg);\r\n\t\t\t\tsetError(errorMsg);\r\n\t\t\t\treturn false;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\t// Filtrar usuarios según criterios\r\n\tconst filterUsers = useCallback(\r\n\t\t(options: FilterOptions) => {\r\n\t\t\tconst {role, status, searchTerm} = options;\r\n\r\n\t\t\treturn users.filter((user) => {\r\n\t\t\t\t// Filtro por rol\r\n\t\t\t\tconst matchesRole = !role || role === \"all\" || user.role === role;\r\n\r\n\t\t\t\t// Filtro por estado\r\n\t\t\t\tconst matchesStatus =\r\n\t\t\t\t\t!status || status === \"all\" || user.status === status;\r\n\r\n\t\t\t\t// Filtro por término de búsqueda\r\n\t\t\t\tconst matchesSearch =\r\n\t\t\t\t\t!searchTerm ||\r\n\t\t\t\t\tuser.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n\t\t\t\t\tuser.email.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n\t\t\t\treturn matchesRole && matchesStatus && matchesSearch;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[users]\r\n\t);\r\n\r\n\treturn {\r\n\t\tusers,\r\n\t\tloading,\r\n\t\terror,\r\n\t\tpagination,\r\n\t\tfetchUsers,\r\n\t\ttoggleUserStatus,\r\n\t\tsendPasswordReset,\r\n\t\tmakeUserAdmin,\r\n\t\tmakeUserSeller,\r\n\t\tfilterUsers,\r\n\t};\r\n};\r\n\r\nexport default useAdminUsers;\r\n","// src/presentation/pages/admin/AdminUsersPage.tsx\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Table from \"../../components/dashboard/Table\";\r\nimport {\r\n\tUser,\r\n\tLock,\r\n\tUnlock,\r\n\tMail,\r\n\tStore,\r\n\tShield,\r\n\tFilter,\r\n\tRefreshCw,\r\n\tAlertCircle,\r\n\tX,\r\n} from \"lucide-react\";\r\nimport useAdminUsers from \"../../hooks/useAdminUsers\";\r\nimport type {AdminUserData} from \"../../hooks/useAdminUsers\";\r\n\r\n/**\r\n * Página de gestión de usuarios para administradores\r\n */\r\nconst AdminUsersPage: React.FC = () => {\r\n\tconst {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tpagination,\r\n\t\tfetchUsers,\r\n\t\ttoggleUserStatus,\r\n\t\tsendPasswordReset,\r\n\t\tmakeUserAdmin,\r\n\t\tmakeUserSeller,\r\n\t\tfilterUsers,\r\n\t} = useAdminUsers();\r\n\r\n\t// Estados para filtros y búsqueda\r\n\tconst [roleFilter, setRoleFilter] = useState<string>(\"all\");\r\n\tconst [statusFilter, setStatusFilter] = useState<string>(\"all\");\r\n\tconst [searchTerm, setSearchTerm] = useState<string>(\"\");\r\n\tconst [successMessage, setSuccessMessage] = useState<string | null>(null);\r\n\r\n\t// Estados para el modal de crear vendedor\r\n\tconst [showSellerModal, setShowSellerModal] = useState<boolean>(false);\r\n\tconst [selectedUserId, setSelectedUserId] = useState<number | null>(null);\r\n\tconst [storeName, setStoreName] = useState<string>(\"\");\r\n\tconst [storeDescription, setStoreDescription] = useState<string>(\"\");\r\n\tconst [validationErrors, setValidationErrors] = useState<{\r\n\t\t[key: string]: string;\r\n\t}>({});\r\n\r\n\t// Obtener datos de usuarios al iniciar\r\n\tuseEffect(() => {\r\n\t\tfetchUsers(pagination.currentPage, pagination.itemsPerPage);\r\n\t}, [fetchUsers, pagination.currentPage, pagination.itemsPerPage]);\r\n\r\n\t// Filtrar usuarios basado en rol y estado\r\n\tconst filteredUsers = filterUsers({\r\n\t\trole: roleFilter,\r\n\t\tstatus: statusFilter,\r\n\t\tsearchTerm: searchTerm,\r\n\t});\r\n\r\n\t// Manejar cambio de estado de usuario (bloquear/desbloquear)\r\n\tconst handleToggleUserStatus = async (\r\n\t\tuserId: number,\r\n\t\tcurrentStatus: string\r\n\t) => {\r\n\t\tconst isCurrentlyBlocked = currentStatus === \"blocked\";\r\n\t\tconst success = await toggleUserStatus(userId, isCurrentlyBlocked);\r\n\r\n\t\tif (success) {\r\n\t\t\tsetSuccessMessage(\r\n\t\t\t\t`Usuario ${isCurrentlyBlocked ? \"desbloqueado\" : \"bloqueado\"} correctamente.`\r\n\t\t\t);\r\n\r\n\t\t\t// Limpiar mensaje después de 3 segundos\r\n\t\t\tsetTimeout(() => setSuccessMessage(null), 3000);\r\n\t\t}\r\n\t};\r\n\r\n\t// Manejar envío de restablecimiento de contraseña\r\n\tconst handleSendPasswordReset = async (userId: number) => {\r\n\t\tconst success = await sendPasswordReset(userId);\r\n\r\n\t\tif (success) {\r\n\t\t\tsetSuccessMessage(\r\n\t\t\t\t\"Correo de restablecimiento de contraseña enviado correctamente.\"\r\n\t\t\t);\r\n\r\n\t\t\t// Limpiar mensaje después de 3 segundos\r\n\t\t\tsetTimeout(() => setSuccessMessage(null), 3000);\r\n\t\t}\r\n\t};\r\n\r\n\t// Manejar promoción a administrador\r\n\tconst handleMakeAdmin = async (userId: number) => {\r\n\t\tconst success = await makeUserAdmin(userId);\r\n\r\n\t\tif (success) {\r\n\t\t\tsetSuccessMessage(\"Usuario promocionado a administrador correctamente.\");\r\n\r\n\t\t\t// Limpiar mensaje después de 3 segundos\r\n\t\t\tsetTimeout(() => setSuccessMessage(null), 3000);\r\n\t\t}\r\n\t};\r\n\r\n\t// Abrir modal para convertir en vendedor\r\n\tconst handleShowMakeSellerModal = (userId: number) => {\r\n\t\tsetSelectedUserId(userId);\r\n\t\tsetStoreName(\"\");\r\n\t\tsetStoreDescription(\"\");\r\n\t\tsetValidationErrors({});\r\n\t\tsetShowSellerModal(true);\r\n\t};\r\n\r\n\t// Cerrar modal\r\n\tconst handleCloseSellerModal = () => {\r\n\t\tsetShowSellerModal(false);\r\n\t\tsetSelectedUserId(null);\r\n\t\tsetStoreName(\"\");\r\n\t\tsetStoreDescription(\"\");\r\n\t\tsetValidationErrors({});\r\n\t};\r\n\r\n\t// Validar formulario de vendedor\r\n\tconst validateSellerForm = (): boolean => {\r\n\t\tconst errors: {[key: string]: string} = {};\r\n\r\n\t\tif (!storeName || storeName.trim().length < 3) {\r\n\t\t\terrors.storeName =\r\n\t\t\t\t\"El nombre de la tienda debe tener al menos 3 caracteres\";\r\n\t\t}\r\n\r\n\t\tsetValidationErrors(errors);\r\n\t\treturn Object.keys(errors).length === 0;\r\n\t};\r\n\r\n\t// Convertir en vendedor\r\n\tconst handleMakeSeller = async () => {\r\n\t\tif (!selectedUserId) return;\r\n\r\n\t\tif (validateSellerForm()) {\r\n\t\t\tconst storeData = {\r\n\t\t\t\tstore_name: storeName,\r\n\t\t\t\tdescription: storeDescription,\r\n\t\t\t};\r\n\r\n\t\t\tconst success = await makeUserSeller(selectedUserId, storeData);\r\n\r\n\t\t\tif (success) {\r\n\t\t\t\tsetSuccessMessage(\"Usuario convertido en vendedor correctamente.\");\r\n\t\t\t\thandleCloseSellerModal();\r\n\r\n\t\t\t\t// Limpiar mensaje después de 3 segundos\r\n\t\t\t\tsetTimeout(() => setSuccessMessage(null), 3000);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Manejar cambio de página\r\n\tconst handlePageChange = (page: number) => {\r\n\t\tfetchUsers(page, pagination.itemsPerPage);\r\n\t};\r\n\r\n\t// Refrescar datos\r\n\tconst refreshData = () => {\r\n\t\tfetchUsers(pagination.currentPage, pagination.itemsPerPage);\r\n\t};\r\n\r\n\t// Definir columnas de la tabla\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tkey: \"user\",\r\n\t\t\theader: \"Usuario\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (user: AdminUserData) => (\r\n\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t<div className=\"flex-shrink-0 h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center overflow-hidden\">\r\n\t\t\t\t\t\t<User className=\"h-6 w-6 text-gray-500\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"ml-4\">\r\n\t\t\t\t\t\t<div className=\"text-sm font-medium text-gray-900\">\r\n\t\t\t\t\t\t\t{user.name}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"text-sm text-gray-500\">\r\n\t\t\t\t\t\t\t{user.email}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"role\",\r\n\t\t\theader: \"Rol\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (user: AdminUserData) => (\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n\t\t\t\t\t\tuser.role === \"admin\"\r\n\t\t\t\t\t\t\t? \"bg-red-100 text-red-800\"\r\n\t\t\t\t\t\t\t: user.role === \"seller\"\r\n\t\t\t\t\t\t\t\t? \"bg-blue-100 text-blue-800\"\r\n\t\t\t\t\t\t\t\t: \"bg-green-100 text-green-800\"\r\n\t\t\t\t\t}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{user.role === \"admin\" && \"Administrador\"}\r\n\t\t\t\t\t{user.role === \"seller\" && \"Vendedor\"}\r\n\t\t\t\t\t{user.role === \"customer\" && \"Cliente\"}\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"status\",\r\n\t\t\theader: \"Estado\",\r\n\t\t\tsortable: true,\r\n\t\t\trender: (user: AdminUserData) => (\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n\t\t\t\t\t\tuser.status === \"active\"\r\n\t\t\t\t\t\t\t? \"bg-green-100 text-green-800\"\r\n\t\t\t\t\t\t\t: \"bg-red-100 text-red-800\"\r\n\t\t\t\t\t}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{user.status === \"active\" ? \"Activo\" : \"Bloqueado\"}\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"lastLogin\",\r\n\t\t\theader: \"Último Acceso\",\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"registeredDate\",\r\n\t\t\theader: \"Registrado\",\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"ordersCount\",\r\n\t\t\theader: \"Pedidos\",\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"actions\",\r\n\t\t\theader: \"Acciones\",\r\n\t\t\trender: (user: AdminUserData) => (\r\n\t\t\t\t<div className=\"flex justify-end space-x-2\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => handleToggleUserStatus(user.id, user.status)}\r\n\t\t\t\t\t\tclassName={`p-1 rounded-md ${\r\n\t\t\t\t\t\t\tuser.status === \"active\"\r\n\t\t\t\t\t\t\t\t? \"text-red-600 hover:bg-red-100\"\r\n\t\t\t\t\t\t\t\t: \"text-green-600 hover:bg-green-100\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\tuser.status === \"active\"\r\n\t\t\t\t\t\t\t\t? \"Bloquear Usuario\"\r\n\t\t\t\t\t\t\t\t: \"Desbloquear Usuario\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{user.status === \"active\" ? (\r\n\t\t\t\t\t\t\t<Lock size={18} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Unlock size={18} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => handleSendPasswordReset(user.id)}\r\n\t\t\t\t\t\tclassName=\"p-1 text-blue-600 hover:bg-blue-100 rounded-md\"\r\n\t\t\t\t\t\ttitle=\"Enviar Restablecimiento de Contraseña\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Mail size={18} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{user.role !== \"seller\" && (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => handleShowMakeSellerModal(user.id)}\r\n\t\t\t\t\t\t\tclassName=\"p-1 text-green-600 hover:bg-green-100 rounded-md\"\r\n\t\t\t\t\t\t\ttitle=\"Convertir en Vendedor\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Store size={18} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{user.role !== \"admin\" && (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => handleMakeAdmin(user.id)}\r\n\t\t\t\t\t\t\tclassName=\"p-1 text-purple-600 hover:bg-purple-100 rounded-md\"\r\n\t\t\t\t\t\t\ttitle=\"Hacer Administrador\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Shield size={18} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className=\"space-y-6\">\r\n\t\t\t<div className=\"flex justify-between items-center\">\r\n\t\t\t\t<h1 className=\"text-2xl font-bold text-gray-900\">\r\n\t\t\t\t\tGestión de Usuarios\r\n\t\t\t\t</h1>\r\n\t\t\t\t<div className=\"flex space-x-2\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={refreshData}\r\n\t\t\t\t\t\tclassName=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RefreshCw\r\n\t\t\t\t\t\t\tsize={18}\r\n\t\t\t\t\t\t\tclassName={`inline mr-2 ${loading ? \"animate-spin\" : \"\"}`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\tActualizar\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Mensajes de error y éxito */}\r\n\t\t\t{error && (\r\n\t\t\t\t<div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\">\r\n\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t<AlertCircle className=\"h-5 w-5 mr-2\" />\r\n\t\t\t\t\t\t<span>{error}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{successMessage && (\r\n\t\t\t\t<div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4\">\r\n\t\t\t\t\t<span>{successMessage}</span>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* Filtros */}\r\n\t\t\t<div className=\"bg-white0 rounded-lg shadow-sm p-4\">\r\n\t\t\t\t<div className=\"flex flex-col md:flex-row gap-4\">\r\n\t\t\t\t\t{/* Filtro de Rol */}\r\n\t\t\t\t\t<div className=\"flex items-center space-x-2\">\r\n\t\t\t\t\t\t<Filter className=\"h-5 w-5 text-gray-500\" />\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\tvalue={roleFilter}\r\n\t\t\t\t\t\t\tonChange={(e) => setRoleFilter(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"all\">Todos los Roles</option>\r\n\t\t\t\t\t\t\t<option value=\"customer\">Cliente</option>\r\n\t\t\t\t\t\t\t<option value=\"seller\">Vendedor</option>\r\n\t\t\t\t\t\t\t<option value=\"admin\">Administrador</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Filtro de Estado */}\r\n\t\t\t\t\t<div className=\"flex items-center space-x-2\">\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\tvalue={statusFilter}\r\n\t\t\t\t\t\t\tonChange={(e) => setStatusFilter(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"all\">Todos los Estados</option>\r\n\t\t\t\t\t\t\t<option value=\"active\">Activo</option>\r\n\t\t\t\t\t\t\t<option value=\"blocked\">Bloqueado</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Búsqueda */}\r\n\t\t\t\t\t<div className=\"flex-grow\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Buscar por nombre o email...\"\r\n\t\t\t\t\t\t\tclassName=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\tvalue={searchTerm}\r\n\t\t\t\t\t\t\tonChange={(e) => setSearchTerm(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Tabla de Usuarios */}\r\n\t\t\t<Table\r\n\t\t\t\tdata={filteredUsers}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tsearchFields={[\"name\", \"email\"]}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\temptyMessage=\"No se encontraron usuarios\"\r\n\t\t\t\tpagination={{\r\n\t\t\t\t\tcurrentPage: pagination.currentPage,\r\n\t\t\t\t\ttotalPages: pagination.totalPages,\r\n\t\t\t\t\ttotalItems: pagination.totalItems,\r\n\t\t\t\t\titemsPerPage: pagination.itemsPerPage,\r\n\t\t\t\t\tonPageChange: handlePageChange,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t{/* Modal para Crear Vendedor */}\r\n\t\t\t{showSellerModal && (\r\n\t\t\t\t<div className=\"fixed inset-0 flex items-center justify-center z-50\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"fixed inset-0 bg-black bg-opacity-50\"\r\n\t\t\t\t\t\tonClick={handleCloseSellerModal}\r\n\t\t\t\t\t></div>\r\n\t\t\t\t\t<div className=\"bg-white0 rounded-lg p-6 w-full max-w-md relative z-10\">\r\n\t\t\t\t\t\t<div className=\"flex justify-between items-center mb-4\">\r\n\t\t\t\t\t\t\t<h2 className=\"text-xl font-bold text-gray-900\">\r\n\t\t\t\t\t\t\t\tConvertir en Vendedor\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={handleCloseSellerModal}\r\n\t\t\t\t\t\t\t\tclassName=\"text-gray-500 hover:text-gray-700\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<X size={20} />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"space-y-4\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\thtmlFor=\"store_name\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tNombre de la Tienda *\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tid=\"store_name\"\r\n\t\t\t\t\t\t\t\t\tclassName={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 ${\r\n\t\t\t\t\t\t\t\t\t\tvalidationErrors.storeName\r\n\t\t\t\t\t\t\t\t\t\t\t? \"border-red-500\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"border-gray-300\"\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\tvalue={storeName}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setStoreName(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{validationErrors.storeName && (\r\n\t\t\t\t\t\t\t\t\t<p className=\"mt-1 text-sm text-red-500\">\r\n\t\t\t\t\t\t\t\t\t\t{validationErrors.storeName}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\thtmlFor=\"description\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"block text-sm font-medium text-gray-700 mb-1\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tDescripción\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n\t\t\t\t\t\t\t\t\tvalue={storeDescription}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setStoreDescription(e.target.value)}\r\n\t\t\t\t\t\t\t\t\trows={4}\r\n\t\t\t\t\t\t\t\t></textarea>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"flex justify-end space-x-3 mt-6\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={handleCloseSellerModal}\r\n\t\t\t\t\t\t\t\t\tclassName=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-100\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCancelar\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={handleMakeSeller}\r\n\t\t\t\t\t\t\t\t\tclassName=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n\t\t\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{loading ? \"Procesando...\" : \"Guardar\"}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AdminUsersPage;"],"names":["__iconNode","LockOpen","createLucideIcon","AdminUserService","page","perPage","axiosInstance","API_ENDPOINTS","userId","storeData","useAdminUsers","users","setUsers","useState","loading","setLoading","error","setError","pagination","setPagination","adminUserService","mapApiUserToAdminUserData","apiUser","role","status","fetchUsers","useCallback","response","mappedUsers","err","errorMsg","extractErrorMessage","toggleUserStatus","isCurrentlyBlocked","success","prevUsers","user","sendPasswordReset","makeUserAdmin","makeUserSeller","filterUsers","options","searchTerm","matchesRole","matchesStatus","matchesSearch","AdminUsersPage","roleFilter","setRoleFilter","statusFilter","setStatusFilter","setSearchTerm","successMessage","setSuccessMessage","showSellerModal","setShowSellerModal","selectedUserId","setSelectedUserId","storeName","setStoreName","storeDescription","setStoreDescription","validationErrors","setValidationErrors","useEffect","filteredUsers","handleToggleUserStatus","currentStatus","handleSendPasswordReset","handleMakeAdmin","handleShowMakeSellerModal","handleCloseSellerModal","validateSellerForm","errors","handleMakeSeller","handlePageChange","refreshData","columns","jsxs","jsx","User","Lock","Unlock","Mail","Store","Shield","RefreshCw","AlertCircle","Filter","e","Table","X"],"mappings":"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","x_google_ignoreList":[0]}