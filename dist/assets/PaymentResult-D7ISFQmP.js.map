{"version":3,"file":"PaymentResult-D7ISFQmP.js","sources":["../../src/presentation/pages/PublicPayment/PaymentResult.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\r\nimport { CheckCircle, XCircle, Clock, Loader2 } from 'lucide-react';\r\nimport { ApiClient } from '../../../infrastructure/api/apiClient';\r\nimport { API_ENDPOINTS } from '../../../constants/apiEndpoints';\r\n\r\ninterface PaymentResultData {\r\n  payment_method: string;\r\n  transaction_id: string;\r\n  amount: number;\r\n  customer_name: string;\r\n  paid_at: string;\r\n}\r\n\r\n/**\r\n * Obtiene transaction_id correcto para external payments\r\n */\r\nfunction extractTransactionId(searchParams: URLSearchParams): string | null {\r\n  // Para external payments, priorizar par√°metros de URL\r\n  return searchParams.get('transaction_id') ||\r\n         searchParams.get('transactionId') ||\r\n         searchParams.get('id') ||\r\n         null;\r\n}\r\n\r\n/**\r\n * Obtiene session_id de localStorage para external payments\r\n */\r\nfunction getSessionIdFromStorage(): string | null {\r\n  try {\r\n    // Para external payments, buscar el session_id espec√≠fico\r\n    const sessionId = localStorage.getItem('external_datafast_session_id') ||\r\n                     localStorage.getItem('datafast_session_id') ||\r\n                     localStorage.getItem('checkout_session_id');\r\n    return sessionId;\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * P√°gina de resultado de pago p√∫blico\r\n * Muestra el resultado despu√©s de procesar un pago externo\r\n */\r\nconst PaymentResult: React.FC = () => {\r\n  const { linkCode } = useParams<{ linkCode: string }>();\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [result, setResult] = useState<PaymentResultData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [success, setSuccess] = useState<boolean | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // ‚úÖ PREVENCI√ìN DOBLE EJECUCI√ìN: Mismo patr√≥n que DatafastResultPage\r\n  const hasProcessedRef = useRef(false);\r\n  const [hasProcessed, setHasProcessed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!linkCode) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    processPaymentResult();\r\n  }, [linkCode, searchParams]);\r\n\r\n  const processPaymentResult = async () => {\r\n    // ‚úÖ PREVENCI√ìN DOBLE EJECUCI√ìN: Mismo patr√≥n que DatafastResultPage\r\n    if (hasProcessedRef.current || hasProcessed) {\r\n      console.log('‚ö†Ô∏è Verificaci√≥n de pago externo ya procesada, omitiendo llamada duplicada');\r\n      return;\r\n    }\r\n\r\n    hasProcessedRef.current = true;\r\n    setHasProcessed(true);\r\n\r\n    try {\r\n      console.log('üîÑ Iniciando verificaci√≥n √∫nica de pago externo');\r\n      setLoading(true);\r\n\r\n      // Extraer par√°metros seg√∫n el m√©todo de pago\r\n      const resourcePath = searchParams.get('resourcePath') || searchParams.get('resource_path');\r\n      // ‚úÖ FIX: Priorizar localStorage sobre URL params para obtener transaction_id interno correcto\r\n      const transactionId = localStorage.getItem('datafast_transaction_id') ||\r\n                           searchParams.get('transaction_id') ||\r\n                           searchParams.get('transactionId') ||\r\n                           searchParams.get('id');\r\n\r\n      // ‚úÖ LOGS DE DEBUGGING: Trazabilidad completa\r\n      console.log('üîç Par√°metros extra√≠dos para verificaci√≥n:', {\r\n        linkCode,\r\n        resourcePath,\r\n        transactionId,\r\n        searchParamsAll: Object.fromEntries(searchParams.entries()),\r\n        localStorage_transaction_id: localStorage.getItem('datafast_transaction_id'),\r\n        external_session_id: localStorage.getItem('external_datafast_session_id'),\r\n      });\r\n\r\n      // Para Datafast necesitamos verificar el pago\r\n      if (resourcePath && transactionId) {\r\n        // ‚úÖ CRITICAL FIX: Usar funciones helper como en el checkout normal\r\n        const sessionId = getSessionIdFromStorage();\r\n        const correctedTransactionId = extractTransactionId(searchParams) || transactionId;\r\n\r\n        const requestData = {\r\n          transaction_id: correctedTransactionId,\r\n          resource_path: resourcePath,\r\n          // Solo incluir session_id si no es null/undefined\r\n          ...(sessionId && { session_id: sessionId }),\r\n          // ‚úÖ CRITICAL FIX: Incluir simulate_success en development como el checkout normal\r\n          ...(process.env.NODE_ENV === 'development' && { simulate_success: true }),\r\n        };\r\n\r\n        console.log('üîÑ Verificando pago Datafast externo:', {\r\n          endpoint: API_ENDPOINTS.EXTERNAL_PAYMENT.PUBLIC.DATAFAST_VERIFY(linkCode!),\r\n          requestData,\r\n          sessionId_included: !!sessionId,\r\n        });\r\n\r\n        const response = await ApiClient.post<{\r\n          success: boolean;\r\n          message: string;\r\n          data?: PaymentResultData;\r\n          error_code?: string;\r\n        }>(API_ENDPOINTS.EXTERNAL_PAYMENT.PUBLIC.DATAFAST_VERIFY(linkCode!), requestData);\r\n\r\n        console.log('üì° Respuesta del backend:', {\r\n          success: response.success,\r\n          has_data: !!response.data,\r\n          error_code: response.error_code,\r\n          message: response.message,\r\n        });\r\n\r\n        if (response.success && response.data) {\r\n          console.log('‚úÖ Pago externo verificado exitosamente');\r\n          setResult(response.data);\r\n          setSuccess(true);\r\n        } else {\r\n          // ‚úÖ MANEJO ESPEC√çFICO ERROR 200.300.404: Mismo patr√≥n que DatafastResultPage\r\n          if (response.error_code === '200.300.404') {\r\n            console.log('üîç Error 200.300.404 detectado - verificando si el link ya est√° pagado');\r\n\r\n            // Verificar estado del link directamente\r\n            const linkResponse = await ApiClient.get<{\r\n              success: boolean;\r\n              data?: any;\r\n            }>(API_ENDPOINTS.EXTERNAL_PAYMENT.PUBLIC.SHOW(linkCode!));\r\n\r\n            if (linkResponse.success && linkResponse.data?.status === 'paid') {\r\n              console.log('‚úÖ Link ya est√° marcado como pagado, mostrando como √©xito');\r\n              setResult({\r\n                payment_method: 'datafast',\r\n                transaction_id: linkResponse.data.transaction_id || 'Procesado exitosamente',\r\n                amount: linkResponse.data.amount,\r\n                customer_name: linkResponse.data.customer_name,\r\n                paid_at: linkResponse.data.paid_at || new Date().toISOString(),\r\n              });\r\n              setSuccess(true);\r\n              return; // Salir sin mostrar error\r\n            }\r\n          }\r\n\r\n          setError(response.message || 'Error verificando el pago');\r\n          setSuccess(false);\r\n        }\r\n      } else {\r\n        // Para Deuna o cuando no hay par√°metros, verificar estado del link\r\n        const response = await ApiClient.get<{\r\n          success: boolean;\r\n          data?: any;\r\n        }>(API_ENDPOINTS.EXTERNAL_PAYMENT.PUBLIC.SHOW(linkCode!));\r\n\r\n        if (response.success && response.data) {\r\n          if (response.data.status === 'paid') {\r\n            // El pago fue procesado exitosamente (probablemente v√≠a webhook de Deuna)\r\n            setSuccess(true);\r\n            setResult({\r\n              payment_method: 'deuna',\r\n              transaction_id: 'Procesado autom√°ticamente',\r\n              amount: response.data.amount,\r\n              customer_name: response.data.customer_name,\r\n              paid_at: new Date().toISOString(),\r\n            });\r\n          } else {\r\n            setError('El pago no fue completado');\r\n            setSuccess(false);\r\n          }\r\n        } else {\r\n          setError('Error verificando el estado del pago');\r\n          setSuccess(false);\r\n        }\r\n      }\r\n    } catch (err: any) {\r\n      console.error('‚ùå Error procesando resultado de pago externo:', err);\r\n\r\n      // ‚úÖ Reset flags en caso de error para permitir reintento\r\n      hasProcessedRef.current = false;\r\n      setHasProcessed(false);\r\n\r\n      setError(err.response?.data?.message || 'Error procesando el resultado del pago');\r\n      setSuccess(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('es-ES', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\r\n        <div className=\"text-center\">\r\n          <Loader2 className=\"h-16 w-16 animate-spin mx-auto text-blue-600 mb-4\" />\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n            Procesando tu pago...\r\n          </h2>\r\n          <p className=\"text-gray-600\">\r\n            Por favor espera mientras verificamos tu transacci√≥n\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (success === false || error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\r\n        <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-8 text-center\">\r\n          <XCircle className=\"h-16 w-16 text-red-500 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\r\n            Error en el pago\r\n          </h2>\r\n          <p className=\"text-gray-600 mb-6\">\r\n            {error || 'Ocurri√≥ un error procesando tu pago'}\r\n          </p>\r\n          <div className=\"space-y-3\">\r\n            <button\r\n              onClick={() => navigate(`/pay/${linkCode}`)}\r\n              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Intentar de nuevo\r\n            </button>\r\n            <button\r\n              onClick={() => navigate('/')}\r\n              className=\"w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-lg hover:bg-gray-300 transition-colors\"\r\n            >\r\n              Ir al inicio\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (success && result) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\r\n        <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-8 text-center\">\r\n          <CheckCircle className=\"h-16 w-16 text-green-500 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\r\n            ¬°Pago exitoso!\r\n          </h2>\r\n          <p className=\"text-gray-600 mb-6\">\r\n            Tu pago ha sido procesado correctamente\r\n          </p>\r\n\r\n          <div className=\"bg-gray-50 rounded-lg p-4 mb-6 text-left\">\r\n            <div className=\"space-y-3 text-sm\">\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600\">Cliente:</span>\r\n                <span className=\"font-medium\">{result.customer_name}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600\">Monto:</span>\r\n                <span className=\"font-medium text-green-600\">${result.amount.toFixed(2)} USD</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600\">M√©todo:</span>\r\n                <span className=\"font-medium capitalize\">{result.payment_method}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600\">Transacci√≥n:</span>\r\n                <span className=\"font-medium text-xs break-all\">{result.transaction_id}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600\">Fecha:</span>\r\n                <span className=\"font-medium text-xs\">{formatDate(result.paid_at)}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-6\">\r\n            <div className=\"flex items-center justify-center\">\r\n              <CheckCircle className=\"h-5 w-5 text-green-600 mr-2\" />\r\n              <span className=\"text-sm text-green-800 font-medium\">\r\n                Pago procesado exitosamente\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            onClick={() => navigate('/')}\r\n            className=\"w-full bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700 transition-colors\"\r\n          >\r\n            Finalizar\r\n          </button>\r\n\r\n          <div className=\"mt-4 text-xs text-gray-500\">\r\n            <p>Guarda esta informaci√≥n para tus registros</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Estado desconocido\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\r\n      <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-8 text-center\">\r\n        <Clock className=\"h-16 w-16 text-yellow-500 mx-auto mb-4\" />\r\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\r\n          Estado desconocido\r\n        </h2>\r\n        <p className=\"text-gray-600 mb-6\">\r\n          No podemos determinar el estado de tu pago en este momento\r\n        </p>\r\n        <div className=\"space-y-3\">\r\n          <button\r\n            onClick={processPaymentResult}\r\n            className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\r\n          >\r\n            Verificar nuevamente\r\n          </button>\r\n          <button\r\n            onClick={() => navigate('/')}\r\n            className=\"w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-lg hover:bg-gray-300 transition-colors\"\r\n          >\r\n            Ir al inicio\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentResult;"],"names":["extractTransactionId","searchParams","getSessionIdFromStorage","PaymentResult","linkCode","useParams","useSearchParams","navigate","useNavigate","result","setResult","useState","loading","setLoading","success","setSuccess","error","setError","hasProcessedRef","useRef","hasProcessed","setHasProcessed","useEffect","processPaymentResult","resourcePath","transactionId","sessionId","requestData","API_ENDPOINTS","response","ApiClient","linkResponse","err","formatDate","dateString","jsxs","jsx","Loader2","XCircle","CheckCircle","Clock"],"mappings":"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"}